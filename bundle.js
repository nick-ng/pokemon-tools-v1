/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 185);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(374);
} else {
  module.exports = __webpack_require__(373);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 1 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 2 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.11' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 3 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(69)('wks');
var uid = __webpack_require__(45);
var Symbol = __webpack_require__(3).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(98);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Function equal to merge with the difference being that no reference
 * to original objects is kept.
 *
 * @see merge
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function deepMerge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = deepMerge(result[key], val);
    } else if (typeof val === 'object') {
      result[key] = deepMerge({}, val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  deepMerge: deepMerge,
  extend: extend,
  trim: trim
};


/***/ }),
/* 6 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function() {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		var result = [];
		for(var i = 0; i < this.length; i++) {
			var item = this[i];
			if(item[2]) {
				result.push("@media " + item[2] + "{" + item[1] + "}");
			} else {
				result.push(item[1]);
			}
		}
		return result.join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};


/***/ }),
/* 7 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
var stylesInDom = {},
	memoize = function(fn) {
		var memo;
		return function () {
			if (typeof memo === "undefined") memo = fn.apply(this, arguments);
			return memo;
		};
	},
	isOldIE = memoize(function() {
		return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
	}),
	getHeadElement = memoize(function () {
		return document.head || document.getElementsByTagName("head")[0];
	}),
	singletonElement = null,
	singletonCounter = 0,
	styleElementsInsertedAtTop = [];

module.exports = function(list, options) {
	if(typeof DEBUG !== "undefined" && DEBUG) {
		if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};
	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (typeof options.singleton === "undefined") options.singleton = isOldIE();

	// By default, add <style> tags to the bottom of <head>.
	if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

	var styles = listToStyles(list);
	addStylesToDom(styles, options);

	return function update(newList) {
		var mayRemove = [];
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			domStyle.refs--;
			mayRemove.push(domStyle);
		}
		if(newList) {
			var newStyles = listToStyles(newList);
			addStylesToDom(newStyles, options);
		}
		for(var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];
			if(domStyle.refs === 0) {
				for(var j = 0; j < domStyle.parts.length; j++)
					domStyle.parts[j]();
				delete stylesInDom[domStyle.id];
			}
		}
	};
}

function addStylesToDom(styles, options) {
	for(var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];
		if(domStyle) {
			domStyle.refs++;
			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}
			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];
			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}
			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles(list) {
	var styles = [];
	var newStyles = {};
	for(var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};
		if(!newStyles[id])
			styles.push(newStyles[id] = {id: id, parts: [part]});
		else
			newStyles[id].parts.push(part);
	}
	return styles;
}

function insertStyleElement(options, styleElement) {
	var head = getHeadElement();
	var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
	if (options.insertAt === "top") {
		if(!lastStyleElementInsertedAtTop) {
			head.insertBefore(styleElement, head.firstChild);
		} else if(lastStyleElementInsertedAtTop.nextSibling) {
			head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			head.appendChild(styleElement);
		}
		styleElementsInsertedAtTop.push(styleElement);
	} else if (options.insertAt === "bottom") {
		head.appendChild(styleElement);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement(styleElement) {
	styleElement.parentNode.removeChild(styleElement);
	var idx = styleElementsInsertedAtTop.indexOf(styleElement);
	if(idx >= 0) {
		styleElementsInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement(options) {
	var styleElement = document.createElement("style");
	styleElement.type = "text/css";
	insertStyleElement(options, styleElement);
	return styleElement;
}

function createLinkElement(options) {
	var linkElement = document.createElement("link");
	linkElement.rel = "stylesheet";
	insertStyleElement(options, linkElement);
	return linkElement;
}

function addStyle(obj, options) {
	var styleElement, update, remove;

	if (options.singleton) {
		var styleIndex = singletonCounter++;
		styleElement = singletonElement || (singletonElement = createStyleElement(options));
		update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
		remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
	} else if(obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function") {
		styleElement = createLinkElement(options);
		update = updateLink.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
			if(styleElement.href)
				URL.revokeObjectURL(styleElement.href);
		};
	} else {
		styleElement = createStyleElement(options);
		update = applyToTag.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
		};
	}

	update(obj);

	return function updateStyle(newObj) {
		if(newObj) {
			if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
				return;
			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;
		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag(styleElement, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (styleElement.styleSheet) {
		styleElement.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = styleElement.childNodes;
		if (childNodes[index]) styleElement.removeChild(childNodes[index]);
		if (childNodes.length) {
			styleElement.insertBefore(cssNode, childNodes[index]);
		} else {
			styleElement.appendChild(cssNode);
		}
	}
}

function applyToTag(styleElement, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		styleElement.setAttribute("media", media)
	}

	if(styleElement.styleSheet) {
		styleElement.styleSheet.cssText = css;
	} else {
		while(styleElement.firstChild) {
			styleElement.removeChild(styleElement.firstChild);
		}
		styleElement.appendChild(document.createTextNode(css));
	}
}

function updateLink(linkElement, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	if(sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = linkElement.href;

	linkElement.href = URL.createObjectURL(blob);

	if(oldSrc)
		URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(104);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _setPrototypeOf = __webpack_require__(193);

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = __webpack_require__(192);

var _create2 = _interopRequireDefault(_create);

var _typeof2 = __webpack_require__(106);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(106);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(18);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(3);
var core = __webpack_require__(2);
var ctx = __webpack_require__(26);
var hide = __webpack_require__(20);
var has = __webpack_require__(19);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(30)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(12);
var IE8_DOM_DEFINE = __webpack_require__(108);
var toPrimitive = __webpack_require__(72);
var dP = Object.defineProperty;

exports.f = __webpack_require__(14) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(132);

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),
/* 17 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 19 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(15);
var createDesc = __webpack_require__(32);
module.exports = __webpack_require__(14) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(281),
    getValue = __webpack_require__(311);

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(151);

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _promise = __webpack_require__(194);

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (fn) {
  return function () {
    var gen = fn.apply(this, arguments);
    return new _promise2.default(function (resolve, reject) {
      function step(key, arg) {
        try {
          var info = gen[key](arg);
          var value = info.value;
        } catch (error) {
          reject(error);
          return;
        }

        if (info.done) {
          resolve(value);
        } else {
          return _promise2.default.resolve(value).then(function (value) {
            step("next", value);
          }, function (err) {
            step("throw", err);
          });
        }
      }

      return step("next");
    });
  };
};

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(375);


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
			return classNames;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(40);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(109);
var defined = __webpack_require__(62);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 29 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 31 */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(228)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(112)(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(16);

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(34),
    getRawTag = __webpack_require__(308),
    objectToString = __webpack_require__(336);

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),
/* 36 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),
/* 37 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(35),
    isObjectLike = __webpack_require__(37);

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 40 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(116);
var enumBugKeys = __webpack_require__(64);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 42 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(15).f;
var has = __webpack_require__(19);
var TAG = __webpack_require__(4)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(62);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 45 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(234);
var global = __webpack_require__(3);
var hide = __webpack_require__(20);
var Iterators = __webpack_require__(27);
var TO_STRING_TAG = __webpack_require__(4)('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(322),
    listCacheDelete = __webpack_require__(323),
    listCacheGet = __webpack_require__(324),
    listCacheHas = __webpack_require__(325),
    listCacheSet = __webpack_require__(326);

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(81);

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(319);

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(21);

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(38);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;


/***/ }),
/* 52 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(138),
    isLength = __webpack_require__(83);

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(370);
} else {
  module.exports = __webpack_require__(369);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(253);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(7)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {var isProduction = process.env.NODE_ENV === 'production';
function warning(condition, message) {
  if (!isProduction) {
    if (condition) {
      return;
    }

    var text = "Warning: " + message;

    if (typeof console !== 'undefined') {
      console.warn(text);
    }

    try {
      throw Error(text);
    } catch (x) {}
  }
}

/* harmony default export */ __webpack_exports__["a"] = (warning);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)))

/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _extends;
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _styles = __webpack_require__(387);

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Loading = function Loading() {
  return _react2.default.createElement(
    'div',
    { className: _styles2.default.fadeInOut },
    'Loading...'
  );
};

exports.default = Loading;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.processQueue2 = exports.processQueue = exports.processItem = exports.getCalcQueue = exports.getValidEVs = exports.getModifiers = exports.hydratePokemon = exports.getFinalStats = exports.getNatureBoost = exports.getFinalStat = exports.getDamageFromObjects = exports.getDamageFromStats = exports.getMoveInfo = exports.get2Effectiveness = exports.getEffectiveness = exports.getTotalEVs = exports.statNames = undefined;

var _toConsumableArray2 = __webpack_require__(105);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _pokedex = __webpack_require__(101);

var _moves = __webpack_require__(182);

var _typeInfo = __webpack_require__(76);

var _typeInfo2 = _interopRequireDefault(_typeInfo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var order = _typeInfo2.default.order,
    types = _typeInfo2.default.types;
var statNames = exports.statNames = ['hp', 'atk', 'def', 'spa', 'spd', 'spe'];

// GameFreak rounds DOWN on .5
var pokeRound = function pokeRound(num) {
    return num % 1 > 0.5 ? Math.ceil(num) : Math.floor(num);
};
var product = function product(array) {
    return array.reduce(function (p, c) {
        return pokeRound(p * c);
    }, 1);
};
var lowerCaseNoSpace = function lowerCaseNoSpace(s) {
    return s && s.replace(/\s/g, '').toLocaleLowerCase('en');
};
var strCompare = function strCompare(str1, str2) {
    return lowerCaseNoSpace(str1) === lowerCaseNoSpace(str2);
};

var getTotalEVs = exports.getTotalEVs = function getTotalEVs(evs) {
    return statNames.reduce(function (p, name) {
        return p + evs[name];
    }, 0);
};

var getEffectiveness = exports.getEffectiveness = function getEffectiveness(attackingType, defendingType) {
    var att = attackingType.toLocaleLowerCase('en');
    var def = defendingType.toLocaleLowerCase('en');
    if (order.includes(att) && order.includes(def)) {
        return types[att][def];
    }
    return -1;
};

var get2Effectiveness = exports.get2Effectiveness = function get2Effectiveness(attackingType, defendingTypes) {
    return defendingTypes.reduce(function (p, defendingType) {
        return p * getEffectiveness(attackingType, defendingType);
    }, 1);
};

var getMoveInfo = exports.getMoveInfo = function getMoveInfo(move, dynamax) {
    if (typeof move === 'string') {
        return _moves.BattleMovedex[lowerCaseNoSpace(move)];
    }
    if (move.name && !move.basePower) {
        return Object.assign({}, move, _moves.BattleMovedex[lowerCaseNoSpace(move.name)]);
    }
    return Object.assign({}, move, {
        name: move.name || move.category + ' ' + move.basePower + ' ' + move.type
    });
};

var getDamageFromStats = exports.getDamageFromStats = function getDamageFromStats(a, d, basePower, _ref) {
    var _ref$level = _ref.level,
        level = _ref$level === undefined ? 50 : _ref$level,
        _ref$weather = _ref.weather,
        weather = _ref$weather === undefined ? 1 : _ref$weather,
        _ref$crit = _ref.crit,
        crit = _ref$crit === undefined ? 1 : _ref$crit,
        _ref$stab = _ref.stab,
        stab = _ref$stab === undefined ? 1 : _ref$stab,
        _ref$type = _ref.type,
        type = _ref$type === undefined ? 1 : _ref$type,
        _ref$modifiers = _ref.modifiers,
        modifiers = _ref$modifiers === undefined ? [] : _ref$modifiers;

    return [0.85, 0.86, 0.87, 0.88, 0.89, 0.9, 0.91, 0.92, 0.93, 0.94, 0.95, 0.96, 0.97, 0.98, 0.99, 1].map(function (r) {
        var baseDamage = Math.floor(Math.floor(Math.floor(2 * level * 0.2 + 2) * basePower * a / d) / 50 + 2);

        var damage = product([baseDamage, weather, crit]);
        damage = Math.floor(damage * r);
        damage = pokeRound(damage * stab);
        damage = Math.floor(damage * type);

        return product([damage].concat((0, _toConsumableArray3.default)(modifiers)));
    });
};

var getDamageFromObjects = exports.getDamageFromObjects = function getDamageFromObjects(_ref2) {
    var attacker = _ref2.attacker,
        defender = _ref2.defender,
        move = _ref2.move,
        _ref2$modifiers = _ref2.modifiers,
        modifiers = _ref2$modifiers === undefined ? [] : _ref2$modifiers;
    var attackerTypes = attacker.types,
        _attacker$finalStats = attacker.finalStats,
        atk = _attacker$finalStats.atk,
        spa = _attacker$finalStats.spa,
        level = attacker.level,
        dynamax = attacker.dynamax;
    var defenderTypes = defender.types,
        _defender$finalStats = defender.finalStats,
        def = _defender$finalStats.def,
        spd = _defender$finalStats.spd,
        defenderAbility = defender.ability;

    var _getMoveInfo = getMoveInfo(move, dynamax),
        basePower = _getMoveInfo.basePower,
        category = _getMoveInfo.category,
        flags = _getMoveInfo.flags,
        moveType = _getMoveInfo.type,
        _getMoveInfo$weather = _getMoveInfo.weather,
        weather = _getMoveInfo$weather === undefined ? 1 : _getMoveInfo$weather,
        _getMoveInfo$terrain = _getMoveInfo.terrain,
        terrain = _getMoveInfo$terrain === undefined ? 1 : _getMoveInfo$terrain,
        _getMoveInfo$crit = _getMoveInfo.crit,
        crit = _getMoveInfo$crit === undefined ? 1 : _getMoveInfo$crit,
        _getMoveInfo$target = _getMoveInfo.target,
        target = _getMoveInfo$target === undefined ? 'normal' : _getMoveInfo$target;

    if (target.toLocaleLowerCase('en').includes('all')) {
        modifiers.push(0.75);
    }

    var intimidate = 1;
    if (strCompare(defenderAbility, 'intimidate')) {
        intimidate = 2 / 3;
    }

    var a = spa;
    var d = spd;
    if (strCompare(category, 'physical')) {
        a = Math.floor(atk * intimidate);
        d = def;
    }

    return getDamageFromStats(a, d, basePower, {
        crit: crit,
        level: level,
        stab: attackerTypes.includes(moveType) ? 1.5 : 1,
        type: get2Effectiveness(moveType, defenderTypes),
        weather: weather,
        modifiers: modifiers.concat([terrain])
    });
};

var getFinalStat = exports.getFinalStat = function getFinalStat(baseStat, iv, ev) {
    var nature = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
    var isHP = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    var level = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 50;

    var ev4 = Math.floor(ev / 4);
    var calc1 = Math.floor((2 * baseStat + iv + ev4) * level * 0.01);
    if (isHP) {
        return calc1 + level + 10;
    }
    return Math.floor((calc1 + 5) * nature);
};

var natures = {
    hardy: {},
    lonely: { atk: 1.1, def: 0.9 },
    brave: { atk: 1.1, spe: 0.9 },
    adamant: { atk: 1.1, spa: 0.9 },
    naughty: { atk: 1.1, spd: 0.9 },
    bold: { def: 1.1, atk: 0.9 },
    docile: {},
    relaxed: { def: 1.1, spe: 0.9 },
    impish: { def: 1.1, spa: 0.9 },
    lax: { def: 1.1, spd: 0.9 },
    timid: { spe: 1.1, atk: 0.9 },
    hasty: { spe: 1.1, def: 0.9 },
    jolly: { spe: 1.1, spa: 0.9 },
    naive: { spe: 1.1, spd: 0.9 },
    modest: { spa: 1.1, atk: 0.9 },
    mild: { spa: 1.1, def: 0.9 },
    quiet: { spa: 1.1, spe: 0.9 },
    bashful: {},
    rash: { spa: 1.1, spd: 0.9 },
    calm: { spd: 1.1, atk: 0.9 },
    gentle: { spd: 1.1, def: 0.9 },
    sassy: { spd: 1.1, spe: 0.9 },
    careful: { spd: 1.1, spa: 0.9 },
    quirky: {}
};

var getNatureBoost = exports.getNatureBoost = function getNatureBoost(natureName, statName) {
    return natures[natureName][statName] || 1;
};

var getFinalStats = exports.getFinalStats = function getFinalStats(_ref3) {
    var species = _ref3.species,
        ivs = _ref3.ivs,
        evs = _ref3.evs,
        _ref3$level = _ref3.level,
        level = _ref3$level === undefined ? 50 : _ref3$level;

    var pokedexEntry = _pokedex.BattlePokedex[lowerCaseNoSpace(species)];
    var baseStats = pokedexEntry.baseStats;

    var finalStats = statNames.reduce(function (p, statName) {
        p[statName] = getFinalStat(baseStats[statName], ivs[statName], evs[statName], getNatureBoost(evs.nature, statName), strCompare(statName, 'hp'), level);
        return p;
    }, {});
    return finalStats;
};

var hydratePokemon = exports.hydratePokemon = function hydratePokemon(pokemon) {
    var species = pokemon.species,
        ivs = pokemon.ivs,
        evs = pokemon.evs,
        _pokemon$level = pokemon.level,
        level = _pokemon$level === undefined ? 50 : _pokemon$level;

    var pokedexEntry = _pokedex.BattlePokedex[lowerCaseNoSpace(species)];
    return Object.assign({}, pokedexEntry, pokemon, {
        species: pokedexEntry.species,
        finalStats: getFinalStats(pokemon)
    });
};

var getModifiers = exports.getModifiers = function getModifiers(pokemon, move) {
    var item = pokemon.item;

    var moveInfo = getMoveInfo(move);
    var modifiers = [];
    if (strCompare(item, 'lifeorb')) {
        modifiers.push(5324 / 4096);
    }
    if (strCompare(item, 'choiceband') && strCompare(moveInfo.category, 'physical')) {
        modifiers.push(1.5);
    }
    if (strCompare(item, 'choicespecs') && strCompare(moveInfo.category, 'special')) {
        modifiers.push(1.5);
    }
    return modifiers;
};

var getValidEVs = exports.getValidEVs = function getValidEVs() {
    var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;

    var validEVs = [];
    var counter = 0;
    do {
        if (level === 50) {
            validEVs.push(Math.max(8 * counter - 4, 0));
        } else {
            validEVs.push(4 * counter);
        }
        counter++;
    } while (validEVs[validEVs.length - 1] < 252);
    return validEVs;
};

var getCalcQueue = exports.getCalcQueue = function getCalcQueue(yourPokemon, opponents) {
    var queue = [];
    var yourPokemonHydrated = hydratePokemon(yourPokemon);

    opponents.forEach(function (opponent) {
        opponent.evSpreads.forEach(function (evSpread) {
            var evSpreadName = evSpread.name,
                evs = evSpread.evs;

            opponent.items.forEach(function (item) {
                opponent.moves.forEach(function (move) {
                    var moveInfo = getMoveInfo(move);
                    var nature = evs.nature;
                    var hydratedOpponent = hydratePokemon({
                        species: opponent.species,
                        ivs: opponent.ivs,
                        evs: evs,
                        nature: evs.nature,
                        item: item,
                        level: opponent.level
                    });
                    var damageParams = {
                        display: hydratedOpponent.species + ' ' + nature + ' ' + evSpreadName + ' ' + item + ' ' + (moveInfo.display || moveInfo.name) + ' vs ' + (yourPokemonHydrated.display || yourPokemonHydrated.species),
                        attacker: hydratedOpponent,
                        defender: yourPokemonHydrated,
                        move: move,
                        weather: 1,
                        crit: 1,
                        modifiers: getModifiers(hydratedOpponent, move)
                    };
                    queue.push(damageParams);
                });
            });
        });
    });

    return queue;
};

var processItem = exports.processItem = function processItem(item) {
    var display = item.display,
        move = item.move,
        hp = item.defender.finalStats.hp;

    var damageRange = getDamageFromObjects(item);
    var kos = 0;
    damageRange.forEach(function (damage) {
        if (damage >= hp) {
            kos = kos + 1;
        }
    });
    var koChance = kos / damageRange.length;
    return {
        display: display,
        move: move,
        koChance: koChance,
        koChanceR: -koChance,
        maxDamage: damageRange[damageRange.length - 1],
        maxDamageR: -damageRange[damageRange.length - 1],
        hp: hp
    };
};

var processQueue = exports.processQueue = function processQueue(queue) {
    return queue.map(processItem);
};

var processQueue2 = exports.processQueue2 = function processQueue2(yourPokemon, opponents) {
    var results = [];
    var yourPokemonHydrated = hydratePokemon(yourPokemon);
    opponents.forEach(function (opponent) {
        opponent.evSpreads.forEach(function (evSpread) {
            var evSpreadName = evSpread.name,
                evs = evSpread.evs;

            opponent.items.forEach(function (item) {
                var subResults = opponent.moves.map(function (move) {
                    var moveInfo = getMoveInfo(move);
                    var hydratedOpponent = hydratePokemon({
                        species: opponent.species,
                        ivs: opponent.ivs,
                        evs: evs,
                        nature: evs.nature,
                        item: item,
                        level: opponent.level
                    });
                    var damageParams = {
                        display: hydratedOpponent.species + ' ' + evSpreadName + ' ' + item + ' ' + (moveInfo.display || moveInfo.name),
                        attacker: hydratedOpponent,
                        defender: yourPokemonHydrated,
                        move: move,
                        weather: 1,
                        crit: 1,
                        modifiers: getModifiers(hydratedOpponent, move)
                    };
                    return processItem(damageParams);
                });
                var mostDamageResult = { maxDamage: 0 };
                subResults.forEach(function (subResult) {
                    if (subResult.maxDamage > mostDamageResult.maxDamage) {
                        mostDamageResult = subResult;
                    }
                });
                results.push(mostDamageResult);
            });
        });
    });
    return results;
};

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(104);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (obj, key, value) {
  if (key in obj) {
    (0, _defineProperty2.default)(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(29);
var TAG = __webpack_require__(4)('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),
/* 62 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(18);
var document = __webpack_require__(3).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 64 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(40);

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(12);
var dPs = __webpack_require__(222);
var enumBugKeys = __webpack_require__(64);
var IE_PROTO = __webpack_require__(68)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(63)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(107).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 67 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(69)('keys');
var uid = __webpack_require__(45);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(2);
var global = __webpack_require__(3);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(31) ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 70 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(70);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(18);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(3);
var core = __webpack_require__(2);
var LIBRARY = __webpack_require__(31);
var wksExt = __webpack_require__(74);
var defineProperty = __webpack_require__(15).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(4);


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(61);
var ITERATOR = __webpack_require__(4)('iterator');
var Iterators = __webpack_require__(27);
module.exports = __webpack_require__(2).getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),
/* 76 */
/***/ (function(module, exports) {

module.exports = {"order":["normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy"],"types":{"normal":{"normal":1,"fighting":1,"flying":1,"poison":1,"ground":1,"rock":0.5,"bug":1,"ghost":0,"steel":0.5,"fire":1,"water":1,"grass":1,"electric":1,"psychic":1,"ice":1,"dragon":1,"dark":1,"fairy":1},"fighting":{"normal":2,"fighting":1,"flying":0.5,"poison":0.5,"ground":1,"rock":2,"bug":0.5,"ghost":0,"steel":2,"fire":1,"water":1,"grass":1,"electric":1,"psychic":0.5,"ice":2,"dragon":1,"dark":2,"fairy":0.5},"flying":{"normal":1,"fighting":2,"flying":1,"poison":1,"ground":1,"rock":0.5,"bug":2,"ghost":1,"steel":0.5,"fire":1,"water":1,"grass":2,"electric":0.5,"psychic":1,"ice":1,"dragon":1,"dark":1,"fairy":1},"poison":{"normal":1,"fighting":1,"flying":1,"poison":0.5,"ground":0.5,"rock":0.5,"bug":1,"ghost":0.5,"steel":0,"fire":1,"water":1,"grass":2,"electric":1,"psychic":1,"ice":1,"dragon":1,"dark":1,"fairy":2},"ground":{"normal":1,"fighting":1,"flying":0,"poison":2,"ground":1,"rock":2,"bug":0.5,"ghost":1,"steel":2,"fire":2,"water":1,"grass":0.5,"electric":2,"psychic":1,"ice":1,"dragon":1,"dark":1,"fairy":1},"rock":{"normal":1,"fighting":0.5,"flying":2,"poison":1,"ground":0.5,"rock":1,"bug":2,"ghost":1,"steel":0.5,"fire":2,"water":1,"grass":1,"electric":1,"psychic":1,"ice":2,"dragon":1,"dark":1,"fairy":1},"bug":{"normal":1,"fighting":0.5,"flying":0.5,"poison":0.5,"ground":1,"rock":1,"bug":1,"ghost":0.5,"steel":0.5,"fire":0.5,"water":1,"grass":2,"electric":1,"psychic":2,"ice":1,"dragon":1,"dark":2,"fairy":0.5},"ghost":{"normal":0,"fighting":1,"flying":1,"poison":1,"ground":1,"rock":1,"bug":1,"ghost":2,"steel":1,"fire":1,"water":1,"grass":1,"electric":1,"psychic":2,"ice":1,"dragon":1,"dark":0.5,"fairy":1},"steel":{"normal":1,"fighting":1,"flying":1,"poison":1,"ground":1,"rock":2,"bug":1,"ghost":1,"steel":0.5,"fire":0.5,"water":0.5,"grass":1,"electric":0.5,"psychic":1,"ice":2,"dragon":1,"dark":1,"fairy":2},"fire":{"normal":1,"fighting":1,"flying":1,"poison":1,"ground":1,"rock":0.5,"bug":2,"ghost":1,"steel":2,"fire":0.5,"water":0.5,"grass":2,"electric":1,"psychic":1,"ice":2,"dragon":0.5,"dark":1,"fairy":1},"water":{"normal":1,"fighting":1,"flying":1,"poison":1,"ground":2,"rock":2,"bug":1,"ghost":1,"steel":1,"fire":2,"water":0.5,"grass":0.5,"electric":1,"psychic":1,"ice":1,"dragon":0.5,"dark":1,"fairy":1},"grass":{"normal":1,"fighting":1,"flying":0.5,"poison":0.5,"ground":2,"rock":2,"bug":0.5,"ghost":1,"steel":0.5,"fire":0.5,"water":2,"grass":0.5,"electric":1,"psychic":1,"ice":1,"dragon":0.5,"dark":1,"fairy":1},"electric":{"normal":1,"fighting":1,"flying":2,"poison":1,"ground":0,"rock":1,"bug":1,"ghost":1,"steel":1,"fire":1,"water":2,"grass":0.5,"electric":0.5,"psychic":1,"ice":1,"dragon":0.5,"dark":1,"fairy":1},"psychic":{"normal":1,"fighting":2,"flying":1,"poison":2,"ground":1,"rock":1,"bug":1,"ghost":1,"steel":0.5,"fire":1,"water":1,"grass":1,"electric":1,"psychic":0.5,"ice":1,"dragon":1,"dark":0,"fairy":1},"ice":{"normal":1,"fighting":1,"flying":2,"poison":1,"ground":2,"rock":1,"bug":1,"ghost":1,"steel":0.5,"fire":0.5,"water":0.5,"grass":2,"electric":1,"psychic":1,"ice":0.5,"dragon":2,"dark":1,"fairy":1},"dragon":{"normal":1,"fighting":1,"flying":1,"poison":1,"ground":1,"rock":1,"bug":1,"ghost":1,"steel":0.5,"fire":1,"water":1,"grass":1,"electric":1,"psychic":1,"ice":1,"dragon":2,"dark":1,"fairy":0},"dark":{"normal":1,"fighting":0.5,"flying":1,"poison":1,"ground":1,"rock":1,"bug":1,"ghost":2,"steel":1,"fire":1,"water":1,"grass":1,"electric":1,"psychic":2,"ice":1,"dragon":1,"dark":0.5,"fairy":0.5},"fairy":{"normal":1,"fighting":2,"flying":1,"poison":0.5,"ground":1,"rock":1,"bug":1,"ghost":1,"steel":0.5,"fire":0.5,"water":1,"grass":1,"electric":1,"psychic":1,"ice":1,"dragon":2,"dark":2,"fairy":1}}}

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(21),
    root = __webpack_require__(16);

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(327),
    mapCacheDelete = __webpack_require__(328),
    mapCacheGet = __webpack_require__(329),
    mapCacheHas = __webpack_require__(330),
    mapCacheSet = __webpack_require__(331);

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),
/* 79 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(17),
    isSymbol = __webpack_require__(38);

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;


/***/ }),
/* 81 */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(278),
    isObjectLike = __webpack_require__(37);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),
/* 83 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(270),
    baseKeys = __webpack_require__(284),
    isArrayLike = __webpack_require__(53);

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret = __webpack_require__(87);
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs = __webpack_require__(54);

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(366)(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(365)();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(254);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(7)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--1!./types.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--1!./types.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {var isProduction = process.env.NODE_ENV === 'production';
var prefix = 'Invariant failed';
function invariant(condition, message) {
  if (condition) {
    return;
  }

  if (isProduction) {
    throw new Error(prefix);
  } else {
    throw new Error(prefix + ": " + (message || ''));
  }
}

/* harmony default export */ __webpack_exports__["a"] = (invariant);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)))

/***/ }),
/* 90 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _inheritsLoose;
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

/***/ }),
/* 91 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _objectWithoutPropertiesLoose;
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(5);
var settle = __webpack_require__(158);
var buildURL = __webpack_require__(99);
var buildFullPath = __webpack_require__(155);
var parseHeaders = __webpack_require__(165);
var isURLSameOrigin = __webpack_require__(163);
var createError = __webpack_require__(95);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(161);

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(157);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(5);

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];
  var defaultToConfig2Keys = [
    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',
    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath'
  ];

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {
    if (utils.isObject(config2[prop])) {
      config[prop] = utils.deepMerge(config1[prop], config2[prop]);
    } else if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (utils.isObject(config1[prop])) {
      config[prop] = utils.deepMerge(config1[prop]);
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys);

  var otherKeys = Object
    .keys(config2)
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  return config;
};


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(5);
var normalizeHeaderName = __webpack_require__(164);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(92);
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(92);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(5);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getNextAnniversary = undefined;

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(9);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(11);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(10);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var weddingAnniversary = new Date('2018-09-23T00:00:00+1200');

var conversionFactors = [{
    name: 'milliseconds',
    factor: 1
}, {
    name: 'seconds',
    factor: 1000
}, {
    name: 'minutes',
    factor: 60
}, {
    name: 'hours',
    factor: 60
}, {
    name: 'days',
    factor: 24
}, {
    name: 'years',
    factor: 365.2422
}, {
    name: 'millennia',
    factor: 1000
}];

var getGetOrdinal = function getGetOrdinal(n) {
    var s = ['th', 'st', 'nd', 'rd'],
        v = n % 100;
    return n + (s[(v - 20) % 10] || s[v] || s[0]);
};

var millisecondsUntilAnniversary = function millisecondsUntilAnniversary() {
    var currentYear = new Date().getFullYear();

    for (var i = 0; i < 10000000; i++) {
        // eslint-disable-line no-plusplus
        var nextAnniversary = new Date(weddingAnniversary).setFullYear(currentYear + i);
        if (nextAnniversary > new Date()) {
            return nextAnniversary - new Date();
        }
    }
};

var ordinalAnniversary = function ordinalAnniversary() {
    var anniversaryYear = weddingAnniversary.getFullYear();

    for (var i = 0; i < 10000000; i++) {
        // eslint-disable-line no-plusplus
        var nextAnniversary = new Date(weddingAnniversary).setFullYear(anniversaryYear + i);
        if (nextAnniversary > new Date()) {
            return getGetOrdinal(i);
        }
    }
    return 0;
};

var getNextAnniversary = exports.getNextAnniversary = function getNextAnniversary() {
    var currentYear = new Date().getFullYear();

    for (var i = 0; i < 10000000; i++) {
        // eslint-disable-line no-plusplus
        var nextAnniversary = new Date(weddingAnniversary).setFullYear(currentYear + i);
        if (nextAnniversary > new Date()) {
            return {
                date: nextAnniversary,
                ordinal: ordinalAnniversary()
            };
        }
    }

    return {
        date: new Date(),
        ordinal: ''
    };
};

var AnniversaryCountdown = function (_React$Component) {
    (0, _inherits3.default)(AnniversaryCountdown, _React$Component);

    function AnniversaryCountdown(props) {
        (0, _classCallCheck3.default)(this, AnniversaryCountdown);

        var _this = (0, _possibleConstructorReturn3.default)(this, (AnniversaryCountdown.__proto__ || Object.getPrototypeOf(AnniversaryCountdown)).call(this, props));

        var urlParams = new URLSearchParams(window.location.search);

        _this.state = {
            timeFormat: parseInt(urlParams.get('tf'), 10),
            precision: parseInt(urlParams.get('p'), 10),
            timeString: '',
            ordinal: '0th',
            intervalId: null
        };

        _this.updateTimeString = _this.updateTimeString.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(AnniversaryCountdown, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.updateTimeString();
            var intervalId = setInterval(this.updateTimeString, 17);
            this.setState({
                intervalId: intervalId
            });
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            clearInterval(this.state.intervalId);
        }
    }, {
        key: 'updateTimeString',
        value: function updateTimeString() {
            var _state = this.state,
                timeFormat = _state.timeFormat,
                precision = _state.precision;

            var milliseconds = millisecondsUntilAnniversary();
            var ordinal = ordinalAnniversary();
            this.setState({
                ordinal: ordinal
            });
            var factor = 1;

            if (timeFormat && !isNaN(timeFormat) && conversionFactors[timeFormat]) {
                var time = milliseconds;
                for (var i = 0; i <= timeFormat; i++) {
                    // eslint-disable-line no-plusplus
                    time = time / conversionFactors[i].factor; // eslint-disable-line operator-assignment
                    factor = factor * conversionFactors[i].factor; // eslint-disable-line operator-assignment
                }

                var ii = Math.floor(time).toLocaleString({ useGrouping: true });
                var actualPrecision = isNaN(precision) ? Math.floor(Math.pow(Math.log10(factor), 1.2)) // eslint-disable-line
                : precision;
                var dd = actualPrecision > 0 ? '.' + (time % 10).toFixed(actualPrecision).slice(2) : '';

                this.setState({
                    timeString: '' + ii + dd + ' ' + conversionFactors[timeFormat].name
                });
            } else {
                this.setState({
                    timeString: milliseconds.toLocaleString({
                        useGrouping: true
                    }) + ' milliseconds'
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _state2 = this.state,
                ordinal = _state2.ordinal,
                timeString = _state2.timeString;

            return _react2.default.createElement(
                'p',
                null,
                'Only ' + timeString + ' until our ' + ordinal + ' wedding anniversary!'
            );
        }
    }]);
    return AnniversaryCountdown;
}(_react2.default.Component);

exports.default = AnniversaryCountdown;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**@type {{[k: string]: TemplateData}} */var BattlePokedex={bulbasaur:{num:1,species:'Bulbasaur',types:['Grass','Poison'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:45,atk:49,def:49,spa:65,spd:65,spe:45},abilities:{0:'Overgrow',H:'Chlorophyll'},heightm:0.7,weightkg:6.9,color:'Green',evos:['ivysaur'],eggGroups:['Monster','Grass']},ivysaur:{num:2,species:'Ivysaur',types:['Grass','Poison'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:60,atk:62,def:63,spa:80,spd:80,spe:60},abilities:{0:'Overgrow',H:'Chlorophyll'},heightm:1,weightkg:13,color:'Green',prevo:'bulbasaur',evoLevel:16,evos:['venusaur'],eggGroups:['Monster','Grass']},venusaur:{num:3,species:'Venusaur',types:['Grass','Poison'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:80,atk:82,def:83,spa:100,spd:100,spe:80},abilities:{0:'Overgrow',H:'Chlorophyll'},heightm:2,weightkg:100,color:'Green',prevo:'ivysaur',evoLevel:32,eggGroups:['Monster','Grass'],otherFormes:['venusaurmega']},venusaurmega:{num:3,species:'Venusaur-Mega',baseSpecies:'Venusaur',forme:'Mega',types:['Grass','Poison'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:80,atk:100,def:123,spa:122,spd:120,spe:80},abilities:{0:'Thick Fat'},heightm:2.4,weightkg:155.5,color:'Green',eggGroups:['Monster','Grass']},charmander:{num:4,species:'Charmander',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:39,atk:52,def:43,spa:60,spd:50,spe:65},abilities:{0:'Blaze',H:'Solar Power'},heightm:0.6,weightkg:8.5,color:'Red',evos:['charmeleon'],eggGroups:['Monster','Dragon']},charmeleon:{num:5,species:'Charmeleon',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:58,atk:64,def:58,spa:80,spd:65,spe:80},abilities:{0:'Blaze',H:'Solar Power'},heightm:1.1,weightkg:19,color:'Red',prevo:'charmander',evoLevel:16,evos:['charizard'],eggGroups:['Monster','Dragon']},charizard:{num:6,species:'Charizard',types:['Fire','Flying'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:78,atk:84,def:78,spa:109,spd:85,spe:100},abilities:{0:'Blaze',H:'Solar Power'},heightm:1.7,weightkg:90.5,color:'Red',prevo:'charmeleon',evoLevel:36,eggGroups:['Monster','Dragon'],otherFormes:['charizardmegax','charizardmegay','charizardgmax']},charizardmegax:{num:6,species:'Charizard-Mega-X',baseSpecies:'Charizard',forme:'Mega-X',types:['Fire','Dragon'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:78,atk:130,def:111,spa:130,spd:85,spe:100},abilities:{0:'Tough Claws'},heightm:1.7,weightkg:110.5,color:'Black',eggGroups:['Monster','Dragon']},charizardmegay:{num:6,species:'Charizard-Mega-Y',baseSpecies:'Charizard',forme:'Mega-Y',types:['Fire','Flying'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:78,atk:104,def:78,spa:159,spd:115,spe:100},abilities:{0:'Drought'},heightm:1.7,weightkg:100.5,color:'Red',eggGroups:['Monster','Dragon']},charizardgmax:{num:6,species:'Charizard-Gmax',baseSpecies:'Charizard',forme:'Gmax',types:['Fire','Flying'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:78,atk:84,def:78,spa:109,spd:85,spe:100},abilities:{0:'Blaze',H:'Solar Power'},heightm:28,weightkg:0,color:'Red',eggGroups:['Monster','Dragon'],inheritsFrom:'charizard'},squirtle:{num:7,species:'Squirtle',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:44,atk:48,def:65,spa:50,spd:64,spe:43},abilities:{0:'Torrent',H:'Rain Dish'},heightm:0.5,weightkg:9,color:'Blue',evos:['wartortle'],eggGroups:['Monster','Water 1']},wartortle:{num:8,species:'Wartortle',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:59,atk:63,def:80,spa:65,spd:80,spe:58},abilities:{0:'Torrent',H:'Rain Dish'},heightm:1,weightkg:22.5,color:'Blue',prevo:'squirtle',evoLevel:16,evos:['blastoise'],eggGroups:['Monster','Water 1']},blastoise:{num:9,species:'Blastoise',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:79,atk:83,def:100,spa:85,spd:105,spe:78},abilities:{0:'Torrent',H:'Rain Dish'},heightm:1.6,weightkg:85.5,color:'Blue',prevo:'wartortle',evoLevel:36,eggGroups:['Monster','Water 1'],otherFormes:['blastoisemega']},blastoisemega:{num:9,species:'Blastoise-Mega',baseSpecies:'Blastoise',forme:'Mega',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:79,atk:103,def:120,spa:135,spd:115,spe:78},abilities:{0:'Mega Launcher'},heightm:1.6,weightkg:101.1,color:'Blue',eggGroups:['Monster','Water 1']},caterpie:{num:10,species:'Caterpie',types:['Bug'],baseStats:{hp:45,atk:30,def:35,spa:20,spd:20,spe:45},abilities:{0:'Shield Dust',H:'Run Away'},heightm:0.3,weightkg:2.9,color:'Green',evos:['metapod'],eggGroups:['Bug']},metapod:{num:11,species:'Metapod',types:['Bug'],baseStats:{hp:50,atk:20,def:55,spa:25,spd:25,spe:30},abilities:{0:'Shed Skin'},heightm:0.7,weightkg:9.9,color:'Green',prevo:'caterpie',evoLevel:7,evos:['butterfree'],eggGroups:['Bug']},butterfree:{num:12,species:'Butterfree',types:['Bug','Flying'],baseStats:{hp:60,atk:45,def:50,spa:90,spd:80,spe:70},abilities:{0:'Compound Eyes',H:'Tinted Lens'},heightm:1.1,weightkg:32,color:'White',prevo:'metapod',evoLevel:10,eggGroups:['Bug'],otherFormes:['butterfreegmax']},butterfreegmax:{num:12,species:'Butterfree-Gmax',baseSpecies:'Butterfree',forme:'Gmax',types:['Bug','Flying'],baseStats:{hp:60,atk:45,def:50,spa:90,spd:80,spe:70},abilities:{0:'Compound Eyes',H:'Tinted Lens'},heightm:17,weightkg:0,color:'White',eggGroups:['Bug'],inheritsFrom:'butterfree'},weedle:{num:13,species:'Weedle',types:['Bug','Poison'],baseStats:{hp:40,atk:35,def:30,spa:20,spd:20,spe:50},abilities:{0:'Shield Dust',H:'Run Away'},heightm:0.3,weightkg:3.2,color:'Brown',evos:['kakuna'],eggGroups:['Bug']},kakuna:{num:14,species:'Kakuna',types:['Bug','Poison'],baseStats:{hp:45,atk:25,def:50,spa:25,spd:25,spe:35},abilities:{0:'Shed Skin'},heightm:0.6,weightkg:10,color:'Yellow',prevo:'weedle',evoLevel:7,evos:['beedrill'],eggGroups:['Bug']},beedrill:{num:15,species:'Beedrill',types:['Bug','Poison'],baseStats:{hp:65,atk:90,def:40,spa:45,spd:80,spe:75},abilities:{0:'Swarm',H:'Sniper'},heightm:1,weightkg:29.5,color:'Yellow',prevo:'kakuna',evoLevel:10,eggGroups:['Bug'],otherFormes:['beedrillmega']},beedrillmega:{num:15,species:'Beedrill-Mega',baseSpecies:'Beedrill',forme:'Mega',types:['Bug','Poison'],baseStats:{hp:65,atk:150,def:40,spa:15,spd:80,spe:145},abilities:{0:'Adaptability'},heightm:1.4,weightkg:40.5,color:'Yellow',eggGroups:['Bug']},pidgey:{num:16,species:'Pidgey',types:['Normal','Flying'],baseStats:{hp:40,atk:45,def:40,spa:35,spd:35,spe:56},abilities:{0:'Keen Eye',1:'Tangled Feet',H:'Big Pecks'},heightm:0.3,weightkg:1.8,color:'Brown',evos:['pidgeotto'],eggGroups:['Flying']},pidgeotto:{num:17,species:'Pidgeotto',types:['Normal','Flying'],baseStats:{hp:63,atk:60,def:55,spa:50,spd:50,spe:71},abilities:{0:'Keen Eye',1:'Tangled Feet',H:'Big Pecks'},heightm:1.1,weightkg:30,color:'Brown',prevo:'pidgey',evoLevel:18,evos:['pidgeot'],eggGroups:['Flying']},pidgeot:{num:18,species:'Pidgeot',types:['Normal','Flying'],baseStats:{hp:83,atk:80,def:75,spa:70,spd:70,spe:101},abilities:{0:'Keen Eye',1:'Tangled Feet',H:'Big Pecks'},heightm:1.5,weightkg:39.5,color:'Brown',prevo:'pidgeotto',evoLevel:36,eggGroups:['Flying'],otherFormes:['pidgeotmega']},pidgeotmega:{num:18,species:'Pidgeot-Mega',baseSpecies:'Pidgeot',forme:'Mega',types:['Normal','Flying'],baseStats:{hp:83,atk:80,def:80,spa:135,spd:80,spe:121},abilities:{0:'No Guard'},heightm:2.2,weightkg:50.5,color:'Brown',eggGroups:['Flying']},rattata:{num:19,species:'Rattata',types:['Normal'],baseStats:{hp:30,atk:56,def:35,spa:25,spd:35,spe:72},abilities:{0:'Run Away',1:'Guts',H:'Hustle'},heightm:0.3,weightkg:3.5,color:'Purple',evos:['raticate'],eggGroups:['Field'],otherFormes:['rattataalola']},rattataalola:{num:19,species:'Rattata-Alola',baseSpecies:'Rattata',forme:'Alola',types:['Dark','Normal'],baseStats:{hp:30,atk:56,def:35,spa:25,spd:35,spe:72},abilities:{0:'Gluttony',1:'Hustle',H:'Thick Fat'},heightm:0.3,weightkg:3.8,color:'Black',evos:['raticatealola'],eggGroups:['Field']},raticate:{num:20,species:'Raticate',types:['Normal'],baseStats:{hp:55,atk:81,def:60,spa:50,spd:70,spe:97},abilities:{0:'Run Away',1:'Guts',H:'Hustle'},heightm:0.7,weightkg:18.5,color:'Brown',prevo:'rattata',evoLevel:20,eggGroups:['Field'],otherFormes:['raticatealola','raticatealolatotem']},raticatealola:{num:20,species:'Raticate-Alola',baseSpecies:'Raticate',forme:'Alola',types:['Dark','Normal'],baseStats:{hp:75,atk:71,def:70,spa:40,spd:80,spe:77},abilities:{0:'Gluttony',1:'Hustle',H:'Thick Fat'},heightm:0.7,weightkg:25.5,color:'Black',prevo:'rattataalola',evoLevel:20,eggGroups:['Field']},raticatealolatotem:{num:20,species:'Raticate-Alola-Totem',baseSpecies:'Raticate',forme:'Alola-Totem',types:['Dark','Normal'],baseStats:{hp:75,atk:71,def:70,spa:40,spd:80,spe:77},abilities:{0:'Thick Fat'},heightm:1.4,weightkg:105,color:'Black',eggGroups:['Field']},spearow:{num:21,species:'Spearow',types:['Normal','Flying'],baseStats:{hp:40,atk:60,def:30,spa:31,spd:31,spe:70},abilities:{0:'Keen Eye',H:'Sniper'},heightm:0.3,weightkg:2,color:'Brown',evos:['fearow'],eggGroups:['Flying']},fearow:{num:22,species:'Fearow',types:['Normal','Flying'],baseStats:{hp:65,atk:90,def:65,spa:61,spd:61,spe:100},abilities:{0:'Keen Eye',H:'Sniper'},heightm:1.2,weightkg:38,color:'Brown',prevo:'spearow',evoLevel:20,eggGroups:['Flying']},ekans:{num:23,species:'Ekans',types:['Poison'],baseStats:{hp:35,atk:60,def:44,spa:40,spd:54,spe:55},abilities:{0:'Intimidate',1:'Shed Skin',H:'Unnerve'},heightm:2,weightkg:6.9,color:'Purple',evos:['arbok'],eggGroups:['Field','Dragon']},arbok:{num:24,species:'Arbok',types:['Poison'],baseStats:{hp:60,atk:95,def:69,spa:65,spd:79,spe:80},abilities:{0:'Intimidate',1:'Shed Skin',H:'Unnerve'},heightm:3.5,weightkg:65,color:'Purple',prevo:'ekans',evoLevel:22,eggGroups:['Field','Dragon']},pikachu:{num:25,species:'Pikachu',types:['Electric'],baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Static',H:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',prevo:'pichu',evoType:'levelFriendship',evos:['raichu','raichualola'],eggGroups:['Field','Fairy'],otherFormes:['pikachucosplay','pikachurockstar','pikachubelle','pikachupopstar','pikachuphd','pikachulibre','pikachuoriginal','pikachuhoenn','pikachusinnoh','pikachuunova','pikachukalos','pikachualola','pikachupartner','pikachustarter','pikachugmax']},pikachucosplay:{num:25,species:'Pikachu-Cosplay',baseSpecies:'Pikachu',forme:'Cosplay',types:['Electric'],gender:'F',baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachurockstar:{num:25,species:'Pikachu-Rock-Star',baseSpecies:'Pikachu',forme:'Rock-Star',types:['Electric'],gender:'F',baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachubelle:{num:25,species:'Pikachu-Belle',baseSpecies:'Pikachu',forme:'Belle',types:['Electric'],gender:'F',baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachupopstar:{num:25,species:'Pikachu-Pop-Star',baseSpecies:'Pikachu',forme:'Pop-Star',types:['Electric'],gender:'F',baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachuphd:{num:25,species:'Pikachu-PhD',baseSpecies:'Pikachu',forme:'PhD',types:['Electric'],gender:'F',baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachulibre:{num:25,species:'Pikachu-Libre',baseSpecies:'Pikachu',forme:'Libre',types:['Electric'],gender:'F',baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachuoriginal:{num:25,species:'Pikachu-Original',baseSpecies:'Pikachu',forme:'Original',types:['Electric'],gender:'M',baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Static',H:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachuhoenn:{num:25,species:'Pikachu-Hoenn',baseSpecies:'Pikachu',forme:'Hoenn',types:['Electric'],gender:'M',baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Static',H:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachusinnoh:{num:25,species:'Pikachu-Sinnoh',baseSpecies:'Pikachu',forme:'Sinnoh',types:['Electric'],gender:'M',baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Static',H:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachuunova:{num:25,species:'Pikachu-Unova',baseSpecies:'Pikachu',forme:'Unova',types:['Electric'],gender:'M',baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Static',H:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachukalos:{num:25,species:'Pikachu-Kalos',baseSpecies:'Pikachu',forme:'Kalos',types:['Electric'],gender:'M',baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Static',H:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachualola:{num:25,species:'Pikachu-Alola',baseSpecies:'Pikachu',forme:'Alola',types:['Electric'],gender:'M',baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Static',H:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachupartner:{num:25,species:'Pikachu-Partner',baseSpecies:'Pikachu',forme:'Partner',types:['Electric'],gender:'M',baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Static',H:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachustarter:{num:25,species:'Pikachu-Starter',baseSpecies:'Pikachu',forme:'Starter',types:['Electric'],baseStats:{hp:45,atk:80,def:50,spa:75,spd:60,spe:120},abilities:{0:'Static',H:'Lightning Rod'},heightm:0.4,weightkg:6,color:'Yellow',eggGroups:['Undiscovered']},pikachugmax:{num:25,species:'Pikachu-Gmax',baseSpecies:'Pikachu',forme:'Gmax',types:['Electric'],baseStats:{hp:35,atk:55,def:40,spa:50,spd:50,spe:90},abilities:{0:'Static',H:'Lightning Rod'},heightm:21,weightkg:0,color:'Yellow',eggGroups:['Field','Fairy'],inheritsFrom:'pikachu'},raichu:{num:26,species:'Raichu',types:['Electric'],baseStats:{hp:60,atk:90,def:55,spa:90,spd:80,spe:110},abilities:{0:'Static',H:'Lightning Rod'},heightm:0.8,weightkg:30,color:'Yellow',prevo:'pikachu',evoItem:'Thunder Stone',evoType:'useItem',eggGroups:['Field','Fairy'],otherFormes:['raichualola']},raichualola:{num:26,species:'Raichu-Alola',baseSpecies:'Raichu',forme:'Alola',types:['Electric','Psychic'],baseStats:{hp:60,atk:85,def:50,spa:95,spd:85,spe:110},abilities:{0:'Surge Surfer'},heightm:0.7,weightkg:21,color:'Brown',prevo:'pikachu',evoType:'useItem',evoItem:'Thunder Stone',eggGroups:['Field','Fairy']},sandshrew:{num:27,species:'Sandshrew',types:['Ground'],baseStats:{hp:50,atk:75,def:85,spa:20,spd:30,spe:40},abilities:{0:'Sand Veil',H:'Sand Rush'},heightm:0.6,weightkg:12,color:'Yellow',evos:['sandslash'],eggGroups:['Field'],otherFormes:['sandshrewalola']},sandshrewalola:{num:27,species:'Sandshrew-Alola',baseSpecies:'Sandshrew',forme:'Alola',types:['Ice','Steel'],baseStats:{hp:50,atk:75,def:90,spa:10,spd:35,spe:40},abilities:{0:'Snow Cloak',H:'Slush Rush'},heightm:0.7,weightkg:40,color:'White',evos:['sandslashalola'],eggGroups:['Field']},sandslash:{num:28,species:'Sandslash',types:['Ground'],baseStats:{hp:75,atk:100,def:110,spa:45,spd:55,spe:65},abilities:{0:'Sand Veil',H:'Sand Rush'},heightm:1,weightkg:29.5,color:'Yellow',prevo:'sandshrew',evoLevel:22,eggGroups:['Field'],otherFormes:['sandslashalola']},sandslashalola:{num:28,species:'Sandslash-Alola',baseSpecies:'Sandslash',forme:'Alola',types:['Ice','Steel'],baseStats:{hp:75,atk:100,def:120,spa:25,spd:65,spe:65},abilities:{0:'Snow Cloak',H:'Slush Rush'},heightm:1.2,weightkg:55,color:'Blue',prevo:'sandshrewalola',evoType:'useItem',evoItem:'Ice Stone',eggGroups:['Field']},nidoranf:{num:29,species:'Nidoran-F',types:['Poison'],gender:'F',baseStats:{hp:55,atk:47,def:52,spa:40,spd:40,spe:41},abilities:{0:'Poison Point',1:'Rivalry',H:'Hustle'},heightm:0.4,weightkg:7,color:'Blue',evos:['nidorina'],eggGroups:['Monster','Field']},nidorina:{num:30,species:'Nidorina',types:['Poison'],gender:'F',baseStats:{hp:70,atk:62,def:67,spa:55,spd:55,spe:56},abilities:{0:'Poison Point',1:'Rivalry',H:'Hustle'},heightm:0.8,weightkg:20,color:'Blue',prevo:'nidoranf',evoLevel:16,evos:['nidoqueen'],eggGroups:['Undiscovered']},nidoqueen:{num:31,species:'Nidoqueen',types:['Poison','Ground'],gender:'F',baseStats:{hp:90,atk:92,def:87,spa:75,spd:85,spe:76},abilities:{0:'Poison Point',1:'Rivalry',H:'Sheer Force'},heightm:1.3,weightkg:60,color:'Blue',prevo:'nidorina',evoType:'useItem',evoItem:'Moon Stone',eggGroups:['Undiscovered']},nidoranm:{num:32,species:'Nidoran-M',types:['Poison'],gender:'M',baseStats:{hp:46,atk:57,def:40,spa:40,spd:40,spe:50},abilities:{0:'Poison Point',1:'Rivalry',H:'Hustle'},heightm:0.5,weightkg:9,color:'Purple',evos:['nidorino'],eggGroups:['Monster','Field']},nidorino:{num:33,species:'Nidorino',types:['Poison'],gender:'M',baseStats:{hp:61,atk:72,def:57,spa:55,spd:55,spe:65},abilities:{0:'Poison Point',1:'Rivalry',H:'Hustle'},heightm:0.9,weightkg:19.5,color:'Purple',prevo:'nidoranm',evoLevel:16,evos:['nidoking'],eggGroups:['Monster','Field']},nidoking:{num:34,species:'Nidoking',types:['Poison','Ground'],gender:'M',baseStats:{hp:81,atk:102,def:77,spa:85,spd:75,spe:85},abilities:{0:'Poison Point',1:'Rivalry',H:'Sheer Force'},heightm:1.4,weightkg:62,color:'Purple',prevo:'nidorino',evoType:'useItem',evoItem:'Moon Stone',eggGroups:['Monster','Field']},clefairy:{num:35,species:'Clefairy',types:['Fairy'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:70,atk:45,def:48,spa:60,spd:65,spe:35},abilities:{0:'Cute Charm',1:'Magic Guard',H:'Friend Guard'},heightm:0.6,weightkg:7.5,color:'Pink',prevo:'cleffa',evoType:'levelFriendship',evos:['clefable'],eggGroups:['Fairy']},clefable:{num:36,species:'Clefable',types:['Fairy'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:95,atk:70,def:73,spa:95,spd:90,spe:60},abilities:{0:'Cute Charm',1:'Magic Guard',H:'Unaware'},heightm:1.3,weightkg:40,color:'Pink',prevo:'clefairy',evoType:'useItem',evoItem:'Moon Stone',eggGroups:['Fairy']},vulpix:{num:37,species:'Vulpix',types:['Fire'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:38,atk:41,def:40,spa:50,spd:65,spe:65},abilities:{0:'Flash Fire',H:'Drought'},heightm:0.6,weightkg:9.9,color:'Brown',evos:['ninetales'],eggGroups:['Field'],otherFormes:['vulpixalola']},vulpixalola:{num:37,species:'Vulpix-Alola',baseSpecies:'Vulpix',forme:'Alola',types:['Ice'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:38,atk:41,def:40,spa:50,spd:65,spe:65},abilities:{0:'Snow Cloak',H:'Snow Warning'},heightm:0.6,weightkg:9.9,color:'White',evos:['ninetalesalola'],eggGroups:['Field']},ninetales:{num:38,species:'Ninetales',types:['Fire'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:73,atk:76,def:75,spa:81,spd:100,spe:100},abilities:{0:'Flash Fire',H:'Drought'},heightm:1.1,weightkg:19.9,color:'Yellow',prevo:'vulpix',evoType:'useItem',evoItem:'Fire Stone',eggGroups:['Field'],otherFormes:['ninetalesalola']},ninetalesalola:{num:38,species:'Ninetales-Alola',baseSpecies:'Ninetales',forme:'Alola',types:['Ice','Fairy'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:73,atk:67,def:75,spa:81,spd:100,spe:109},abilities:{0:'Snow Cloak',H:'Snow Warning'},heightm:1.1,weightkg:19.9,color:'Blue',prevo:'vulpixalola',evoType:'useItem',evoItem:'Ice Stone',eggGroups:['Field']},jigglypuff:{num:39,species:'Jigglypuff',types:['Normal','Fairy'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:115,atk:45,def:20,spa:45,spd:25,spe:20},abilities:{0:'Cute Charm',1:'Competitive',H:'Friend Guard'},heightm:0.5,weightkg:5.5,color:'Pink',prevo:'igglybuff',evoType:'levelFriendship',evos:['wigglytuff'],eggGroups:['Fairy']},wigglytuff:{num:40,species:'Wigglytuff',types:['Normal','Fairy'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:140,atk:70,def:45,spa:85,spd:50,spe:45},abilities:{0:'Cute Charm',1:'Competitive',H:'Frisk'},heightm:1,weightkg:12,color:'Pink',prevo:'jigglypuff',evoType:'useItem',evoItem:'Moon Stone',eggGroups:['Fairy']},zubat:{num:41,species:'Zubat',types:['Poison','Flying'],baseStats:{hp:40,atk:45,def:35,spa:30,spd:40,spe:55},abilities:{0:'Inner Focus',H:'Infiltrator'},heightm:0.8,weightkg:7.5,color:'Purple',evos:['golbat'],eggGroups:['Flying']},golbat:{num:42,species:'Golbat',types:['Poison','Flying'],baseStats:{hp:75,atk:80,def:70,spa:65,spd:75,spe:90},abilities:{0:'Inner Focus',H:'Infiltrator'},heightm:1.6,weightkg:55,color:'Purple',prevo:'zubat',evoLevel:22,evos:['crobat'],eggGroups:['Flying']},oddish:{num:43,species:'Oddish',types:['Grass','Poison'],baseStats:{hp:45,atk:50,def:55,spa:75,spd:65,spe:30},abilities:{0:'Chlorophyll',H:'Run Away'},heightm:0.5,weightkg:5.4,color:'Blue',evos:['gloom'],eggGroups:['Grass']},gloom:{num:44,species:'Gloom',types:['Grass','Poison'],baseStats:{hp:60,atk:65,def:70,spa:85,spd:75,spe:40},abilities:{0:'Chlorophyll',H:'Stench'},heightm:0.8,weightkg:8.6,color:'Blue',prevo:'oddish',evoLevel:21,evos:['vileplume','bellossom'],eggGroups:['Grass']},vileplume:{num:45,species:'Vileplume',types:['Grass','Poison'],baseStats:{hp:75,atk:80,def:85,spa:110,spd:90,spe:50},abilities:{0:'Chlorophyll',H:'Effect Spore'},heightm:1.2,weightkg:18.6,color:'Red',prevo:'gloom',evoType:'useItem',evoItem:'Leaf Stone',eggGroups:['Grass']},paras:{num:46,species:'Paras',types:['Bug','Grass'],baseStats:{hp:35,atk:70,def:55,spa:45,spd:55,spe:25},abilities:{0:'Effect Spore',1:'Dry Skin',H:'Damp'},heightm:0.3,weightkg:5.4,color:'Red',evos:['parasect'],eggGroups:['Bug','Grass']},parasect:{num:47,species:'Parasect',types:['Bug','Grass'],baseStats:{hp:60,atk:95,def:80,spa:60,spd:80,spe:30},abilities:{0:'Effect Spore',1:'Dry Skin',H:'Damp'},heightm:1,weightkg:29.5,color:'Red',prevo:'paras',evoLevel:24,eggGroups:['Bug','Grass']},venonat:{num:48,species:'Venonat',types:['Bug','Poison'],baseStats:{hp:60,atk:55,def:50,spa:40,spd:55,spe:45},abilities:{0:'Compound Eyes',1:'Tinted Lens',H:'Run Away'},heightm:1,weightkg:30,color:'Purple',evos:['venomoth'],eggGroups:['Bug']},venomoth:{num:49,species:'Venomoth',types:['Bug','Poison'],baseStats:{hp:70,atk:65,def:60,spa:90,spd:75,spe:90},abilities:{0:'Shield Dust',1:'Tinted Lens',H:'Wonder Skin'},heightm:1.5,weightkg:12.5,color:'Purple',prevo:'venonat',evoLevel:31,eggGroups:['Bug']},diglett:{num:50,species:'Diglett',types:['Ground'],baseStats:{hp:10,atk:55,def:25,spa:35,spd:45,spe:95},abilities:{0:'Sand Veil',1:'Arena Trap',H:'Sand Force'},heightm:0.2,weightkg:0.8,color:'Brown',evos:['dugtrio'],eggGroups:['Field'],otherFormes:['diglettalola']},diglettalola:{num:50,species:'Diglett-Alola',baseSpecies:'Diglett',forme:'Alola',types:['Ground','Steel'],baseStats:{hp:10,atk:55,def:30,spa:35,spd:45,spe:90},abilities:{0:'Sand Veil',1:'Tangling Hair',H:'Sand Force'},heightm:0.2,weightkg:1,color:'Brown',evos:['dugtrioalola'],eggGroups:['Field']},dugtrio:{num:51,species:'Dugtrio',types:['Ground'],baseStats:{hp:35,atk:100,def:50,spa:50,spd:70,spe:120},abilities:{0:'Sand Veil',1:'Arena Trap',H:'Sand Force'},heightm:0.7,weightkg:33.3,color:'Brown',prevo:'diglett',evoLevel:26,eggGroups:['Field'],otherFormes:['dugtrioalola']},dugtrioalola:{num:51,species:'Dugtrio-Alola',baseSpecies:'Dugtrio',forme:'Alola',types:['Ground','Steel'],baseStats:{hp:35,atk:100,def:60,spa:50,spd:70,spe:110},abilities:{0:'Sand Veil',1:'Tangling Hair',H:'Sand Force'},heightm:0.7,weightkg:66.6,color:'Brown',prevo:'diglettalola',evoLevel:26,eggGroups:['Field']},meowth:{num:52,species:'Meowth',types:['Normal'],baseStats:{hp:40,atk:45,def:35,spa:40,spd:40,spe:90},abilities:{0:'Pickup',1:'Technician',H:'Unnerve'},heightm:0.4,weightkg:4.2,color:'Yellow',evos:['persian'],eggGroups:['Field'],otherFormes:['meowthalola','meowthgalar','meowthgmax']},meowthalola:{num:52,species:'Meowth-Alola',baseSpecies:'Meowth',forme:'Alola',types:['Dark'],baseStats:{hp:40,atk:35,def:35,spa:50,spd:40,spe:90},abilities:{0:'Pickup',1:'Technician',H:'Rattled'},heightm:0.4,weightkg:4.2,color:'Blue',evos:['persianalola'],eggGroups:['Field']},meowthgalar:{num:52,species:'Meowth-Galar',baseSpecies:'Meowth',forme:'Galar',types:['Steel'],baseStats:{hp:50,atk:65,def:55,spa:40,spd:40,spe:40},abilities:{0:'Pickup',1:'Tough Claws',H:'Unnerve'},heightm:0.4,weightkg:7.5,color:'Brown',evos:['perrserker'],eggGroups:['Field']},meowthgmax:{num:52,species:'Meowth-Gmax',baseSpecies:'Meowth',forme:'Gmax',types:['Normal'],baseStats:{hp:40,atk:45,def:35,spa:40,spd:40,spe:90},abilities:{0:'Pickup',1:'Technician',H:'Unnerve'},heightm:33,weightkg:0,color:'Yellow',eggGroups:['Field'],inheritsFrom:'meowth'},persian:{num:53,species:'Persian',types:['Normal'],baseStats:{hp:65,atk:70,def:60,spa:65,spd:65,spe:115},abilities:{0:'Limber',1:'Technician',H:'Unnerve'},heightm:1,weightkg:32,color:'Yellow',prevo:'meowth',evoLevel:28,eggGroups:['Field'],otherFormes:['persianalola']},persianalola:{num:53,species:'Persian-Alola',baseSpecies:'Persian',forme:'Alola',types:['Dark'],baseStats:{hp:65,atk:60,def:60,spa:75,spd:65,spe:115},abilities:{0:'Fur Coat',1:'Technician',H:'Rattled'},heightm:1.1,weightkg:33,color:'Blue',prevo:'meowthalola',evoType:'levelFriendship',eggGroups:['Field']},psyduck:{num:54,species:'Psyduck',types:['Water'],baseStats:{hp:50,atk:52,def:48,spa:65,spd:50,spe:55},abilities:{0:'Damp',1:'Cloud Nine',H:'Swift Swim'},heightm:0.8,weightkg:19.6,color:'Yellow',evos:['golduck'],eggGroups:['Water 1','Field']},golduck:{num:55,species:'Golduck',types:['Water'],baseStats:{hp:80,atk:82,def:78,spa:95,spd:80,spe:85},abilities:{0:'Damp',1:'Cloud Nine',H:'Swift Swim'},heightm:1.7,weightkg:76.6,color:'Blue',prevo:'psyduck',evoLevel:33,eggGroups:['Water 1','Field']},mankey:{num:56,species:'Mankey',types:['Fighting'],baseStats:{hp:40,atk:80,def:35,spa:35,spd:45,spe:70},abilities:{0:'Vital Spirit',1:'Anger Point',H:'Defiant'},heightm:0.5,weightkg:28,color:'Brown',evos:['primeape'],eggGroups:['Field']},primeape:{num:57,species:'Primeape',types:['Fighting'],baseStats:{hp:65,atk:105,def:60,spa:60,spd:70,spe:95},abilities:{0:'Vital Spirit',1:'Anger Point',H:'Defiant'},heightm:1,weightkg:32,color:'Brown',prevo:'mankey',evoLevel:28,eggGroups:['Field']},growlithe:{num:58,species:'Growlithe',types:['Fire'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:55,atk:70,def:45,spa:70,spd:50,spe:60},abilities:{0:'Intimidate',1:'Flash Fire',H:'Justified'},heightm:0.7,weightkg:19,color:'Brown',evos:['arcanine'],eggGroups:['Field']},arcanine:{num:59,species:'Arcanine',types:['Fire'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:90,atk:110,def:80,spa:100,spd:80,spe:95},abilities:{0:'Intimidate',1:'Flash Fire',H:'Justified'},heightm:1.9,weightkg:155,color:'Brown',prevo:'growlithe',evoType:'useItem',evoItem:'Fire Stone',eggGroups:['Field']},poliwag:{num:60,species:'Poliwag',types:['Water'],baseStats:{hp:40,atk:50,def:40,spa:40,spd:40,spe:90},abilities:{0:'Water Absorb',1:'Damp',H:'Swift Swim'},heightm:0.6,weightkg:12.4,color:'Blue',evos:['poliwhirl'],eggGroups:['Water 1']},poliwhirl:{num:61,species:'Poliwhirl',types:['Water'],baseStats:{hp:65,atk:65,def:65,spa:50,spd:50,spe:90},abilities:{0:'Water Absorb',1:'Damp',H:'Swift Swim'},heightm:1,weightkg:20,color:'Blue',prevo:'poliwag',evoLevel:25,evos:['poliwrath','politoed'],eggGroups:['Water 1']},poliwrath:{num:62,species:'Poliwrath',types:['Water','Fighting'],baseStats:{hp:90,atk:95,def:95,spa:70,spd:90,spe:70},abilities:{0:'Water Absorb',1:'Damp',H:'Swift Swim'},heightm:1.3,weightkg:54,color:'Blue',prevo:'poliwhirl',evoType:'useItem',evoItem:'Water Stone',eggGroups:['Water 1']},abra:{num:63,species:'Abra',types:['Psychic'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:25,atk:20,def:15,spa:105,spd:55,spe:90},abilities:{0:'Synchronize',1:'Inner Focus',H:'Magic Guard'},heightm:0.9,weightkg:19.5,color:'Brown',evos:['kadabra'],eggGroups:['Human-Like']},kadabra:{num:64,species:'Kadabra',types:['Psychic'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:40,atk:35,def:30,spa:120,spd:70,spe:105},abilities:{0:'Synchronize',1:'Inner Focus',H:'Magic Guard'},heightm:1.3,weightkg:56.5,color:'Brown',prevo:'abra',evoLevel:16,evos:['alakazam'],eggGroups:['Human-Like']},alakazam:{num:65,species:'Alakazam',types:['Psychic'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:55,atk:50,def:45,spa:135,spd:95,spe:120},abilities:{0:'Synchronize',1:'Inner Focus',H:'Magic Guard'},heightm:1.5,weightkg:48,color:'Brown',prevo:'kadabra',evoType:'trade',eggGroups:['Human-Like'],otherFormes:['alakazammega']},alakazammega:{num:65,species:'Alakazam-Mega',baseSpecies:'Alakazam',forme:'Mega',types:['Psychic'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:55,atk:50,def:65,spa:175,spd:105,spe:150},abilities:{0:'Trace'},heightm:1.2,weightkg:48,color:'Brown',eggGroups:['Human-Like']},machop:{num:66,species:'Machop',types:['Fighting'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:70,atk:80,def:50,spa:35,spd:35,spe:35},abilities:{0:'Guts',1:'No Guard',H:'Steadfast'},heightm:0.8,weightkg:19.5,color:'Gray',evos:['machoke'],eggGroups:['Human-Like']},machoke:{num:67,species:'Machoke',types:['Fighting'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:80,atk:100,def:70,spa:50,spd:60,spe:45},abilities:{0:'Guts',1:'No Guard',H:'Steadfast'},heightm:1.5,weightkg:70.5,color:'Gray',prevo:'machop',evoLevel:28,evos:['machamp'],eggGroups:['Human-Like']},machamp:{num:68,species:'Machamp',types:['Fighting'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:90,atk:130,def:80,spa:65,spd:85,spe:55},abilities:{0:'Guts',1:'No Guard',H:'Steadfast'},heightm:1.6,weightkg:130,color:'Gray',prevo:'machoke',evoType:'trade',eggGroups:['Human-Like'],otherFormes:['machampgmax']},machampgmax:{num:68,species:'Machamp-Gmax',baseSpecies:'Machamp',forme:'Gmax',types:['Fighting'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:90,atk:130,def:80,spa:65,spd:85,spe:55},abilities:{0:'Guts',1:'No Guard',H:'Steadfast'},// TODO
heightm:0,weightkg:0,color:'Gray',eggGroups:['Human-Like'],inheritsFrom:'machamp'},bellsprout:{num:69,species:'Bellsprout',types:['Grass','Poison'],baseStats:{hp:50,atk:75,def:35,spa:70,spd:30,spe:40},abilities:{0:'Chlorophyll',H:'Gluttony'},heightm:0.7,weightkg:4,color:'Green',evos:['weepinbell'],eggGroups:['Grass']},weepinbell:{num:70,species:'Weepinbell',types:['Grass','Poison'],baseStats:{hp:65,atk:90,def:50,spa:85,spd:45,spe:55},abilities:{0:'Chlorophyll',H:'Gluttony'},heightm:1,weightkg:6.4,color:'Green',prevo:'bellsprout',evoLevel:21,evos:['victreebel'],eggGroups:['Grass']},victreebel:{num:71,species:'Victreebel',types:['Grass','Poison'],baseStats:{hp:80,atk:105,def:65,spa:100,spd:70,spe:70},abilities:{0:'Chlorophyll',H:'Gluttony'},heightm:1.7,weightkg:15.5,color:'Green',prevo:'weepinbell',evoType:'useItem',evoItem:'Leaf Stone',eggGroups:['Grass']},tentacool:{num:72,species:'Tentacool',types:['Water','Poison'],baseStats:{hp:40,atk:40,def:35,spa:50,spd:100,spe:70},abilities:{0:'Clear Body',1:'Liquid Ooze',H:'Rain Dish'},heightm:0.9,weightkg:45.5,color:'Blue',evos:['tentacruel'],eggGroups:['Water 3']},tentacruel:{num:73,species:'Tentacruel',types:['Water','Poison'],baseStats:{hp:80,atk:70,def:65,spa:80,spd:120,spe:100},abilities:{0:'Clear Body',1:'Liquid Ooze',H:'Rain Dish'},heightm:1.6,weightkg:55,color:'Blue',prevo:'tentacool',evoLevel:30,eggGroups:['Water 3']},geodude:{num:74,species:'Geodude',types:['Rock','Ground'],baseStats:{hp:40,atk:80,def:100,spa:30,spd:30,spe:20},abilities:{0:'Rock Head',1:'Sturdy',H:'Sand Veil'},heightm:0.4,weightkg:20,color:'Brown',evos:['graveler'],eggGroups:['Mineral'],otherFormes:['geodudealola']},geodudealola:{num:74,species:'Geodude-Alola',baseSpecies:'Geodude',forme:'Alola',types:['Rock','Electric'],baseStats:{hp:40,atk:80,def:100,spa:30,spd:30,spe:20},abilities:{0:'Magnet Pull',1:'Sturdy',H:'Galvanize'},heightm:0.4,weightkg:20.3,color:'Gray',evos:['graveleralola'],eggGroups:['Mineral']},graveler:{num:75,species:'Graveler',types:['Rock','Ground'],baseStats:{hp:55,atk:95,def:115,spa:45,spd:45,spe:35},abilities:{0:'Rock Head',1:'Sturdy',H:'Sand Veil'},heightm:1,weightkg:105,color:'Brown',prevo:'geodude',evoLevel:25,evos:['golem'],eggGroups:['Mineral'],otherFormes:['graveleralola']},graveleralola:{num:75,species:'Graveler-Alola',baseSpecies:'Graveler',forme:'Alola',types:['Rock','Electric'],baseStats:{hp:55,atk:95,def:115,spa:45,spd:45,spe:35},abilities:{0:'Magnet Pull',1:'Sturdy',H:'Galvanize'},heightm:1,weightkg:110,color:'Gray',prevo:'geodudealola',evoLevel:25,evos:['golemalola'],eggGroups:['Mineral']},golem:{num:76,species:'Golem',types:['Rock','Ground'],baseStats:{hp:80,atk:120,def:130,spa:55,spd:65,spe:45},abilities:{0:'Rock Head',1:'Sturdy',H:'Sand Veil'},heightm:1.4,weightkg:300,color:'Brown',prevo:'graveler',evoType:'trade',eggGroups:['Mineral'],otherFormes:['golemalola']},golemalola:{num:76,species:'Golem-Alola',baseSpecies:'Golem',forme:'Alola',types:['Rock','Electric'],baseStats:{hp:80,atk:120,def:130,spa:55,spd:65,spe:45},abilities:{0:'Magnet Pull',1:'Sturdy',H:'Galvanize'},heightm:1.7,weightkg:316,color:'Gray',prevo:'graveleralola',evoType:'trade',eggGroups:['Mineral']},ponyta:{num:77,species:'Ponyta',types:['Fire'],baseStats:{hp:50,atk:85,def:55,spa:65,spd:65,spe:90},abilities:{0:'Run Away',1:'Flash Fire',H:'Flame Body'},heightm:1,weightkg:30,color:'Yellow',evos:['rapidash'],eggGroups:['Field'],otherFormes:['ponytagalar']},ponytagalar:{num:77,species:'Ponyta-Galar',baseSpecies:'Ponyta',forme:'Galar',types:['Psychic'],baseStats:{hp:50,atk:85,def:55,spa:65,spd:65,spe:90},abilities:{0:'Run Away',1:'Pastel Veil',H:'Anticipation'},heightm:0.8,weightkg:24,color:'White',evos:['rapidashgalar'],eggGroups:['Field']},rapidash:{num:78,species:'Rapidash',types:['Fire'],baseStats:{hp:65,atk:100,def:70,spa:80,spd:80,spe:105},abilities:{0:'Run Away',1:'Flash Fire',H:'Flame Body'},heightm:1.7,weightkg:95,color:'Yellow',prevo:'ponyta',evoLevel:40,eggGroups:['Field'],otherFormes:['rapidashgalar']},rapidashgalar:{num:78,species:'Rapidash-Galar',baseSpecies:'Rapidash',forme:'Galar',types:['Psychic','Fairy'],baseStats:{hp:65,atk:100,def:70,spa:80,spd:80,spe:105},abilities:{0:'Run Away',1:'Pastel Veil',H:'Anticipation'},heightm:1.7,weightkg:80,color:'White',prevo:'ponytagalar',evoLevel:40,eggGroups:['Field']},slowpoke:{num:79,species:'Slowpoke',types:['Water','Psychic'],baseStats:{hp:90,atk:65,def:65,spa:40,spd:40,spe:15},abilities:{0:'Oblivious',1:'Own Tempo',H:'Regenerator'},heightm:1.2,weightkg:36,color:'Pink',evos:['slowbro','slowking'],eggGroups:['Monster','Water 1'],otherFormes:['slowpokegalar']},slowpokegalar:{num:79,species:'Slowpoke-Galar',baseSpecies:'Slowpoke',forme:'Galar',types:['Psychic'],baseStats:{hp:90,atk:65,def:65,spa:40,spd:40,spe:15},abilities:{0:'Gluttony',1:'Own Tempo',H:'Regenerator'},heightm:1.2,weightkg:36,color:'Pink',eggGroups:['Monster','Water 1']},slowbro:{num:80,species:'Slowbro',types:['Water','Psychic'],baseStats:{hp:95,atk:75,def:110,spa:100,spd:80,spe:30},abilities:{0:'Oblivious',1:'Own Tempo',H:'Regenerator'},heightm:1.6,weightkg:78.5,color:'Pink',prevo:'slowpoke',evoLevel:37,eggGroups:['Monster','Water 1'],otherFormes:['slowbromega']},slowbromega:{num:80,species:'Slowbro-Mega',baseSpecies:'Slowbro',forme:'Mega',types:['Water','Psychic'],baseStats:{hp:95,atk:75,def:180,spa:130,spd:80,spe:30},abilities:{0:'Shell Armor'},heightm:2,weightkg:120,color:'Pink',eggGroups:['Monster','Water 1']},magnemite:{num:81,species:'Magnemite',types:['Electric','Steel'],gender:'N',baseStats:{hp:25,atk:35,def:70,spa:95,spd:55,spe:45},abilities:{0:'Magnet Pull',1:'Sturdy',H:'Analytic'},heightm:0.3,weightkg:6,color:'Gray',evos:['magneton'],eggGroups:['Mineral']},magneton:{num:82,species:'Magneton',types:['Electric','Steel'],gender:'N',baseStats:{hp:50,atk:60,def:95,spa:120,spd:70,spe:70},abilities:{0:'Magnet Pull',1:'Sturdy',H:'Analytic'},heightm:1,weightkg:60,color:'Gray',prevo:'magnemite',evoLevel:30,evos:['magnezone'],eggGroups:['Mineral']},farfetchd:{num:83,species:"Farfetch'd",types:['Normal','Flying'],baseStats:{hp:52,atk:90,def:55,spa:58,spd:62,spe:60},abilities:{0:'Keen Eye',1:'Inner Focus',H:'Defiant'},heightm:0.8,weightkg:15,color:'Brown',eggGroups:['Flying','Field'],otherFormes:['farfetchdgalar']},farfetchdgalar:{num:83,species:"Farfetch'd-Galar",baseSpecies:"Farfetch'd",forme:'Galar',types:['Fighting'],baseStats:{hp:52,atk:95,def:55,spa:58,spd:62,spe:55},abilities:{0:'Steadfast',H:'Scrappy'},heightm:0.8,weightkg:15,color:'Brown',evos:['sirfetchd'],eggGroups:['Flying','Field']},doduo:{num:84,species:'Doduo',types:['Normal','Flying'],baseStats:{hp:35,atk:85,def:45,spa:35,spd:35,spe:75},abilities:{0:'Run Away',1:'Early Bird',H:'Tangled Feet'},heightm:1.4,weightkg:39.2,color:'Brown',evos:['dodrio'],eggGroups:['Flying']},dodrio:{num:85,species:'Dodrio',types:['Normal','Flying'],baseStats:{hp:60,atk:110,def:70,spa:60,spd:60,spe:110},abilities:{0:'Run Away',1:'Early Bird',H:'Tangled Feet'},heightm:1.8,weightkg:85.2,color:'Brown',prevo:'doduo',evoLevel:31,eggGroups:['Flying']},seel:{num:86,species:'Seel',types:['Water'],baseStats:{hp:65,atk:45,def:55,spa:45,spd:70,spe:45},abilities:{0:'Thick Fat',1:'Hydration',H:'Ice Body'},heightm:1.1,weightkg:90,color:'White',evos:['dewgong'],eggGroups:['Water 1','Field']},dewgong:{num:87,species:'Dewgong',types:['Water','Ice'],baseStats:{hp:90,atk:70,def:80,spa:70,spd:95,spe:70},abilities:{0:'Thick Fat',1:'Hydration',H:'Ice Body'},heightm:1.7,weightkg:120,color:'White',prevo:'seel',evoLevel:34,eggGroups:['Water 1','Field']},grimer:{num:88,species:'Grimer',types:['Poison'],baseStats:{hp:80,atk:80,def:50,spa:40,spd:50,spe:25},abilities:{0:'Stench',1:'Sticky Hold',H:'Poison Touch'},heightm:0.9,weightkg:30,color:'Purple',evos:['muk'],eggGroups:['Amorphous'],otherFormes:['grimeralola']},grimeralola:{num:88,species:'Grimer-Alola',baseSpecies:'Grimer',forme:'Alola',types:['Poison','Dark'],baseStats:{hp:80,atk:80,def:50,spa:40,spd:50,spe:25},abilities:{0:'Poison Touch',1:'Gluttony',H:'Power of Alchemy'},heightm:0.7,weightkg:42,color:'Green',evos:['mukalola'],eggGroups:['Amorphous']},muk:{num:89,species:'Muk',types:['Poison'],baseStats:{hp:105,atk:105,def:75,spa:65,spd:100,spe:50},abilities:{0:'Stench',1:'Sticky Hold',H:'Poison Touch'},heightm:1.2,weightkg:30,color:'Purple',prevo:'grimer',evoLevel:38,eggGroups:['Amorphous'],otherFormes:['mukalola']},mukalola:{num:89,species:'Muk-Alola',baseSpecies:'Muk',forme:'Alola',types:['Poison','Dark'],baseStats:{hp:105,atk:105,def:75,spa:65,spd:100,spe:50},abilities:{0:'Poison Touch',1:'Gluttony',H:'Power of Alchemy'},heightm:1,weightkg:52,color:'Green',prevo:'grimeralola',evoLevel:38,eggGroups:['Amorphous']},shellder:{num:90,species:'Shellder',types:['Water'],baseStats:{hp:30,atk:65,def:100,spa:45,spd:25,spe:40},abilities:{0:'Shell Armor',1:'Skill Link',H:'Overcoat'},heightm:0.3,weightkg:4,color:'Purple',evos:['cloyster'],eggGroups:['Water 3']},cloyster:{num:91,species:'Cloyster',types:['Water','Ice'],baseStats:{hp:50,atk:95,def:180,spa:85,spd:45,spe:70},abilities:{0:'Shell Armor',1:'Skill Link',H:'Overcoat'},heightm:1.5,weightkg:132.5,color:'Purple',prevo:'shellder',evoType:'useItem',evoItem:'Water Stone',eggGroups:['Water 3']},gastly:{num:92,species:'Gastly',types:['Ghost','Poison'],baseStats:{hp:30,atk:35,def:30,spa:100,spd:35,spe:80},abilities:{0:'Levitate'},heightm:1.3,weightkg:0.1,color:'Purple',evos:['haunter'],eggGroups:['Amorphous']},haunter:{num:93,species:'Haunter',types:['Ghost','Poison'],baseStats:{hp:45,atk:50,def:45,spa:115,spd:55,spe:95},abilities:{0:'Levitate'},heightm:1.6,weightkg:0.1,color:'Purple',prevo:'gastly',evoLevel:25,evos:['gengar'],eggGroups:['Amorphous']},gengar:{num:94,species:'Gengar',types:['Ghost','Poison'],baseStats:{hp:60,atk:65,def:60,spa:130,spd:75,spe:110},abilities:{0:'Cursed Body'},heightm:1.5,weightkg:40.5,color:'Purple',prevo:'haunter',evoType:'trade',eggGroups:['Amorphous'],otherFormes:['gengarmega','gengargmax']},gengarmega:{num:94,species:'Gengar-Mega',baseSpecies:'Gengar',forme:'Mega',types:['Ghost','Poison'],baseStats:{hp:60,atk:65,def:80,spa:170,spd:95,spe:130},abilities:{0:'Shadow Tag'},heightm:1.4,weightkg:40.5,color:'Purple',eggGroups:['Amorphous']},gengargmax:{num:94,species:'Gengar-Gmax',baseSpecies:'Gengar',forme:'Gmax',types:['Ghost','Poison'],baseStats:{hp:60,atk:65,def:60,spa:130,spd:75,spe:110},abilities:{0:'Cursed Body'},// TODO
heightm:0,weightkg:0,color:'Purple',eggGroups:['Amorphous'],inheritsFrom:'gengar'},onix:{num:95,species:'Onix',types:['Rock','Ground'],baseStats:{hp:35,atk:45,def:160,spa:30,spd:45,spe:70},abilities:{0:'Rock Head',1:'Sturdy',H:'Weak Armor'},heightm:8.8,weightkg:210,color:'Gray',evos:['steelix'],eggGroups:['Mineral']},drowzee:{num:96,species:'Drowzee',types:['Psychic'],baseStats:{hp:60,atk:48,def:45,spa:43,spd:90,spe:42},abilities:{0:'Insomnia',1:'Forewarn',H:'Inner Focus'},heightm:1,weightkg:32.4,color:'Yellow',evos:['hypno'],eggGroups:['Human-Like']},hypno:{num:97,species:'Hypno',types:['Psychic'],baseStats:{hp:85,atk:73,def:70,spa:73,spd:115,spe:67},abilities:{0:'Insomnia',1:'Forewarn',H:'Inner Focus'},heightm:1.6,weightkg:75.6,color:'Yellow',prevo:'drowzee',evoLevel:26,eggGroups:['Human-Like']},krabby:{num:98,species:'Krabby',types:['Water'],baseStats:{hp:30,atk:105,def:90,spa:25,spd:25,spe:50},abilities:{0:'Hyper Cutter',1:'Shell Armor',H:'Sheer Force'},heightm:0.4,weightkg:6.5,color:'Red',evos:['kingler'],eggGroups:['Water 3']},kingler:{num:99,species:'Kingler',types:['Water'],baseStats:{hp:55,atk:130,def:115,spa:50,spd:50,spe:75},abilities:{0:'Hyper Cutter',1:'Shell Armor',H:'Sheer Force'},heightm:1.3,weightkg:60,color:'Red',prevo:'krabby',evoLevel:28,eggGroups:['Water 3'],otherFormes:['kinglergmax']},kinglergmax:{num:99,species:'Kingler-Gmax',baseSpecies:'Kingler',forme:'Gmax',types:['Water'],baseStats:{hp:55,atk:130,def:115,spa:50,spd:50,spe:75},abilities:{0:'Hyper Cutter',1:'Shell Armor',H:'Sheer Force'},// TODO
heightm:0,weightkg:0,color:'Red',eggGroups:['Water 3'],inheritsFrom:'kingler'},voltorb:{num:100,species:'Voltorb',types:['Electric'],gender:'N',baseStats:{hp:40,atk:30,def:50,spa:55,spd:55,spe:100},abilities:{0:'Soundproof',1:'Static',H:'Aftermath'},heightm:0.5,weightkg:10.4,color:'Red',evos:['electrode'],eggGroups:['Mineral']},electrode:{num:101,species:'Electrode',types:['Electric'],gender:'N',baseStats:{hp:60,atk:50,def:70,spa:80,spd:80,spe:150},abilities:{0:'Soundproof',1:'Static',H:'Aftermath'},heightm:1.2,weightkg:66.6,color:'Red',prevo:'voltorb',evoLevel:30,eggGroups:['Mineral']},exeggcute:{num:102,species:'Exeggcute',types:['Grass','Psychic'],baseStats:{hp:60,atk:40,def:80,spa:60,spd:45,spe:40},abilities:{0:'Chlorophyll',H:'Harvest'},heightm:0.4,weightkg:2.5,color:'Pink',evos:['exeggutor','exeggutoralola'],eggGroups:['Grass']},exeggutor:{num:103,species:'Exeggutor',types:['Grass','Psychic'],baseStats:{hp:95,atk:95,def:85,spa:125,spd:75,spe:55},abilities:{0:'Chlorophyll',H:'Harvest'},heightm:2,weightkg:120,color:'Yellow',prevo:'exeggcute',evoType:'useItem',evoItem:'Leaf Stone',eggGroups:['Grass'],otherFormes:['exeggutoralola']},exeggutoralola:{num:103,species:'Exeggutor-Alola',baseSpecies:'Exeggutor',forme:'Alola',types:['Grass','Dragon'],baseStats:{hp:95,atk:105,def:85,spa:125,spd:75,spe:45},abilities:{0:'Frisk',H:'Harvest'},heightm:10.9,weightkg:415.6,color:'Yellow',prevo:'exeggcute',evoType:'useItem',evoItem:'Leaf Stone',eggGroups:['Grass']},cubone:{num:104,species:'Cubone',types:['Ground'],baseStats:{hp:50,atk:50,def:95,spa:40,spd:50,spe:35},abilities:{0:'Rock Head',1:'Lightning Rod',H:'Battle Armor'},heightm:0.4,weightkg:6.5,color:'Brown',evos:['marowak','marowakalola'],eggGroups:['Monster']},marowak:{num:105,species:'Marowak',types:['Ground'],baseStats:{hp:60,atk:80,def:110,spa:50,spd:80,spe:45},abilities:{0:'Rock Head',1:'Lightning Rod',H:'Battle Armor'},heightm:1,weightkg:45,color:'Brown',prevo:'cubone',evoLevel:28,eggGroups:['Monster'],otherFormes:['marowakalola','marowakalolatotem']},marowakalola:{num:105,species:'Marowak-Alola',baseSpecies:'Marowak',forme:'Alola',types:['Fire','Ghost'],baseStats:{hp:60,atk:80,def:110,spa:50,spd:80,spe:45},abilities:{0:'Cursed Body',1:'Lightning Rod',H:'Rock Head'},heightm:1,weightkg:34,color:'Purple',prevo:'cubone',evoLevel:28,eggGroups:['Monster']},marowakalolatotem:{num:105,species:'Marowak-Alola-Totem',baseSpecies:'Marowak',forme:'Alola-Totem',types:['Fire','Ghost'],baseStats:{hp:60,atk:80,def:110,spa:50,spd:80,spe:45},abilities:{0:'Rock Head'},heightm:1.7,weightkg:98,color:'Purple',eggGroups:['Monster']},hitmonlee:{num:106,species:'Hitmonlee',types:['Fighting'],gender:'M',baseStats:{hp:50,atk:120,def:53,spa:35,spd:110,spe:87},abilities:{0:'Limber',1:'Reckless',H:'Unburden'},heightm:1.5,weightkg:49.8,color:'Brown',prevo:'tyrogue',evoLevel:20,eggGroups:['Human-Like']},hitmonchan:{num:107,species:'Hitmonchan',types:['Fighting'],gender:'M',baseStats:{hp:50,atk:105,def:79,spa:35,spd:110,spe:76},abilities:{0:'Keen Eye',1:'Iron Fist',H:'Inner Focus'},heightm:1.4,weightkg:50.2,color:'Brown',prevo:'tyrogue',evoLevel:20,eggGroups:['Human-Like']},lickitung:{num:108,species:'Lickitung',types:['Normal'],baseStats:{hp:90,atk:55,def:75,spa:60,spd:75,spe:30},abilities:{0:'Own Tempo',1:'Oblivious',H:'Cloud Nine'},heightm:1.2,weightkg:65.5,color:'Pink',evos:['lickilicky'],eggGroups:['Monster']},koffing:{num:109,species:'Koffing',types:['Poison'],baseStats:{hp:40,atk:65,def:95,spa:60,spd:45,spe:35},abilities:{0:'Levitate',1:'Neutralizing Gas',H:'Stench'},heightm:0.6,weightkg:1,color:'Purple',evos:['weezing','weezinggalar'],eggGroups:['Amorphous']},weezing:{num:110,species:'Weezing',types:['Poison'],baseStats:{hp:65,atk:90,def:120,spa:85,spd:70,spe:60},abilities:{0:'Levitate',1:'Neutralizing Gas',H:'Stench'},heightm:1.2,weightkg:9.5,color:'Purple',prevo:'koffing',evoLevel:35,eggGroups:['Amorphous'],otherFormes:['Weezing-Galar']},weezinggalar:{num:110,species:'Weezing-Galar',baseSpecies:'Weezing',forme:'Galar',types:['Poison','Fairy'],baseStats:{hp:65,atk:90,def:120,spa:85,spd:70,spe:60},abilities:{0:'Levitate',1:'Neutralizing Gas',H:'Misty Surge'},heightm:3,weightkg:16,color:'Gray',prevo:'koffing',evoLevel:35,eggGroups:['Amorphous']},rhyhorn:{num:111,species:'Rhyhorn',types:['Ground','Rock'],baseStats:{hp:80,atk:85,def:95,spa:30,spd:30,spe:25},abilities:{0:'Lightning Rod',1:'Rock Head',H:'Reckless'},heightm:1,weightkg:115,color:'Gray',evos:['rhydon'],eggGroups:['Monster','Field']},rhydon:{num:112,species:'Rhydon',types:['Ground','Rock'],baseStats:{hp:105,atk:130,def:120,spa:45,spd:45,spe:40},abilities:{0:'Lightning Rod',1:'Rock Head',H:'Reckless'},heightm:1.9,weightkg:120,color:'Gray',prevo:'rhyhorn',evoLevel:42,evos:['rhyperior'],eggGroups:['Monster','Field']},chansey:{num:113,species:'Chansey',types:['Normal'],gender:'F',baseStats:{hp:250,atk:5,def:5,spa:35,spd:105,spe:50},abilities:{0:'Natural Cure',1:'Serene Grace',H:'Healer'},heightm:1.1,weightkg:34.6,color:'Pink',prevo:'happiny',evoType:'levelHold',evoItem:'Oval Stone',evoCondition:'during the day',evos:['blissey'],eggGroups:['Fairy'],canHatch:true},tangela:{num:114,species:'Tangela',types:['Grass'],baseStats:{hp:65,atk:55,def:115,spa:100,spd:40,spe:60},abilities:{0:'Chlorophyll',1:'Leaf Guard',H:'Regenerator'},heightm:1,weightkg:35,color:'Blue',evos:['tangrowth'],eggGroups:['Grass']},kangaskhan:{num:115,species:'Kangaskhan',types:['Normal'],gender:'F',baseStats:{hp:105,atk:95,def:80,spa:40,spd:80,spe:90},abilities:{0:'Early Bird',1:'Scrappy',H:'Inner Focus'},heightm:2.2,weightkg:80,color:'Brown',eggGroups:['Monster'],otherFormes:['kangaskhanmega']},kangaskhanmega:{num:115,species:'Kangaskhan-Mega',baseSpecies:'Kangaskhan',forme:'Mega',types:['Normal'],gender:'F',baseStats:{hp:105,atk:125,def:100,spa:60,spd:100,spe:100},abilities:{0:'Parental Bond'},heightm:2.2,weightkg:100,color:'Brown',eggGroups:['Monster']},horsea:{num:116,species:'Horsea',types:['Water'],baseStats:{hp:30,atk:40,def:70,spa:70,spd:25,spe:60},abilities:{0:'Swift Swim',1:'Sniper',H:'Damp'},heightm:0.4,weightkg:8,color:'Blue',evos:['seadra'],eggGroups:['Water 1','Dragon']},seadra:{num:117,species:'Seadra',types:['Water'],baseStats:{hp:55,atk:65,def:95,spa:95,spd:45,spe:85},abilities:{0:'Poison Point',1:'Sniper',H:'Damp'},heightm:1.2,weightkg:25,color:'Blue',prevo:'horsea',evoLevel:32,evos:['kingdra'],eggGroups:['Water 1','Dragon']},goldeen:{num:118,species:'Goldeen',types:['Water'],baseStats:{hp:45,atk:67,def:60,spa:35,spd:50,spe:63},abilities:{0:'Swift Swim',1:'Water Veil',H:'Lightning Rod'},heightm:0.6,weightkg:15,color:'Red',evos:['seaking'],eggGroups:['Water 2']},seaking:{num:119,species:'Seaking',types:['Water'],baseStats:{hp:80,atk:92,def:65,spa:65,spd:80,spe:68},abilities:{0:'Swift Swim',1:'Water Veil',H:'Lightning Rod'},heightm:1.3,weightkg:39,color:'Red',prevo:'goldeen',evoLevel:33,eggGroups:['Water 2']},staryu:{num:120,species:'Staryu',types:['Water'],gender:'N',baseStats:{hp:30,atk:45,def:55,spa:70,spd:55,spe:85},abilities:{0:'Illuminate',1:'Natural Cure',H:'Analytic'},heightm:0.8,weightkg:34.5,color:'Brown',evos:['starmie'],eggGroups:['Water 3']},starmie:{num:121,species:'Starmie',types:['Water','Psychic'],gender:'N',baseStats:{hp:60,atk:75,def:85,spa:100,spd:85,spe:115},abilities:{0:'Illuminate',1:'Natural Cure',H:'Analytic'},heightm:1.1,weightkg:80,color:'Purple',prevo:'staryu',evoType:'useItem',evoItem:'Water Stone',eggGroups:['Water 3']},mrmime:{num:122,species:'Mr. Mime',types:['Psychic','Fairy'],baseStats:{hp:40,atk:45,def:65,spa:100,spd:120,spe:90},abilities:{0:'Soundproof',1:'Filter',H:'Technician'},heightm:1.3,weightkg:54.5,color:'Pink',prevo:'mimejr',evoType:'levelMove',evoMove:'Mimic',eggGroups:['Human-Like'],canHatch:true,otherFormes:['mrmimegalar']},mrmimegalar:{num:122,species:'Mr. Mime-Galar',baseSpecies:'Mr. Mime',forme:'Galar',types:['Ice','Psychic'],baseStats:{hp:50,atk:65,def:65,spa:90,spd:90,spe:100},abilities:{0:'Vital Spirit',1:'Screen Cleaner',H:'Ice Body'},heightm:1.4,weightkg:56.8,color:'White',prevo:'mimejr',evoType:'levelMove',evoMove:'Mimic',evos:['mrrime'],eggGroups:['Human-Like'],canHatch:true},scyther:{num:123,species:'Scyther',types:['Bug','Flying'],baseStats:{hp:70,atk:110,def:80,spa:55,spd:80,spe:105},abilities:{0:'Swarm',1:'Technician',H:'Steadfast'},heightm:1.5,weightkg:56,color:'Green',evos:['scizor'],eggGroups:['Bug']},jynx:{num:124,species:'Jynx',types:['Ice','Psychic'],gender:'F',baseStats:{hp:65,atk:50,def:35,spa:115,spd:95,spe:95},abilities:{0:'Oblivious',1:'Forewarn',H:'Dry Skin'},heightm:1.4,weightkg:40.6,color:'Red',prevo:'smoochum',evoLevel:30,eggGroups:['Human-Like']},electabuzz:{num:125,species:'Electabuzz',types:['Electric'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:65,atk:83,def:57,spa:95,spd:85,spe:105},abilities:{0:'Static',H:'Vital Spirit'},heightm:1.1,weightkg:30,color:'Yellow',prevo:'elekid',evoLevel:30,evos:['electivire'],eggGroups:['Human-Like']},magmar:{num:126,species:'Magmar',types:['Fire'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:65,atk:95,def:57,spa:100,spd:85,spe:93},abilities:{0:'Flame Body',H:'Vital Spirit'},heightm:1.3,weightkg:44.5,color:'Red',prevo:'magby',evoLevel:30,evos:['magmortar'],eggGroups:['Human-Like']},pinsir:{num:127,species:'Pinsir',types:['Bug'],baseStats:{hp:65,atk:125,def:100,spa:55,spd:70,spe:85},abilities:{0:'Hyper Cutter',1:'Mold Breaker',H:'Moxie'},heightm:1.5,weightkg:55,color:'Brown',eggGroups:['Bug'],otherFormes:['pinsirmega']},pinsirmega:{num:127,species:'Pinsir-Mega',baseSpecies:'Pinsir',forme:'Mega',types:['Bug','Flying'],baseStats:{hp:65,atk:155,def:120,spa:65,spd:90,spe:105},abilities:{0:'Aerilate'},heightm:1.7,weightkg:59,color:'Brown',eggGroups:['Bug']},tauros:{num:128,species:'Tauros',types:['Normal'],gender:'M',baseStats:{hp:75,atk:100,def:95,spa:40,spd:70,spe:110},abilities:{0:'Intimidate',1:'Anger Point',H:'Sheer Force'},heightm:1.4,weightkg:88.4,color:'Brown',eggGroups:['Field']},magikarp:{num:129,species:'Magikarp',types:['Water'],baseStats:{hp:20,atk:10,def:55,spa:15,spd:20,spe:80},abilities:{0:'Swift Swim',H:'Rattled'},heightm:0.9,weightkg:10,color:'Red',evos:['gyarados'],eggGroups:['Water 2','Dragon']},gyarados:{num:130,species:'Gyarados',types:['Water','Flying'],baseStats:{hp:95,atk:125,def:79,spa:60,spd:100,spe:81},abilities:{0:'Intimidate',H:'Moxie'},heightm:6.5,weightkg:235,color:'Blue',prevo:'magikarp',evoLevel:20,eggGroups:['Water 2','Dragon'],otherFormes:['gyaradosmega']},gyaradosmega:{num:130,species:'Gyarados-Mega',baseSpecies:'Gyarados',forme:'Mega',types:['Water','Dark'],baseStats:{hp:95,atk:155,def:109,spa:70,spd:130,spe:81},abilities:{0:'Mold Breaker'},heightm:6.5,weightkg:305,color:'Blue',eggGroups:['Water 2','Dragon']},lapras:{num:131,species:'Lapras',types:['Water','Ice'],baseStats:{hp:130,atk:85,def:80,spa:85,spd:95,spe:60},abilities:{0:'Water Absorb',1:'Shell Armor',H:'Hydration'},heightm:2.5,weightkg:220,color:'Blue',eggGroups:['Monster','Water 1'],otherFormes:['laprasgmax']},laprasgmax:{num:131,species:'Lapras-Gmax',baseSpecies:'Lapras',forme:'Gmax',types:['Water','Ice'],baseStats:{hp:130,atk:85,def:80,spa:85,spd:95,spe:60},abilities:{0:'Water Absorb',1:'Shell Armor',H:'Hydration'},// TODO
heightm:0,weightkg:0,color:'Blue',eggGroups:['Monster','Water 1'],inheritsFrom:'lapras'},ditto:{num:132,species:'Ditto',types:['Normal'],gender:'N',baseStats:{hp:48,atk:48,def:48,spa:48,spd:48,spe:48},abilities:{0:'Limber',H:'Imposter'},heightm:0.3,weightkg:4,color:'Purple',eggGroups:['Ditto']},eevee:{num:133,species:'Eevee',types:['Normal'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:55,atk:55,def:50,spa:45,spd:65,spe:55},abilities:{0:'Run Away',1:'Adaptability',H:'Anticipation'},heightm:0.3,weightkg:6.5,color:'Brown',evos:['vaporeon','jolteon','flareon','espeon','umbreon','leafeon','glaceon','sylveon'],eggGroups:['Field'],otherFormes:['eeveestarter','eeveegmax']},eeveestarter:{num:133,species:'Eevee-Starter',baseSpecies:'Eevee',forme:'Starter',types:['Normal'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:65,atk:75,def:70,spa:65,spd:85,spe:75},abilities:{0:'Run Away',1:'Adaptability',H:'Anticipation'},heightm:0.3,weightkg:6.5,color:'Brown',eggGroups:['Undiscovered']},eeveegmax:{num:133,species:'Eevee-Gmax',baseSpecies:'Eevee',forme:'Gmax',types:['Normal'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:55,atk:55,def:50,spa:45,spd:65,spe:55},abilities:{0:'Run Away',1:'Adaptability',H:'Anticipation'},heightm:18,weightkg:0,color:'Brown',eggGroups:['Field'],inheritsFrom:'eevee'},vaporeon:{num:134,species:'Vaporeon',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:130,atk:65,def:60,spa:110,spd:95,spe:65},abilities:{0:'Water Absorb',H:'Hydration'},heightm:1,weightkg:29,color:'Blue',prevo:'eevee',evoType:'useItem',evoItem:'Water Stone',eggGroups:['Field']},jolteon:{num:135,species:'Jolteon',types:['Electric'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:65,atk:65,def:60,spa:110,spd:95,spe:130},abilities:{0:'Volt Absorb',H:'Quick Feet'},heightm:0.8,weightkg:24.5,color:'Yellow',prevo:'eevee',evoType:'useItem',evoItem:'Thunder Stone',eggGroups:['Field']},flareon:{num:136,species:'Flareon',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:65,atk:130,def:60,spa:95,spd:110,spe:65},abilities:{0:'Flash Fire',H:'Guts'},heightm:0.9,weightkg:25,color:'Red',prevo:'eevee',evoType:'useItem',evoItem:'Fire Stone',eggGroups:['Field']},porygon:{num:137,species:'Porygon',types:['Normal'],gender:'N',baseStats:{hp:65,atk:60,def:70,spa:85,spd:75,spe:40},abilities:{0:'Trace',1:'Download',H:'Analytic'},heightm:0.8,weightkg:36.5,color:'Pink',evos:['porygon2'],eggGroups:['Mineral']},omanyte:{num:138,species:'Omanyte',types:['Rock','Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:35,atk:40,def:100,spa:90,spd:55,spe:35},abilities:{0:'Swift Swim',1:'Shell Armor',H:'Weak Armor'},heightm:0.4,weightkg:7.5,color:'Blue',evos:['omastar'],eggGroups:['Water 1','Water 3']},omastar:{num:139,species:'Omastar',types:['Rock','Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:70,atk:60,def:125,spa:115,spd:70,spe:55},abilities:{0:'Swift Swim',1:'Shell Armor',H:'Weak Armor'},heightm:1,weightkg:35,color:'Blue',prevo:'omanyte',evoLevel:40,eggGroups:['Water 1','Water 3']},kabuto:{num:140,species:'Kabuto',types:['Rock','Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:30,atk:80,def:90,spa:55,spd:45,spe:55},abilities:{0:'Swift Swim',1:'Battle Armor',H:'Weak Armor'},heightm:0.5,weightkg:11.5,color:'Brown',evos:['kabutops'],eggGroups:['Water 1','Water 3']},kabutops:{num:141,species:'Kabutops',types:['Rock','Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:60,atk:115,def:105,spa:65,spd:70,spe:80},abilities:{0:'Swift Swim',1:'Battle Armor',H:'Weak Armor'},heightm:1.3,weightkg:40.5,color:'Brown',prevo:'kabuto',evoLevel:40,eggGroups:['Water 1','Water 3']},aerodactyl:{num:142,species:'Aerodactyl',types:['Rock','Flying'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:80,atk:105,def:65,spa:60,spd:75,spe:130},abilities:{0:'Rock Head',1:'Pressure',H:'Unnerve'},heightm:1.8,weightkg:59,color:'Purple',eggGroups:['Flying'],otherFormes:['aerodactylmega']},aerodactylmega:{num:142,species:'Aerodactyl-Mega',baseSpecies:'Aerodactyl',forme:'Mega',types:['Rock','Flying'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:80,atk:135,def:85,spa:70,spd:95,spe:150},abilities:{0:'Tough Claws'},heightm:2.1,weightkg:79,color:'Purple',eggGroups:['Flying']},snorlax:{num:143,species:'Snorlax',types:['Normal'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:160,atk:110,def:65,spa:65,spd:110,spe:30},abilities:{0:'Immunity',1:'Thick Fat',H:'Gluttony'},heightm:2.1,weightkg:460,color:'Black',prevo:'munchlax',evoType:'levelFriendship',eggGroups:['Monster'],canHatch:true,otherFormes:['snorlaxgmax']},snorlaxgmax:{num:143,species:'Snorlax-Gmax',baseSpecies:'Snorlax',forme:'Gmax',types:['Normal'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:160,atk:110,def:65,spa:65,spd:110,spe:30},abilities:{0:'Immunity',1:'Thick Fat',H:'Gluttony'},// TODO
heightm:0,weightkg:0,color:'Black',eggGroups:['Monster'],inheritsFrom:'snorlax'},articuno:{num:144,species:'Articuno',types:['Ice','Flying'],gender:'N',baseStats:{hp:90,atk:85,def:100,spa:95,spd:125,spe:85},abilities:{0:'Pressure',H:'Snow Cloak'},heightm:1.7,weightkg:55.4,color:'Blue',eggGroups:['Undiscovered']},zapdos:{num:145,species:'Zapdos',types:['Electric','Flying'],gender:'N',baseStats:{hp:90,atk:90,def:85,spa:125,spd:90,spe:100},abilities:{0:'Pressure',H:'Static'},heightm:1.6,weightkg:52.6,color:'Yellow',eggGroups:['Undiscovered']},moltres:{num:146,species:'Moltres',types:['Fire','Flying'],gender:'N',baseStats:{hp:90,atk:100,def:90,spa:125,spd:85,spe:90},abilities:{0:'Pressure',H:'Flame Body'},heightm:2,weightkg:60,color:'Yellow',eggGroups:['Undiscovered']},dratini:{num:147,species:'Dratini',types:['Dragon'],baseStats:{hp:41,atk:64,def:45,spa:50,spd:50,spe:50},abilities:{0:'Shed Skin',H:'Marvel Scale'},heightm:1.8,weightkg:3.3,color:'Blue',evos:['dragonair'],eggGroups:['Water 1','Dragon']},dragonair:{num:148,species:'Dragonair',types:['Dragon'],baseStats:{hp:61,atk:84,def:65,spa:70,spd:70,spe:70},abilities:{0:'Shed Skin',H:'Marvel Scale'},heightm:4,weightkg:16.5,color:'Blue',prevo:'dratini',evoLevel:30,evos:['dragonite'],eggGroups:['Water 1','Dragon']},dragonite:{num:149,species:'Dragonite',types:['Dragon','Flying'],baseStats:{hp:91,atk:134,def:95,spa:100,spd:100,spe:80},abilities:{0:'Inner Focus',H:'Multiscale'},heightm:2.2,weightkg:210,color:'Brown',prevo:'dragonair',evoLevel:55,eggGroups:['Water 1','Dragon']},mewtwo:{num:150,species:'Mewtwo',types:['Psychic'],gender:'N',baseStats:{hp:106,atk:110,def:90,spa:154,spd:90,spe:130},abilities:{0:'Pressure',H:'Unnerve'},heightm:2,weightkg:122,color:'Purple',eggGroups:['Undiscovered'],otherFormes:['mewtwomegax','mewtwomegay']},mewtwomegax:{num:150,species:'Mewtwo-Mega-X',baseSpecies:'Mewtwo',forme:'Mega-X',types:['Psychic','Fighting'],gender:'N',baseStats:{hp:106,atk:190,def:100,spa:154,spd:100,spe:130},abilities:{0:'Steadfast'},heightm:2.3,weightkg:127,color:'Purple',eggGroups:['Undiscovered']},mewtwomegay:{num:150,species:'Mewtwo-Mega-Y',baseSpecies:'Mewtwo',forme:'Mega-Y',types:['Psychic'],gender:'N',baseStats:{hp:106,atk:150,def:70,spa:194,spd:120,spe:140},abilities:{0:'Insomnia'},heightm:1.5,weightkg:33,color:'Purple',eggGroups:['Undiscovered']},mew:{num:151,species:'Mew',types:['Psychic'],gender:'N',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Synchronize'},heightm:0.4,weightkg:4,color:'Pink',eggGroups:['Undiscovered']},chikorita:{num:152,species:'Chikorita',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:45,atk:49,def:65,spa:49,spd:65,spe:45},abilities:{0:'Overgrow',H:'Leaf Guard'},heightm:0.9,weightkg:6.4,color:'Green',evos:['bayleef'],eggGroups:['Monster','Grass']},bayleef:{num:153,species:'Bayleef',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:60,atk:62,def:80,spa:63,spd:80,spe:60},abilities:{0:'Overgrow',H:'Leaf Guard'},heightm:1.2,weightkg:15.8,color:'Green',prevo:'chikorita',evoLevel:16,evos:['meganium'],eggGroups:['Monster','Grass']},meganium:{num:154,species:'Meganium',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:80,atk:82,def:100,spa:83,spd:100,spe:80},abilities:{0:'Overgrow',H:'Leaf Guard'},heightm:1.8,weightkg:100.5,color:'Green',prevo:'bayleef',evoLevel:32,eggGroups:['Monster','Grass']},cyndaquil:{num:155,species:'Cyndaquil',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:39,atk:52,def:43,spa:60,spd:50,spe:65},abilities:{0:'Blaze',H:'Flash Fire'},heightm:0.5,weightkg:7.9,color:'Yellow',evos:['quilava'],eggGroups:['Field']},quilava:{num:156,species:'Quilava',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:58,atk:64,def:58,spa:80,spd:65,spe:80},abilities:{0:'Blaze',H:'Flash Fire'},heightm:0.9,weightkg:19,color:'Yellow',prevo:'cyndaquil',evoLevel:14,evos:['typhlosion'],eggGroups:['Field']},typhlosion:{num:157,species:'Typhlosion',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:78,atk:84,def:78,spa:109,spd:85,spe:100},abilities:{0:'Blaze',H:'Flash Fire'},heightm:1.7,weightkg:79.5,color:'Yellow',prevo:'quilava',evoLevel:36,eggGroups:['Field']},totodile:{num:158,species:'Totodile',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:50,atk:65,def:64,spa:44,spd:48,spe:43},abilities:{0:'Torrent',H:'Sheer Force'},heightm:0.6,weightkg:9.5,color:'Blue',evos:['croconaw'],eggGroups:['Monster','Water 1']},croconaw:{num:159,species:'Croconaw',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:65,atk:80,def:80,spa:59,spd:63,spe:58},abilities:{0:'Torrent',H:'Sheer Force'},heightm:1.1,weightkg:25,color:'Blue',prevo:'totodile',evoLevel:18,evos:['feraligatr'],eggGroups:['Monster','Water 1']},feraligatr:{num:160,species:'Feraligatr',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:85,atk:105,def:100,spa:79,spd:83,spe:78},abilities:{0:'Torrent',H:'Sheer Force'},heightm:2.3,weightkg:88.8,color:'Blue',prevo:'croconaw',evoLevel:30,eggGroups:['Monster','Water 1']},sentret:{num:161,species:'Sentret',types:['Normal'],baseStats:{hp:35,atk:46,def:34,spa:35,spd:45,spe:20},abilities:{0:'Run Away',1:'Keen Eye',H:'Frisk'},heightm:0.8,weightkg:6,color:'Brown',evos:['furret'],eggGroups:['Field']},furret:{num:162,species:'Furret',types:['Normal'],baseStats:{hp:85,atk:76,def:64,spa:45,spd:55,spe:90},abilities:{0:'Run Away',1:'Keen Eye',H:'Frisk'},heightm:1.8,weightkg:32.5,color:'Brown',prevo:'sentret',evoLevel:15,eggGroups:['Field']},hoothoot:{num:163,species:'Hoothoot',types:['Normal','Flying'],baseStats:{hp:60,atk:30,def:30,spa:36,spd:56,spe:50},abilities:{0:'Insomnia',1:'Keen Eye',H:'Tinted Lens'},heightm:0.7,weightkg:21.2,color:'Brown',evos:['noctowl'],eggGroups:['Flying']},noctowl:{num:164,species:'Noctowl',types:['Normal','Flying'],baseStats:{hp:100,atk:50,def:50,spa:86,spd:96,spe:70},abilities:{0:'Insomnia',1:'Keen Eye',H:'Tinted Lens'},heightm:1.6,weightkg:40.8,color:'Brown',prevo:'hoothoot',evoLevel:20,eggGroups:['Flying']},ledyba:{num:165,species:'Ledyba',types:['Bug','Flying'],baseStats:{hp:40,atk:20,def:30,spa:40,spd:80,spe:55},abilities:{0:'Swarm',1:'Early Bird',H:'Rattled'},heightm:1,weightkg:10.8,color:'Red',evos:['ledian'],eggGroups:['Bug']},ledian:{num:166,species:'Ledian',types:['Bug','Flying'],baseStats:{hp:55,atk:35,def:50,spa:55,spd:110,spe:85},abilities:{0:'Swarm',1:'Early Bird',H:'Iron Fist'},heightm:1.4,weightkg:35.6,color:'Red',prevo:'ledyba',evoLevel:18,eggGroups:['Bug']},spinarak:{num:167,species:'Spinarak',types:['Bug','Poison'],baseStats:{hp:40,atk:60,def:40,spa:40,spd:40,spe:30},abilities:{0:'Swarm',1:'Insomnia',H:'Sniper'},heightm:0.5,weightkg:8.5,color:'Green',evos:['ariados'],eggGroups:['Bug']},ariados:{num:168,species:'Ariados',types:['Bug','Poison'],baseStats:{hp:70,atk:90,def:70,spa:60,spd:70,spe:40},abilities:{0:'Swarm',1:'Insomnia',H:'Sniper'},heightm:1.1,weightkg:33.5,color:'Red',prevo:'spinarak',evoLevel:22,eggGroups:['Bug']},crobat:{num:169,species:'Crobat',types:['Poison','Flying'],baseStats:{hp:85,atk:90,def:80,spa:70,spd:80,spe:130},abilities:{0:'Inner Focus',H:'Infiltrator'},heightm:1.8,weightkg:75,color:'Purple',prevo:'golbat',evoType:'levelFriendship',eggGroups:['Flying']},chinchou:{num:170,species:'Chinchou',types:['Water','Electric'],baseStats:{hp:75,atk:38,def:38,spa:56,spd:56,spe:67},abilities:{0:'Volt Absorb',1:'Illuminate',H:'Water Absorb'},heightm:0.5,weightkg:12,color:'Blue',evos:['lanturn'],eggGroups:['Water 2']},lanturn:{num:171,species:'Lanturn',types:['Water','Electric'],baseStats:{hp:125,atk:58,def:58,spa:76,spd:76,spe:67},abilities:{0:'Volt Absorb',1:'Illuminate',H:'Water Absorb'},heightm:1.2,weightkg:22.5,color:'Blue',prevo:'chinchou',evoLevel:27,eggGroups:['Water 2']},pichu:{num:172,species:'Pichu',types:['Electric'],baseStats:{hp:20,atk:40,def:15,spa:35,spd:35,spe:60},abilities:{0:'Static',H:'Lightning Rod'},heightm:0.3,weightkg:2,color:'Yellow',evos:['pikachu'],eggGroups:['Undiscovered'],canHatch:true,otherFormes:['pichuspikyeared']},pichuspikyeared:{num:172,species:'Pichu-Spiky-eared',baseSpecies:'Pichu',forme:'Spiky-eared',types:['Electric'],baseStats:{hp:20,atk:40,def:15,spa:35,spd:35,spe:60},abilities:{0:'Static'},heightm:0.3,weightkg:2,color:'Yellow',eggGroups:['Undiscovered']},cleffa:{num:173,species:'Cleffa',types:['Fairy'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:50,atk:25,def:28,spa:45,spd:55,spe:15},abilities:{0:'Cute Charm',1:'Magic Guard',H:'Friend Guard'},heightm:0.3,weightkg:3,color:'Pink',evos:['clefairy'],eggGroups:['Undiscovered'],canHatch:true},igglybuff:{num:174,species:'Igglybuff',types:['Normal','Fairy'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:90,atk:30,def:15,spa:40,spd:20,spe:15},abilities:{0:'Cute Charm',1:'Competitive',H:'Friend Guard'},heightm:0.3,weightkg:1,color:'Pink',evos:['jigglypuff'],eggGroups:['Undiscovered'],canHatch:true},togepi:{num:175,species:'Togepi',types:['Fairy'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:35,atk:20,def:65,spa:40,spd:65,spe:20},abilities:{0:'Hustle',1:'Serene Grace',H:'Super Luck'},heightm:0.3,weightkg:1.5,color:'White',evos:['togetic'],eggGroups:['Undiscovered'],canHatch:true},togetic:{num:176,species:'Togetic',types:['Fairy','Flying'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:55,atk:40,def:85,spa:80,spd:105,spe:40},abilities:{0:'Hustle',1:'Serene Grace',H:'Super Luck'},heightm:0.6,weightkg:3.2,color:'White',prevo:'togepi',evos:['togekiss'],evoType:'levelFriendship',eggGroups:['Flying','Fairy']},natu:{num:177,species:'Natu',types:['Psychic','Flying'],baseStats:{hp:40,atk:50,def:45,spa:70,spd:45,spe:70},abilities:{0:'Synchronize',1:'Early Bird',H:'Magic Bounce'},heightm:0.2,weightkg:2,color:'Green',evos:['xatu'],eggGroups:['Flying']},xatu:{num:178,species:'Xatu',types:['Psychic','Flying'],baseStats:{hp:65,atk:75,def:70,spa:95,spd:70,spe:95},abilities:{0:'Synchronize',1:'Early Bird',H:'Magic Bounce'},heightm:1.5,weightkg:15,color:'Green',prevo:'natu',evoLevel:25,eggGroups:['Flying']},mareep:{num:179,species:'Mareep',types:['Electric'],baseStats:{hp:55,atk:40,def:40,spa:65,spd:45,spe:35},abilities:{0:'Static',H:'Plus'},heightm:0.6,weightkg:7.8,color:'White',evos:['flaaffy'],eggGroups:['Monster','Field']},flaaffy:{num:180,species:'Flaaffy',types:['Electric'],baseStats:{hp:70,atk:55,def:55,spa:80,spd:60,spe:45},abilities:{0:'Static',H:'Plus'},heightm:0.8,weightkg:13.3,color:'Pink',prevo:'mareep',evoLevel:15,evos:['ampharos'],eggGroups:['Monster','Field']},ampharos:{num:181,species:'Ampharos',types:['Electric'],baseStats:{hp:90,atk:75,def:85,spa:115,spd:90,spe:55},abilities:{0:'Static',H:'Plus'},heightm:1.4,weightkg:61.5,color:'Yellow',prevo:'flaaffy',evoLevel:30,eggGroups:['Monster','Field'],otherFormes:['ampharosmega']},ampharosmega:{num:181,species:'Ampharos-Mega',baseSpecies:'Ampharos',forme:'Mega',types:['Electric','Dragon'],baseStats:{hp:90,atk:95,def:105,spa:165,spd:110,spe:45},abilities:{0:'Mold Breaker'},heightm:1.4,weightkg:61.5,color:'Yellow',eggGroups:['Monster','Field']},bellossom:{num:182,species:'Bellossom',types:['Grass'],baseStats:{hp:75,atk:80,def:95,spa:90,spd:100,spe:50},abilities:{0:'Chlorophyll',H:'Healer'},heightm:0.4,weightkg:5.8,color:'Green',prevo:'gloom',evoType:'useItem',evoItem:'Sun Stone',eggGroups:['Grass']},marill:{num:183,species:'Marill',types:['Water','Fairy'],baseStats:{hp:70,atk:20,def:50,spa:20,spd:50,spe:40},abilities:{0:'Thick Fat',1:'Huge Power',H:'Sap Sipper'},heightm:0.4,weightkg:8.5,color:'Blue',prevo:'azurill',evos:['azumarill'],evoType:'levelFriendship',eggGroups:['Water 1','Fairy'],canHatch:true},azumarill:{num:184,species:'Azumarill',types:['Water','Fairy'],baseStats:{hp:100,atk:50,def:80,spa:60,spd:80,spe:50},abilities:{0:'Thick Fat',1:'Huge Power',H:'Sap Sipper'},heightm:0.8,weightkg:28.5,color:'Blue',prevo:'marill',evoLevel:18,eggGroups:['Water 1','Fairy']},sudowoodo:{num:185,species:'Sudowoodo',types:['Rock'],baseStats:{hp:70,atk:100,def:115,spa:30,spd:65,spe:30},abilities:{0:'Sturdy',1:'Rock Head',H:'Rattled'},heightm:1.2,weightkg:38,color:'Brown',prevo:'bonsly',evoType:'levelMove',evoMove:'Mimic',eggGroups:['Mineral'],canHatch:true},politoed:{num:186,species:'Politoed',types:['Water'],baseStats:{hp:90,atk:75,def:75,spa:90,spd:100,spe:70},abilities:{0:'Water Absorb',1:'Damp',H:'Drizzle'},heightm:1.1,weightkg:33.9,color:'Green',prevo:'poliwhirl',evoType:'trade',evoItem:"King's Rock",eggGroups:['Water 1']},hoppip:{num:187,species:'Hoppip',types:['Grass','Flying'],baseStats:{hp:35,atk:35,def:40,spa:35,spd:55,spe:50},abilities:{0:'Chlorophyll',1:'Leaf Guard',H:'Infiltrator'},heightm:0.4,weightkg:0.5,color:'Pink',evos:['skiploom'],eggGroups:['Fairy','Grass']},skiploom:{num:188,species:'Skiploom',types:['Grass','Flying'],baseStats:{hp:55,atk:45,def:50,spa:45,spd:65,spe:80},abilities:{0:'Chlorophyll',1:'Leaf Guard',H:'Infiltrator'},heightm:0.6,weightkg:1,color:'Green',prevo:'hoppip',evoLevel:18,evos:['jumpluff'],eggGroups:['Fairy','Grass']},jumpluff:{num:189,species:'Jumpluff',types:['Grass','Flying'],baseStats:{hp:75,atk:55,def:70,spa:55,spd:95,spe:110},abilities:{0:'Chlorophyll',1:'Leaf Guard',H:'Infiltrator'},heightm:0.8,weightkg:3,color:'Blue',prevo:'skiploom',evoLevel:27,eggGroups:['Fairy','Grass']},aipom:{num:190,species:'Aipom',types:['Normal'],baseStats:{hp:55,atk:70,def:55,spa:40,spd:55,spe:85},abilities:{0:'Run Away',1:'Pickup',H:'Skill Link'},heightm:0.8,weightkg:11.5,color:'Purple',evos:['ambipom'],eggGroups:['Field']},sunkern:{num:191,species:'Sunkern',types:['Grass'],baseStats:{hp:30,atk:30,def:30,spa:30,spd:30,spe:30},abilities:{0:'Chlorophyll',1:'Solar Power',H:'Early Bird'},heightm:0.3,weightkg:1.8,color:'Yellow',evos:['sunflora'],eggGroups:['Grass']},sunflora:{num:192,species:'Sunflora',types:['Grass'],baseStats:{hp:75,atk:75,def:55,spa:105,spd:85,spe:30},abilities:{0:'Chlorophyll',1:'Solar Power',H:'Early Bird'},heightm:0.8,weightkg:8.5,color:'Yellow',prevo:'sunkern',evoType:'useItem',evoItem:'Sun Stone',eggGroups:['Grass']},yanma:{num:193,species:'Yanma',types:['Bug','Flying'],baseStats:{hp:65,atk:65,def:45,spa:75,spd:45,spe:95},abilities:{0:'Speed Boost',1:'Compound Eyes',H:'Frisk'},heightm:1.2,weightkg:38,color:'Red',evos:['yanmega'],eggGroups:['Bug']},wooper:{num:194,species:'Wooper',types:['Water','Ground'],baseStats:{hp:55,atk:45,def:45,spa:25,spd:25,spe:15},abilities:{0:'Damp',1:'Water Absorb',H:'Unaware'},heightm:0.4,weightkg:8.5,color:'Blue',evos:['quagsire'],eggGroups:['Water 1','Field']},quagsire:{num:195,species:'Quagsire',types:['Water','Ground'],baseStats:{hp:95,atk:85,def:85,spa:65,spd:65,spe:35},abilities:{0:'Damp',1:'Water Absorb',H:'Unaware'},heightm:1.4,weightkg:75,color:'Blue',prevo:'wooper',evoLevel:20,eggGroups:['Water 1','Field']},espeon:{num:196,species:'Espeon',types:['Psychic'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:65,atk:65,def:60,spa:130,spd:95,spe:110},abilities:{0:'Synchronize',H:'Magic Bounce'},heightm:0.9,weightkg:26.5,color:'Purple',prevo:'eevee',evoType:'levelFriendship',evoCondition:'during the day',eggGroups:['Field']},umbreon:{num:197,species:'Umbreon',types:['Dark'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:95,atk:65,def:110,spa:60,spd:130,spe:65},abilities:{0:'Synchronize',H:'Inner Focus'},heightm:1,weightkg:27,color:'Black',prevo:'eevee',evoType:'levelFriendship',evoCondition:'at night',eggGroups:['Field']},murkrow:{num:198,species:'Murkrow',types:['Dark','Flying'],baseStats:{hp:60,atk:85,def:42,spa:85,spd:42,spe:91},abilities:{0:'Insomnia',1:'Super Luck',H:'Prankster'},heightm:0.5,weightkg:2.1,color:'Black',evos:['honchkrow'],eggGroups:['Flying']},slowking:{num:199,species:'Slowking',types:['Water','Psychic'],baseStats:{hp:95,atk:75,def:80,spa:100,spd:110,spe:30},abilities:{0:'Oblivious',1:'Own Tempo',H:'Regenerator'},heightm:2,weightkg:79.5,color:'Pink',prevo:'slowpoke',evoType:'trade',evoItem:"King's Rock",eggGroups:['Monster','Water 1']},misdreavus:{num:200,species:'Misdreavus',types:['Ghost'],baseStats:{hp:60,atk:60,def:60,spa:85,spd:85,spe:85},abilities:{0:'Levitate'},heightm:0.7,weightkg:1,color:'Gray',evos:['mismagius'],eggGroups:['Amorphous']},unown:{num:201,species:'Unown',baseForme:'A',types:['Psychic'],gender:'N',baseStats:{hp:48,atk:72,def:48,spa:72,spd:48,spe:48},abilities:{0:'Levitate'},heightm:0.5,weightkg:5,color:'Black',eggGroups:['Undiscovered'],otherForms:['unownb','unownc','unownd','unowne','unownf','unowng','unownh','unowni','unownj','unownk','unownl','unownm','unownn','unowno','unownp','unownq','unownr','unowns','unownt','unownu','unownv','unownw','unownx','unowny','unownz','unownexclamation','unownquestion']},wobbuffet:{num:202,species:'Wobbuffet',types:['Psychic'],baseStats:{hp:190,atk:33,def:58,spa:33,spd:58,spe:33},abilities:{0:'Shadow Tag',H:'Telepathy'},heightm:1.3,weightkg:28.5,color:'Blue',prevo:'wynaut',evoLevel:15,eggGroups:['Amorphous']},girafarig:{num:203,species:'Girafarig',types:['Normal','Psychic'],baseStats:{hp:70,atk:80,def:65,spa:90,spd:65,spe:85},abilities:{0:'Inner Focus',1:'Early Bird',H:'Sap Sipper'},heightm:1.5,weightkg:41.5,color:'Yellow',eggGroups:['Field']},pineco:{num:204,species:'Pineco',types:['Bug'],baseStats:{hp:50,atk:65,def:90,spa:35,spd:35,spe:15},abilities:{0:'Sturdy',H:'Overcoat'},heightm:0.6,weightkg:7.2,color:'Gray',evos:['forretress'],eggGroups:['Bug']},forretress:{num:205,species:'Forretress',types:['Bug','Steel'],baseStats:{hp:75,atk:90,def:140,spa:60,spd:60,spe:40},abilities:{0:'Sturdy',H:'Overcoat'},heightm:1.2,weightkg:125.8,color:'Purple',prevo:'pineco',evoLevel:31,eggGroups:['Bug']},dunsparce:{num:206,species:'Dunsparce',types:['Normal'],baseStats:{hp:100,atk:70,def:70,spa:65,spd:65,spe:45},abilities:{0:'Serene Grace',1:'Run Away',H:'Rattled'},heightm:1.5,weightkg:14,color:'Yellow',eggGroups:['Field']},gligar:{num:207,species:'Gligar',types:['Ground','Flying'],baseStats:{hp:65,atk:75,def:105,spa:35,spd:65,spe:85},abilities:{0:'Hyper Cutter',1:'Sand Veil',H:'Immunity'},heightm:1.1,weightkg:64.8,color:'Purple',evos:['gliscor'],eggGroups:['Bug']},steelix:{num:208,species:'Steelix',types:['Steel','Ground'],baseStats:{hp:75,atk:85,def:200,spa:55,spd:65,spe:30},abilities:{0:'Rock Head',1:'Sturdy',H:'Sheer Force'},heightm:9.2,weightkg:400,color:'Gray',prevo:'onix',evoType:'trade',evoItem:'Metal Coat',eggGroups:['Mineral'],otherFormes:['steelixmega']},steelixmega:{num:208,species:'Steelix-Mega',baseSpecies:'Steelix',forme:'Mega',types:['Steel','Ground'],baseStats:{hp:75,atk:125,def:230,spa:55,spd:95,spe:30},abilities:{0:'Sand Force'},heightm:10.5,weightkg:740,color:'Gray',eggGroups:['Mineral']},snubbull:{num:209,species:'Snubbull',types:['Fairy'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:60,atk:80,def:50,spa:40,spd:40,spe:30},abilities:{0:'Intimidate',1:'Run Away',H:'Rattled'},heightm:0.6,weightkg:7.8,color:'Pink',evos:['granbull'],eggGroups:['Field','Fairy']},granbull:{num:210,species:'Granbull',types:['Fairy'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:90,atk:120,def:75,spa:60,spd:60,spe:45},abilities:{0:'Intimidate',1:'Quick Feet',H:'Rattled'},heightm:1.4,weightkg:48.7,color:'Purple',prevo:'snubbull',evoLevel:23,eggGroups:['Field','Fairy']},qwilfish:{num:211,species:'Qwilfish',types:['Water','Poison'],baseStats:{hp:65,atk:95,def:85,spa:55,spd:55,spe:85},abilities:{0:'Poison Point',1:'Swift Swim',H:'Intimidate'},heightm:0.5,weightkg:3.9,color:'Gray',eggGroups:['Water 2']},scizor:{num:212,species:'Scizor',types:['Bug','Steel'],baseStats:{hp:70,atk:130,def:100,spa:55,spd:80,spe:65},abilities:{0:'Swarm',1:'Technician',H:'Light Metal'},heightm:1.8,weightkg:118,color:'Red',prevo:'scyther',evoType:'trade',evoItem:'Metal Coat',eggGroups:['Bug'],otherFormes:['scizormega']},scizormega:{num:212,species:'Scizor-Mega',baseSpecies:'Scizor',forme:'Mega',types:['Bug','Steel'],baseStats:{hp:70,atk:150,def:140,spa:65,spd:100,spe:75},abilities:{0:'Technician'},heightm:2,weightkg:125,color:'Red',eggGroups:['Bug']},shuckle:{num:213,species:'Shuckle',types:['Bug','Rock'],baseStats:{hp:20,atk:10,def:230,spa:10,spd:230,spe:5},abilities:{0:'Sturdy',1:'Gluttony',H:'Contrary'},heightm:0.6,weightkg:20.5,color:'Yellow',eggGroups:['Bug']},heracross:{num:214,species:'Heracross',types:['Bug','Fighting'],baseStats:{hp:80,atk:125,def:75,spa:40,spd:95,spe:85},abilities:{0:'Swarm',1:'Guts',H:'Moxie'},heightm:1.5,weightkg:54,color:'Blue',eggGroups:['Bug'],otherFormes:['heracrossmega']},heracrossmega:{num:214,species:'Heracross-Mega',baseSpecies:'Heracross',forme:'Mega',types:['Bug','Fighting'],baseStats:{hp:80,atk:185,def:115,spa:40,spd:105,spe:75},abilities:{0:'Skill Link'},heightm:1.7,weightkg:62.5,color:'Blue',eggGroups:['Bug']},sneasel:{num:215,species:'Sneasel',types:['Dark','Ice'],baseStats:{hp:55,atk:95,def:55,spa:35,spd:75,spe:115},abilities:{0:'Inner Focus',1:'Keen Eye',H:'Pickpocket'},heightm:0.9,weightkg:28,color:'Black',evos:['weavile'],eggGroups:['Field']},teddiursa:{num:216,species:'Teddiursa',types:['Normal'],baseStats:{hp:60,atk:80,def:50,spa:50,spd:50,spe:40},abilities:{0:'Pickup',1:'Quick Feet',H:'Honey Gather'},heightm:0.6,weightkg:8.8,color:'Brown',evos:['ursaring'],eggGroups:['Field']},ursaring:{num:217,species:'Ursaring',types:['Normal'],baseStats:{hp:90,atk:130,def:75,spa:75,spd:75,spe:55},abilities:{0:'Guts',1:'Quick Feet',H:'Unnerve'},heightm:1.8,weightkg:125.8,color:'Brown',prevo:'teddiursa',evoLevel:30,eggGroups:['Field']},slugma:{num:218,species:'Slugma',types:['Fire'],baseStats:{hp:40,atk:40,def:40,spa:70,spd:40,spe:20},abilities:{0:'Magma Armor',1:'Flame Body',H:'Weak Armor'},heightm:0.7,weightkg:35,color:'Red',evos:['magcargo'],eggGroups:['Amorphous']},magcargo:{num:219,species:'Magcargo',types:['Fire','Rock'],baseStats:{hp:60,atk:50,def:120,spa:90,spd:80,spe:30},abilities:{0:'Magma Armor',1:'Flame Body',H:'Weak Armor'},heightm:0.8,weightkg:55,color:'Red',prevo:'slugma',evoLevel:38,eggGroups:['Amorphous']},swinub:{num:220,species:'Swinub',types:['Ice','Ground'],baseStats:{hp:50,atk:50,def:40,spa:30,spd:30,spe:50},abilities:{0:'Oblivious',1:'Snow Cloak',H:'Thick Fat'},heightm:0.4,weightkg:6.5,color:'Brown',evos:['piloswine'],eggGroups:['Field']},piloswine:{num:221,species:'Piloswine',types:['Ice','Ground'],baseStats:{hp:100,atk:100,def:80,spa:60,spd:60,spe:50},abilities:{0:'Oblivious',1:'Snow Cloak',H:'Thick Fat'},heightm:1.1,weightkg:55.8,color:'Brown',prevo:'swinub',evoLevel:33,evos:['mamoswine'],eggGroups:['Field']},corsola:{num:222,species:'Corsola',types:['Water','Rock'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:65,atk:55,def:95,spa:65,spd:95,spe:35},abilities:{0:'Hustle',1:'Natural Cure',H:'Regenerator'},heightm:0.6,weightkg:5,color:'Pink',eggGroups:['Water 1','Water 3'],otherFormes:['corsolagalar']},corsolagalar:{num:222,species:'Corsola-Galar',baseSpecies:'Corsola',forme:'Galar',types:['Ghost'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:60,atk:55,def:100,spa:65,spd:100,spe:30},abilities:{0:'Weak Armor',H:'Cursed Body'},heightm:0.6,weightkg:0.5,color:'White',evos:['cursola'],eggGroups:['Water 1','Water 3']},remoraid:{num:223,species:'Remoraid',types:['Water'],baseStats:{hp:35,atk:65,def:35,spa:65,spd:35,spe:65},abilities:{0:'Hustle',1:'Sniper',H:'Moody'},heightm:0.6,weightkg:12,color:'Gray',evos:['octillery'],eggGroups:['Water 1','Water 2']},octillery:{num:224,species:'Octillery',types:['Water'],baseStats:{hp:75,atk:105,def:75,spa:105,spd:75,spe:45},abilities:{0:'Suction Cups',1:'Sniper',H:'Moody'},heightm:0.9,weightkg:28.5,color:'Red',prevo:'remoraid',evoLevel:25,eggGroups:['Water 1','Water 2']},delibird:{num:225,species:'Delibird',types:['Ice','Flying'],baseStats:{hp:45,atk:55,def:45,spa:65,spd:45,spe:75},abilities:{0:'Vital Spirit',1:'Hustle',H:'Insomnia'},heightm:0.9,weightkg:16,color:'Red',eggGroups:['Water 1','Field']},mantine:{num:226,species:'Mantine',types:['Water','Flying'],baseStats:{hp:85,atk:40,def:70,spa:80,spd:140,spe:70},abilities:{0:'Swift Swim',1:'Water Absorb',H:'Water Veil'},heightm:2.1,weightkg:220,color:'Purple',prevo:'mantyke',evoType:'levelExtra',evoCondition:'with a Remoraid in party',eggGroups:['Water 1'],canHatch:true},skarmory:{num:227,species:'Skarmory',types:['Steel','Flying'],baseStats:{hp:65,atk:80,def:140,spa:40,spd:70,spe:70},abilities:{0:'Keen Eye',1:'Sturdy',H:'Weak Armor'},heightm:1.7,weightkg:50.5,color:'Gray',eggGroups:['Flying']},houndour:{num:228,species:'Houndour',types:['Dark','Fire'],baseStats:{hp:45,atk:60,def:30,spa:80,spd:50,spe:65},abilities:{0:'Early Bird',1:'Flash Fire',H:'Unnerve'},heightm:0.6,weightkg:10.8,color:'Black',evos:['houndoom'],eggGroups:['Field']},houndoom:{num:229,species:'Houndoom',types:['Dark','Fire'],baseStats:{hp:75,atk:90,def:50,spa:110,spd:80,spe:95},abilities:{0:'Early Bird',1:'Flash Fire',H:'Unnerve'},heightm:1.4,weightkg:35,color:'Black',prevo:'houndour',evoLevel:24,eggGroups:['Field'],otherFormes:['houndoommega']},houndoommega:{num:229,species:'Houndoom-Mega',baseSpecies:'Houndoom',forme:'Mega',types:['Dark','Fire'],baseStats:{hp:75,atk:90,def:90,spa:140,spd:90,spe:115},abilities:{0:'Solar Power'},heightm:1.9,weightkg:49.5,color:'Black',eggGroups:['Field']},kingdra:{num:230,species:'Kingdra',types:['Water','Dragon'],baseStats:{hp:75,atk:95,def:95,spa:95,spd:95,spe:85},abilities:{0:'Swift Swim',1:'Sniper',H:'Damp'},heightm:1.8,weightkg:152,color:'Blue',prevo:'seadra',evoType:'trade',evoItem:'Dragon Scale',eggGroups:['Water 1','Dragon']},phanpy:{num:231,species:'Phanpy',types:['Ground'],baseStats:{hp:90,atk:60,def:60,spa:40,spd:40,spe:40},abilities:{0:'Pickup',H:'Sand Veil'},heightm:0.5,weightkg:33.5,color:'Blue',evos:['donphan'],eggGroups:['Field']},donphan:{num:232,species:'Donphan',types:['Ground'],baseStats:{hp:90,atk:120,def:120,spa:60,spd:60,spe:50},abilities:{0:'Sturdy',H:'Sand Veil'},heightm:1.1,weightkg:120,color:'Gray',prevo:'phanpy',evoLevel:25,eggGroups:['Field']},porygon2:{num:233,species:'Porygon2',types:['Normal'],gender:'N',baseStats:{hp:85,atk:80,def:90,spa:105,spd:95,spe:60},abilities:{0:'Trace',1:'Download',H:'Analytic'},heightm:0.6,weightkg:32.5,color:'Red',prevo:'porygon',evoType:'trade',evoItem:'Up-Grade',evos:['porygonz'],eggGroups:['Mineral']},stantler:{num:234,species:'Stantler',types:['Normal'],baseStats:{hp:73,atk:95,def:62,spa:85,spd:65,spe:85},abilities:{0:'Intimidate',1:'Frisk',H:'Sap Sipper'},heightm:1.4,weightkg:71.2,color:'Brown',eggGroups:['Field']},smeargle:{num:235,species:'Smeargle',types:['Normal'],baseStats:{hp:55,atk:20,def:35,spa:20,spd:45,spe:75},abilities:{0:'Own Tempo',1:'Technician',H:'Moody'},heightm:1.2,weightkg:58,color:'White',eggGroups:['Field']},tyrogue:{num:236,species:'Tyrogue',types:['Fighting'],gender:'M',baseStats:{hp:35,atk:35,def:35,spa:35,spd:35,spe:35},abilities:{0:'Guts',1:'Steadfast',H:'Vital Spirit'},heightm:0.7,weightkg:21,color:'Purple',evos:['hitmonlee','hitmonchan','hitmontop'],eggGroups:['Undiscovered'],canHatch:true},hitmontop:{num:237,species:'Hitmontop',types:['Fighting'],gender:'M',baseStats:{hp:50,atk:95,def:95,spa:35,spd:110,spe:70},abilities:{0:'Intimidate',1:'Technician',H:'Steadfast'},heightm:1.4,weightkg:48,color:'Brown',prevo:'tyrogue',evoLevel:20,eggGroups:['Human-Like']},smoochum:{num:238,species:'Smoochum',types:['Ice','Psychic'],gender:'F',baseStats:{hp:45,atk:30,def:15,spa:85,spd:65,spe:65},abilities:{0:'Oblivious',1:'Forewarn',H:'Hydration'},heightm:0.4,weightkg:6,color:'Pink',evos:['jynx'],eggGroups:['Undiscovered'],canHatch:true},elekid:{num:239,species:'Elekid',types:['Electric'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:45,atk:63,def:37,spa:65,spd:55,spe:95},abilities:{0:'Static',H:'Vital Spirit'},heightm:0.6,weightkg:23.5,color:'Yellow',evos:['electabuzz'],eggGroups:['Undiscovered'],canHatch:true},magby:{num:240,species:'Magby',types:['Fire'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:45,atk:75,def:37,spa:70,spd:55,spe:83},abilities:{0:'Flame Body',H:'Vital Spirit'},heightm:0.7,weightkg:21.4,color:'Red',evos:['magmar'],eggGroups:['Undiscovered'],canHatch:true},miltank:{num:241,species:'Miltank',types:['Normal'],gender:'F',baseStats:{hp:95,atk:80,def:105,spa:40,spd:70,spe:100},abilities:{0:'Thick Fat',1:'Scrappy',H:'Sap Sipper'},heightm:1.2,weightkg:75.5,color:'Pink',eggGroups:['Field']},blissey:{num:242,species:'Blissey',types:['Normal'],gender:'F',baseStats:{hp:255,atk:10,def:10,spa:75,spd:135,spe:55},abilities:{0:'Natural Cure',1:'Serene Grace',H:'Healer'},heightm:1.5,weightkg:46.8,color:'Pink',prevo:'chansey',evoType:'levelFriendship',eggGroups:['Fairy']},raikou:{num:243,species:'Raikou',types:['Electric'],gender:'N',baseStats:{hp:90,atk:85,def:75,spa:115,spd:100,spe:115},abilities:{0:'Pressure',H:'Inner Focus'},heightm:1.9,weightkg:178,color:'Yellow',eggGroups:['Undiscovered']},entei:{num:244,species:'Entei',types:['Fire'],gender:'N',baseStats:{hp:115,atk:115,def:85,spa:90,spd:75,spe:100},abilities:{0:'Pressure',H:'Inner Focus'},heightm:2.1,weightkg:198,color:'Brown',eggGroups:['Undiscovered']},suicune:{num:245,species:'Suicune',types:['Water'],gender:'N',baseStats:{hp:100,atk:75,def:115,spa:90,spd:115,spe:85},abilities:{0:'Pressure',H:'Inner Focus'},heightm:2,weightkg:187,color:'Blue',eggGroups:['Undiscovered']},larvitar:{num:246,species:'Larvitar',types:['Rock','Ground'],baseStats:{hp:50,atk:64,def:50,spa:45,spd:50,spe:41},abilities:{0:'Guts',H:'Sand Veil'},heightm:0.6,weightkg:72,color:'Green',evos:['pupitar'],eggGroups:['Monster']},pupitar:{num:247,species:'Pupitar',types:['Rock','Ground'],baseStats:{hp:70,atk:84,def:70,spa:65,spd:70,spe:51},abilities:{0:'Shed Skin'},heightm:1.2,weightkg:152,color:'Gray',prevo:'larvitar',evoLevel:30,evos:['tyranitar'],eggGroups:['Monster']},tyranitar:{num:248,species:'Tyranitar',types:['Rock','Dark'],baseStats:{hp:100,atk:134,def:110,spa:95,spd:100,spe:61},abilities:{0:'Sand Stream',H:'Unnerve'},heightm:2,weightkg:202,color:'Green',prevo:'pupitar',evoLevel:55,eggGroups:['Monster'],otherFormes:['tyranitarmega']},tyranitarmega:{num:248,species:'Tyranitar-Mega',baseSpecies:'Tyranitar',forme:'Mega',types:['Rock','Dark'],baseStats:{hp:100,atk:164,def:150,spa:95,spd:120,spe:71},abilities:{0:'Sand Stream'},heightm:2.5,weightkg:255,color:'Green',eggGroups:['Monster']},lugia:{num:249,species:'Lugia',types:['Psychic','Flying'],gender:'N',baseStats:{hp:106,atk:90,def:130,spa:90,spd:154,spe:110},abilities:{0:'Pressure',H:'Multiscale'},heightm:5.2,weightkg:216,color:'White',eggGroups:['Undiscovered']},hooh:{num:250,species:'Ho-Oh',types:['Fire','Flying'],gender:'N',baseStats:{hp:106,atk:130,def:90,spa:110,spd:154,spe:90},abilities:{0:'Pressure',H:'Regenerator'},heightm:3.8,weightkg:199,color:'Red',eggGroups:['Undiscovered']},celebi:{num:251,species:'Celebi',types:['Psychic','Grass'],gender:'N',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Natural Cure'},heightm:0.6,weightkg:5,color:'Green',eggGroups:['Undiscovered']},treecko:{num:252,species:'Treecko',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:40,atk:45,def:35,spa:65,spd:55,spe:70},abilities:{0:'Overgrow',H:'Unburden'},heightm:0.5,weightkg:5,color:'Green',evos:['grovyle'],eggGroups:['Monster','Dragon']},grovyle:{num:253,species:'Grovyle',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:50,atk:65,def:45,spa:85,spd:65,spe:95},abilities:{0:'Overgrow',H:'Unburden'},heightm:0.9,weightkg:21.6,color:'Green',prevo:'treecko',evoLevel:16,evos:['sceptile'],eggGroups:['Monster','Dragon']},sceptile:{num:254,species:'Sceptile',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:70,atk:85,def:65,spa:105,spd:85,spe:120},abilities:{0:'Overgrow',H:'Unburden'},heightm:1.7,weightkg:52.2,color:'Green',prevo:'grovyle',evoLevel:36,eggGroups:['Monster','Dragon'],otherFormes:['sceptilemega']},sceptilemega:{num:254,species:'Sceptile-Mega',baseSpecies:'Sceptile',forme:'Mega',types:['Grass','Dragon'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:70,atk:110,def:75,spa:145,spd:85,spe:145},abilities:{0:'Lightning Rod'},heightm:1.9,weightkg:55.2,color:'Green',eggGroups:['Monster','Dragon']},torchic:{num:255,species:'Torchic',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:45,atk:60,def:40,spa:70,spd:50,spe:45},abilities:{0:'Blaze',H:'Speed Boost'},heightm:0.4,weightkg:2.5,color:'Red',evos:['combusken'],eggGroups:['Field']},combusken:{num:256,species:'Combusken',types:['Fire','Fighting'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:60,atk:85,def:60,spa:85,spd:60,spe:55},abilities:{0:'Blaze',H:'Speed Boost'},heightm:0.9,weightkg:19.5,color:'Red',prevo:'torchic',evoLevel:16,evos:['blaziken'],eggGroups:['Field']},blaziken:{num:257,species:'Blaziken',types:['Fire','Fighting'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:80,atk:120,def:70,spa:110,spd:70,spe:80},abilities:{0:'Blaze',H:'Speed Boost'},heightm:1.9,weightkg:52,color:'Red',prevo:'combusken',evoLevel:36,eggGroups:['Field'],otherFormes:['blazikenmega']},blazikenmega:{num:257,species:'Blaziken-Mega',baseSpecies:'Blaziken',forme:'Mega',types:['Fire','Fighting'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:80,atk:160,def:80,spa:130,spd:80,spe:100},abilities:{0:'Speed Boost'},heightm:1.9,weightkg:52,color:'Red',eggGroups:['Field']},mudkip:{num:258,species:'Mudkip',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:50,atk:70,def:50,spa:50,spd:50,spe:40},abilities:{0:'Torrent',H:'Damp'},heightm:0.4,weightkg:7.6,color:'Blue',evos:['marshtomp'],eggGroups:['Monster','Water 1']},marshtomp:{num:259,species:'Marshtomp',types:['Water','Ground'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:70,atk:85,def:70,spa:60,spd:70,spe:50},abilities:{0:'Torrent',H:'Damp'},heightm:0.7,weightkg:28,color:'Blue',prevo:'mudkip',evoLevel:16,evos:['swampert'],eggGroups:['Monster','Water 1']},swampert:{num:260,species:'Swampert',types:['Water','Ground'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:100,atk:110,def:90,spa:85,spd:90,spe:60},abilities:{0:'Torrent',H:'Damp'},heightm:1.5,weightkg:81.9,color:'Blue',prevo:'marshtomp',evoLevel:36,eggGroups:['Monster','Water 1'],otherFormes:['swampertmega']},swampertmega:{num:260,species:'Swampert-Mega',baseSpecies:'Swampert',forme:'Mega',types:['Water','Ground'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:100,atk:150,def:110,spa:95,spd:110,spe:70},abilities:{0:'Swift Swim'},heightm:1.9,weightkg:102,color:'Blue',eggGroups:['Monster','Water 1']},poochyena:{num:261,species:'Poochyena',types:['Dark'],baseStats:{hp:35,atk:55,def:35,spa:30,spd:30,spe:35},abilities:{0:'Run Away',1:'Quick Feet',H:'Rattled'},heightm:0.5,weightkg:13.6,color:'Gray',evos:['mightyena'],eggGroups:['Field']},mightyena:{num:262,species:'Mightyena',types:['Dark'],baseStats:{hp:70,atk:90,def:70,spa:60,spd:60,spe:70},abilities:{0:'Intimidate',1:'Quick Feet',H:'Moxie'},heightm:1,weightkg:37,color:'Gray',prevo:'poochyena',evoLevel:18,eggGroups:['Field']},zigzagoon:{num:263,species:'Zigzagoon',types:['Normal'],baseStats:{hp:38,atk:30,def:41,spa:30,spd:41,spe:60},abilities:{0:'Pickup',1:'Gluttony',H:'Quick Feet'},heightm:0.4,weightkg:17.5,color:'Brown',evos:['linoone'],eggGroups:['Field'],otherFormes:['zigzagoongalar']},zigzagoongalar:{num:263,species:'Zigzagoon-Galar',baseSpecies:'Zigzagoon',forme:'Galar',types:['Dark','Normal'],baseStats:{hp:38,atk:30,def:41,spa:30,spd:41,spe:60},abilities:{0:'Pickup',1:'Gluttony',H:'Quick Feet'},heightm:0.4,weightkg:17.5,color:'White',evos:['linoonegalar'],eggGroups:['Field']},linoone:{num:264,species:'Linoone',types:['Normal'],baseStats:{hp:78,atk:70,def:61,spa:50,spd:61,spe:100},abilities:{0:'Pickup',1:'Gluttony',H:'Quick Feet'},heightm:0.5,weightkg:32.5,color:'White',prevo:'zigzagoon',evoLevel:20,eggGroups:['Field'],otherFormes:['linoonegalar']},linoonegalar:{num:264,species:'Linoone-Galar',baseSpecies:'Linoone',forme:'Galar',types:['Dark','Normal'],baseStats:{hp:78,atk:70,def:61,spa:50,spd:61,spe:100},abilities:{0:'Pickup',1:'Gluttony',H:'Quick Feet'},heightm:0.5,weightkg:32.5,color:'White',prevo:'zigzagoongalar',evoLevel:20,evos:['obstagoon'],eggGroups:['Field']},wurmple:{num:265,species:'Wurmple',types:['Bug'],baseStats:{hp:45,atk:45,def:35,spa:20,spd:30,spe:20},abilities:{0:'Shield Dust',H:'Run Away'},heightm:0.3,weightkg:3.6,color:'Red',evos:['silcoon','cascoon'],eggGroups:['Bug']},silcoon:{num:266,species:'Silcoon',types:['Bug'],baseStats:{hp:50,atk:35,def:55,spa:25,spd:25,spe:15},abilities:{0:'Shed Skin'},heightm:0.6,weightkg:10,color:'White',prevo:'wurmple',evoLevel:7,evos:['beautifly'],eggGroups:['Bug']},beautifly:{num:267,species:'Beautifly',types:['Bug','Flying'],baseStats:{hp:60,atk:70,def:50,spa:100,spd:50,spe:65},abilities:{0:'Swarm',H:'Rivalry'},heightm:1,weightkg:28.4,color:'Yellow',prevo:'silcoon',evoLevel:10,eggGroups:['Bug']},cascoon:{num:268,species:'Cascoon',types:['Bug'],baseStats:{hp:50,atk:35,def:55,spa:25,spd:25,spe:15},abilities:{0:'Shed Skin'},heightm:0.7,weightkg:11.5,color:'Purple',prevo:'wurmple',evoLevel:7,evos:['dustox'],eggGroups:['Bug']},dustox:{num:269,species:'Dustox',types:['Bug','Poison'],baseStats:{hp:60,atk:50,def:70,spa:50,spd:90,spe:65},abilities:{0:'Shield Dust',H:'Compound Eyes'},heightm:1.2,weightkg:31.6,color:'Green',prevo:'cascoon',evoLevel:10,eggGroups:['Bug']},lotad:{num:270,species:'Lotad',types:['Water','Grass'],baseStats:{hp:40,atk:30,def:30,spa:40,spd:50,spe:30},abilities:{0:'Swift Swim',1:'Rain Dish',H:'Own Tempo'},heightm:0.5,weightkg:2.6,color:'Green',evos:['lombre'],eggGroups:['Water 1','Grass']},lombre:{num:271,species:'Lombre',types:['Water','Grass'],baseStats:{hp:60,atk:50,def:50,spa:60,spd:70,spe:50},abilities:{0:'Swift Swim',1:'Rain Dish',H:'Own Tempo'},heightm:1.2,weightkg:32.5,color:'Green',prevo:'lotad',evoLevel:14,evos:['ludicolo'],eggGroups:['Water 1','Grass']},ludicolo:{num:272,species:'Ludicolo',types:['Water','Grass'],baseStats:{hp:80,atk:70,def:70,spa:90,spd:100,spe:70},abilities:{0:'Swift Swim',1:'Rain Dish',H:'Own Tempo'},heightm:1.5,weightkg:55,color:'Green',prevo:'lombre',evoType:'useItem',evoItem:'Water Stone',eggGroups:['Water 1','Grass']},seedot:{num:273,species:'Seedot',types:['Grass'],baseStats:{hp:40,atk:40,def:50,spa:30,spd:30,spe:30},abilities:{0:'Chlorophyll',1:'Early Bird',H:'Pickpocket'},heightm:0.5,weightkg:4,color:'Brown',evos:['nuzleaf'],eggGroups:['Field','Grass']},nuzleaf:{num:274,species:'Nuzleaf',types:['Grass','Dark'],baseStats:{hp:70,atk:70,def:40,spa:60,spd:40,spe:60},abilities:{0:'Chlorophyll',1:'Early Bird',H:'Pickpocket'},heightm:1,weightkg:28,color:'Brown',prevo:'seedot',evoLevel:14,evos:['shiftry'],eggGroups:['Field','Grass']},shiftry:{num:275,species:'Shiftry',types:['Grass','Dark'],baseStats:{hp:90,atk:100,def:60,spa:90,spd:60,spe:80},abilities:{0:'Chlorophyll',1:'Early Bird',H:'Pickpocket'},heightm:1.3,weightkg:59.6,color:'Brown',prevo:'nuzleaf',evoType:'useItem',evoItem:'Leaf Stone',eggGroups:['Field','Grass']},taillow:{num:276,species:'Taillow',types:['Normal','Flying'],baseStats:{hp:40,atk:55,def:30,spa:30,spd:30,spe:85},abilities:{0:'Guts',H:'Scrappy'},heightm:0.3,weightkg:2.3,color:'Blue',evos:['swellow'],eggGroups:['Flying']},swellow:{num:277,species:'Swellow',types:['Normal','Flying'],baseStats:{hp:60,atk:85,def:60,spa:75,spd:50,spe:125},abilities:{0:'Guts',H:'Scrappy'},heightm:0.7,weightkg:19.8,color:'Blue',prevo:'taillow',evoLevel:22,eggGroups:['Flying']},wingull:{num:278,species:'Wingull',types:['Water','Flying'],baseStats:{hp:40,atk:30,def:30,spa:55,spd:30,spe:85},abilities:{0:'Keen Eye',1:'Hydration',H:'Rain Dish'},heightm:0.6,weightkg:9.5,color:'White',evos:['pelipper'],eggGroups:['Water 1','Flying']},pelipper:{num:279,species:'Pelipper',types:['Water','Flying'],baseStats:{hp:60,atk:50,def:100,spa:95,spd:70,spe:65},abilities:{0:'Keen Eye',1:'Drizzle',H:'Rain Dish'},heightm:1.2,weightkg:28,color:'Yellow',prevo:'wingull',evoLevel:25,eggGroups:['Water 1','Flying']},ralts:{num:280,species:'Ralts',types:['Psychic','Fairy'],baseStats:{hp:28,atk:25,def:25,spa:45,spd:35,spe:40},abilities:{0:'Synchronize',1:'Trace',H:'Telepathy'},heightm:0.4,weightkg:6.6,color:'White',evos:['kirlia'],eggGroups:['Human-Like','Amorphous']},kirlia:{num:281,species:'Kirlia',types:['Psychic','Fairy'],baseStats:{hp:38,atk:35,def:35,spa:65,spd:55,spe:50},abilities:{0:'Synchronize',1:'Trace',H:'Telepathy'},heightm:0.8,weightkg:20.2,color:'White',prevo:'ralts',evoLevel:20,evos:['gardevoir','gallade'],eggGroups:['Human-Like','Amorphous']},gardevoir:{num:282,species:'Gardevoir',types:['Psychic','Fairy'],baseStats:{hp:68,atk:65,def:65,spa:125,spd:115,spe:80},abilities:{0:'Synchronize',1:'Trace',H:'Telepathy'},heightm:1.6,weightkg:48.4,color:'White',prevo:'kirlia',evoLevel:30,eggGroups:['Human-Like','Amorphous'],otherFormes:['gardevoirmega']},gardevoirmega:{num:282,species:'Gardevoir-Mega',baseSpecies:'Gardevoir',forme:'Mega',types:['Psychic','Fairy'],baseStats:{hp:68,atk:85,def:65,spa:165,spd:135,spe:100},abilities:{0:'Pixilate'},heightm:1.6,weightkg:48.4,color:'White',eggGroups:['Amorphous']},surskit:{num:283,species:'Surskit',types:['Bug','Water'],baseStats:{hp:40,atk:30,def:32,spa:50,spd:52,spe:65},abilities:{0:'Swift Swim',H:'Rain Dish'},heightm:0.5,weightkg:1.7,color:'Blue',evos:['masquerain'],eggGroups:['Water 1','Bug']},masquerain:{num:284,species:'Masquerain',types:['Bug','Flying'],baseStats:{hp:70,atk:60,def:62,spa:100,spd:82,spe:80},abilities:{0:'Intimidate',H:'Unnerve'},heightm:0.8,weightkg:3.6,color:'Blue',prevo:'surskit',evoLevel:22,eggGroups:['Water 1','Bug']},shroomish:{num:285,species:'Shroomish',types:['Grass'],baseStats:{hp:60,atk:40,def:60,spa:40,spd:60,spe:35},abilities:{0:'Effect Spore',1:'Poison Heal',H:'Quick Feet'},heightm:0.4,weightkg:4.5,color:'Brown',evos:['breloom'],eggGroups:['Fairy','Grass']},breloom:{num:286,species:'Breloom',types:['Grass','Fighting'],baseStats:{hp:60,atk:130,def:80,spa:60,spd:60,spe:70},abilities:{0:'Effect Spore',1:'Poison Heal',H:'Technician'},heightm:1.2,weightkg:39.2,color:'Green',prevo:'shroomish',evoLevel:23,eggGroups:['Fairy','Grass']},slakoth:{num:287,species:'Slakoth',types:['Normal'],baseStats:{hp:60,atk:60,def:60,spa:35,spd:35,spe:30},abilities:{0:'Truant'},heightm:0.8,weightkg:24,color:'Brown',evos:['vigoroth'],eggGroups:['Field']},vigoroth:{num:288,species:'Vigoroth',types:['Normal'],baseStats:{hp:80,atk:80,def:80,spa:55,spd:55,spe:90},abilities:{0:'Vital Spirit'},heightm:1.4,weightkg:46.5,color:'White',prevo:'slakoth',evoLevel:18,evos:['slaking'],eggGroups:['Field']},slaking:{num:289,species:'Slaking',types:['Normal'],baseStats:{hp:150,atk:160,def:100,spa:95,spd:65,spe:100},abilities:{0:'Truant'},heightm:2,weightkg:130.5,color:'Brown',prevo:'vigoroth',evoLevel:36,eggGroups:['Field']},nincada:{num:290,species:'Nincada',types:['Bug','Ground'],baseStats:{hp:31,atk:45,def:90,spa:30,spd:30,spe:40},abilities:{0:'Compound Eyes',H:'Run Away'},heightm:0.5,weightkg:5.5,color:'Gray',evos:['ninjask','shedinja'],eggGroups:['Bug']},ninjask:{num:291,species:'Ninjask',types:['Bug','Flying'],baseStats:{hp:61,atk:90,def:45,spa:50,spd:50,spe:160},abilities:{0:'Speed Boost',H:'Infiltrator'},heightm:0.8,weightkg:12,color:'Yellow',prevo:'nincada',evoLevel:20,eggGroups:['Bug']},shedinja:{num:292,species:'Shedinja',types:['Bug','Ghost'],gender:'N',baseStats:{hp:1,atk:90,def:45,spa:30,spd:30,spe:40},maxHP:1,abilities:{0:'Wonder Guard'},heightm:0.8,weightkg:1.2,color:'Brown',prevo:'nincada',evoLevel:20,eggGroups:['Mineral']},whismur:{num:293,species:'Whismur',types:['Normal'],baseStats:{hp:64,atk:51,def:23,spa:51,spd:23,spe:28},abilities:{0:'Soundproof',H:'Rattled'},heightm:0.6,weightkg:16.3,color:'Pink',evos:['loudred'],eggGroups:['Monster','Field']},loudred:{num:294,species:'Loudred',types:['Normal'],baseStats:{hp:84,atk:71,def:43,spa:71,spd:43,spe:48},abilities:{0:'Soundproof',H:'Scrappy'},heightm:1,weightkg:40.5,color:'Blue',prevo:'whismur',evoLevel:20,evos:['exploud'],eggGroups:['Monster','Field']},exploud:{num:295,species:'Exploud',types:['Normal'],baseStats:{hp:104,atk:91,def:63,spa:91,spd:73,spe:68},abilities:{0:'Soundproof',H:'Scrappy'},heightm:1.5,weightkg:84,color:'Blue',prevo:'loudred',evoLevel:40,eggGroups:['Monster','Field']},makuhita:{num:296,species:'Makuhita',types:['Fighting'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:72,atk:60,def:30,spa:20,spd:30,spe:25},abilities:{0:'Thick Fat',1:'Guts',H:'Sheer Force'},heightm:1,weightkg:86.4,color:'Yellow',evos:['hariyama'],eggGroups:['Human-Like']},hariyama:{num:297,species:'Hariyama',types:['Fighting'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:144,atk:120,def:60,spa:40,spd:60,spe:50},abilities:{0:'Thick Fat',1:'Guts',H:'Sheer Force'},heightm:2.3,weightkg:253.8,color:'Brown',prevo:'makuhita',evoLevel:24,eggGroups:['Human-Like']},azurill:{num:298,species:'Azurill',types:['Normal','Fairy'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:50,atk:20,def:40,spa:20,spd:40,spe:20},abilities:{0:'Thick Fat',1:'Huge Power',H:'Sap Sipper'},heightm:0.2,weightkg:2,color:'Blue',evos:['marill'],eggGroups:['Undiscovered'],canHatch:true},nosepass:{num:299,species:'Nosepass',types:['Rock'],baseStats:{hp:30,atk:45,def:135,spa:45,spd:90,spe:30},abilities:{0:'Sturdy',1:'Magnet Pull',H:'Sand Force'},heightm:1,weightkg:97,color:'Gray',evos:['probopass'],eggGroups:['Mineral']},skitty:{num:300,species:'Skitty',types:['Normal'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:50,atk:45,def:45,spa:35,spd:35,spe:50},abilities:{0:'Cute Charm',1:'Normalize',H:'Wonder Skin'},heightm:0.6,weightkg:11,color:'Pink',evos:['delcatty'],eggGroups:['Field','Fairy']},delcatty:{num:301,species:'Delcatty',types:['Normal'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:70,atk:65,def:65,spa:55,spd:55,spe:90},abilities:{0:'Cute Charm',1:'Normalize',H:'Wonder Skin'},heightm:1.1,weightkg:32.6,color:'Purple',prevo:'skitty',evoType:'useItem',evoItem:'Moon Stone',eggGroups:['Field','Fairy']},sableye:{num:302,species:'Sableye',types:['Dark','Ghost'],baseStats:{hp:50,atk:75,def:75,spa:65,spd:65,spe:50},abilities:{0:'Keen Eye',1:'Stall',H:'Prankster'},heightm:0.5,weightkg:11,color:'Purple',eggGroups:['Human-Like'],otherFormes:['sableyemega']},sableyemega:{num:302,species:'Sableye-Mega',baseSpecies:'Sableye',forme:'Mega',types:['Dark','Ghost'],baseStats:{hp:50,atk:85,def:125,spa:85,spd:115,spe:20},abilities:{0:'Magic Bounce'},heightm:0.5,weightkg:161,color:'Purple',eggGroups:['Human-Like']},mawile:{num:303,species:'Mawile',types:['Steel','Fairy'],baseStats:{hp:50,atk:85,def:85,spa:55,spd:55,spe:50},abilities:{0:'Hyper Cutter',1:'Intimidate',H:'Sheer Force'},heightm:0.6,weightkg:11.5,color:'Black',eggGroups:['Field','Fairy'],otherFormes:['mawilemega']},mawilemega:{num:303,species:'Mawile-Mega',baseSpecies:'Mawile',forme:'Mega',types:['Steel','Fairy'],baseStats:{hp:50,atk:105,def:125,spa:55,spd:95,spe:50},abilities:{0:'Huge Power'},heightm:1,weightkg:23.5,color:'Black',eggGroups:['Field','Fairy']},aron:{num:304,species:'Aron',types:['Steel','Rock'],baseStats:{hp:50,atk:70,def:100,spa:40,spd:40,spe:30},abilities:{0:'Sturdy',1:'Rock Head',H:'Heavy Metal'},heightm:0.4,weightkg:60,color:'Gray',evos:['lairon'],eggGroups:['Monster']},lairon:{num:305,species:'Lairon',types:['Steel','Rock'],baseStats:{hp:60,atk:90,def:140,spa:50,spd:50,spe:40},abilities:{0:'Sturdy',1:'Rock Head',H:'Heavy Metal'},heightm:0.9,weightkg:120,color:'Gray',prevo:'aron',evoLevel:32,evos:['aggron'],eggGroups:['Monster']},aggron:{num:306,species:'Aggron',types:['Steel','Rock'],baseStats:{hp:70,atk:110,def:180,spa:60,spd:60,spe:50},abilities:{0:'Sturdy',1:'Rock Head',H:'Heavy Metal'},heightm:2.1,weightkg:360,color:'Gray',prevo:'lairon',evoLevel:42,eggGroups:['Monster'],otherFormes:['aggronmega']},aggronmega:{num:306,species:'Aggron-Mega',baseSpecies:'Aggron',forme:'Mega',types:['Steel'],baseStats:{hp:70,atk:140,def:230,spa:60,spd:80,spe:50},abilities:{0:'Filter'},heightm:2.2,weightkg:395,color:'Gray',eggGroups:['Monster']},meditite:{num:307,species:'Meditite',types:['Fighting','Psychic'],baseStats:{hp:30,atk:40,def:55,spa:40,spd:55,spe:60},abilities:{0:'Pure Power',H:'Telepathy'},heightm:0.6,weightkg:11.2,color:'Blue',evos:['medicham'],eggGroups:['Human-Like']},medicham:{num:308,species:'Medicham',types:['Fighting','Psychic'],baseStats:{hp:60,atk:60,def:75,spa:60,spd:75,spe:80},abilities:{0:'Pure Power',H:'Telepathy'},heightm:1.3,weightkg:31.5,color:'Red',prevo:'meditite',evoLevel:37,eggGroups:['Human-Like'],otherFormes:['medichammega']},medichammega:{num:308,species:'Medicham-Mega',baseSpecies:'Medicham',forme:'Mega',types:['Fighting','Psychic'],baseStats:{hp:60,atk:100,def:85,spa:80,spd:85,spe:100},abilities:{0:'Pure Power'},heightm:1.3,weightkg:31.5,color:'Red',eggGroups:['Human-Like']},electrike:{num:309,species:'Electrike',types:['Electric'],baseStats:{hp:40,atk:45,def:40,spa:65,spd:40,spe:65},abilities:{0:'Static',1:'Lightning Rod',H:'Minus'},heightm:0.6,weightkg:15.2,color:'Green',evos:['manectric'],eggGroups:['Field']},manectric:{num:310,species:'Manectric',types:['Electric'],baseStats:{hp:70,atk:75,def:60,spa:105,spd:60,spe:105},abilities:{0:'Static',1:'Lightning Rod',H:'Minus'},heightm:1.5,weightkg:40.2,color:'Yellow',prevo:'electrike',evoLevel:26,eggGroups:['Field'],otherFormes:['manectricmega']},manectricmega:{num:310,species:'Manectric-Mega',baseSpecies:'Manectric',forme:'Mega',types:['Electric'],baseStats:{hp:70,atk:75,def:80,spa:135,spd:80,spe:135},abilities:{0:'Intimidate'},heightm:1.8,weightkg:44,color:'Yellow',eggGroups:['Field']},plusle:{num:311,species:'Plusle',types:['Electric'],baseStats:{hp:60,atk:50,def:40,spa:85,spd:75,spe:95},abilities:{0:'Plus',H:'Lightning Rod'},heightm:0.4,weightkg:4.2,color:'Yellow',eggGroups:['Fairy']},minun:{num:312,species:'Minun',types:['Electric'],baseStats:{hp:60,atk:40,def:50,spa:75,spd:85,spe:95},abilities:{0:'Minus',H:'Volt Absorb'},heightm:0.4,weightkg:4.2,color:'Yellow',eggGroups:['Fairy']},volbeat:{num:313,species:'Volbeat',types:['Bug'],gender:'M',baseStats:{hp:65,atk:73,def:75,spa:47,spd:85,spe:85},abilities:{0:'Illuminate',1:'Swarm',H:'Prankster'},heightm:0.7,weightkg:17.7,color:'Gray',eggGroups:['Bug','Human-Like']},illumise:{num:314,species:'Illumise',types:['Bug'],gender:'F',baseStats:{hp:65,atk:47,def:75,spa:73,spd:85,spe:85},abilities:{0:'Oblivious',1:'Tinted Lens',H:'Prankster'},heightm:0.6,weightkg:17.7,color:'Purple',eggGroups:['Bug','Human-Like']},roselia:{num:315,species:'Roselia',types:['Grass','Poison'],baseStats:{hp:50,atk:60,def:45,spa:100,spd:80,spe:65},abilities:{0:'Natural Cure',1:'Poison Point',H:'Leaf Guard'},heightm:0.3,weightkg:2,color:'Green',prevo:'budew',evoType:'levelFriendship',evoCondition:'during the day',evos:['roserade'],eggGroups:['Fairy','Grass'],canHatch:true},gulpin:{num:316,species:'Gulpin',types:['Poison'],baseStats:{hp:70,atk:43,def:53,spa:43,spd:53,spe:40},abilities:{0:'Liquid Ooze',1:'Sticky Hold',H:'Gluttony'},heightm:0.4,weightkg:10.3,color:'Green',evos:['swalot'],eggGroups:['Amorphous']},swalot:{num:317,species:'Swalot',types:['Poison'],baseStats:{hp:100,atk:73,def:83,spa:73,spd:83,spe:55},abilities:{0:'Liquid Ooze',1:'Sticky Hold',H:'Gluttony'},heightm:1.7,weightkg:80,color:'Purple',prevo:'gulpin',evoLevel:26,eggGroups:['Amorphous']},carvanha:{num:318,species:'Carvanha',types:['Water','Dark'],baseStats:{hp:45,atk:90,def:20,spa:65,spd:20,spe:65},abilities:{0:'Rough Skin',H:'Speed Boost'},heightm:0.8,weightkg:20.8,color:'Red',evos:['sharpedo'],eggGroups:['Water 2']},sharpedo:{num:319,species:'Sharpedo',types:['Water','Dark'],baseStats:{hp:70,atk:120,def:40,spa:95,spd:40,spe:95},abilities:{0:'Rough Skin',H:'Speed Boost'},heightm:1.8,weightkg:88.8,color:'Blue',prevo:'carvanha',evoLevel:30,eggGroups:['Water 2'],otherFormes:['sharpedomega']},sharpedomega:{num:319,species:'Sharpedo-Mega',baseSpecies:'Sharpedo',forme:'Mega',types:['Water','Dark'],baseStats:{hp:70,atk:140,def:70,spa:110,spd:65,spe:105},abilities:{0:'Strong Jaw'},heightm:2.5,weightkg:130.3,color:'Blue',eggGroups:['Water 2']},wailmer:{num:320,species:'Wailmer',types:['Water'],baseStats:{hp:130,atk:70,def:35,spa:70,spd:35,spe:60},abilities:{0:'Water Veil',1:'Oblivious',H:'Pressure'},heightm:2,weightkg:130,color:'Blue',evos:['wailord'],eggGroups:['Field','Water 2']},wailord:{num:321,species:'Wailord',types:['Water'],baseStats:{hp:170,atk:90,def:45,spa:90,spd:45,spe:60},abilities:{0:'Water Veil',1:'Oblivious',H:'Pressure'},heightm:14.5,weightkg:398,color:'Blue',prevo:'wailmer',evoLevel:40,eggGroups:['Field','Water 2']},numel:{num:322,species:'Numel',types:['Fire','Ground'],baseStats:{hp:60,atk:60,def:40,spa:65,spd:45,spe:35},abilities:{0:'Oblivious',1:'Simple',H:'Own Tempo'},heightm:0.7,weightkg:24,color:'Yellow',evos:['camerupt'],eggGroups:['Field']},camerupt:{num:323,species:'Camerupt',types:['Fire','Ground'],baseStats:{hp:70,atk:100,def:70,spa:105,spd:75,spe:40},abilities:{0:'Magma Armor',1:'Solid Rock',H:'Anger Point'},heightm:1.9,weightkg:220,color:'Red',prevo:'numel',evoLevel:33,eggGroups:['Field'],otherFormes:['cameruptmega']},cameruptmega:{num:323,species:'Camerupt-Mega',baseSpecies:'Camerupt',forme:'Mega',types:['Fire','Ground'],baseStats:{hp:70,atk:120,def:100,spa:145,spd:105,spe:20},abilities:{0:'Sheer Force'},heightm:2.5,weightkg:320.5,color:'Red',eggGroups:['Field']},torkoal:{num:324,species:'Torkoal',types:['Fire'],baseStats:{hp:70,atk:85,def:140,spa:85,spd:70,spe:20},abilities:{0:'White Smoke',1:'Drought',H:'Shell Armor'},heightm:0.5,weightkg:80.4,color:'Brown',eggGroups:['Field']},spoink:{num:325,species:'Spoink',types:['Psychic'],baseStats:{hp:60,atk:25,def:35,spa:70,spd:80,spe:60},abilities:{0:'Thick Fat',1:'Own Tempo',H:'Gluttony'},heightm:0.7,weightkg:30.6,color:'Black',evos:['grumpig'],eggGroups:['Field']},grumpig:{num:326,species:'Grumpig',types:['Psychic'],baseStats:{hp:80,atk:45,def:65,spa:90,spd:110,spe:80},abilities:{0:'Thick Fat',1:'Own Tempo',H:'Gluttony'},heightm:0.9,weightkg:71.5,color:'Purple',prevo:'spoink',evoLevel:32,eggGroups:['Field']},spinda:{num:327,species:'Spinda',types:['Normal'],baseStats:{hp:60,atk:60,def:60,spa:60,spd:60,spe:60},abilities:{0:'Own Tempo',1:'Tangled Feet',H:'Contrary'},heightm:1.1,weightkg:5,color:'Brown',eggGroups:['Field','Human-Like']},trapinch:{num:328,species:'Trapinch',types:['Ground'],baseStats:{hp:45,atk:100,def:45,spa:45,spd:45,spe:10},abilities:{0:'Hyper Cutter',1:'Arena Trap',H:'Sheer Force'},heightm:0.7,weightkg:15,color:'Brown',evos:['vibrava'],eggGroups:['Bug','Dragon']},vibrava:{num:329,species:'Vibrava',types:['Ground','Dragon'],baseStats:{hp:50,atk:70,def:50,spa:50,spd:50,spe:70},abilities:{0:'Levitate'},heightm:1.1,weightkg:15.3,color:'Green',prevo:'trapinch',evos:['flygon'],evoLevel:35,eggGroups:['Bug','Dragon']},flygon:{num:330,species:'Flygon',types:['Ground','Dragon'],baseStats:{hp:80,atk:100,def:80,spa:80,spd:80,spe:100},abilities:{0:'Levitate'},heightm:2,weightkg:82,color:'Green',prevo:'vibrava',evoLevel:45,eggGroups:['Bug','Dragon']},cacnea:{num:331,species:'Cacnea',types:['Grass'],baseStats:{hp:50,atk:85,def:40,spa:85,spd:40,spe:35},abilities:{0:'Sand Veil',H:'Water Absorb'},heightm:0.4,weightkg:51.3,color:'Green',evos:['cacturne'],eggGroups:['Grass','Human-Like']},cacturne:{num:332,species:'Cacturne',types:['Grass','Dark'],baseStats:{hp:70,atk:115,def:60,spa:115,spd:60,spe:55},abilities:{0:'Sand Veil',H:'Water Absorb'},heightm:1.3,weightkg:77.4,color:'Green',prevo:'cacnea',evoLevel:32,eggGroups:['Grass','Human-Like']},swablu:{num:333,species:'Swablu',types:['Normal','Flying'],baseStats:{hp:45,atk:40,def:60,spa:40,spd:75,spe:50},abilities:{0:'Natural Cure',H:'Cloud Nine'},heightm:0.4,weightkg:1.2,color:'Blue',evos:['altaria'],eggGroups:['Flying','Dragon']},altaria:{num:334,species:'Altaria',types:['Dragon','Flying'],baseStats:{hp:75,atk:70,def:90,spa:70,spd:105,spe:80},abilities:{0:'Natural Cure',H:'Cloud Nine'},heightm:1.1,weightkg:20.6,color:'Blue',prevo:'swablu',evoLevel:35,eggGroups:['Flying','Dragon'],otherFormes:['altariamega']},altariamega:{num:334,species:'Altaria-Mega',baseSpecies:'Altaria',forme:'Mega',types:['Dragon','Fairy'],baseStats:{hp:75,atk:110,def:110,spa:110,spd:105,spe:80},abilities:{0:'Pixilate'},heightm:1.5,weightkg:20.6,color:'Blue',eggGroups:['Flying','Dragon']},zangoose:{num:335,species:'Zangoose',types:['Normal'],baseStats:{hp:73,atk:115,def:60,spa:60,spd:60,spe:90},abilities:{0:'Immunity',H:'Toxic Boost'},heightm:1.3,weightkg:40.3,color:'White',eggGroups:['Field']},seviper:{num:336,species:'Seviper',types:['Poison'],baseStats:{hp:73,atk:100,def:60,spa:100,spd:60,spe:65},abilities:{0:'Shed Skin',H:'Infiltrator'},heightm:2.7,weightkg:52.5,color:'Black',eggGroups:['Field','Dragon']},lunatone:{num:337,species:'Lunatone',types:['Rock','Psychic'],gender:'N',baseStats:{hp:90,atk:55,def:65,spa:95,spd:85,spe:70},abilities:{0:'Levitate'},heightm:1,weightkg:168,color:'Yellow',eggGroups:['Mineral']},solrock:{num:338,species:'Solrock',types:['Rock','Psychic'],gender:'N',baseStats:{hp:90,atk:95,def:85,spa:55,spd:65,spe:70},abilities:{0:'Levitate'},heightm:1.2,weightkg:154,color:'Red',eggGroups:['Mineral']},barboach:{num:339,species:'Barboach',types:['Water','Ground'],baseStats:{hp:50,atk:48,def:43,spa:46,spd:41,spe:60},abilities:{0:'Oblivious',1:'Anticipation',H:'Hydration'},heightm:0.4,weightkg:1.9,color:'Gray',evos:['whiscash'],eggGroups:['Water 2']},whiscash:{num:340,species:'Whiscash',types:['Water','Ground'],baseStats:{hp:110,atk:78,def:73,spa:76,spd:71,spe:60},abilities:{0:'Oblivious',1:'Anticipation',H:'Hydration'},heightm:0.9,weightkg:23.6,color:'Blue',prevo:'barboach',evoLevel:30,eggGroups:['Water 2']},corphish:{num:341,species:'Corphish',types:['Water'],baseStats:{hp:43,atk:80,def:65,spa:50,spd:35,spe:35},abilities:{0:'Hyper Cutter',1:'Shell Armor',H:'Adaptability'},heightm:0.6,weightkg:11.5,color:'Red',evos:['crawdaunt'],eggGroups:['Water 1','Water 3']},crawdaunt:{num:342,species:'Crawdaunt',types:['Water','Dark'],baseStats:{hp:63,atk:120,def:85,spa:90,spd:55,spe:55},abilities:{0:'Hyper Cutter',1:'Shell Armor',H:'Adaptability'},heightm:1.1,weightkg:32.8,color:'Red',prevo:'corphish',evoLevel:30,eggGroups:['Water 1','Water 3']},baltoy:{num:343,species:'Baltoy',types:['Ground','Psychic'],gender:'N',baseStats:{hp:40,atk:40,def:55,spa:40,spd:70,spe:55},abilities:{0:'Levitate'},heightm:0.5,weightkg:21.5,color:'Brown',evos:['claydol'],eggGroups:['Mineral']},claydol:{num:344,species:'Claydol',types:['Ground','Psychic'],gender:'N',baseStats:{hp:60,atk:70,def:105,spa:70,spd:120,spe:75},abilities:{0:'Levitate'},heightm:1.5,weightkg:108,color:'Black',prevo:'baltoy',evoLevel:36,eggGroups:['Mineral']},lileep:{num:345,species:'Lileep',types:['Rock','Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:66,atk:41,def:77,spa:61,spd:87,spe:23},abilities:{0:'Suction Cups',H:'Storm Drain'},heightm:1,weightkg:23.8,color:'Purple',evos:['cradily'],eggGroups:['Water 3']},cradily:{num:346,species:'Cradily',types:['Rock','Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:86,atk:81,def:97,spa:81,spd:107,spe:43},abilities:{0:'Suction Cups',H:'Storm Drain'},heightm:1.5,weightkg:60.4,color:'Green',prevo:'lileep',evoLevel:40,eggGroups:['Water 3']},anorith:{num:347,species:'Anorith',types:['Rock','Bug'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:45,atk:95,def:50,spa:40,spd:50,spe:75},abilities:{0:'Battle Armor',H:'Swift Swim'},heightm:0.7,weightkg:12.5,color:'Gray',evos:['armaldo'],eggGroups:['Water 3']},armaldo:{num:348,species:'Armaldo',types:['Rock','Bug'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:75,atk:125,def:100,spa:70,spd:80,spe:45},abilities:{0:'Battle Armor',H:'Swift Swim'},heightm:1.5,weightkg:68.2,color:'Gray',prevo:'anorith',evoLevel:40,eggGroups:['Water 3']},feebas:{num:349,species:'Feebas',types:['Water'],baseStats:{hp:20,atk:15,def:20,spa:10,spd:55,spe:80},abilities:{0:'Swift Swim',1:'Oblivious',H:'Adaptability'},heightm:0.6,weightkg:7.4,color:'Brown',evos:['milotic'],eggGroups:['Water 1','Dragon']},milotic:{num:350,species:'Milotic',types:['Water'],baseStats:{hp:95,atk:60,def:79,spa:100,spd:125,spe:81},abilities:{0:'Marvel Scale',1:'Competitive',H:'Cute Charm'},heightm:6.2,weightkg:162,color:'Pink',prevo:'feebas',evoType:'trade',evoItem:'Prism Scale',eggGroups:['Water 1','Dragon']},castform:{num:351,species:'Castform',types:['Normal'],baseStats:{hp:70,atk:70,def:70,spa:70,spd:70,spe:70},abilities:{0:'Forecast'},heightm:0.3,weightkg:0.8,color:'Gray',eggGroups:['Fairy','Amorphous'],otherFormes:['castformsunny','castformrainy','castformsnowy']},castformsunny:{num:351,species:'Castform-Sunny',baseSpecies:'Castform',forme:'Sunny',types:['Fire'],baseStats:{hp:70,atk:70,def:70,spa:70,spd:70,spe:70},abilities:{0:'Forecast'},heightm:0.3,weightkg:0.8,color:'Red',eggGroups:['Fairy','Amorphous']},castformrainy:{num:351,species:'Castform-Rainy',baseSpecies:'Castform',forme:'Rainy',types:['Water'],baseStats:{hp:70,atk:70,def:70,spa:70,spd:70,spe:70},abilities:{0:'Forecast'},heightm:0.3,weightkg:0.8,color:'Blue',eggGroups:['Fairy','Amorphous']},castformsnowy:{num:351,species:'Castform-Snowy',baseSpecies:'Castform',forme:'Snowy',types:['Ice'],baseStats:{hp:70,atk:70,def:70,spa:70,spd:70,spe:70},abilities:{0:'Forecast'},heightm:0.3,weightkg:0.8,color:'White',eggGroups:['Fairy','Amorphous']},kecleon:{num:352,species:'Kecleon',types:['Normal'],baseStats:{hp:60,atk:90,def:70,spa:60,spd:120,spe:40},abilities:{0:'Color Change',H:'Protean'},heightm:1,weightkg:22,color:'Green',eggGroups:['Field']},shuppet:{num:353,species:'Shuppet',types:['Ghost'],baseStats:{hp:44,atk:75,def:35,spa:63,spd:33,spe:45},abilities:{0:'Insomnia',1:'Frisk',H:'Cursed Body'},heightm:0.6,weightkg:2.3,color:'Black',evos:['banette'],eggGroups:['Amorphous']},banette:{num:354,species:'Banette',types:['Ghost'],baseStats:{hp:64,atk:115,def:65,spa:83,spd:63,spe:65},abilities:{0:'Insomnia',1:'Frisk',H:'Cursed Body'},heightm:1.1,weightkg:12.5,color:'Black',prevo:'shuppet',evoLevel:37,eggGroups:['Amorphous'],otherFormes:['banettemega']},banettemega:{num:354,species:'Banette-Mega',baseSpecies:'Banette',forme:'Mega',types:['Ghost'],baseStats:{hp:64,atk:165,def:75,spa:93,spd:83,spe:75},abilities:{0:'Prankster'},heightm:1.2,weightkg:13,color:'Black',eggGroups:['Amorphous']},duskull:{num:355,species:'Duskull',types:['Ghost'],baseStats:{hp:20,atk:40,def:90,spa:30,spd:90,spe:25},abilities:{0:'Levitate',H:'Frisk'},heightm:0.8,weightkg:15,color:'Black',evos:['dusclops'],eggGroups:['Amorphous']},dusclops:{num:356,species:'Dusclops',types:['Ghost'],baseStats:{hp:40,atk:70,def:130,spa:60,spd:130,spe:25},abilities:{0:'Pressure',H:'Frisk'},heightm:1.6,weightkg:30.6,color:'Black',prevo:'duskull',evoLevel:37,evos:['dusknoir'],eggGroups:['Amorphous']},tropius:{num:357,species:'Tropius',types:['Grass','Flying'],baseStats:{hp:99,atk:68,def:83,spa:72,spd:87,spe:51},abilities:{0:'Chlorophyll',1:'Solar Power',H:'Harvest'},heightm:2,weightkg:100,color:'Green',eggGroups:['Monster','Grass']},chimecho:{num:358,species:'Chimecho',types:['Psychic'],baseStats:{hp:75,atk:50,def:80,spa:95,spd:90,spe:65},abilities:{0:'Levitate'},heightm:0.6,weightkg:1,color:'Blue',prevo:'chingling',evoType:'levelFriendship',evoCondition:'at night',eggGroups:['Amorphous'],canHatch:true},absol:{num:359,species:'Absol',types:['Dark'],baseStats:{hp:65,atk:130,def:60,spa:75,spd:60,spe:75},abilities:{0:'Pressure',1:'Super Luck',H:'Justified'},heightm:1.2,weightkg:47,color:'White',eggGroups:['Field'],otherFormes:['absolmega']},absolmega:{num:359,species:'Absol-Mega',baseSpecies:'Absol',forme:'Mega',types:['Dark'],baseStats:{hp:65,atk:150,def:60,spa:115,spd:60,spe:115},abilities:{0:'Magic Bounce'},heightm:1.2,weightkg:49,color:'White',eggGroups:['Field']},wynaut:{num:360,species:'Wynaut',types:['Psychic'],baseStats:{hp:95,atk:23,def:48,spa:23,spd:48,spe:23},abilities:{0:'Shadow Tag',H:'Telepathy'},heightm:0.6,weightkg:14,color:'Blue',evos:['wobbuffet'],eggGroups:['Undiscovered'],canHatch:true},snorunt:{num:361,species:'Snorunt',types:['Ice'],baseStats:{hp:50,atk:50,def:50,spa:50,spd:50,spe:50},abilities:{0:'Inner Focus',1:'Ice Body',H:'Moody'},heightm:0.7,weightkg:16.8,color:'Gray',evos:['glalie','froslass'],eggGroups:['Fairy','Mineral']},glalie:{num:362,species:'Glalie',types:['Ice'],baseStats:{hp:80,atk:80,def:80,spa:80,spd:80,spe:80},abilities:{0:'Inner Focus',1:'Ice Body',H:'Moody'},heightm:1.5,weightkg:256.5,color:'Gray',prevo:'snorunt',evoLevel:42,eggGroups:['Fairy','Mineral'],otherFormes:['glaliemega']},glaliemega:{num:362,species:'Glalie-Mega',baseSpecies:'Glalie',forme:'Mega',types:['Ice'],baseStats:{hp:80,atk:120,def:80,spa:120,spd:80,spe:100},abilities:{0:'Refrigerate'},heightm:2.1,weightkg:350.2,color:'Gray',eggGroups:['Fairy','Mineral']},spheal:{num:363,species:'Spheal',types:['Ice','Water'],baseStats:{hp:70,atk:40,def:50,spa:55,spd:50,spe:25},abilities:{0:'Thick Fat',1:'Ice Body',H:'Oblivious'},heightm:0.8,weightkg:39.5,color:'Blue',evos:['sealeo'],eggGroups:['Water 1','Field']},sealeo:{num:364,species:'Sealeo',types:['Ice','Water'],baseStats:{hp:90,atk:60,def:70,spa:75,spd:70,spe:45},abilities:{0:'Thick Fat',1:'Ice Body',H:'Oblivious'},heightm:1.1,weightkg:87.6,color:'Blue',prevo:'spheal',evoLevel:32,evos:['walrein'],eggGroups:['Water 1','Field']},walrein:{num:365,species:'Walrein',types:['Ice','Water'],baseStats:{hp:110,atk:80,def:90,spa:95,spd:90,spe:65},abilities:{0:'Thick Fat',1:'Ice Body',H:'Oblivious'},heightm:1.4,weightkg:150.6,color:'Blue',prevo:'sealeo',evoLevel:44,eggGroups:['Water 1','Field']},clamperl:{num:366,species:'Clamperl',types:['Water'],baseStats:{hp:35,atk:64,def:85,spa:74,spd:55,spe:32},abilities:{0:'Shell Armor',H:'Rattled'},heightm:0.4,weightkg:52.5,color:'Blue',evos:['huntail','gorebyss'],eggGroups:['Water 1']},huntail:{num:367,species:'Huntail',types:['Water'],baseStats:{hp:55,atk:104,def:105,spa:94,spd:75,spe:52},abilities:{0:'Swift Swim',H:'Water Veil'},heightm:1.7,weightkg:27,color:'Blue',prevo:'clamperl',evoType:'trade',evoItem:'Deep Sea Tooth',eggGroups:['Water 1']},gorebyss:{num:368,species:'Gorebyss',types:['Water'],baseStats:{hp:55,atk:84,def:105,spa:114,spd:75,spe:52},abilities:{0:'Swift Swim',H:'Hydration'},heightm:1.8,weightkg:22.6,color:'Pink',prevo:'clamperl',evoType:'trade',evoItem:'Deep Sea Scale',eggGroups:['Water 1']},relicanth:{num:369,species:'Relicanth',types:['Water','Rock'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:100,atk:90,def:130,spa:45,spd:65,spe:55},abilities:{0:'Swift Swim',1:'Rock Head',H:'Sturdy'},heightm:1,weightkg:23.4,color:'Gray',eggGroups:['Water 1','Water 2']},luvdisc:{num:370,species:'Luvdisc',types:['Water'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:43,atk:30,def:55,spa:40,spd:65,spe:97},abilities:{0:'Swift Swim',H:'Hydration'},heightm:0.6,weightkg:8.7,color:'Pink',eggGroups:['Water 2']},bagon:{num:371,species:'Bagon',types:['Dragon'],baseStats:{hp:45,atk:75,def:60,spa:40,spd:30,spe:50},abilities:{0:'Rock Head',H:'Sheer Force'},heightm:0.6,weightkg:42.1,color:'Blue',evos:['shelgon'],eggGroups:['Dragon']},shelgon:{num:372,species:'Shelgon',types:['Dragon'],baseStats:{hp:65,atk:95,def:100,spa:60,spd:50,spe:50},abilities:{0:'Rock Head',H:'Overcoat'},heightm:1.1,weightkg:110.5,color:'White',prevo:'bagon',evoLevel:30,evos:['salamence'],eggGroups:['Dragon']},salamence:{num:373,species:'Salamence',types:['Dragon','Flying'],baseStats:{hp:95,atk:135,def:80,spa:110,spd:80,spe:100},abilities:{0:'Intimidate',H:'Moxie'},heightm:1.5,weightkg:102.6,color:'Blue',prevo:'shelgon',evoLevel:50,eggGroups:['Dragon'],otherFormes:['salamencemega']},salamencemega:{num:373,species:'Salamence-Mega',baseSpecies:'Salamence',forme:'Mega',types:['Dragon','Flying'],baseStats:{hp:95,atk:145,def:130,spa:120,spd:90,spe:120},abilities:{0:'Aerilate'},heightm:1.8,weightkg:112.6,color:'Blue',eggGroups:['Dragon']},beldum:{num:374,species:'Beldum',types:['Steel','Psychic'],gender:'N',baseStats:{hp:40,atk:55,def:80,spa:35,spd:60,spe:30},abilities:{0:'Clear Body',H:'Light Metal'},heightm:0.6,weightkg:95.2,color:'Blue',evos:['metang'],eggGroups:['Mineral']},metang:{num:375,species:'Metang',types:['Steel','Psychic'],gender:'N',baseStats:{hp:60,atk:75,def:100,spa:55,spd:80,spe:50},abilities:{0:'Clear Body',H:'Light Metal'},heightm:1.2,weightkg:202.5,color:'Blue',prevo:'beldum',evos:['metagross'],evoLevel:20,eggGroups:['Mineral']},metagross:{num:376,species:'Metagross',types:['Steel','Psychic'],gender:'N',baseStats:{hp:80,atk:135,def:130,spa:95,spd:90,spe:70},abilities:{0:'Clear Body',H:'Light Metal'},heightm:1.6,weightkg:550,color:'Blue',prevo:'metang',evoLevel:45,eggGroups:['Mineral'],otherFormes:['metagrossmega']},metagrossmega:{num:376,species:'Metagross-Mega',baseSpecies:'Metagross',forme:'Mega',types:['Steel','Psychic'],gender:'N',baseStats:{hp:80,atk:145,def:150,spa:105,spd:110,spe:110},abilities:{0:'Tough Claws'},heightm:2.5,weightkg:942.9,color:'Blue',eggGroups:['Mineral']},regirock:{num:377,species:'Regirock',types:['Rock'],gender:'N',baseStats:{hp:80,atk:100,def:200,spa:50,spd:100,spe:50},abilities:{0:'Clear Body',H:'Sturdy'},heightm:1.7,weightkg:230,color:'Brown',eggGroups:['Undiscovered']},regice:{num:378,species:'Regice',types:['Ice'],gender:'N',baseStats:{hp:80,atk:50,def:100,spa:100,spd:200,spe:50},abilities:{0:'Clear Body',H:'Ice Body'},heightm:1.8,weightkg:175,color:'Blue',eggGroups:['Undiscovered']},registeel:{num:379,species:'Registeel',types:['Steel'],gender:'N',baseStats:{hp:80,atk:75,def:150,spa:75,spd:150,spe:50},abilities:{0:'Clear Body',H:'Light Metal'},heightm:1.9,weightkg:205,color:'Gray',eggGroups:['Undiscovered']},latias:{num:380,species:'Latias',types:['Dragon','Psychic'],gender:'F',baseStats:{hp:80,atk:80,def:90,spa:110,spd:130,spe:110},abilities:{0:'Levitate'},heightm:1.4,weightkg:40,color:'Red',eggGroups:['Undiscovered'],otherFormes:['latiasmega']},latiasmega:{num:380,species:'Latias-Mega',baseSpecies:'Latias',forme:'Mega',types:['Dragon','Psychic'],gender:'F',baseStats:{hp:80,atk:100,def:120,spa:140,spd:150,spe:110},abilities:{0:'Levitate'},heightm:1.8,weightkg:52,color:'Purple',eggGroups:['Undiscovered']},latios:{num:381,species:'Latios',types:['Dragon','Psychic'],gender:'M',baseStats:{hp:80,atk:90,def:80,spa:130,spd:110,spe:110},abilities:{0:'Levitate'},heightm:2,weightkg:60,color:'Blue',eggGroups:['Undiscovered'],otherFormes:['latiosmega']},latiosmega:{num:381,species:'Latios-Mega',baseSpecies:'Latios',forme:'Mega',types:['Dragon','Psychic'],gender:'M',baseStats:{hp:80,atk:130,def:100,spa:160,spd:120,spe:110},abilities:{0:'Levitate'},heightm:2.3,weightkg:70,color:'Purple',eggGroups:['Undiscovered']},kyogre:{num:382,species:'Kyogre',types:['Water'],gender:'N',baseStats:{hp:100,atk:100,def:90,spa:150,spd:140,spe:90},abilities:{0:'Drizzle'},heightm:4.5,weightkg:352,color:'Blue',eggGroups:['Undiscovered'],otherFormes:['kyogreprimal']},kyogreprimal:{num:382,species:'Kyogre-Primal',baseSpecies:'Kyogre',forme:'Primal',types:['Water'],gender:'N',baseStats:{hp:100,atk:150,def:90,spa:180,spd:160,spe:90},abilities:{0:'Primordial Sea'},heightm:9.8,weightkg:430,color:'Blue',eggGroups:['Undiscovered']},groudon:{num:383,species:'Groudon',types:['Ground'],gender:'N',baseStats:{hp:100,atk:150,def:140,spa:100,spd:90,spe:90},abilities:{0:'Drought'},heightm:3.5,weightkg:950,color:'Red',eggGroups:['Undiscovered'],otherFormes:['groudonprimal']},groudonprimal:{num:383,species:'Groudon-Primal',baseSpecies:'Groudon',forme:'Primal',types:['Ground','Fire'],gender:'N',baseStats:{hp:100,atk:180,def:160,spa:150,spd:90,spe:90},abilities:{0:'Desolate Land'},heightm:5,weightkg:999.7,color:'Red',eggGroups:['Undiscovered']},rayquaza:{num:384,species:'Rayquaza',types:['Dragon','Flying'],gender:'N',baseStats:{hp:105,atk:150,def:90,spa:150,spd:90,spe:95},abilities:{0:'Air Lock'},heightm:7,weightkg:206.5,color:'Green',eggGroups:['Undiscovered'],otherFormes:['rayquazamega']},rayquazamega:{num:384,species:'Rayquaza-Mega',baseSpecies:'Rayquaza',forme:'Mega',types:['Dragon','Flying'],gender:'N',baseStats:{hp:105,atk:180,def:100,spa:180,spd:100,spe:115},abilities:{0:'Delta Stream'},heightm:10.8,weightkg:392,color:'Green',eggGroups:['Undiscovered']},jirachi:{num:385,species:'Jirachi',types:['Steel','Psychic'],gender:'N',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Serene Grace'},heightm:0.3,weightkg:1.1,color:'Yellow',eggGroups:['Undiscovered']},deoxys:{num:386,species:'Deoxys',baseForme:'Normal',types:['Psychic'],gender:'N',baseStats:{hp:50,atk:150,def:50,spa:150,spd:50,spe:150},abilities:{0:'Pressure'},heightm:1.7,weightkg:60.8,color:'Red',eggGroups:['Undiscovered'],otherFormes:['deoxysattack','deoxysdefense','deoxysspeed']},deoxysattack:{num:386,species:'Deoxys-Attack',baseSpecies:'Deoxys',forme:'Attack',types:['Psychic'],gender:'N',baseStats:{hp:50,atk:180,def:20,spa:180,spd:20,spe:150},abilities:{0:'Pressure'},heightm:1.7,weightkg:60.8,color:'Red',eggGroups:['Undiscovered'],inheritsFrom:'deoxys'},deoxysdefense:{num:386,species:'Deoxys-Defense',baseSpecies:'Deoxys',forme:'Defense',types:['Psychic'],gender:'N',baseStats:{hp:50,atk:70,def:160,spa:70,spd:160,spe:90},abilities:{0:'Pressure'},heightm:1.7,weightkg:60.8,color:'Red',eggGroups:['Undiscovered'],inheritsFrom:'deoxys'},deoxysspeed:{num:386,species:'Deoxys-Speed',baseSpecies:'Deoxys',forme:'Speed',types:['Psychic'],gender:'N',baseStats:{hp:50,atk:95,def:90,spa:95,spd:90,spe:180},abilities:{0:'Pressure'},heightm:1.7,weightkg:60.8,color:'Red',eggGroups:['Undiscovered'],inheritsFrom:'deoxys'},turtwig:{num:387,species:'Turtwig',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:55,atk:68,def:64,spa:45,spd:55,spe:31},abilities:{0:'Overgrow',H:'Shell Armor'},heightm:0.4,weightkg:10.2,color:'Green',evos:['grotle'],eggGroups:['Monster','Grass']},grotle:{num:388,species:'Grotle',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:75,atk:89,def:85,spa:55,spd:65,spe:36},abilities:{0:'Overgrow',H:'Shell Armor'},heightm:1.1,weightkg:97,color:'Green',prevo:'turtwig',evoLevel:18,evos:['torterra'],eggGroups:['Monster','Grass']},torterra:{num:389,species:'Torterra',types:['Grass','Ground'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:95,atk:109,def:105,spa:75,spd:85,spe:56},abilities:{0:'Overgrow',H:'Shell Armor'},heightm:2.2,weightkg:310,color:'Green',prevo:'grotle',evoLevel:32,eggGroups:['Monster','Grass']},chimchar:{num:390,species:'Chimchar',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:44,atk:58,def:44,spa:58,spd:44,spe:61},abilities:{0:'Blaze',H:'Iron Fist'},heightm:0.5,weightkg:6.2,color:'Brown',evos:['monferno'],eggGroups:['Field','Human-Like']},monferno:{num:391,species:'Monferno',types:['Fire','Fighting'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:64,atk:78,def:52,spa:78,spd:52,spe:81},abilities:{0:'Blaze',H:'Iron Fist'},heightm:0.9,weightkg:22,color:'Brown',prevo:'chimchar',evoLevel:14,evos:['infernape'],eggGroups:['Field','Human-Like']},infernape:{num:392,species:'Infernape',types:['Fire','Fighting'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:76,atk:104,def:71,spa:104,spd:71,spe:108},abilities:{0:'Blaze',H:'Iron Fist'},heightm:1.2,weightkg:55,color:'Brown',prevo:'monferno',evoLevel:36,eggGroups:['Field','Human-Like']},piplup:{num:393,species:'Piplup',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:53,atk:51,def:53,spa:61,spd:56,spe:40},abilities:{0:'Torrent',H:'Defiant'},heightm:0.4,weightkg:5.2,color:'Blue',evos:['prinplup'],eggGroups:['Water 1','Field']},prinplup:{num:394,species:'Prinplup',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:64,atk:66,def:68,spa:81,spd:76,spe:50},abilities:{0:'Torrent',H:'Defiant'},heightm:0.8,weightkg:23,color:'Blue',prevo:'piplup',evoLevel:16,evos:['empoleon'],eggGroups:['Water 1','Field']},empoleon:{num:395,species:'Empoleon',types:['Water','Steel'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:84,atk:86,def:88,spa:111,spd:101,spe:60},abilities:{0:'Torrent',H:'Defiant'},heightm:1.7,weightkg:84.5,color:'Blue',prevo:'prinplup',evoLevel:36,eggGroups:['Water 1','Field']},starly:{num:396,species:'Starly',types:['Normal','Flying'],baseStats:{hp:40,atk:55,def:30,spa:30,spd:30,spe:60},abilities:{0:'Keen Eye',H:'Reckless'},heightm:0.3,weightkg:2,color:'Brown',evos:['staravia'],eggGroups:['Flying']},staravia:{num:397,species:'Staravia',types:['Normal','Flying'],baseStats:{hp:55,atk:75,def:50,spa:40,spd:40,spe:80},abilities:{0:'Intimidate',H:'Reckless'},heightm:0.6,weightkg:15.5,color:'Brown',prevo:'starly',evoLevel:14,evos:['staraptor'],eggGroups:['Flying']},staraptor:{num:398,species:'Staraptor',types:['Normal','Flying'],baseStats:{hp:85,atk:120,def:70,spa:50,spd:60,spe:100},abilities:{0:'Intimidate',H:'Reckless'},heightm:1.2,weightkg:24.9,color:'Brown',prevo:'staravia',evoLevel:34,eggGroups:['Flying']},bidoof:{num:399,species:'Bidoof',types:['Normal'],baseStats:{hp:59,atk:45,def:40,spa:35,spd:40,spe:31},abilities:{0:'Simple',1:'Unaware',H:'Moody'},heightm:0.5,weightkg:20,color:'Brown',evos:['bibarel'],eggGroups:['Water 1','Field']},bibarel:{num:400,species:'Bibarel',types:['Normal','Water'],baseStats:{hp:79,atk:85,def:60,spa:55,spd:60,spe:71},abilities:{0:'Simple',1:'Unaware',H:'Moody'},heightm:1,weightkg:31.5,color:'Brown',prevo:'bidoof',evoLevel:15,eggGroups:['Water 1','Field']},kricketot:{num:401,species:'Kricketot',types:['Bug'],baseStats:{hp:37,atk:25,def:41,spa:25,spd:41,spe:25},abilities:{0:'Shed Skin',H:'Run Away'},heightm:0.3,weightkg:2.2,color:'Red',evos:['kricketune'],eggGroups:['Bug']},kricketune:{num:402,species:'Kricketune',types:['Bug'],baseStats:{hp:77,atk:85,def:51,spa:55,spd:51,spe:65},abilities:{0:'Swarm',H:'Technician'},heightm:1,weightkg:25.5,color:'Red',prevo:'kricketot',evoLevel:10,eggGroups:['Bug']},shinx:{num:403,species:'Shinx',types:['Electric'],baseStats:{hp:45,atk:65,def:34,spa:40,spd:34,spe:45},abilities:{0:'Rivalry',1:'Intimidate',H:'Guts'},heightm:0.5,weightkg:9.5,color:'Blue',evos:['luxio'],eggGroups:['Field']},luxio:{num:404,species:'Luxio',types:['Electric'],baseStats:{hp:60,atk:85,def:49,spa:60,spd:49,spe:60},abilities:{0:'Rivalry',1:'Intimidate',H:'Guts'},heightm:0.9,weightkg:30.5,color:'Blue',prevo:'shinx',evoLevel:15,evos:['luxray'],eggGroups:['Field']},luxray:{num:405,species:'Luxray',types:['Electric'],baseStats:{hp:80,atk:120,def:79,spa:95,spd:79,spe:70},abilities:{0:'Rivalry',1:'Intimidate',H:'Guts'},heightm:1.4,weightkg:42,color:'Blue',prevo:'luxio',evoLevel:30,eggGroups:['Field']},budew:{num:406,species:'Budew',types:['Grass','Poison'],baseStats:{hp:40,atk:30,def:35,spa:50,spd:70,spe:55},abilities:{0:'Natural Cure',1:'Poison Point',H:'Leaf Guard'},heightm:0.2,weightkg:1.2,color:'Green',evos:['roselia'],eggGroups:['Undiscovered'],canHatch:true},roserade:{num:407,species:'Roserade',types:['Grass','Poison'],baseStats:{hp:60,atk:70,def:65,spa:125,spd:105,spe:90},abilities:{0:'Natural Cure',1:'Poison Point',H:'Technician'},heightm:0.9,weightkg:14.5,color:'Green',prevo:'roselia',evoType:'useItem',evoItem:'Shiny Stone',eggGroups:['Fairy','Grass']},cranidos:{num:408,species:'Cranidos',types:['Rock'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:67,atk:125,def:40,spa:30,spd:30,spe:58},abilities:{0:'Mold Breaker',H:'Sheer Force'},heightm:0.9,weightkg:31.5,color:'Blue',evos:['rampardos'],eggGroups:['Monster']},rampardos:{num:409,species:'Rampardos',types:['Rock'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:97,atk:165,def:60,spa:65,spd:50,spe:58},abilities:{0:'Mold Breaker',H:'Sheer Force'},heightm:1.6,weightkg:102.5,color:'Blue',prevo:'cranidos',evoLevel:30,eggGroups:['Monster']},shieldon:{num:410,species:'Shieldon',types:['Rock','Steel'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:30,atk:42,def:118,spa:42,spd:88,spe:30},abilities:{0:'Sturdy',H:'Soundproof'},heightm:0.5,weightkg:57,color:'Gray',evos:['bastiodon'],eggGroups:['Monster']},bastiodon:{num:411,species:'Bastiodon',types:['Rock','Steel'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:60,atk:52,def:168,spa:47,spd:138,spe:30},abilities:{0:'Sturdy',H:'Soundproof'},heightm:1.3,weightkg:149.5,color:'Gray',prevo:'shieldon',evoLevel:30,eggGroups:['Monster']},burmy:{num:412,species:'Burmy',baseForme:'Plant',types:['Bug'],baseStats:{hp:40,atk:29,def:45,spa:29,spd:45,spe:36},abilities:{0:'Shed Skin',H:'Overcoat'},heightm:0.2,weightkg:3.4,color:'Green',evos:['wormadam','wormadamsandy','wormadamtrash','mothim'],eggGroups:['Bug'],otherForms:['burmysandy','burmytrash']},wormadam:{num:413,species:'Wormadam',baseForme:'Plant',types:['Bug','Grass'],gender:'F',baseStats:{hp:60,atk:59,def:85,spa:79,spd:105,spe:36},abilities:{0:'Anticipation',H:'Overcoat'},heightm:0.5,weightkg:6.5,color:'Green',prevo:'burmy',evoLevel:20,eggGroups:['Bug'],otherFormes:['wormadamsandy','wormadamtrash']},wormadamsandy:{num:413,species:'Wormadam-Sandy',baseSpecies:'Wormadam',forme:'Sandy',types:['Bug','Ground'],gender:'F',baseStats:{hp:60,atk:79,def:105,spa:59,spd:85,spe:36},abilities:{0:'Anticipation',H:'Overcoat'},heightm:0.5,weightkg:6.5,color:'Brown',prevo:'burmy',evoLevel:20,eggGroups:['Bug']},wormadamtrash:{num:413,species:'Wormadam-Trash',baseSpecies:'Wormadam',forme:'Trash',types:['Bug','Steel'],gender:'F',baseStats:{hp:60,atk:69,def:95,spa:69,spd:95,spe:36},abilities:{0:'Anticipation',H:'Overcoat'},heightm:0.5,weightkg:6.5,color:'Red',prevo:'burmy',evoLevel:20,eggGroups:['Bug']},mothim:{num:414,species:'Mothim',types:['Bug','Flying'],gender:'M',baseStats:{hp:70,atk:94,def:50,spa:94,spd:50,spe:66},abilities:{0:'Swarm',H:'Tinted Lens'},heightm:0.9,weightkg:23.3,color:'Yellow',prevo:'burmy',evoLevel:20,eggGroups:['Bug']},combee:{num:415,species:'Combee',types:['Bug','Flying'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:30,atk:30,def:42,spa:30,spd:42,spe:70},abilities:{0:'Honey Gather',H:'Hustle'},heightm:0.3,weightkg:5.5,color:'Yellow',evos:['vespiquen'],eggGroups:['Bug']},vespiquen:{num:416,species:'Vespiquen',types:['Bug','Flying'],gender:'F',baseStats:{hp:70,atk:80,def:102,spa:80,spd:102,spe:40},abilities:{0:'Pressure',H:'Unnerve'},heightm:1.2,weightkg:38.5,color:'Yellow',prevo:'combee',evoLevel:21,eggGroups:['Bug']},pachirisu:{num:417,species:'Pachirisu',types:['Electric'],baseStats:{hp:60,atk:45,def:70,spa:45,spd:90,spe:95},abilities:{0:'Run Away',1:'Pickup',H:'Volt Absorb'},heightm:0.4,weightkg:3.9,color:'White',eggGroups:['Field','Fairy']},buizel:{num:418,species:'Buizel',types:['Water'],baseStats:{hp:55,atk:65,def:35,spa:60,spd:30,spe:85},abilities:{0:'Swift Swim',H:'Water Veil'},heightm:0.7,weightkg:29.5,color:'Brown',evos:['floatzel'],eggGroups:['Water 1','Field']},floatzel:{num:419,species:'Floatzel',types:['Water'],baseStats:{hp:85,atk:105,def:55,spa:85,spd:50,spe:115},abilities:{0:'Swift Swim',H:'Water Veil'},heightm:1.1,weightkg:33.5,color:'Brown',prevo:'buizel',evoLevel:26,eggGroups:['Water 1','Field']},cherubi:{num:420,species:'Cherubi',types:['Grass'],baseStats:{hp:45,atk:35,def:45,spa:62,spd:53,spe:35},abilities:{0:'Chlorophyll'},heightm:0.4,weightkg:3.3,color:'Pink',evos:['cherrim'],eggGroups:['Fairy','Grass']},cherrim:{num:421,species:'Cherrim',baseForme:'Overcast',types:['Grass'],baseStats:{hp:70,atk:60,def:70,spa:87,spd:78,spe:85},abilities:{0:'Flower Gift'},heightm:0.5,weightkg:9.3,color:'Purple',prevo:'cherubi',evoLevel:25,eggGroups:['Fairy','Grass'],otherFormes:['cherrimsunshine']},cherrimsunshine:{num:421,species:'Cherrim-Sunshine',baseSpecies:'Cherrim',forme:'Sunshine',types:['Grass'],baseStats:{hp:70,atk:60,def:70,spa:87,spd:78,spe:85},abilities:{0:'Flower Gift'},heightm:0.5,weightkg:9.3,color:'Pink',prevo:'cherubi',evoLevel:25,eggGroups:['Fairy','Grass']},shellos:{num:422,species:'Shellos',baseForme:'West',types:['Water'],baseStats:{hp:76,atk:48,def:48,spa:57,spd:62,spe:34},abilities:{0:'Sticky Hold',1:'Storm Drain',H:'Sand Force'},heightm:0.3,weightkg:6.3,color:'Purple',evos:['gastrodon'],eggGroups:['Water 1','Amorphous'],otherForms:['shelloseast']},gastrodon:{num:423,species:'Gastrodon',baseForme:'West',types:['Water','Ground'],baseStats:{hp:111,atk:83,def:68,spa:92,spd:82,spe:39},abilities:{0:'Sticky Hold',1:'Storm Drain',H:'Sand Force'},heightm:0.9,weightkg:29.9,color:'Purple',prevo:'shellos',evoLevel:30,eggGroups:['Water 1','Amorphous'],otherForms:['gastrodoneast']},ambipom:{num:424,species:'Ambipom',types:['Normal'],baseStats:{hp:75,atk:100,def:66,spa:60,spd:66,spe:115},abilities:{0:'Technician',1:'Pickup',H:'Skill Link'},heightm:1.2,weightkg:20.3,color:'Purple',prevo:'aipom',evoType:'levelMove',evoMove:'Double Hit',eggGroups:['Field']},drifloon:{num:425,species:'Drifloon',types:['Ghost','Flying'],baseStats:{hp:90,atk:50,def:34,spa:60,spd:44,spe:70},abilities:{0:'Aftermath',1:'Unburden',H:'Flare Boost'},heightm:0.4,weightkg:1.2,color:'Purple',evos:['drifblim'],eggGroups:['Amorphous']},drifblim:{num:426,species:'Drifblim',types:['Ghost','Flying'],baseStats:{hp:150,atk:80,def:44,spa:90,spd:54,spe:80},abilities:{0:'Aftermath',1:'Unburden',H:'Flare Boost'},heightm:1.2,weightkg:15,color:'Purple',prevo:'drifloon',evoLevel:28,eggGroups:['Amorphous']},buneary:{num:427,species:'Buneary',types:['Normal'],baseStats:{hp:55,atk:66,def:44,spa:44,spd:56,spe:85},abilities:{0:'Run Away',1:'Klutz',H:'Limber'},heightm:0.4,weightkg:5.5,color:'Brown',evos:['lopunny'],eggGroups:['Field','Human-Like']},lopunny:{num:428,species:'Lopunny',types:['Normal'],baseStats:{hp:65,atk:76,def:84,spa:54,spd:96,spe:105},abilities:{0:'Cute Charm',1:'Klutz',H:'Limber'},heightm:1.2,weightkg:33.3,color:'Brown',prevo:'buneary',evoType:'levelFriendship',eggGroups:['Field','Human-Like'],otherFormes:['lopunnymega']},lopunnymega:{num:428,species:'Lopunny-Mega',baseSpecies:'Lopunny',forme:'Mega',types:['Normal','Fighting'],baseStats:{hp:65,atk:136,def:94,spa:54,spd:96,spe:135},abilities:{0:'Scrappy'},heightm:1.3,weightkg:28.3,color:'Brown',eggGroups:['Field','Human-Like']},mismagius:{num:429,species:'Mismagius',types:['Ghost'],baseStats:{hp:60,atk:60,def:60,spa:105,spd:105,spe:105},abilities:{0:'Levitate'},heightm:0.9,weightkg:4.4,color:'Purple',prevo:'misdreavus',evoType:'useItem',evoItem:'Dusk Stone',eggGroups:['Amorphous']},honchkrow:{num:430,species:'Honchkrow',types:['Dark','Flying'],baseStats:{hp:100,atk:125,def:52,spa:105,spd:52,spe:71},abilities:{0:'Insomnia',1:'Super Luck',H:'Moxie'},heightm:0.9,weightkg:27.3,color:'Black',prevo:'murkrow',evoType:'useItem',evoItem:'Dusk Stone',eggGroups:['Flying']},glameow:{num:431,species:'Glameow',types:['Normal'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:49,atk:55,def:42,spa:42,spd:37,spe:85},abilities:{0:'Limber',1:'Own Tempo',H:'Keen Eye'},heightm:0.5,weightkg:3.9,color:'Gray',evos:['purugly'],eggGroups:['Field']},purugly:{num:432,species:'Purugly',types:['Normal'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:71,atk:82,def:64,spa:64,spd:59,spe:112},abilities:{0:'Thick Fat',1:'Own Tempo',H:'Defiant'},heightm:1,weightkg:43.8,color:'Gray',prevo:'glameow',evoLevel:38,eggGroups:['Field']},chingling:{num:433,species:'Chingling',types:['Psychic'],baseStats:{hp:45,atk:30,def:50,spa:65,spd:50,spe:45},abilities:{0:'Levitate'},heightm:0.2,weightkg:0.6,color:'Yellow',evos:['chimecho'],eggGroups:['Undiscovered'],canHatch:true},stunky:{num:434,species:'Stunky',types:['Poison','Dark'],baseStats:{hp:63,atk:63,def:47,spa:41,spd:41,spe:74},abilities:{0:'Stench',1:'Aftermath',H:'Keen Eye'},heightm:0.4,weightkg:19.2,color:'Purple',evos:['skuntank'],eggGroups:['Field']},skuntank:{num:435,species:'Skuntank',types:['Poison','Dark'],baseStats:{hp:103,atk:93,def:67,spa:71,spd:61,spe:84},abilities:{0:'Stench',1:'Aftermath',H:'Keen Eye'},heightm:1,weightkg:38,color:'Purple',prevo:'stunky',evoLevel:34,eggGroups:['Field']},bronzor:{num:436,species:'Bronzor',types:['Steel','Psychic'],gender:'N',baseStats:{hp:57,atk:24,def:86,spa:24,spd:86,spe:23},abilities:{0:'Levitate',1:'Heatproof',H:'Heavy Metal'},heightm:0.5,weightkg:60.5,color:'Green',evos:['bronzong'],eggGroups:['Mineral']},bronzong:{num:437,species:'Bronzong',types:['Steel','Psychic'],gender:'N',baseStats:{hp:67,atk:89,def:116,spa:79,spd:116,spe:33},abilities:{0:'Levitate',1:'Heatproof',H:'Heavy Metal'},heightm:1.3,weightkg:187,color:'Green',prevo:'bronzor',evoLevel:33,eggGroups:['Mineral']},bonsly:{num:438,species:'Bonsly',types:['Rock'],baseStats:{hp:50,atk:80,def:95,spa:10,spd:45,spe:10},abilities:{0:'Sturdy',1:'Rock Head',H:'Rattled'},heightm:0.5,weightkg:15,color:'Brown',evos:['sudowoodo'],eggGroups:['Undiscovered'],canHatch:true},mimejr:{num:439,species:'Mime Jr.',types:['Psychic','Fairy'],baseStats:{hp:20,atk:25,def:45,spa:70,spd:90,spe:60},abilities:{0:'Soundproof',1:'Filter',H:'Technician'},heightm:0.6,weightkg:13,color:'Pink',evos:['mrmime','mrmimegalar'],eggGroups:['Undiscovered'],canHatch:true},happiny:{num:440,species:'Happiny',types:['Normal'],gender:'F',baseStats:{hp:100,atk:5,def:5,spa:15,spd:65,spe:30},abilities:{0:'Natural Cure',1:'Serene Grace',H:'Friend Guard'},heightm:0.6,weightkg:24.4,color:'Pink',evos:['chansey'],eggGroups:['Undiscovered'],canHatch:true},chatot:{num:441,species:'Chatot',types:['Normal','Flying'],baseStats:{hp:76,atk:65,def:45,spa:92,spd:42,spe:91},abilities:{0:'Keen Eye',1:'Tangled Feet',H:'Big Pecks'},heightm:0.5,weightkg:1.9,color:'Black',eggGroups:['Flying']},spiritomb:{num:442,species:'Spiritomb',types:['Ghost','Dark'],baseStats:{hp:50,atk:92,def:108,spa:92,spd:108,spe:35},abilities:{0:'Pressure',H:'Infiltrator'},heightm:1,weightkg:108,color:'Purple',eggGroups:['Amorphous']},gible:{num:443,species:'Gible',types:['Dragon','Ground'],baseStats:{hp:58,atk:70,def:45,spa:40,spd:45,spe:42},abilities:{0:'Sand Veil',H:'Rough Skin'},heightm:0.7,weightkg:20.5,color:'Blue',evos:['gabite'],eggGroups:['Monster','Dragon']},gabite:{num:444,species:'Gabite',types:['Dragon','Ground'],baseStats:{hp:68,atk:90,def:65,spa:50,spd:55,spe:82},abilities:{0:'Sand Veil',H:'Rough Skin'},heightm:1.4,weightkg:56,color:'Blue',prevo:'gible',evoLevel:24,evos:['garchomp'],eggGroups:['Monster','Dragon']},garchomp:{num:445,species:'Garchomp',types:['Dragon','Ground'],baseStats:{hp:108,atk:130,def:95,spa:80,spd:85,spe:102},abilities:{0:'Sand Veil',H:'Rough Skin'},heightm:1.9,weightkg:95,color:'Blue',prevo:'gabite',evoLevel:48,eggGroups:['Monster','Dragon'],otherFormes:['garchompmega']},garchompmega:{num:445,species:'Garchomp-Mega',baseSpecies:'Garchomp',forme:'Mega',types:['Dragon','Ground'],baseStats:{hp:108,atk:170,def:115,spa:120,spd:95,spe:92},abilities:{0:'Sand Force'},heightm:1.9,weightkg:95,color:'Blue',eggGroups:['Monster','Dragon']},munchlax:{num:446,species:'Munchlax',types:['Normal'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:135,atk:85,def:40,spa:40,spd:85,spe:5},abilities:{0:'Pickup',1:'Thick Fat',H:'Gluttony'},heightm:0.6,weightkg:105,color:'Black',evos:['snorlax'],eggGroups:['Undiscovered'],canHatch:true},riolu:{num:447,species:'Riolu',types:['Fighting'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:40,atk:70,def:40,spa:35,spd:40,spe:60},abilities:{0:'Steadfast',1:'Inner Focus',H:'Prankster'},heightm:0.7,weightkg:20.2,color:'Blue',evos:['lucario'],eggGroups:['Undiscovered'],canHatch:true},lucario:{num:448,species:'Lucario',types:['Fighting','Steel'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:70,atk:110,def:70,spa:115,spd:70,spe:90},abilities:{0:'Steadfast',1:'Inner Focus',H:'Justified'},heightm:1.2,weightkg:54,color:'Blue',prevo:'riolu',evoType:'levelFriendship',evoCondition:'during the day',eggGroups:['Field','Human-Like'],otherFormes:['lucariomega']},lucariomega:{num:448,species:'Lucario-Mega',baseSpecies:'Lucario',forme:'Mega',types:['Fighting','Steel'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:70,atk:145,def:88,spa:140,spd:70,spe:112},abilities:{0:'Adaptability'},heightm:1.3,weightkg:57.5,color:'Blue',eggGroups:['Field','Human-Like']},hippopotas:{num:449,species:'Hippopotas',types:['Ground'],baseStats:{hp:68,atk:72,def:78,spa:38,spd:42,spe:32},abilities:{0:'Sand Stream',H:'Sand Force'},heightm:0.8,weightkg:49.5,color:'Brown',evos:['hippowdon'],eggGroups:['Field']},hippowdon:{num:450,species:'Hippowdon',types:['Ground'],baseStats:{hp:108,atk:112,def:118,spa:68,spd:72,spe:47},abilities:{0:'Sand Stream',H:'Sand Force'},heightm:2,weightkg:300,color:'Brown',prevo:'hippopotas',evoLevel:34,eggGroups:['Field']},skorupi:{num:451,species:'Skorupi',types:['Poison','Bug'],baseStats:{hp:40,atk:50,def:90,spa:30,spd:55,spe:65},abilities:{0:'Battle Armor',1:'Sniper',H:'Keen Eye'},heightm:0.8,weightkg:12,color:'Purple',evos:['drapion'],eggGroups:['Bug','Water 3']},drapion:{num:452,species:'Drapion',types:['Poison','Dark'],baseStats:{hp:70,atk:90,def:110,spa:60,spd:75,spe:95},abilities:{0:'Battle Armor',1:'Sniper',H:'Keen Eye'},heightm:1.3,weightkg:61.5,color:'Purple',prevo:'skorupi',evoLevel:40,eggGroups:['Bug','Water 3']},croagunk:{num:453,species:'Croagunk',types:['Poison','Fighting'],baseStats:{hp:48,atk:61,def:40,spa:61,spd:40,spe:50},abilities:{0:'Anticipation',1:'Dry Skin',H:'Poison Touch'},heightm:0.7,weightkg:23,color:'Blue',evos:['toxicroak'],eggGroups:['Human-Like']},toxicroak:{num:454,species:'Toxicroak',types:['Poison','Fighting'],baseStats:{hp:83,atk:106,def:65,spa:86,spd:65,spe:85},abilities:{0:'Anticipation',1:'Dry Skin',H:'Poison Touch'},heightm:1.3,weightkg:44.4,color:'Blue',prevo:'croagunk',evoLevel:37,eggGroups:['Human-Like']},carnivine:{num:455,species:'Carnivine',types:['Grass'],baseStats:{hp:74,atk:100,def:72,spa:90,spd:72,spe:46},abilities:{0:'Levitate'},heightm:1.4,weightkg:27,color:'Green',eggGroups:['Grass']},finneon:{num:456,species:'Finneon',types:['Water'],baseStats:{hp:49,atk:49,def:56,spa:49,spd:61,spe:66},abilities:{0:'Swift Swim',1:'Storm Drain',H:'Water Veil'},heightm:0.4,weightkg:7,color:'Blue',evos:['lumineon'],eggGroups:['Water 2']},lumineon:{num:457,species:'Lumineon',types:['Water'],baseStats:{hp:69,atk:69,def:76,spa:69,spd:86,spe:91},abilities:{0:'Swift Swim',1:'Storm Drain',H:'Water Veil'},heightm:1.2,weightkg:24,color:'Blue',prevo:'finneon',evoLevel:31,eggGroups:['Water 2']},mantyke:{num:458,species:'Mantyke',types:['Water','Flying'],baseStats:{hp:45,atk:20,def:50,spa:60,spd:120,spe:50},abilities:{0:'Swift Swim',1:'Water Absorb',H:'Water Veil'},heightm:1,weightkg:65,color:'Blue',evos:['mantine'],eggGroups:['Undiscovered'],canHatch:true},snover:{num:459,species:'Snover',types:['Grass','Ice'],baseStats:{hp:60,atk:62,def:50,spa:62,spd:60,spe:40},abilities:{0:'Snow Warning',H:'Soundproof'},heightm:1,weightkg:50.5,color:'White',evos:['abomasnow'],eggGroups:['Monster','Grass']},abomasnow:{num:460,species:'Abomasnow',types:['Grass','Ice'],baseStats:{hp:90,atk:92,def:75,spa:92,spd:85,spe:60},abilities:{0:'Snow Warning',H:'Soundproof'},heightm:2.2,weightkg:135.5,color:'White',prevo:'snover',evoLevel:40,eggGroups:['Monster','Grass'],otherFormes:['abomasnowmega']},abomasnowmega:{num:460,species:'Abomasnow-Mega',baseSpecies:'Abomasnow',forme:'Mega',types:['Grass','Ice'],baseStats:{hp:90,atk:132,def:105,spa:132,spd:105,spe:30},abilities:{0:'Snow Warning'},heightm:2.7,weightkg:185,color:'White',eggGroups:['Monster','Grass']},weavile:{num:461,species:'Weavile',types:['Dark','Ice'],baseStats:{hp:70,atk:120,def:65,spa:45,spd:85,spe:125},abilities:{0:'Pressure',H:'Pickpocket'},heightm:1.1,weightkg:34,color:'Black',prevo:'sneasel',evoType:'levelHold',evoItem:'Razor Claw',eggGroups:['Field']},magnezone:{num:462,species:'Magnezone',types:['Electric','Steel'],gender:'N',baseStats:{hp:70,atk:70,def:115,spa:130,spd:90,spe:60},abilities:{0:'Magnet Pull',1:'Sturdy',H:'Analytic'},heightm:1.2,weightkg:180,color:'Gray',prevo:'magneton',evoType:'levelExtra',evoCondition:'in a special magnetic field',eggGroups:['Mineral']},lickilicky:{num:463,species:'Lickilicky',types:['Normal'],baseStats:{hp:110,atk:85,def:95,spa:80,spd:95,spe:50},abilities:{0:'Own Tempo',1:'Oblivious',H:'Cloud Nine'},heightm:1.7,weightkg:140,color:'Pink',prevo:'lickitung',evoType:'levelMove',evoMove:'Rollout',eggGroups:['Monster']},rhyperior:{num:464,species:'Rhyperior',types:['Ground','Rock'],baseStats:{hp:115,atk:140,def:130,spa:55,spd:55,spe:40},abilities:{0:'Lightning Rod',1:'Solid Rock',H:'Reckless'},heightm:2.4,weightkg:282.8,color:'Gray',prevo:'rhydon',evoType:'trade',evoItem:'Protector',eggGroups:['Monster','Field']},tangrowth:{num:465,species:'Tangrowth',types:['Grass'],baseStats:{hp:100,atk:100,def:125,spa:110,spd:50,spe:50},abilities:{0:'Chlorophyll',1:'Leaf Guard',H:'Regenerator'},heightm:2,weightkg:128.6,color:'Blue',prevo:'tangela',evoType:'levelMove',evoMove:'Ancient Power',eggGroups:['Grass']},electivire:{num:466,species:'Electivire',types:['Electric'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:75,atk:123,def:67,spa:95,spd:85,spe:95},abilities:{0:'Motor Drive',H:'Vital Spirit'},heightm:1.8,weightkg:138.6,color:'Yellow',prevo:'electabuzz',evoType:'trade',evoItem:'Electrizer',eggGroups:['Human-Like']},magmortar:{num:467,species:'Magmortar',types:['Fire'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:75,atk:95,def:67,spa:125,spd:95,spe:83},abilities:{0:'Flame Body',H:'Vital Spirit'},heightm:1.6,weightkg:68,color:'Red',prevo:'magmar',evoType:'trade',evoItem:'Magmarizer',eggGroups:['Human-Like']},togekiss:{num:468,species:'Togekiss',types:['Fairy','Flying'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:85,atk:50,def:95,spa:120,spd:115,spe:80},abilities:{0:'Hustle',1:'Serene Grace',H:'Super Luck'},heightm:1.5,weightkg:38,color:'White',prevo:'togetic',evoType:'useItem',evoItem:'Shiny Stone',eggGroups:['Flying','Fairy']},yanmega:{num:469,species:'Yanmega',types:['Bug','Flying'],baseStats:{hp:86,atk:76,def:86,spa:116,spd:56,spe:95},abilities:{0:'Speed Boost',1:'Tinted Lens',H:'Frisk'},heightm:1.9,weightkg:51.5,color:'Green',prevo:'yanma',evoType:'levelMove',evoMove:'Ancient Power',eggGroups:['Bug']},leafeon:{num:470,species:'Leafeon',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:65,atk:110,def:130,spa:60,spd:65,spe:95},abilities:{0:'Leaf Guard',H:'Chlorophyll'},heightm:1,weightkg:25.5,color:'Green',prevo:'eevee',evoType:'useItem',evoItem:'Leaf Stone',eggGroups:['Field']},glaceon:{num:471,species:'Glaceon',types:['Ice'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:65,atk:60,def:110,spa:130,spd:95,spe:65},abilities:{0:'Snow Cloak',H:'Ice Body'},heightm:0.8,weightkg:25.9,color:'Blue',prevo:'eevee',evoType:'useItem',evoItem:'Ice Stone',eggGroups:['Field']},gliscor:{num:472,species:'Gliscor',types:['Ground','Flying'],baseStats:{hp:75,atk:95,def:125,spa:45,spd:75,spe:95},abilities:{0:'Hyper Cutter',1:'Sand Veil',H:'Poison Heal'},heightm:2,weightkg:42.5,color:'Purple',prevo:'gligar',evoType:'levelHold',evoItem:'Razor Fang',evoCondition:'at night',eggGroups:['Bug']},mamoswine:{num:473,species:'Mamoswine',types:['Ice','Ground'],baseStats:{hp:110,atk:130,def:80,spa:70,spd:60,spe:80},abilities:{0:'Oblivious',1:'Snow Cloak',H:'Thick Fat'},heightm:2.5,weightkg:291,color:'Brown',prevo:'piloswine',evoType:'levelMove',evoMove:'Ancient Power',eggGroups:['Field']},porygonz:{num:474,species:'Porygon-Z',types:['Normal'],gender:'N',baseStats:{hp:85,atk:80,def:70,spa:135,spd:75,spe:90},abilities:{0:'Adaptability',1:'Download',H:'Analytic'},heightm:0.9,weightkg:34,color:'Red',prevo:'porygon2',evoType:'trade',evoItem:'Dubious Disk',eggGroups:['Mineral']},gallade:{num:475,species:'Gallade',types:['Psychic','Fighting'],gender:'M',baseStats:{hp:68,atk:125,def:65,spa:65,spd:115,spe:80},abilities:{0:'Steadfast',H:'Justified'},heightm:1.6,weightkg:52,color:'White',prevo:'kirlia',evoType:'useItem',evoItem:'Dawn Stone',eggGroups:['Human-Like','Amorphous'],otherFormes:['gallademega']},gallademega:{num:475,species:'Gallade-Mega',baseSpecies:'Gallade',forme:'Mega',types:['Psychic','Fighting'],gender:'M',baseStats:{hp:68,atk:165,def:95,spa:65,spd:115,spe:110},abilities:{0:'Inner Focus'},heightm:1.6,weightkg:56.4,color:'White',eggGroups:['Amorphous']},probopass:{num:476,species:'Probopass',types:['Rock','Steel'],baseStats:{hp:60,atk:55,def:145,spa:75,spd:150,spe:40},abilities:{0:'Sturdy',1:'Magnet Pull',H:'Sand Force'},heightm:1.4,weightkg:340,color:'Gray',prevo:'nosepass',evoType:'levelExtra',evoCondition:'near a special magnetic field',eggGroups:['Mineral']},dusknoir:{num:477,species:'Dusknoir',types:['Ghost'],baseStats:{hp:45,atk:100,def:135,spa:65,spd:135,spe:45},abilities:{0:'Pressure',H:'Frisk'},heightm:2.2,weightkg:106.6,color:'Black',prevo:'dusclops',evoType:'trade',evoItem:'Reaper Cloth',eggGroups:['Amorphous']},froslass:{num:478,species:'Froslass',types:['Ice','Ghost'],gender:'F',baseStats:{hp:70,atk:80,def:70,spa:80,spd:70,spe:110},abilities:{0:'Snow Cloak',H:'Cursed Body'},heightm:1.3,weightkg:26.6,color:'White',prevo:'snorunt',evoType:'useItem',evoItem:'Dawn Stone',eggGroups:['Fairy','Mineral']},rotom:{num:479,species:'Rotom',types:['Electric','Ghost'],gender:'N',baseStats:{hp:50,atk:50,def:77,spa:95,spd:77,spe:91},abilities:{0:'Levitate'},heightm:0.3,weightkg:0.3,color:'Red',eggGroups:['Amorphous'],otherFormes:['rotomheat','rotomwash','rotomfrost','rotomfan','rotommow']},rotomheat:{num:479,species:'Rotom-Heat',baseSpecies:'Rotom',forme:'Heat',types:['Electric','Fire'],gender:'N',baseStats:{hp:50,atk:65,def:107,spa:105,spd:107,spe:86},abilities:{0:'Levitate'},heightm:0.3,weightkg:0.3,color:'Red',eggGroups:['Amorphous'],inheritsFrom:'rotom'},rotomwash:{num:479,species:'Rotom-Wash',baseSpecies:'Rotom',forme:'Wash',types:['Electric','Water'],gender:'N',baseStats:{hp:50,atk:65,def:107,spa:105,spd:107,spe:86},abilities:{0:'Levitate'},heightm:0.3,weightkg:0.3,color:'Red',eggGroups:['Amorphous'],inheritsFrom:'rotom'},rotomfrost:{num:479,species:'Rotom-Frost',baseSpecies:'Rotom',forme:'Frost',types:['Electric','Ice'],gender:'N',baseStats:{hp:50,atk:65,def:107,spa:105,spd:107,spe:86},abilities:{0:'Levitate'},heightm:0.3,weightkg:0.3,color:'Red',eggGroups:['Amorphous'],inheritsFrom:'rotom'},rotomfan:{num:479,species:'Rotom-Fan',baseSpecies:'Rotom',forme:'Fan',types:['Electric','Flying'],gender:'N',baseStats:{hp:50,atk:65,def:107,spa:105,spd:107,spe:86},abilities:{0:'Levitate'},heightm:0.3,weightkg:0.3,color:'Red',eggGroups:['Amorphous'],inheritsFrom:'rotom'},rotommow:{num:479,species:'Rotom-Mow',baseSpecies:'Rotom',forme:'Mow',types:['Electric','Grass'],gender:'N',baseStats:{hp:50,atk:65,def:107,spa:105,spd:107,spe:86},abilities:{0:'Levitate'},heightm:0.3,weightkg:0.3,color:'Red',eggGroups:['Amorphous'],inheritsFrom:'rotom'},uxie:{num:480,species:'Uxie',types:['Psychic'],gender:'N',baseStats:{hp:75,atk:75,def:130,spa:75,spd:130,spe:95},abilities:{0:'Levitate'},heightm:0.3,weightkg:0.3,color:'Yellow',eggGroups:['Undiscovered']},mesprit:{num:481,species:'Mesprit',types:['Psychic'],gender:'N',baseStats:{hp:80,atk:105,def:105,spa:105,spd:105,spe:80},abilities:{0:'Levitate'},heightm:0.3,weightkg:0.3,color:'Pink',eggGroups:['Undiscovered']},azelf:{num:482,species:'Azelf',types:['Psychic'],gender:'N',baseStats:{hp:75,atk:125,def:70,spa:125,spd:70,spe:115},abilities:{0:'Levitate'},heightm:0.3,weightkg:0.3,color:'Blue',eggGroups:['Undiscovered']},dialga:{num:483,species:'Dialga',types:['Steel','Dragon'],gender:'N',baseStats:{hp:100,atk:120,def:120,spa:150,spd:100,spe:90},abilities:{0:'Pressure',H:'Telepathy'},heightm:5.4,weightkg:683,color:'White',eggGroups:['Undiscovered']},palkia:{num:484,species:'Palkia',types:['Water','Dragon'],gender:'N',baseStats:{hp:90,atk:120,def:100,spa:150,spd:120,spe:100},abilities:{0:'Pressure',H:'Telepathy'},heightm:4.2,weightkg:336,color:'Purple',eggGroups:['Undiscovered']},heatran:{num:485,species:'Heatran',types:['Fire','Steel'],baseStats:{hp:91,atk:90,def:106,spa:130,spd:106,spe:77},abilities:{0:'Flash Fire',H:'Flame Body'},heightm:1.7,weightkg:430,color:'Brown',eggGroups:['Undiscovered']},regigigas:{num:486,species:'Regigigas',types:['Normal'],gender:'N',baseStats:{hp:110,atk:160,def:110,spa:80,spd:110,spe:100},abilities:{0:'Slow Start'},heightm:3.7,weightkg:420,color:'White',eggGroups:['Undiscovered']},giratina:{num:487,species:'Giratina',baseForme:'Altered',types:['Ghost','Dragon'],gender:'N',baseStats:{hp:150,atk:100,def:120,spa:100,spd:120,spe:90},abilities:{0:'Pressure',H:'Telepathy'},heightm:4.5,weightkg:750,color:'Black',eggGroups:['Undiscovered'],otherFormes:['giratinaorigin']},giratinaorigin:{num:487,species:'Giratina-Origin',baseSpecies:'Giratina',forme:'Origin',types:['Ghost','Dragon'],gender:'N',baseStats:{hp:150,atk:120,def:100,spa:120,spd:100,spe:90},abilities:{0:'Levitate'},heightm:6.9,weightkg:650,color:'Black',eggGroups:['Undiscovered'],inheritsFrom:'giratina'},cresselia:{num:488,species:'Cresselia',types:['Psychic'],gender:'F',baseStats:{hp:120,atk:70,def:120,spa:75,spd:130,spe:85},abilities:{0:'Levitate'},heightm:1.5,weightkg:85.6,color:'Yellow',eggGroups:['Undiscovered']},phione:{num:489,species:'Phione',types:['Water'],gender:'N',baseStats:{hp:80,atk:80,def:80,spa:80,spd:80,spe:80},abilities:{0:'Hydration'},heightm:0.4,weightkg:3.1,color:'Blue',eggGroups:['Water 1','Fairy']},manaphy:{num:490,species:'Manaphy',types:['Water'],gender:'N',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Hydration'},heightm:0.3,weightkg:1.4,color:'Blue',eggGroups:['Water 1','Fairy'],canHatch:false},darkrai:{num:491,species:'Darkrai',types:['Dark'],gender:'N',baseStats:{hp:70,atk:90,def:90,spa:135,spd:90,spe:125},abilities:{0:'Bad Dreams'},heightm:1.5,weightkg:50.5,color:'Black',eggGroups:['Undiscovered']},shaymin:{num:492,species:'Shaymin',baseForme:'Land',types:['Grass'],gender:'N',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Natural Cure'},heightm:0.2,weightkg:2.1,color:'Green',eggGroups:['Undiscovered'],otherFormes:['shayminsky']},shayminsky:{num:492,species:'Shaymin-Sky',baseSpecies:'Shaymin',forme:'Sky',types:['Grass','Flying'],gender:'N',baseStats:{hp:100,atk:103,def:75,spa:120,spd:75,spe:127},abilities:{0:'Serene Grace'},heightm:0.4,weightkg:5.2,color:'Green',eggGroups:['Undiscovered'],inheritsFrom:'shaymin'},arceus:{num:493,species:'Arceus',baseForme:'Normal',types:['Normal'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'White',eggGroups:['Undiscovered'],otherFormes:['arceusbug','arceusdark','arceusdragon','arceuselectric','arceusfairy','arceusfighting','arceusfire','arceusflying','arceusghost','arceusgrass','arceusground','arceusice','arceuspoison','arceuspsychic','arceusrock','arceussteel','arceuswater']},arceusbug:{num:493,species:'Arceus-Bug',baseSpecies:'Arceus',forme:'Bug',types:['Bug'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceusdark:{num:493,species:'Arceus-Dark',baseSpecies:'Arceus',forme:'Dark',types:['Dark'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceusdragon:{num:493,species:'Arceus-Dragon',baseSpecies:'Arceus',forme:'Dragon',types:['Dragon'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceuselectric:{num:493,species:'Arceus-Electric',baseSpecies:'Arceus',forme:'Electric',types:['Electric'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceusfairy:{num:493,species:'Arceus-Fairy',baseSpecies:'Arceus',forme:'Fairy',types:['Fairy'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceusfighting:{num:493,species:'Arceus-Fighting',baseSpecies:'Arceus',forme:'Fighting',types:['Fighting'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceusfire:{num:493,species:'Arceus-Fire',baseSpecies:'Arceus',forme:'Fire',types:['Fire'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceusflying:{num:493,species:'Arceus-Flying',baseSpecies:'Arceus',forme:'Flying',types:['Flying'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceusghost:{num:493,species:'Arceus-Ghost',baseSpecies:'Arceus',forme:'Ghost',types:['Ghost'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceusgrass:{num:493,species:'Arceus-Grass',baseSpecies:'Arceus',forme:'Grass',types:['Grass'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceusground:{num:493,species:'Arceus-Ground',baseSpecies:'Arceus',forme:'Ground',types:['Ground'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceusice:{num:493,species:'Arceus-Ice',baseSpecies:'Arceus',forme:'Ice',types:['Ice'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceuspoison:{num:493,species:'Arceus-Poison',baseSpecies:'Arceus',forme:'Poison',types:['Poison'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceuspsychic:{num:493,species:'Arceus-Psychic',baseSpecies:'Arceus',forme:'Psychic',types:['Psychic'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceusrock:{num:493,species:'Arceus-Rock',baseSpecies:'Arceus',forme:'Rock',types:['Rock'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceussteel:{num:493,species:'Arceus-Steel',baseSpecies:'Arceus',forme:'Steel',types:['Steel'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},arceuswater:{num:493,species:'Arceus-Water',baseSpecies:'Arceus',forme:'Water',types:['Water'],gender:'N',baseStats:{hp:120,atk:120,def:120,spa:120,spd:120,spe:120},abilities:{0:'Multitype'},heightm:3.2,weightkg:320,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'arceus'},victini:{num:494,species:'Victini',types:['Psychic','Fire'],gender:'N',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Victory Star'},heightm:0.4,weightkg:4,color:'Yellow',eggGroups:['Undiscovered']},snivy:{num:495,species:'Snivy',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:45,atk:45,def:55,spa:45,spd:55,spe:63},abilities:{0:'Overgrow',H:'Contrary'},heightm:0.6,weightkg:8.1,color:'Green',evos:['servine'],eggGroups:['Field','Grass']},servine:{num:496,species:'Servine',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:60,atk:60,def:75,spa:60,spd:75,spe:83},abilities:{0:'Overgrow',H:'Contrary'},heightm:0.8,weightkg:16,color:'Green',prevo:'snivy',evoLevel:17,evos:['serperior'],eggGroups:['Field','Grass']},serperior:{num:497,species:'Serperior',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:75,atk:75,def:95,spa:75,spd:95,spe:113},abilities:{0:'Overgrow',H:'Contrary'},heightm:3.3,weightkg:63,color:'Green',prevo:'servine',evoLevel:36,eggGroups:['Field','Grass']},tepig:{num:498,species:'Tepig',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:65,atk:63,def:45,spa:45,spd:45,spe:45},abilities:{0:'Blaze',H:'Thick Fat'},heightm:0.5,weightkg:9.9,color:'Red',evos:['pignite'],eggGroups:['Field']},pignite:{num:499,species:'Pignite',types:['Fire','Fighting'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:90,atk:93,def:55,spa:70,spd:55,spe:55},abilities:{0:'Blaze',H:'Thick Fat'},heightm:1,weightkg:55.5,color:'Red',prevo:'tepig',evoLevel:17,evos:['emboar'],eggGroups:['Field']},emboar:{num:500,species:'Emboar',types:['Fire','Fighting'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:110,atk:123,def:65,spa:100,spd:65,spe:65},abilities:{0:'Blaze',H:'Reckless'},heightm:1.6,weightkg:150,color:'Red',prevo:'pignite',evoLevel:36,eggGroups:['Field']},oshawott:{num:501,species:'Oshawott',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:55,atk:55,def:45,spa:63,spd:45,spe:45},abilities:{0:'Torrent',H:'Shell Armor'},heightm:0.5,weightkg:5.9,color:'Blue',evos:['dewott'],eggGroups:['Field']},dewott:{num:502,species:'Dewott',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:75,atk:75,def:60,spa:83,spd:60,spe:60},abilities:{0:'Torrent',H:'Shell Armor'},heightm:0.8,weightkg:24.5,color:'Blue',prevo:'oshawott',evoLevel:17,evos:['samurott'],eggGroups:['Field']},samurott:{num:503,species:'Samurott',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:95,atk:100,def:85,spa:108,spd:70,spe:70},abilities:{0:'Torrent',H:'Shell Armor'},heightm:1.5,weightkg:94.6,color:'Blue',prevo:'dewott',evoLevel:36,eggGroups:['Field']},patrat:{num:504,species:'Patrat',types:['Normal'],baseStats:{hp:45,atk:55,def:39,spa:35,spd:39,spe:42},abilities:{0:'Run Away',1:'Keen Eye',H:'Analytic'},heightm:0.5,weightkg:11.6,color:'Brown',evos:['watchog'],eggGroups:['Field']},watchog:{num:505,species:'Watchog',types:['Normal'],baseStats:{hp:60,atk:85,def:69,spa:60,spd:69,spe:77},abilities:{0:'Illuminate',1:'Keen Eye',H:'Analytic'},heightm:1.1,weightkg:27,color:'Brown',prevo:'patrat',evoLevel:20,eggGroups:['Field']},lillipup:{num:506,species:'Lillipup',types:['Normal'],baseStats:{hp:45,atk:60,def:45,spa:25,spd:45,spe:55},abilities:{0:'Vital Spirit',1:'Pickup',H:'Run Away'},heightm:0.4,weightkg:4.1,color:'Brown',evos:['herdier'],eggGroups:['Field']},herdier:{num:507,species:'Herdier',types:['Normal'],baseStats:{hp:65,atk:80,def:65,spa:35,spd:65,spe:60},abilities:{0:'Intimidate',1:'Sand Rush',H:'Scrappy'},heightm:0.9,weightkg:14.7,color:'Gray',prevo:'lillipup',evoLevel:16,evos:['stoutland'],eggGroups:['Field']},stoutland:{num:508,species:'Stoutland',types:['Normal'],baseStats:{hp:85,atk:110,def:90,spa:45,spd:90,spe:80},abilities:{0:'Intimidate',1:'Sand Rush',H:'Scrappy'},heightm:1.2,weightkg:61,color:'Gray',prevo:'herdier',evoLevel:32,eggGroups:['Field']},purrloin:{num:509,species:'Purrloin',types:['Dark'],baseStats:{hp:41,atk:50,def:37,spa:50,spd:37,spe:66},abilities:{0:'Limber',1:'Unburden',H:'Prankster'},heightm:0.4,weightkg:10.1,color:'Purple',evos:['liepard'],eggGroups:['Field']},liepard:{num:510,species:'Liepard',types:['Dark'],baseStats:{hp:64,atk:88,def:50,spa:88,spd:50,spe:106},abilities:{0:'Limber',1:'Unburden',H:'Prankster'},heightm:1.1,weightkg:37.5,color:'Purple',prevo:'purrloin',evoLevel:20,eggGroups:['Field']},pansage:{num:511,species:'Pansage',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:50,atk:53,def:48,spa:53,spd:48,spe:64},abilities:{0:'Gluttony',H:'Overgrow'},heightm:0.6,weightkg:10.5,color:'Green',evos:['simisage'],eggGroups:['Field']},simisage:{num:512,species:'Simisage',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:75,atk:98,def:63,spa:98,spd:63,spe:101},abilities:{0:'Gluttony',H:'Overgrow'},heightm:1.1,weightkg:30.5,color:'Green',prevo:'pansage',evoType:'useItem',evoItem:'Leaf Stone',eggGroups:['Field']},pansear:{num:513,species:'Pansear',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:50,atk:53,def:48,spa:53,spd:48,spe:64},abilities:{0:'Gluttony',H:'Blaze'},heightm:0.6,weightkg:11,color:'Red',evos:['simisear'],eggGroups:['Field']},simisear:{num:514,species:'Simisear',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:75,atk:98,def:63,spa:98,spd:63,spe:101},abilities:{0:'Gluttony',H:'Blaze'},heightm:1,weightkg:28,color:'Red',prevo:'pansear',evoType:'useItem',evoItem:'Fire Stone',eggGroups:['Field']},panpour:{num:515,species:'Panpour',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:50,atk:53,def:48,spa:53,spd:48,spe:64},abilities:{0:'Gluttony',H:'Torrent'},heightm:0.6,weightkg:13.5,color:'Blue',evos:['simipour'],eggGroups:['Field']},simipour:{num:516,species:'Simipour',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:75,atk:98,def:63,spa:98,spd:63,spe:101},abilities:{0:'Gluttony',H:'Torrent'},heightm:1,weightkg:29,color:'Blue',prevo:'panpour',evoType:'useItem',evoItem:'Water Stone',eggGroups:['Field']},munna:{num:517,species:'Munna',types:['Psychic'],baseStats:{hp:76,atk:25,def:45,spa:67,spd:55,spe:24},abilities:{0:'Forewarn',1:'Synchronize',H:'Telepathy'},heightm:0.6,weightkg:23.3,color:'Pink',evos:['musharna'],eggGroups:['Field']},musharna:{num:518,species:'Musharna',types:['Psychic'],baseStats:{hp:116,atk:55,def:85,spa:107,spd:95,spe:29},abilities:{0:'Forewarn',1:'Synchronize',H:'Telepathy'},heightm:1.1,weightkg:60.5,color:'Pink',prevo:'munna',evoType:'useItem',evoItem:'Moon Stone',eggGroups:['Field']},pidove:{num:519,species:'Pidove',types:['Normal','Flying'],baseStats:{hp:50,atk:55,def:50,spa:36,spd:30,spe:43},abilities:{0:'Big Pecks',1:'Super Luck',H:'Rivalry'},heightm:0.3,weightkg:2.1,color:'Gray',evos:['tranquill'],eggGroups:['Flying']},tranquill:{num:520,species:'Tranquill',types:['Normal','Flying'],baseStats:{hp:62,atk:77,def:62,spa:50,spd:42,spe:65},abilities:{0:'Big Pecks',1:'Super Luck',H:'Rivalry'},heightm:0.6,weightkg:15,color:'Gray',prevo:'pidove',evoLevel:21,evos:['unfezant'],eggGroups:['Flying']},unfezant:{num:521,species:'Unfezant',types:['Normal','Flying'],baseStats:{hp:80,atk:115,def:80,spa:65,spd:55,spe:93},abilities:{0:'Big Pecks',1:'Super Luck',H:'Rivalry'},heightm:1.2,weightkg:29,color:'Gray',prevo:'tranquill',evoLevel:32,eggGroups:['Flying']},blitzle:{num:522,species:'Blitzle',types:['Electric'],baseStats:{hp:45,atk:60,def:32,spa:50,spd:32,spe:76},abilities:{0:'Lightning Rod',1:'Motor Drive',H:'Sap Sipper'},heightm:0.8,weightkg:29.8,color:'Black',evos:['zebstrika'],eggGroups:['Field']},zebstrika:{num:523,species:'Zebstrika',types:['Electric'],baseStats:{hp:75,atk:100,def:63,spa:80,spd:63,spe:116},abilities:{0:'Lightning Rod',1:'Motor Drive',H:'Sap Sipper'},heightm:1.6,weightkg:79.5,color:'Black',prevo:'blitzle',evoLevel:27,eggGroups:['Field']},roggenrola:{num:524,species:'Roggenrola',types:['Rock'],baseStats:{hp:55,atk:75,def:85,spa:25,spd:25,spe:15},abilities:{0:'Sturdy',1:'Weak Armor',H:'Sand Force'},heightm:0.4,weightkg:18,color:'Blue',evos:['boldore'],eggGroups:['Mineral']},boldore:{num:525,species:'Boldore',types:['Rock'],baseStats:{hp:70,atk:105,def:105,spa:50,spd:40,spe:20},abilities:{0:'Sturdy',1:'Weak Armor',H:'Sand Force'},heightm:0.9,weightkg:102,color:'Blue',prevo:'roggenrola',evoLevel:25,evos:['gigalith'],eggGroups:['Mineral']},gigalith:{num:526,species:'Gigalith',types:['Rock'],baseStats:{hp:85,atk:135,def:130,spa:60,spd:80,spe:25},abilities:{0:'Sturdy',1:'Sand Stream',H:'Sand Force'},heightm:1.7,weightkg:260,color:'Blue',prevo:'boldore',evoType:'trade',eggGroups:['Mineral']},woobat:{num:527,species:'Woobat',types:['Psychic','Flying'],baseStats:{hp:65,atk:45,def:43,spa:55,spd:43,spe:72},abilities:{0:'Unaware',1:'Klutz',H:'Simple'},heightm:0.4,weightkg:2.1,color:'Blue',evos:['swoobat'],eggGroups:['Flying','Field']},swoobat:{num:528,species:'Swoobat',types:['Psychic','Flying'],baseStats:{hp:67,atk:57,def:55,spa:77,spd:55,spe:114},abilities:{0:'Unaware',1:'Klutz',H:'Simple'},heightm:0.9,weightkg:10.5,color:'Blue',prevo:'woobat',evoType:'levelFriendship',eggGroups:['Flying','Field']},drilbur:{num:529,species:'Drilbur',types:['Ground'],baseStats:{hp:60,atk:85,def:40,spa:30,spd:45,spe:68},abilities:{0:'Sand Rush',1:'Sand Force',H:'Mold Breaker'},heightm:0.3,weightkg:8.5,color:'Gray',evos:['excadrill'],eggGroups:['Field']},excadrill:{num:530,species:'Excadrill',types:['Ground','Steel'],baseStats:{hp:110,atk:135,def:60,spa:50,spd:65,spe:88},abilities:{0:'Sand Rush',1:'Sand Force',H:'Mold Breaker'},heightm:0.7,weightkg:40.4,color:'Gray',prevo:'drilbur',evoLevel:31,eggGroups:['Field']},audino:{num:531,species:'Audino',types:['Normal'],baseStats:{hp:103,atk:60,def:86,spa:60,spd:86,spe:50},abilities:{0:'Healer',1:'Regenerator',H:'Klutz'},heightm:1.1,weightkg:31,color:'Pink',eggGroups:['Fairy'],otherFormes:['audinomega']},audinomega:{num:531,species:'Audino-Mega',baseSpecies:'Audino',forme:'Mega',types:['Normal','Fairy'],baseStats:{hp:103,atk:60,def:126,spa:80,spd:126,spe:50},abilities:{0:'Healer'},heightm:1.5,weightkg:32,color:'White',eggGroups:['Fairy']},timburr:{num:532,species:'Timburr',types:['Fighting'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:75,atk:80,def:55,spa:25,spd:35,spe:35},abilities:{0:'Guts',1:'Sheer Force',H:'Iron Fist'},heightm:0.6,weightkg:12.5,color:'Gray',evos:['gurdurr'],eggGroups:['Human-Like']},gurdurr:{num:533,species:'Gurdurr',types:['Fighting'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:85,atk:105,def:85,spa:40,spd:50,spe:40},abilities:{0:'Guts',1:'Sheer Force',H:'Iron Fist'},heightm:1.2,weightkg:40,color:'Gray',prevo:'timburr',evoLevel:25,evos:['conkeldurr'],eggGroups:['Human-Like']},conkeldurr:{num:534,species:'Conkeldurr',types:['Fighting'],genderRatio:{M:0.75,F:0.25},baseStats:{hp:105,atk:140,def:95,spa:55,spd:65,spe:45},abilities:{0:'Guts',1:'Sheer Force',H:'Iron Fist'},heightm:1.4,weightkg:87,color:'Brown',prevo:'gurdurr',evoType:'trade',eggGroups:['Human-Like']},tympole:{num:535,species:'Tympole',types:['Water'],baseStats:{hp:50,atk:50,def:40,spa:50,spd:40,spe:64},abilities:{0:'Swift Swim',1:'Hydration',H:'Water Absorb'},heightm:0.5,weightkg:4.5,color:'Blue',evos:['palpitoad'],eggGroups:['Water 1']},palpitoad:{num:536,species:'Palpitoad',types:['Water','Ground'],baseStats:{hp:75,atk:65,def:55,spa:65,spd:55,spe:69},abilities:{0:'Swift Swim',1:'Hydration',H:'Water Absorb'},heightm:0.8,weightkg:17,color:'Blue',prevo:'tympole',evoLevel:25,evos:['seismitoad'],eggGroups:['Water 1']},seismitoad:{num:537,species:'Seismitoad',types:['Water','Ground'],baseStats:{hp:105,atk:95,def:75,spa:85,spd:75,spe:74},abilities:{0:'Swift Swim',1:'Poison Touch',H:'Water Absorb'},heightm:1.5,weightkg:62,color:'Blue',prevo:'palpitoad',evoLevel:36,eggGroups:['Water 1']},throh:{num:538,species:'Throh',types:['Fighting'],gender:'M',baseStats:{hp:120,atk:100,def:85,spa:30,spd:85,spe:45},abilities:{0:'Guts',1:'Inner Focus',H:'Mold Breaker'},heightm:1.3,weightkg:55.5,color:'Red',eggGroups:['Human-Like']},sawk:{num:539,species:'Sawk',types:['Fighting'],gender:'M',baseStats:{hp:75,atk:125,def:75,spa:30,spd:75,spe:85},abilities:{0:'Sturdy',1:'Inner Focus',H:'Mold Breaker'},heightm:1.4,weightkg:51,color:'Blue',eggGroups:['Human-Like']},sewaddle:{num:540,species:'Sewaddle',types:['Bug','Grass'],baseStats:{hp:45,atk:53,def:70,spa:40,spd:60,spe:42},abilities:{0:'Swarm',1:'Chlorophyll',H:'Overcoat'},heightm:0.3,weightkg:2.5,color:'Yellow',evos:['swadloon'],eggGroups:['Bug']},swadloon:{num:541,species:'Swadloon',types:['Bug','Grass'],baseStats:{hp:55,atk:63,def:90,spa:50,spd:80,spe:42},abilities:{0:'Leaf Guard',1:'Chlorophyll',H:'Overcoat'},heightm:0.5,weightkg:7.3,color:'Green',prevo:'sewaddle',evoLevel:20,evos:['leavanny'],eggGroups:['Bug']},leavanny:{num:542,species:'Leavanny',types:['Bug','Grass'],baseStats:{hp:75,atk:103,def:80,spa:70,spd:80,spe:92},abilities:{0:'Swarm',1:'Chlorophyll',H:'Overcoat'},heightm:1.2,weightkg:20.5,color:'Yellow',prevo:'swadloon',evoType:'levelFriendship',eggGroups:['Bug']},venipede:{num:543,species:'Venipede',types:['Bug','Poison'],baseStats:{hp:30,atk:45,def:59,spa:30,spd:39,spe:57},abilities:{0:'Poison Point',1:'Swarm',H:'Speed Boost'},heightm:0.4,weightkg:5.3,color:'Red',evos:['whirlipede'],eggGroups:['Bug']},whirlipede:{num:544,species:'Whirlipede',types:['Bug','Poison'],baseStats:{hp:40,atk:55,def:99,spa:40,spd:79,spe:47},abilities:{0:'Poison Point',1:'Swarm',H:'Speed Boost'},heightm:1.2,weightkg:58.5,color:'Gray',prevo:'venipede',evoLevel:22,evos:['scolipede'],eggGroups:['Bug']},scolipede:{num:545,species:'Scolipede',types:['Bug','Poison'],baseStats:{hp:60,atk:100,def:89,spa:55,spd:69,spe:112},abilities:{0:'Poison Point',1:'Swarm',H:'Speed Boost'},heightm:2.5,weightkg:200.5,color:'Red',prevo:'whirlipede',evoLevel:30,eggGroups:['Bug']},cottonee:{num:546,species:'Cottonee',types:['Grass','Fairy'],baseStats:{hp:40,atk:27,def:60,spa:37,spd:50,spe:66},abilities:{0:'Prankster',1:'Infiltrator',H:'Chlorophyll'},heightm:0.3,weightkg:0.6,color:'Green',evos:['whimsicott'],eggGroups:['Fairy','Grass']},whimsicott:{num:547,species:'Whimsicott',types:['Grass','Fairy'],baseStats:{hp:60,atk:67,def:85,spa:77,spd:75,spe:116},abilities:{0:'Prankster',1:'Infiltrator',H:'Chlorophyll'},heightm:0.7,weightkg:6.6,color:'Green',prevo:'cottonee',evoType:'useItem',evoItem:'Sun Stone',eggGroups:['Fairy','Grass']},petilil:{num:548,species:'Petilil',types:['Grass'],gender:'F',baseStats:{hp:45,atk:35,def:50,spa:70,spd:50,spe:30},abilities:{0:'Chlorophyll',1:'Own Tempo',H:'Leaf Guard'},heightm:0.5,weightkg:6.6,color:'Green',evos:['lilligant'],eggGroups:['Grass']},lilligant:{num:549,species:'Lilligant',types:['Grass'],gender:'F',baseStats:{hp:70,atk:60,def:75,spa:110,spd:75,spe:90},abilities:{0:'Chlorophyll',1:'Own Tempo',H:'Leaf Guard'},heightm:1.1,weightkg:16.3,color:'Green',prevo:'petilil',evoType:'useItem',evoItem:'Sun Stone',eggGroups:['Grass']},basculin:{num:550,species:'Basculin',baseForme:'Red-Striped',types:['Water'],baseStats:{hp:70,atk:92,def:65,spa:80,spd:55,spe:98},abilities:{0:'Reckless',1:'Adaptability',H:'Mold Breaker'},heightm:1,weightkg:18,color:'Green',eggGroups:['Water 2'],otherFormes:['basculinbluestriped']},basculinbluestriped:{num:550,species:'Basculin-Blue-Striped',baseSpecies:'Basculin',forme:'Blue-Striped',types:['Water'],baseStats:{hp:70,atk:92,def:65,spa:80,spd:55,spe:98},abilities:{0:'Rock Head',1:'Adaptability',H:'Mold Breaker'},heightm:1,weightkg:18,color:'Green',eggGroups:['Water 2'],inheritsFrom:'basculin'},sandile:{num:551,species:'Sandile',types:['Ground','Dark'],baseStats:{hp:50,atk:72,def:35,spa:35,spd:35,spe:65},abilities:{0:'Intimidate',1:'Moxie',H:'Anger Point'},heightm:0.7,weightkg:15.2,color:'Brown',evos:['krokorok'],eggGroups:['Field']},krokorok:{num:552,species:'Krokorok',types:['Ground','Dark'],baseStats:{hp:60,atk:82,def:45,spa:45,spd:45,spe:74},abilities:{0:'Intimidate',1:'Moxie',H:'Anger Point'},heightm:1,weightkg:33.4,color:'Brown',prevo:'sandile',evoLevel:29,evos:['krookodile'],eggGroups:['Field']},krookodile:{num:553,species:'Krookodile',types:['Ground','Dark'],baseStats:{hp:95,atk:117,def:80,spa:65,spd:70,spe:92},abilities:{0:'Intimidate',1:'Moxie',H:'Anger Point'},heightm:1.5,weightkg:96.3,color:'Red',prevo:'krokorok',evoLevel:40,eggGroups:['Field']},darumaka:{num:554,species:'Darumaka',types:['Fire'],baseStats:{hp:70,atk:90,def:45,spa:15,spd:45,spe:50},abilities:{0:'Hustle',H:'Inner Focus'},heightm:0.6,weightkg:37.5,color:'Red',evos:['darmanitan'],eggGroups:['Field'],otherFormes:['darumakagalar']},darumakagalar:{num:554,species:'Darumaka-Galar',baseSpecies:'Darumaka',forme:'Galar',types:['Ice'],baseStats:{hp:70,atk:90,def:45,spa:15,spd:45,spe:50},abilities:{0:'Hustle',H:'Inner Focus'},heightm:0.7,weightkg:40,color:'White',evos:['darmanitangalar'],eggGroups:['Field']},darmanitan:{num:555,species:'Darmanitan',baseForme:'Standard',types:['Fire'],baseStats:{hp:105,atk:140,def:55,spa:30,spd:55,spe:95},abilities:{0:'Sheer Force',H:'Zen Mode'},heightm:1.3,weightkg:92.9,color:'Red',prevo:'darumaka',evoLevel:35,eggGroups:['Field'],otherFormes:['darmanitanzen','darmanitangalar','darmanitangalarzen']},darmanitanzen:{num:555,species:'Darmanitan-Zen',baseSpecies:'Darmanitan',forme:'Zen',types:['Fire','Psychic'],baseStats:{hp:105,atk:30,def:105,spa:140,spd:105,spe:55},abilities:{0:'Zen Mode'},heightm:1.3,weightkg:92.9,color:'Blue',prevo:'darumaka',evoLevel:35,eggGroups:['Field'],inheritsFrom:'darmanitan'},darmanitangalar:{num:555,species:'Darmanitan-Galar',baseSpecies:'Darmanitan',forme:'Galar',types:['Ice'],baseStats:{hp:105,atk:140,def:55,spa:30,spd:55,spe:95},abilities:{0:'Gorilla Tactics',H:'Zen Mode'},heightm:1.7,weightkg:120,color:'White',prevo:'darumakagalar',evoType:'useItem',evoItem:'Ice Stone',eggGroups:['Field']},darmanitangalarzen:{num:555,species:'Darmanitan-Galar-Zen',baseSpecies:'Darmanitan',forme:'Galar-Zen',types:['Ice','Fire'],baseStats:{hp:105,atk:160,def:55,spa:30,spd:55,spe:135},abilities:{0:'Zen Mode'},heightm:1.7,weightkg:120,color:'White',prevo:'darumakagalar',evoType:'useItem',evoItem:'Ice Stone',eggGroups:['Field'],inheritsFrom:'darmanitangalar'},maractus:{num:556,species:'Maractus',types:['Grass'],baseStats:{hp:75,atk:86,def:67,spa:106,spd:67,spe:60},abilities:{0:'Water Absorb',1:'Chlorophyll',H:'Storm Drain'},heightm:1,weightkg:28,color:'Green',eggGroups:['Grass']},dwebble:{num:557,species:'Dwebble',types:['Bug','Rock'],baseStats:{hp:50,atk:65,def:85,spa:35,spd:35,spe:55},abilities:{0:'Sturdy',1:'Shell Armor',H:'Weak Armor'},heightm:0.3,weightkg:14.5,color:'Red',evos:['crustle'],eggGroups:['Bug','Mineral']},crustle:{num:558,species:'Crustle',types:['Bug','Rock'],baseStats:{hp:70,atk:105,def:125,spa:65,spd:75,spe:45},abilities:{0:'Sturdy',1:'Shell Armor',H:'Weak Armor'},heightm:1.4,weightkg:200,color:'Red',prevo:'dwebble',evoLevel:34,eggGroups:['Bug','Mineral']},scraggy:{num:559,species:'Scraggy',types:['Dark','Fighting'],baseStats:{hp:50,atk:75,def:70,spa:35,spd:70,spe:48},abilities:{0:'Shed Skin',1:'Moxie',H:'Intimidate'},heightm:0.6,weightkg:11.8,color:'Yellow',evos:['scrafty'],eggGroups:['Field','Dragon']},scrafty:{num:560,species:'Scrafty',types:['Dark','Fighting'],baseStats:{hp:65,atk:90,def:115,spa:45,spd:115,spe:58},abilities:{0:'Shed Skin',1:'Moxie',H:'Intimidate'},heightm:1.1,weightkg:30,color:'Red',prevo:'scraggy',evoLevel:39,eggGroups:['Field','Dragon']},sigilyph:{num:561,species:'Sigilyph',types:['Psychic','Flying'],baseStats:{hp:72,atk:58,def:80,spa:103,spd:80,spe:97},abilities:{0:'Wonder Skin',1:'Magic Guard',H:'Tinted Lens'},heightm:1.4,weightkg:14,color:'Black',eggGroups:['Flying']},yamask:{num:562,species:'Yamask',types:['Ghost'],baseStats:{hp:38,atk:30,def:85,spa:55,spd:65,spe:30},abilities:{0:'Mummy'},heightm:0.5,weightkg:1.5,color:'Black',evos:['cofagrigus'],eggGroups:['Mineral','Amorphous'],otherFormes:['yamaskgalar']},yamaskgalar:{num:562,species:'Yamask-Galar',baseSpecies:'Yamask',forme:'Galar',types:['Ground','Ghost'],baseStats:{hp:38,atk:55,def:85,spa:30,spd:65,spe:30},abilities:{0:'Wandering Spirit'},heightm:0.5,weightkg:1.5,color:'Black',evos:['runerigus'],eggGroups:['Mineral','Amorphous']},cofagrigus:{num:563,species:'Cofagrigus',types:['Ghost'],baseStats:{hp:58,atk:50,def:145,spa:95,spd:105,spe:30},abilities:{0:'Mummy'},heightm:1.7,weightkg:76.5,color:'Yellow',prevo:'yamask',evoLevel:34,eggGroups:['Mineral','Amorphous']},tirtouga:{num:564,species:'Tirtouga',types:['Water','Rock'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:54,atk:78,def:103,spa:53,spd:45,spe:22},abilities:{0:'Solid Rock',1:'Sturdy',H:'Swift Swim'},heightm:0.7,weightkg:16.5,color:'Blue',evos:['carracosta'],eggGroups:['Water 1','Water 3']},carracosta:{num:565,species:'Carracosta',types:['Water','Rock'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:74,atk:108,def:133,spa:83,spd:65,spe:32},abilities:{0:'Solid Rock',1:'Sturdy',H:'Swift Swim'},heightm:1.2,weightkg:81,color:'Blue',prevo:'tirtouga',evoLevel:37,eggGroups:['Water 1','Water 3']},archen:{num:566,species:'Archen',types:['Rock','Flying'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:55,atk:112,def:45,spa:74,spd:45,spe:70},abilities:{0:'Defeatist'},heightm:0.5,weightkg:9.5,color:'Yellow',evos:['archeops'],eggGroups:['Flying','Water 3']},archeops:{num:567,species:'Archeops',types:['Rock','Flying'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:75,atk:140,def:65,spa:112,spd:65,spe:110},abilities:{0:'Defeatist'},heightm:1.4,weightkg:32,color:'Yellow',prevo:'archen',evoLevel:37,eggGroups:['Flying','Water 3']},trubbish:{num:568,species:'Trubbish',types:['Poison'],baseStats:{hp:50,atk:50,def:62,spa:40,spd:62,spe:65},abilities:{0:'Stench',1:'Sticky Hold',H:'Aftermath'},heightm:0.6,weightkg:31,color:'Green',evos:['garbodor'],eggGroups:['Mineral']},garbodor:{num:569,species:'Garbodor',types:['Poison'],baseStats:{hp:80,atk:95,def:82,spa:60,spd:82,spe:75},abilities:{0:'Stench',1:'Weak Armor',H:'Aftermath'},heightm:1.9,weightkg:107.3,color:'Green',prevo:'trubbish',evoLevel:36,eggGroups:['Mineral'],otherFormes:['garbodorgmax']},garbodorgmax:{num:569,species:'Garbodor-Gmax',baseSpecies:'Garbodor',forme:'Gmax',types:['Poison'],baseStats:{hp:80,atk:95,def:82,spa:60,spd:82,spe:75},abilities:{0:'Stench',1:'Weak Armor',H:'Aftermath'},// TODO
heightm:0,weightkg:0,color:'Green',eggGroups:['Mineral'],inheritsFrom:'garbodor'},zorua:{num:570,species:'Zorua',types:['Dark'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:40,atk:65,def:40,spa:80,spd:40,spe:65},abilities:{0:'Illusion'},heightm:0.7,weightkg:12.5,color:'Gray',evos:['zoroark'],eggGroups:['Field']},zoroark:{num:571,species:'Zoroark',types:['Dark'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:60,atk:105,def:60,spa:120,spd:60,spe:105},abilities:{0:'Illusion'},heightm:1.6,weightkg:81.1,color:'Gray',prevo:'zorua',evoLevel:30,eggGroups:['Field']},minccino:{num:572,species:'Minccino',types:['Normal'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:55,atk:50,def:40,spa:40,spd:40,spe:75},abilities:{0:'Cute Charm',1:'Technician',H:'Skill Link'},heightm:0.4,weightkg:5.8,color:'Gray',evos:['cinccino'],eggGroups:['Field']},cinccino:{num:573,species:'Cinccino',types:['Normal'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:75,atk:95,def:60,spa:65,spd:60,spe:115},abilities:{0:'Cute Charm',1:'Technician',H:'Skill Link'},heightm:0.5,weightkg:7.5,color:'Gray',prevo:'minccino',evoType:'useItem',evoItem:'Shiny Stone',eggGroups:['Field']},gothita:{num:574,species:'Gothita',types:['Psychic'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:45,atk:30,def:50,spa:55,spd:65,spe:45},abilities:{0:'Frisk',1:'Competitive',H:'Shadow Tag'},heightm:0.4,weightkg:5.8,color:'Purple',evos:['gothorita'],eggGroups:['Human-Like']},gothorita:{num:575,species:'Gothorita',types:['Psychic'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:60,atk:45,def:70,spa:75,spd:85,spe:55},abilities:{0:'Frisk',1:'Competitive',H:'Shadow Tag'},heightm:0.7,weightkg:18,color:'Purple',prevo:'gothita',evoLevel:32,evos:['gothitelle'],eggGroups:['Human-Like']},gothitelle:{num:576,species:'Gothitelle',types:['Psychic'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:70,atk:55,def:95,spa:95,spd:110,spe:65},abilities:{0:'Frisk',1:'Competitive',H:'Shadow Tag'},heightm:1.5,weightkg:44,color:'Purple',prevo:'gothorita',evoLevel:41,eggGroups:['Human-Like']},solosis:{num:577,species:'Solosis',types:['Psychic'],baseStats:{hp:45,atk:30,def:40,spa:105,spd:50,spe:20},abilities:{0:'Overcoat',1:'Magic Guard',H:'Regenerator'},heightm:0.3,weightkg:1,color:'Green',evos:['duosion'],eggGroups:['Amorphous']},duosion:{num:578,species:'Duosion',types:['Psychic'],baseStats:{hp:65,atk:40,def:50,spa:125,spd:60,spe:30},abilities:{0:'Overcoat',1:'Magic Guard',H:'Regenerator'},heightm:0.6,weightkg:8,color:'Green',prevo:'solosis',evoLevel:32,evos:['reuniclus'],eggGroups:['Amorphous']},reuniclus:{num:579,species:'Reuniclus',types:['Psychic'],baseStats:{hp:110,atk:65,def:75,spa:125,spd:85,spe:30},abilities:{0:'Overcoat',1:'Magic Guard',H:'Regenerator'},heightm:1,weightkg:20.1,color:'Green',prevo:'duosion',evoLevel:41,eggGroups:['Amorphous']},ducklett:{num:580,species:'Ducklett',types:['Water','Flying'],baseStats:{hp:62,atk:44,def:50,spa:44,spd:50,spe:55},abilities:{0:'Keen Eye',1:'Big Pecks',H:'Hydration'},heightm:0.5,weightkg:5.5,color:'Blue',evos:['swanna'],eggGroups:['Water 1','Flying']},swanna:{num:581,species:'Swanna',types:['Water','Flying'],baseStats:{hp:75,atk:87,def:63,spa:87,spd:63,spe:98},abilities:{0:'Keen Eye',1:'Big Pecks',H:'Hydration'},heightm:1.3,weightkg:24.2,color:'White',prevo:'ducklett',evoLevel:35,eggGroups:['Water 1','Flying']},vanillite:{num:582,species:'Vanillite',types:['Ice'],baseStats:{hp:36,atk:50,def:50,spa:65,spd:60,spe:44},abilities:{0:'Ice Body',1:'Snow Cloak',H:'Weak Armor'},heightm:0.4,weightkg:5.7,color:'White',evos:['vanillish'],eggGroups:['Mineral']},vanillish:{num:583,species:'Vanillish',types:['Ice'],baseStats:{hp:51,atk:65,def:65,spa:80,spd:75,spe:59},abilities:{0:'Ice Body',1:'Snow Cloak',H:'Weak Armor'},heightm:1.1,weightkg:41,color:'White',prevo:'vanillite',evoLevel:35,evos:['vanilluxe'],eggGroups:['Mineral']},vanilluxe:{num:584,species:'Vanilluxe',types:['Ice'],baseStats:{hp:71,atk:95,def:85,spa:110,spd:95,spe:79},abilities:{0:'Ice Body',1:'Snow Warning',H:'Weak Armor'},heightm:1.3,weightkg:57.5,color:'White',prevo:'vanillish',evoLevel:47,eggGroups:['Mineral']},deerling:{num:585,species:'Deerling',baseForme:'Spring',types:['Normal','Grass'],baseStats:{hp:60,atk:60,def:50,spa:40,spd:50,spe:75},abilities:{0:'Chlorophyll',1:'Sap Sipper',H:'Serene Grace'},heightm:0.6,weightkg:19.5,color:'Pink',evos:['sawsbuck'],eggGroups:['Field'],otherForms:['deerlingsummer','deerlingautumn','deerlingwinter']},sawsbuck:{num:586,species:'Sawsbuck',baseForme:'Spring',types:['Normal','Grass'],baseStats:{hp:80,atk:100,def:70,spa:60,spd:70,spe:95},abilities:{0:'Chlorophyll',1:'Sap Sipper',H:'Serene Grace'},heightm:1.9,weightkg:92.5,color:'Brown',prevo:'deerling',evoLevel:34,eggGroups:['Field'],otherForms:['sawsbucksummer','sawsbuckautumn','sawsbuckwinter']},emolga:{num:587,species:'Emolga',types:['Electric','Flying'],baseStats:{hp:55,atk:75,def:60,spa:75,spd:60,spe:103},abilities:{0:'Static',H:'Motor Drive'},heightm:0.4,weightkg:5,color:'White',eggGroups:['Field']},karrablast:{num:588,species:'Karrablast',types:['Bug'],baseStats:{hp:50,atk:75,def:45,spa:40,spd:45,spe:60},abilities:{0:'Swarm',1:'Shed Skin',H:'No Guard'},heightm:0.5,weightkg:5.9,color:'Blue',evos:['escavalier'],eggGroups:['Bug']},escavalier:{num:589,species:'Escavalier',types:['Bug','Steel'],baseStats:{hp:70,atk:135,def:105,spa:60,spd:105,spe:20},abilities:{0:'Swarm',1:'Shell Armor',H:'Overcoat'},heightm:1,weightkg:33,color:'Gray',prevo:'karrablast',evoType:'trade',evoCondition:'with a Shelmet',eggGroups:['Bug']},foongus:{num:590,species:'Foongus',types:['Grass','Poison'],baseStats:{hp:69,atk:55,def:45,spa:55,spd:55,spe:15},abilities:{0:'Effect Spore',H:'Regenerator'},heightm:0.2,weightkg:1,color:'White',evos:['amoonguss'],eggGroups:['Grass']},amoonguss:{num:591,species:'Amoonguss',types:['Grass','Poison'],baseStats:{hp:114,atk:85,def:70,spa:85,spd:80,spe:30},abilities:{0:'Effect Spore',H:'Regenerator'},heightm:0.6,weightkg:10.5,color:'White',prevo:'foongus',evoLevel:39,eggGroups:['Grass']},frillish:{num:592,species:'Frillish',types:['Water','Ghost'],baseStats:{hp:55,atk:40,def:50,spa:65,spd:85,spe:40},abilities:{0:'Water Absorb',1:'Cursed Body',H:'Damp'},heightm:1.2,weightkg:33,color:'White',evos:['jellicent'],eggGroups:['Amorphous']},jellicent:{num:593,species:'Jellicent',types:['Water','Ghost'],baseStats:{hp:100,atk:60,def:70,spa:85,spd:105,spe:60},abilities:{0:'Water Absorb',1:'Cursed Body',H:'Damp'},heightm:2.2,weightkg:135,color:'White',prevo:'frillish',evoLevel:40,eggGroups:['Amorphous']},alomomola:{num:594,species:'Alomomola',types:['Water'],baseStats:{hp:165,atk:75,def:80,spa:40,spd:45,spe:65},abilities:{0:'Healer',1:'Hydration',H:'Regenerator'},heightm:1.2,weightkg:31.6,color:'Pink',eggGroups:['Water 1','Water 2']},joltik:{num:595,species:'Joltik',types:['Bug','Electric'],baseStats:{hp:50,atk:47,def:50,spa:57,spd:50,spe:65},abilities:{0:'Compound Eyes',1:'Unnerve',H:'Swarm'},heightm:0.1,weightkg:0.6,color:'Yellow',evos:['galvantula'],eggGroups:['Bug']},galvantula:{num:596,species:'Galvantula',types:['Bug','Electric'],baseStats:{hp:70,atk:77,def:60,spa:97,spd:60,spe:108},abilities:{0:'Compound Eyes',1:'Unnerve',H:'Swarm'},heightm:0.8,weightkg:14.3,color:'Yellow',prevo:'joltik',evoLevel:36,eggGroups:['Bug']},ferroseed:{num:597,species:'Ferroseed',types:['Grass','Steel'],baseStats:{hp:44,atk:50,def:91,spa:24,spd:86,spe:10},abilities:{0:'Iron Barbs'},heightm:0.6,weightkg:18.8,color:'Gray',evos:['ferrothorn'],eggGroups:['Grass','Mineral']},ferrothorn:{num:598,species:'Ferrothorn',types:['Grass','Steel'],baseStats:{hp:74,atk:94,def:131,spa:54,spd:116,spe:20},abilities:{0:'Iron Barbs',H:'Anticipation'},heightm:1,weightkg:110,color:'Gray',prevo:'ferroseed',evoLevel:40,eggGroups:['Grass','Mineral']},klink:{num:599,species:'Klink',types:['Steel'],gender:'N',baseStats:{hp:40,atk:55,def:70,spa:45,spd:60,spe:30},abilities:{0:'Plus',1:'Minus',H:'Clear Body'},heightm:0.3,weightkg:21,color:'Gray',evos:['klang'],eggGroups:['Mineral']},klang:{num:600,species:'Klang',types:['Steel'],gender:'N',baseStats:{hp:60,atk:80,def:95,spa:70,spd:85,spe:50},abilities:{0:'Plus',1:'Minus',H:'Clear Body'},heightm:0.6,weightkg:51,color:'Gray',prevo:'klink',evoLevel:38,evos:['klinklang'],eggGroups:['Mineral']},klinklang:{num:601,species:'Klinklang',types:['Steel'],gender:'N',baseStats:{hp:60,atk:100,def:115,spa:70,spd:85,spe:90},abilities:{0:'Plus',1:'Minus',H:'Clear Body'},heightm:0.6,weightkg:81,color:'Gray',prevo:'klang',evoLevel:49,eggGroups:['Mineral']},tynamo:{num:602,species:'Tynamo',types:['Electric'],baseStats:{hp:35,atk:55,def:40,spa:45,spd:40,spe:60},abilities:{0:'Levitate'},heightm:0.2,weightkg:0.3,color:'White',evos:['eelektrik'],eggGroups:['Amorphous']},eelektrik:{num:603,species:'Eelektrik',types:['Electric'],baseStats:{hp:65,atk:85,def:70,spa:75,spd:70,spe:40},abilities:{0:'Levitate'},heightm:1.2,weightkg:22,color:'Blue',prevo:'tynamo',evoLevel:39,evos:['eelektross'],eggGroups:['Amorphous']},eelektross:{num:604,species:'Eelektross',types:['Electric'],baseStats:{hp:85,atk:115,def:80,spa:105,spd:80,spe:50},abilities:{0:'Levitate'},heightm:2.1,weightkg:80.5,color:'Blue',prevo:'eelektrik',evoType:'useItem',evoItem:'Thunder Stone',eggGroups:['Amorphous']},elgyem:{num:605,species:'Elgyem',types:['Psychic'],baseStats:{hp:55,atk:55,def:55,spa:85,spd:55,spe:30},abilities:{0:'Telepathy',1:'Synchronize',H:'Analytic'},heightm:0.5,weightkg:9,color:'Blue',evos:['beheeyem'],eggGroups:['Human-Like']},beheeyem:{num:606,species:'Beheeyem',types:['Psychic'],baseStats:{hp:75,atk:75,def:75,spa:125,spd:95,spe:40},abilities:{0:'Telepathy',1:'Synchronize',H:'Analytic'},heightm:1,weightkg:34.5,color:'Brown',prevo:'elgyem',evoLevel:42,eggGroups:['Human-Like']},litwick:{num:607,species:'Litwick',types:['Ghost','Fire'],baseStats:{hp:50,atk:30,def:55,spa:65,spd:55,spe:20},abilities:{0:'Flash Fire',1:'Flame Body',H:'Infiltrator'},heightm:0.3,weightkg:3.1,color:'White',evos:['lampent'],eggGroups:['Amorphous']},lampent:{num:608,species:'Lampent',types:['Ghost','Fire'],baseStats:{hp:60,atk:40,def:60,spa:95,spd:60,spe:55},abilities:{0:'Flash Fire',1:'Flame Body',H:'Infiltrator'},heightm:0.6,weightkg:13,color:'Black',prevo:'litwick',evoLevel:41,evos:['chandelure'],eggGroups:['Amorphous']},chandelure:{num:609,species:'Chandelure',types:['Ghost','Fire'],baseStats:{hp:60,atk:55,def:90,spa:145,spd:90,spe:80},abilities:{0:'Flash Fire',1:'Flame Body',H:'Infiltrator'},heightm:1,weightkg:34.3,color:'Black',prevo:'lampent',evoType:'useItem',evoItem:'Dusk Stone',eggGroups:['Amorphous']},axew:{num:610,species:'Axew',types:['Dragon'],baseStats:{hp:46,atk:87,def:60,spa:30,spd:40,spe:57},abilities:{0:'Rivalry',1:'Mold Breaker',H:'Unnerve'},heightm:0.6,weightkg:18,color:'Green',evos:['fraxure'],eggGroups:['Monster','Dragon']},fraxure:{num:611,species:'Fraxure',types:['Dragon'],baseStats:{hp:66,atk:117,def:70,spa:40,spd:50,spe:67},abilities:{0:'Rivalry',1:'Mold Breaker',H:'Unnerve'},heightm:1,weightkg:36,color:'Green',prevo:'axew',evoLevel:38,evos:['haxorus'],eggGroups:['Monster','Dragon']},haxorus:{num:612,species:'Haxorus',types:['Dragon'],baseStats:{hp:76,atk:147,def:90,spa:60,spd:70,spe:97},abilities:{0:'Rivalry',1:'Mold Breaker',H:'Unnerve'},heightm:1.8,weightkg:105.5,color:'Yellow',prevo:'fraxure',evoLevel:48,eggGroups:['Monster','Dragon']},cubchoo:{num:613,species:'Cubchoo',types:['Ice'],baseStats:{hp:55,atk:70,def:40,spa:60,spd:40,spe:40},abilities:{0:'Snow Cloak',1:'Slush Rush',H:'Rattled'},heightm:0.5,weightkg:8.5,color:'White',evos:['beartic'],eggGroups:['Field']},beartic:{num:614,species:'Beartic',types:['Ice'],baseStats:{hp:95,atk:130,def:80,spa:70,spd:80,spe:50},abilities:{0:'Snow Cloak',1:'Slush Rush',H:'Swift Swim'},heightm:2.6,weightkg:260,color:'White',prevo:'cubchoo',evoLevel:37,eggGroups:['Field']},cryogonal:{num:615,species:'Cryogonal',types:['Ice'],gender:'N',baseStats:{hp:80,atk:50,def:50,spa:95,spd:135,spe:105},abilities:{0:'Levitate'},heightm:1.1,weightkg:148,color:'Blue',eggGroups:['Mineral']},shelmet:{num:616,species:'Shelmet',types:['Bug'],baseStats:{hp:50,atk:40,def:85,spa:40,spd:65,spe:25},abilities:{0:'Hydration',1:'Shell Armor',H:'Overcoat'},heightm:0.4,weightkg:7.7,color:'Red',evos:['accelgor'],eggGroups:['Bug']},accelgor:{num:617,species:'Accelgor',types:['Bug'],baseStats:{hp:80,atk:70,def:40,spa:100,spd:60,spe:145},abilities:{0:'Hydration',1:'Sticky Hold',H:'Unburden'},heightm:0.8,weightkg:25.3,color:'Red',prevo:'shelmet',evoType:'trade',evoCondition:'with a Karrablast',eggGroups:['Bug']},stunfisk:{num:618,species:'Stunfisk',types:['Ground','Electric'],baseStats:{hp:109,atk:66,def:84,spa:81,spd:99,spe:32},abilities:{0:'Static',1:'Limber',H:'Sand Veil'},heightm:0.7,weightkg:11,color:'Brown',eggGroups:['Water 1','Amorphous'],otherFormes:['stunfiskgalar']},stunfiskgalar:{num:618,species:'Stunfisk-Galar',baseSpecies:'Stunfisk',forme:'Galar',types:['Ground','Steel'],baseStats:{hp:109,atk:81,def:99,spa:66,spd:84,spe:32},abilities:{0:'Mimicry'},heightm:0.7,weightkg:20.5,color:'Green',eggGroups:['Water 1','Amorphous']},mienfoo:{num:619,species:'Mienfoo',types:['Fighting'],baseStats:{hp:45,atk:85,def:50,spa:55,spd:50,spe:65},abilities:{0:'Inner Focus',1:'Regenerator',H:'Reckless'},heightm:0.9,weightkg:20,color:'Yellow',evos:['mienshao'],eggGroups:['Field','Human-Like']},mienshao:{num:620,species:'Mienshao',types:['Fighting'],baseStats:{hp:65,atk:125,def:60,spa:95,spd:60,spe:105},abilities:{0:'Inner Focus',1:'Regenerator',H:'Reckless'},heightm:1.4,weightkg:35.5,color:'Purple',prevo:'mienfoo',evoLevel:50,eggGroups:['Field','Human-Like']},druddigon:{num:621,species:'Druddigon',types:['Dragon'],baseStats:{hp:77,atk:120,def:90,spa:60,spd:90,spe:48},abilities:{0:'Rough Skin',1:'Sheer Force',H:'Mold Breaker'},heightm:1.6,weightkg:139,color:'Red',eggGroups:['Monster','Dragon']},golett:{num:622,species:'Golett',types:['Ground','Ghost'],gender:'N',baseStats:{hp:59,atk:74,def:50,spa:35,spd:50,spe:35},abilities:{0:'Iron Fist',1:'Klutz',H:'No Guard'},heightm:1,weightkg:92,color:'Green',evos:['golurk'],eggGroups:['Mineral']},golurk:{num:623,species:'Golurk',types:['Ground','Ghost'],gender:'N',baseStats:{hp:89,atk:124,def:80,spa:55,spd:80,spe:55},abilities:{0:'Iron Fist',1:'Klutz',H:'No Guard'},heightm:2.8,weightkg:330,color:'Green',prevo:'golett',evoLevel:43,eggGroups:['Mineral']},pawniard:{num:624,species:'Pawniard',types:['Dark','Steel'],baseStats:{hp:45,atk:85,def:70,spa:40,spd:40,spe:60},abilities:{0:'Defiant',1:'Inner Focus',H:'Pressure'},heightm:0.5,weightkg:10.2,color:'Red',evos:['bisharp'],eggGroups:['Human-Like']},bisharp:{num:625,species:'Bisharp',types:['Dark','Steel'],baseStats:{hp:65,atk:125,def:100,spa:60,spd:70,spe:70},abilities:{0:'Defiant',1:'Inner Focus',H:'Pressure'},heightm:1.6,weightkg:70,color:'Red',prevo:'pawniard',evoLevel:52,eggGroups:['Human-Like']},bouffalant:{num:626,species:'Bouffalant',types:['Normal'],baseStats:{hp:95,atk:110,def:95,spa:40,spd:95,spe:55},abilities:{0:'Reckless',1:'Sap Sipper',H:'Soundproof'},heightm:1.6,weightkg:94.6,color:'Brown',eggGroups:['Field']},rufflet:{num:627,species:'Rufflet',types:['Normal','Flying'],gender:'M',baseStats:{hp:70,atk:83,def:50,spa:37,spd:50,spe:60},abilities:{0:'Keen Eye',1:'Sheer Force',H:'Hustle'},heightm:0.5,weightkg:10.5,color:'White',evos:['braviary'],eggGroups:['Flying']},braviary:{num:628,species:'Braviary',types:['Normal','Flying'],gender:'M',baseStats:{hp:100,atk:123,def:75,spa:57,spd:75,spe:80},abilities:{0:'Keen Eye',1:'Sheer Force',H:'Defiant'},heightm:1.5,weightkg:41,color:'Red',prevo:'rufflet',evoLevel:54,eggGroups:['Flying']},vullaby:{num:629,species:'Vullaby',types:['Dark','Flying'],gender:'F',baseStats:{hp:70,atk:55,def:75,spa:45,spd:65,spe:60},abilities:{0:'Big Pecks',1:'Overcoat',H:'Weak Armor'},heightm:0.5,weightkg:9,color:'Brown',evos:['mandibuzz'],eggGroups:['Flying']},mandibuzz:{num:630,species:'Mandibuzz',types:['Dark','Flying'],gender:'F',baseStats:{hp:110,atk:65,def:105,spa:55,spd:95,spe:80},abilities:{0:'Big Pecks',1:'Overcoat',H:'Weak Armor'},heightm:1.2,weightkg:39.5,color:'Brown',prevo:'vullaby',evoLevel:54,eggGroups:['Flying']},heatmor:{num:631,species:'Heatmor',types:['Fire'],baseStats:{hp:85,atk:97,def:66,spa:105,spd:66,spe:65},abilities:{0:'Gluttony',1:'Flash Fire',H:'White Smoke'},heightm:1.4,weightkg:58,color:'Red',eggGroups:['Field']},durant:{num:632,species:'Durant',types:['Bug','Steel'],baseStats:{hp:58,atk:109,def:112,spa:48,spd:48,spe:109},abilities:{0:'Swarm',1:'Hustle',H:'Truant'},heightm:0.3,weightkg:33,color:'Gray',eggGroups:['Bug']},deino:{num:633,species:'Deino',types:['Dark','Dragon'],baseStats:{hp:52,atk:65,def:50,spa:45,spd:50,spe:38},abilities:{0:'Hustle'},heightm:0.8,weightkg:17.3,color:'Blue',evos:['zweilous'],eggGroups:['Dragon']},zweilous:{num:634,species:'Zweilous',types:['Dark','Dragon'],baseStats:{hp:72,atk:85,def:70,spa:65,spd:70,spe:58},abilities:{0:'Hustle'},heightm:1.4,weightkg:50,color:'Blue',prevo:'deino',evoLevel:50,evos:['hydreigon'],eggGroups:['Dragon']},hydreigon:{num:635,species:'Hydreigon',types:['Dark','Dragon'],baseStats:{hp:92,atk:105,def:90,spa:125,spd:90,spe:98},abilities:{0:'Levitate'},heightm:1.8,weightkg:160,color:'Blue',prevo:'zweilous',evoLevel:64,eggGroups:['Dragon']},larvesta:{num:636,species:'Larvesta',types:['Bug','Fire'],baseStats:{hp:55,atk:85,def:55,spa:50,spd:55,spe:60},abilities:{0:'Flame Body',H:'Swarm'},heightm:1.1,weightkg:28.8,color:'White',evos:['volcarona'],eggGroups:['Bug']},volcarona:{num:637,species:'Volcarona',types:['Bug','Fire'],baseStats:{hp:85,atk:60,def:65,spa:135,spd:105,spe:100},abilities:{0:'Flame Body',H:'Swarm'},heightm:1.6,weightkg:46,color:'White',prevo:'larvesta',evoLevel:59,eggGroups:['Bug']},cobalion:{num:638,species:'Cobalion',types:['Steel','Fighting'],gender:'N',baseStats:{hp:91,atk:90,def:129,spa:90,spd:72,spe:108},abilities:{0:'Justified'},heightm:2.1,weightkg:250,color:'Blue',eggGroups:['Undiscovered']},terrakion:{num:639,species:'Terrakion',types:['Rock','Fighting'],gender:'N',baseStats:{hp:91,atk:129,def:90,spa:72,spd:90,spe:108},abilities:{0:'Justified'},heightm:1.9,weightkg:260,color:'Gray',eggGroups:['Undiscovered']},virizion:{num:640,species:'Virizion',types:['Grass','Fighting'],gender:'N',baseStats:{hp:91,atk:90,def:72,spa:90,spd:129,spe:108},abilities:{0:'Justified'},heightm:2,weightkg:200,color:'Green',eggGroups:['Undiscovered']},tornadus:{num:641,species:'Tornadus',baseForme:'Incarnate',types:['Flying'],gender:'M',baseStats:{hp:79,atk:115,def:70,spa:125,spd:80,spe:111},abilities:{0:'Prankster',H:'Defiant'},heightm:1.5,weightkg:63,color:'Green',eggGroups:['Undiscovered'],otherFormes:['tornadustherian']},tornadustherian:{num:641,species:'Tornadus-Therian',baseSpecies:'Tornadus',forme:'Therian',types:['Flying'],gender:'M',baseStats:{hp:79,atk:100,def:80,spa:110,spd:90,spe:121},abilities:{0:'Regenerator'},heightm:1.4,weightkg:63,color:'Green',eggGroups:['Undiscovered'],inheritsFrom:'tornadus'},thundurus:{num:642,species:'Thundurus',baseForme:'Incarnate',types:['Electric','Flying'],gender:'M',baseStats:{hp:79,atk:115,def:70,spa:125,spd:80,spe:111},abilities:{0:'Prankster',H:'Defiant'},heightm:1.5,weightkg:61,color:'Blue',eggGroups:['Undiscovered'],otherFormes:['thundurustherian']},thundurustherian:{num:642,species:'Thundurus-Therian',baseSpecies:'Thundurus',forme:'Therian',types:['Electric','Flying'],gender:'M',baseStats:{hp:79,atk:105,def:70,spa:145,spd:80,spe:101},abilities:{0:'Volt Absorb'},heightm:3,weightkg:61,color:'Blue',eggGroups:['Undiscovered'],inheritsFrom:'thundurus'},reshiram:{num:643,species:'Reshiram',types:['Dragon','Fire'],gender:'N',baseStats:{hp:100,atk:120,def:100,spa:150,spd:120,spe:90},abilities:{0:'Turboblaze'},heightm:3.2,weightkg:330,color:'White',eggGroups:['Undiscovered']},zekrom:{num:644,species:'Zekrom',types:['Dragon','Electric'],gender:'N',baseStats:{hp:100,atk:150,def:120,spa:120,spd:100,spe:90},abilities:{0:'Teravolt'},heightm:2.9,weightkg:345,color:'Black',eggGroups:['Undiscovered']},landorus:{num:645,species:'Landorus',baseForme:'Incarnate',types:['Ground','Flying'],gender:'M',baseStats:{hp:89,atk:125,def:90,spa:115,spd:80,spe:101},abilities:{0:'Sand Force',H:'Sheer Force'},heightm:1.5,weightkg:68,color:'Brown',eggGroups:['Undiscovered'],otherFormes:['landorustherian']},landorustherian:{num:645,species:'Landorus-Therian',baseSpecies:'Landorus',forme:'Therian',types:['Ground','Flying'],gender:'M',baseStats:{hp:89,atk:145,def:90,spa:105,spd:80,spe:91},abilities:{0:'Intimidate'},heightm:1.3,weightkg:68,color:'Brown',eggGroups:['Undiscovered'],inheritsFrom:'landorus'},kyurem:{num:646,species:'Kyurem',types:['Dragon','Ice'],gender:'N',baseStats:{hp:125,atk:130,def:90,spa:130,spd:90,spe:95},abilities:{0:'Pressure'},heightm:3,weightkg:325,color:'Gray',eggGroups:['Undiscovered'],otherFormes:['kyuremblack','kyuremwhite']},kyuremblack:{num:646,species:'Kyurem-Black',baseSpecies:'Kyurem',forme:'Black',types:['Dragon','Ice'],gender:'N',baseStats:{hp:125,atk:170,def:100,spa:120,spd:90,spe:95},abilities:{0:'Teravolt'},heightm:3.3,weightkg:325,color:'Gray',eggGroups:['Undiscovered']},kyuremwhite:{num:646,species:'Kyurem-White',baseSpecies:'Kyurem',forme:'White',types:['Dragon','Ice'],gender:'N',baseStats:{hp:125,atk:120,def:90,spa:170,spd:100,spe:95},abilities:{0:'Turboblaze'},heightm:3.6,weightkg:325,color:'Gray',eggGroups:['Undiscovered']},keldeo:{num:647,species:'Keldeo',baseForme:'Ordinary',types:['Water','Fighting'],gender:'N',baseStats:{hp:91,atk:72,def:90,spa:129,spd:90,spe:108},abilities:{0:'Justified'},heightm:1.4,weightkg:48.5,color:'Yellow',eggGroups:['Undiscovered'],otherFormes:['keldeoresolute']},keldeoresolute:{num:647,species:'Keldeo-Resolute',baseSpecies:'Keldeo',forme:'Resolute',types:['Water','Fighting'],gender:'N',baseStats:{hp:91,atk:72,def:90,spa:129,spd:90,spe:108},abilities:{0:'Justified'},heightm:1.4,weightkg:48.5,color:'Yellow',eggGroups:['Undiscovered'],inheritsFrom:'keldeo'},meloetta:{num:648,species:'Meloetta',baseForme:'Aria',types:['Normal','Psychic'],gender:'N',baseStats:{hp:100,atk:77,def:77,spa:128,spd:128,spe:90},abilities:{0:'Serene Grace'},heightm:0.6,weightkg:6.5,color:'White',eggGroups:['Undiscovered'],otherFormes:['meloettapirouette']},meloettapirouette:{num:648,species:'Meloetta-Pirouette',baseSpecies:'Meloetta',forme:'Pirouette',types:['Normal','Fighting'],gender:'N',baseStats:{hp:100,atk:128,def:90,spa:77,spd:77,spe:128},abilities:{0:'Serene Grace'},heightm:0.6,weightkg:6.5,color:'White',eggGroups:['Undiscovered']},genesect:{num:649,species:'Genesect',types:['Bug','Steel'],gender:'N',baseStats:{hp:71,atk:120,def:95,spa:120,spd:95,spe:99},abilities:{0:'Download'},heightm:1.5,weightkg:82.5,color:'Purple',eggGroups:['Undiscovered'],otherFormes:['genesectdouse','genesectshock','genesectburn','genesectchill']},genesectdouse:{num:649,species:'Genesect-Douse',baseSpecies:'Genesect',forme:'Douse',types:['Bug','Steel'],gender:'N',baseStats:{hp:71,atk:120,def:95,spa:120,spd:95,spe:99},abilities:{0:'Download'},heightm:1.5,weightkg:82.5,color:'Purple',eggGroups:['Undiscovered'],inheritsFrom:'genesect'},genesectshock:{num:649,species:'Genesect-Shock',baseSpecies:'Genesect',forme:'Shock',types:['Bug','Steel'],gender:'N',baseStats:{hp:71,atk:120,def:95,spa:120,spd:95,spe:99},abilities:{0:'Download'},heightm:1.5,weightkg:82.5,color:'Purple',eggGroups:['Undiscovered'],inheritsFrom:'genesect'},genesectburn:{num:649,species:'Genesect-Burn',baseSpecies:'Genesect',forme:'Burn',types:['Bug','Steel'],gender:'N',baseStats:{hp:71,atk:120,def:95,spa:120,spd:95,spe:99},abilities:{0:'Download'},heightm:1.5,weightkg:82.5,color:'Purple',eggGroups:['Undiscovered'],inheritsFrom:'genesect'},genesectchill:{num:649,species:'Genesect-Chill',baseSpecies:'Genesect',forme:'Chill',types:['Bug','Steel'],gender:'N',baseStats:{hp:71,atk:120,def:95,spa:120,spd:95,spe:99},abilities:{0:'Download'},heightm:1.5,weightkg:82.5,color:'Purple',eggGroups:['Undiscovered'],inheritsFrom:'genesect'},chespin:{num:650,species:'Chespin',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:56,atk:61,def:65,spa:48,spd:45,spe:38},abilities:{0:'Overgrow',H:'Bulletproof'},heightm:0.4,weightkg:9,color:'Green',evos:['quilladin'],eggGroups:['Field']},quilladin:{num:651,species:'Quilladin',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:61,atk:78,def:95,spa:56,spd:58,spe:57},abilities:{0:'Overgrow',H:'Bulletproof'},heightm:0.7,weightkg:29,color:'Green',prevo:'chespin',evoLevel:16,evos:['chesnaught'],eggGroups:['Field']},chesnaught:{num:652,species:'Chesnaught',types:['Grass','Fighting'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:88,atk:107,def:122,spa:74,spd:75,spe:64},abilities:{0:'Overgrow',H:'Bulletproof'},heightm:1.6,weightkg:90,color:'Green',prevo:'quilladin',evoLevel:36,eggGroups:['Field']},fennekin:{num:653,species:'Fennekin',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:40,atk:45,def:40,spa:62,spd:60,spe:60},abilities:{0:'Blaze',H:'Magician'},heightm:0.4,weightkg:9.4,color:'Red',evos:['braixen'],eggGroups:['Field']},braixen:{num:654,species:'Braixen',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:59,atk:59,def:58,spa:90,spd:70,spe:73},abilities:{0:'Blaze',H:'Magician'},heightm:1,weightkg:14.5,color:'Red',prevo:'fennekin',evoLevel:16,evos:['delphox'],eggGroups:['Field']},delphox:{num:655,species:'Delphox',types:['Fire','Psychic'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:75,atk:69,def:72,spa:114,spd:100,spe:104},abilities:{0:'Blaze',H:'Magician'},heightm:1.5,weightkg:39,color:'Red',prevo:'braixen',evoLevel:36,eggGroups:['Field']},froakie:{num:656,species:'Froakie',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:41,atk:56,def:40,spa:62,spd:44,spe:71},abilities:{0:'Torrent',H:'Protean'},heightm:0.3,weightkg:7,color:'Blue',evos:['frogadier'],eggGroups:['Water 1']},frogadier:{num:657,species:'Frogadier',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:54,atk:63,def:52,spa:83,spd:56,spe:97},abilities:{0:'Torrent',H:'Protean'},heightm:0.6,weightkg:10.9,color:'Blue',prevo:'froakie',evoLevel:16,evos:['greninja'],eggGroups:['Water 1']},greninja:{num:658,species:'Greninja',types:['Water','Dark'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:72,atk:95,def:67,spa:103,spd:71,spe:122},abilities:{0:'Torrent',H:'Protean',S:'Battle Bond'},heightm:1.5,weightkg:40,color:'Blue',prevo:'frogadier',evoLevel:36,eggGroups:['Water 1'],otherFormes:['greninjaash']},greninjaash:{num:658,species:'Greninja-Ash',baseSpecies:'Greninja',forme:'Ash',types:['Water','Dark'],gender:'M',baseStats:{hp:72,atk:145,def:67,spa:153,spd:71,spe:132},abilities:{0:'Battle Bond'},heightm:1.5,weightkg:40,color:'Blue',eggGroups:['Undiscovered']},bunnelby:{num:659,species:'Bunnelby',types:['Normal'],baseStats:{hp:38,atk:36,def:38,spa:32,spd:36,spe:57},abilities:{0:'Pickup',1:'Cheek Pouch',H:'Huge Power'},heightm:0.4,weightkg:5,color:'Brown',evos:['diggersby'],eggGroups:['Field']},diggersby:{num:660,species:'Diggersby',types:['Normal','Ground'],baseStats:{hp:85,atk:56,def:77,spa:50,spd:77,spe:78},abilities:{0:'Pickup',1:'Cheek Pouch',H:'Huge Power'},heightm:1,weightkg:42.4,color:'Brown',prevo:'bunnelby',evoLevel:20,eggGroups:['Field']},fletchling:{num:661,species:'Fletchling',types:['Normal','Flying'],baseStats:{hp:45,atk:50,def:43,spa:40,spd:38,spe:62},abilities:{0:'Big Pecks',H:'Gale Wings'},heightm:0.3,weightkg:1.7,color:'Red',evos:['fletchinder'],eggGroups:['Flying']},fletchinder:{num:662,species:'Fletchinder',types:['Fire','Flying'],baseStats:{hp:62,atk:73,def:55,spa:56,spd:52,spe:84},abilities:{0:'Flame Body',H:'Gale Wings'},heightm:0.7,weightkg:16,color:'Red',prevo:'fletchling',evoLevel:17,evos:['talonflame'],eggGroups:['Flying']},talonflame:{num:663,species:'Talonflame',types:['Fire','Flying'],baseStats:{hp:78,atk:81,def:71,spa:74,spd:69,spe:126},abilities:{0:'Flame Body',H:'Gale Wings'},heightm:1.2,weightkg:24.5,color:'Red',prevo:'fletchinder',evoLevel:35,eggGroups:['Flying']},scatterbug:{num:664,species:'Scatterbug',types:['Bug'],baseStats:{hp:38,atk:35,def:40,spa:27,spd:25,spe:35},abilities:{0:'Shield Dust',1:'Compound Eyes',H:'Friend Guard'},heightm:0.3,weightkg:2.5,color:'Black',evos:['spewpa'],eggGroups:['Bug']},spewpa:{num:665,species:'Spewpa',types:['Bug'],baseStats:{hp:45,atk:22,def:60,spa:27,spd:30,spe:29},abilities:{0:'Shed Skin',H:'Friend Guard'},heightm:0.3,weightkg:8.4,color:'Black',prevo:'scatterbug',evoLevel:9,evos:['vivillon'],eggGroups:['Bug']},vivillon:{num:666,species:'Vivillon',types:['Bug','Flying'],baseStats:{hp:80,atk:52,def:50,spa:90,spd:50,spe:89},abilities:{0:'Shield Dust',1:'Compound Eyes',H:'Friend Guard'},heightm:1.2,weightkg:17,color:'White',prevo:'spewpa',evoLevel:12,eggGroups:['Bug'],otherForms:['vivillonarchipelago','vivilloncontinental','vivillonelegant','vivillongarden','vivillonhighplains','vivillonicysnow','vivillonjungle','vivillonmarine','vivillonmodern','vivillonmonsoon','vivillonocean','vivillonpolar','vivillonriver','vivillonsandstorm','vivillonsavanna','vivillonsun','vivillontundra'],otherFormes:['vivillonfancy','vivillonpokeball']},vivillonfancy:{num:666,species:'Vivillon-Fancy',baseSpecies:'Vivillon',forme:'Fancy',types:['Bug','Flying'],baseStats:{hp:80,atk:52,def:50,spa:90,spd:50,spe:89},abilities:{0:'Shield Dust',1:'Compound Eyes'},heightm:1.2,weightkg:17,color:'Black',eggGroups:['Bug']},vivillonpokeball:{num:666,species:'Vivillon-Pokeball',baseSpecies:'Vivillon',forme:'Pokeball',types:['Bug','Flying'],baseStats:{hp:80,atk:52,def:50,spa:90,spd:50,spe:89},abilities:{0:'Shield Dust',1:'Compound Eyes'},heightm:1.2,weightkg:17,color:'Black',eggGroups:['Bug']},litleo:{num:667,species:'Litleo',types:['Fire','Normal'],genderRatio:{M:0.125,F:0.875},baseStats:{hp:62,atk:50,def:58,spa:73,spd:54,spe:72},abilities:{0:'Rivalry',1:'Unnerve',H:'Moxie'},heightm:0.6,weightkg:13.5,color:'Brown',evos:['pyroar'],eggGroups:['Field']},pyroar:{num:668,species:'Pyroar',types:['Fire','Normal'],genderRatio:{M:0.125,F:0.875},baseStats:{hp:86,atk:68,def:72,spa:109,spd:66,spe:106},abilities:{0:'Rivalry',1:'Unnerve',H:'Moxie'},heightm:1.5,weightkg:81.5,color:'Brown',prevo:'litleo',evoLevel:35,eggGroups:['Field']},flabebe:{num:669,species:'Flabe\u0301be\u0301',baseForme:'Red',types:['Fairy'],gender:'F',baseStats:{hp:44,atk:38,def:39,spa:61,spd:79,spe:42},abilities:{0:'Flower Veil',H:'Symbiosis'},heightm:0.1,weightkg:0.1,color:'White',evos:['floette'],eggGroups:['Fairy'],otherForms:['flabebeblue','flabebeorange','flabebewhite','flabebeyellow']},floette:{num:670,species:'Floette',baseForme:'Red',types:['Fairy'],gender:'F',baseStats:{hp:54,atk:45,def:47,spa:75,spd:98,spe:52},abilities:{0:'Flower Veil',H:'Symbiosis'},heightm:0.2,weightkg:0.9,color:'White',prevo:'flabebe',evoLevel:19,evos:['florges'],eggGroups:['Fairy'],otherForms:['floetteblue','floetteorange','floettewhite','floetteyellow'],otherFormes:['floetteeternal']},floetteeternal:{num:670,species:'Floette-Eternal',baseSpecies:'Floette',forme:'Eternal',types:['Fairy'],gender:'F',baseStats:{hp:74,atk:65,def:67,spa:125,spd:128,spe:92},abilities:{0:'Flower Veil'},heightm:0.2,weightkg:0.9,color:'White',eggGroups:['Undiscovered']},florges:{num:671,species:'Florges',baseForme:'Red',types:['Fairy'],gender:'F',baseStats:{hp:78,atk:65,def:68,spa:112,spd:154,spe:75},abilities:{0:'Flower Veil',H:'Symbiosis'},heightm:1.1,weightkg:10,color:'White',prevo:'floette',evoType:'useItem',evoItem:'Shiny Stone',eggGroups:['Fairy'],otherForms:['florgesblue','florgesorange','florgeswhite','florgesyellow']},skiddo:{num:672,species:'Skiddo',types:['Grass'],baseStats:{hp:66,atk:65,def:48,spa:62,spd:57,spe:52},abilities:{0:'Sap Sipper',H:'Grass Pelt'},heightm:0.9,weightkg:31,color:'Brown',evos:['gogoat'],eggGroups:['Field']},gogoat:{num:673,species:'Gogoat',types:['Grass'],baseStats:{hp:123,atk:100,def:62,spa:97,spd:81,spe:68},abilities:{0:'Sap Sipper',H:'Grass Pelt'},heightm:1.7,weightkg:91,color:'Brown',prevo:'skiddo',evoLevel:32,eggGroups:['Field']},pancham:{num:674,species:'Pancham',types:['Fighting'],baseStats:{hp:67,atk:82,def:62,spa:46,spd:48,spe:43},abilities:{0:'Iron Fist',1:'Mold Breaker',H:'Scrappy'},heightm:0.6,weightkg:8,color:'White',evos:['pangoro'],eggGroups:['Field','Human-Like']},pangoro:{num:675,species:'Pangoro',types:['Fighting','Dark'],baseStats:{hp:95,atk:124,def:78,spa:69,spd:71,spe:58},abilities:{0:'Iron Fist',1:'Mold Breaker',H:'Scrappy'},heightm:2.1,weightkg:136,color:'White',prevo:'pancham',evoLevel:32,eggGroups:['Field','Human-Like']},furfrou:{num:676,species:'Furfrou',types:['Normal'],baseStats:{hp:75,atk:80,def:60,spa:65,spd:90,spe:102},abilities:{0:'Fur Coat'},heightm:1.2,weightkg:28,color:'White',eggGroups:['Field'],otherForms:['furfroudandy','furfroudebutante','furfroudiamond','furfrouheart','furfroukabuki','furfroulareine','furfroumatron','furfroupharaoh','furfroustar']},espurr:{num:677,species:'Espurr',types:['Psychic'],baseStats:{hp:62,atk:48,def:54,spa:63,spd:60,spe:68},abilities:{0:'Keen Eye',1:'Infiltrator',H:'Own Tempo'},heightm:0.3,weightkg:3.5,color:'Gray',evos:['meowstic'],eggGroups:['Field']},meowstic:{num:678,species:'Meowstic',baseForme:'M',types:['Psychic'],gender:'M',baseStats:{hp:74,atk:48,def:76,spa:83,spd:81,spe:104},abilities:{0:'Keen Eye',1:'Infiltrator',H:'Prankster'},heightm:0.6,weightkg:8.5,color:'Blue',prevo:'espurr',evoLevel:25,eggGroups:['Field'],otherFormes:['meowsticf']},meowsticf:{num:678,species:'Meowstic-F',baseSpecies:'Meowstic',forme:'F',types:['Psychic'],gender:'F',baseStats:{hp:74,atk:48,def:76,spa:83,spd:81,spe:104},abilities:{0:'Keen Eye',1:'Infiltrator',H:'Competitive'},heightm:0.6,weightkg:8.5,color:'White',prevo:'espurr',evoLevel:25,eggGroups:['Field']},honedge:{num:679,species:'Honedge',types:['Steel','Ghost'],baseStats:{hp:45,atk:80,def:100,spa:35,spd:37,spe:28},abilities:{0:'No Guard'},heightm:0.8,weightkg:2,color:'Brown',evos:['doublade'],eggGroups:['Mineral']},doublade:{num:680,species:'Doublade',types:['Steel','Ghost'],baseStats:{hp:59,atk:110,def:150,spa:45,spd:49,spe:35},abilities:{0:'No Guard'},heightm:0.8,weightkg:4.5,color:'Brown',prevo:'honedge',evoLevel:35,evos:['aegislash'],eggGroups:['Mineral']},aegislash:{num:681,species:'Aegislash',baseForme:'Shield',types:['Steel','Ghost'],baseStats:{hp:60,atk:50,def:140,spa:50,spd:140,spe:60},abilities:{0:'Stance Change'},heightm:1.7,weightkg:53,color:'Brown',prevo:'doublade',evoType:'useItem',evoItem:'Dusk Stone',eggGroups:['Mineral'],otherFormes:['aegislashblade']},aegislashblade:{num:681,species:'Aegislash-Blade',baseSpecies:'Aegislash',forme:'Blade',types:['Steel','Ghost'],baseStats:{hp:60,atk:140,def:50,spa:140,spd:50,spe:60},abilities:{0:'Stance Change'},heightm:1.7,weightkg:53,color:'Brown',prevo:'doublade',evoType:'useItem',evoItem:'Dusk Stone',eggGroups:['Mineral']},spritzee:{num:682,species:'Spritzee',types:['Fairy'],baseStats:{hp:78,atk:52,def:60,spa:63,spd:65,spe:23},abilities:{0:'Healer',H:'Aroma Veil'},heightm:0.2,weightkg:0.5,color:'Pink',evos:['aromatisse'],eggGroups:['Fairy']},aromatisse:{num:683,species:'Aromatisse',types:['Fairy'],baseStats:{hp:101,atk:72,def:72,spa:99,spd:89,spe:29},abilities:{0:'Healer',H:'Aroma Veil'},heightm:0.8,weightkg:15.5,color:'Pink',prevo:'spritzee',evoType:'trade',evoItem:'Sachet',eggGroups:['Fairy']},swirlix:{num:684,species:'Swirlix',types:['Fairy'],baseStats:{hp:62,atk:48,def:66,spa:59,spd:57,spe:49},abilities:{0:'Sweet Veil',H:'Unburden'},heightm:0.4,weightkg:3.5,color:'White',evos:['slurpuff'],eggGroups:['Fairy']},slurpuff:{num:685,species:'Slurpuff',types:['Fairy'],baseStats:{hp:82,atk:80,def:86,spa:85,spd:75,spe:72},abilities:{0:'Sweet Veil',H:'Unburden'},heightm:0.8,weightkg:5,color:'White',prevo:'swirlix',evoType:'trade',evoItem:'Whipped Dream',eggGroups:['Fairy']},inkay:{num:686,species:'Inkay',types:['Dark','Psychic'],baseStats:{hp:53,atk:54,def:53,spa:37,spd:46,spe:45},abilities:{0:'Contrary',1:'Suction Cups',H:'Infiltrator'},heightm:0.4,weightkg:3.5,color:'Blue',evos:['malamar'],eggGroups:['Water 1','Water 2']},malamar:{num:687,species:'Malamar',types:['Dark','Psychic'],baseStats:{hp:86,atk:92,def:88,spa:68,spd:75,spe:73},abilities:{0:'Contrary',1:'Suction Cups',H:'Infiltrator'},heightm:1.5,weightkg:47,color:'Blue',prevo:'inkay',evoLevel:30,eggGroups:['Water 1','Water 2']},binacle:{num:688,species:'Binacle',types:['Rock','Water'],baseStats:{hp:42,atk:52,def:67,spa:39,spd:56,spe:50},abilities:{0:'Tough Claws',1:'Sniper',H:'Pickpocket'},heightm:0.5,weightkg:31,color:'Brown',evos:['barbaracle'],eggGroups:['Water 3']},barbaracle:{num:689,species:'Barbaracle',types:['Rock','Water'],baseStats:{hp:72,atk:105,def:115,spa:54,spd:86,spe:68},abilities:{0:'Tough Claws',1:'Sniper',H:'Pickpocket'},heightm:1.3,weightkg:96,color:'Brown',prevo:'binacle',evoLevel:39,eggGroups:['Water 3']},skrelp:{num:690,species:'Skrelp',types:['Poison','Water'],baseStats:{hp:50,atk:60,def:60,spa:60,spd:60,spe:30},abilities:{0:'Poison Point',1:'Poison Touch',H:'Adaptability'},heightm:0.5,weightkg:7.3,color:'Brown',evos:['dragalge'],eggGroups:['Water 1','Dragon']},dragalge:{num:691,species:'Dragalge',types:['Poison','Dragon'],baseStats:{hp:65,atk:75,def:90,spa:97,spd:123,spe:44},abilities:{0:'Poison Point',1:'Poison Touch',H:'Adaptability'},heightm:1.8,weightkg:81.5,color:'Brown',prevo:'skrelp',evoLevel:48,eggGroups:['Water 1','Dragon']},clauncher:{num:692,species:'Clauncher',types:['Water'],baseStats:{hp:50,atk:53,def:62,spa:58,spd:63,spe:44},abilities:{0:'Mega Launcher'},heightm:0.5,weightkg:8.3,color:'Blue',evos:['clawitzer'],eggGroups:['Water 1','Water 3']},clawitzer:{num:693,species:'Clawitzer',types:['Water'],baseStats:{hp:71,atk:73,def:88,spa:120,spd:89,spe:59},abilities:{0:'Mega Launcher'},heightm:1.3,weightkg:35.3,color:'Blue',prevo:'clauncher',evoLevel:37,eggGroups:['Water 1','Water 3']},helioptile:{num:694,species:'Helioptile',types:['Electric','Normal'],baseStats:{hp:44,atk:38,def:33,spa:61,spd:43,spe:70},abilities:{0:'Dry Skin',1:'Sand Veil',H:'Solar Power'},heightm:0.5,weightkg:6,color:'Yellow',evos:['heliolisk'],eggGroups:['Monster','Dragon']},heliolisk:{num:695,species:'Heliolisk',types:['Electric','Normal'],baseStats:{hp:62,atk:55,def:52,spa:109,spd:94,spe:109},abilities:{0:'Dry Skin',1:'Sand Veil',H:'Solar Power'},heightm:1,weightkg:21,color:'Yellow',prevo:'helioptile',evoType:'useItem',evoItem:'Sun Stone',eggGroups:['Monster','Dragon']},tyrunt:{num:696,species:'Tyrunt',types:['Rock','Dragon'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:58,atk:89,def:77,spa:45,spd:45,spe:48},abilities:{0:'Strong Jaw',H:'Sturdy'},heightm:0.8,weightkg:26,color:'Brown',evos:['tyrantrum'],eggGroups:['Monster','Dragon']},tyrantrum:{num:697,species:'Tyrantrum',types:['Rock','Dragon'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:82,atk:121,def:119,spa:69,spd:59,spe:71},abilities:{0:'Strong Jaw',H:'Rock Head'},heightm:2.5,weightkg:270,color:'Red',prevo:'tyrunt',evoLevel:39,eggGroups:['Monster','Dragon']},amaura:{num:698,species:'Amaura',types:['Rock','Ice'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:77,atk:59,def:50,spa:67,spd:63,spe:46},abilities:{0:'Refrigerate',H:'Snow Warning'},heightm:1.3,weightkg:25.2,color:'Blue',evos:['aurorus'],eggGroups:['Monster']},aurorus:{num:699,species:'Aurorus',types:['Rock','Ice'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:123,atk:77,def:72,spa:99,spd:92,spe:58},abilities:{0:'Refrigerate',H:'Snow Warning'},heightm:2.7,weightkg:225,color:'Blue',prevo:'amaura',evoLevel:39,eggGroups:['Monster']},sylveon:{num:700,species:'Sylveon',types:['Fairy'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:95,atk:65,def:65,spa:110,spd:130,spe:60},abilities:{0:'Cute Charm',H:'Pixilate'},heightm:1,weightkg:23.5,color:'Pink',prevo:'eevee',evoType:'levelExtra',evoCondition:'with a Fairy-type move and two levels of Affection',eggGroups:['Field']},hawlucha:{num:701,species:'Hawlucha',types:['Fighting','Flying'],baseStats:{hp:78,atk:92,def:75,spa:74,spd:63,spe:118},abilities:{0:'Limber',1:'Unburden',H:'Mold Breaker'},heightm:0.8,weightkg:21.5,color:'Green',eggGroups:['Flying','Human-Like']},dedenne:{num:702,species:'Dedenne',types:['Electric','Fairy'],baseStats:{hp:67,atk:58,def:57,spa:81,spd:67,spe:101},abilities:{0:'Cheek Pouch',1:'Pickup',H:'Plus'},heightm:0.2,weightkg:2.2,color:'Yellow',eggGroups:['Field','Fairy']},carbink:{num:703,species:'Carbink',types:['Rock','Fairy'],gender:'N',baseStats:{hp:50,atk:50,def:150,spa:50,spd:150,spe:50},abilities:{0:'Clear Body',H:'Sturdy'},heightm:0.3,weightkg:5.7,color:'Gray',eggGroups:['Fairy','Mineral']},goomy:{num:704,species:'Goomy',types:['Dragon'],baseStats:{hp:45,atk:50,def:35,spa:55,spd:75,spe:40},abilities:{0:'Sap Sipper',1:'Hydration',H:'Gooey'},heightm:0.3,weightkg:2.8,color:'Purple',evos:['sliggoo'],eggGroups:['Dragon']},sliggoo:{num:705,species:'Sliggoo',types:['Dragon'],baseStats:{hp:68,atk:75,def:53,spa:83,spd:113,spe:60},abilities:{0:'Sap Sipper',1:'Hydration',H:'Gooey'},heightm:0.8,weightkg:17.5,color:'Purple',prevo:'goomy',evoLevel:40,evos:['goodra'],eggGroups:['Dragon']},goodra:{num:706,species:'Goodra',types:['Dragon'],baseStats:{hp:90,atk:100,def:70,spa:110,spd:150,spe:80},abilities:{0:'Sap Sipper',1:'Hydration',H:'Gooey'},heightm:2,weightkg:150.5,color:'Purple',prevo:'sliggoo',evoLevel:50,eggGroups:['Dragon']},klefki:{num:707,species:'Klefki',types:['Steel','Fairy'],baseStats:{hp:57,atk:80,def:91,spa:80,spd:87,spe:75},abilities:{0:'Prankster',H:'Magician'},heightm:0.2,weightkg:3,color:'Gray',eggGroups:['Mineral']},phantump:{num:708,species:'Phantump',types:['Ghost','Grass'],baseStats:{hp:43,atk:70,def:48,spa:50,spd:60,spe:38},abilities:{0:'Natural Cure',1:'Frisk',H:'Harvest'},heightm:0.4,weightkg:7,color:'Brown',evos:['trevenant'],eggGroups:['Grass','Amorphous']},trevenant:{num:709,species:'Trevenant',types:['Ghost','Grass'],baseStats:{hp:85,atk:110,def:76,spa:65,spd:82,spe:56},abilities:{0:'Natural Cure',1:'Frisk',H:'Harvest'},heightm:1.5,weightkg:71,color:'Brown',prevo:'phantump',evoType:'trade',eggGroups:['Grass','Amorphous']},pumpkaboo:{num:710,species:'Pumpkaboo',baseForme:'Average',types:['Ghost','Grass'],baseStats:{hp:49,atk:66,def:70,spa:44,spd:55,spe:51},abilities:{0:'Pickup',1:'Frisk',H:'Insomnia'},heightm:0.4,weightkg:5,color:'Brown',evos:['gourgeist'],eggGroups:['Amorphous'],otherFormes:['pumpkaboosmall','pumpkaboolarge','pumpkaboosuper']},pumpkaboosmall:{num:710,species:'Pumpkaboo-Small',baseSpecies:'Pumpkaboo',forme:'Small',types:['Ghost','Grass'],baseStats:{hp:44,atk:66,def:70,spa:44,spd:55,spe:56},abilities:{0:'Pickup',1:'Frisk',H:'Insomnia'},heightm:0.3,weightkg:3.5,color:'Brown',evos:['gourgeistsmall'],eggGroups:['Amorphous'],inheritsFrom:'pumpkaboo'},pumpkaboolarge:{num:710,species:'Pumpkaboo-Large',baseSpecies:'Pumpkaboo',forme:'Large',types:['Ghost','Grass'],baseStats:{hp:54,atk:66,def:70,spa:44,spd:55,spe:46},abilities:{0:'Pickup',1:'Frisk',H:'Insomnia'},heightm:0.5,weightkg:7.5,color:'Brown',evos:['gourgeistlarge'],eggGroups:['Amorphous'],inheritsFrom:'pumpkaboo'},pumpkaboosuper:{num:710,species:'Pumpkaboo-Super',baseSpecies:'Pumpkaboo',forme:'Super',types:['Ghost','Grass'],baseStats:{hp:59,atk:66,def:70,spa:44,spd:55,spe:41},abilities:{0:'Pickup',1:'Frisk',H:'Insomnia'},heightm:0.8,weightkg:15,color:'Brown',evos:['gourgeistsuper'],eggGroups:['Amorphous'],inheritsFrom:'pumpkaboo'},gourgeist:{num:711,species:'Gourgeist',baseForme:'Average',types:['Ghost','Grass'],baseStats:{hp:65,atk:90,def:122,spa:58,spd:75,spe:84},abilities:{0:'Pickup',1:'Frisk',H:'Insomnia'},heightm:0.9,weightkg:12.5,color:'Brown',prevo:'pumpkaboo',evoType:'trade',eggGroups:['Amorphous'],otherFormes:['gourgeistsmall','gourgeistlarge','gourgeistsuper']},gourgeistsmall:{num:711,species:'Gourgeist-Small',baseSpecies:'Gourgeist',forme:'Small',types:['Ghost','Grass'],baseStats:{hp:55,atk:85,def:122,spa:58,spd:75,spe:99},abilities:{0:'Pickup',1:'Frisk',H:'Insomnia'},heightm:0.7,weightkg:9.5,color:'Brown',prevo:'pumpkaboosmall',evoType:'trade',eggGroups:['Amorphous'],inheritsFrom:'gourgeist'},gourgeistlarge:{num:711,species:'Gourgeist-Large',baseSpecies:'Gourgeist',forme:'Large',types:['Ghost','Grass'],baseStats:{hp:75,atk:95,def:122,spa:58,spd:75,spe:69},abilities:{0:'Pickup',1:'Frisk',H:'Insomnia'},heightm:1.1,weightkg:14,color:'Brown',prevo:'pumpkaboolarge',evoType:'trade',eggGroups:['Amorphous'],inheritsFrom:'gourgeist'},gourgeistsuper:{num:711,species:'Gourgeist-Super',baseSpecies:'Gourgeist',forme:'Super',types:['Ghost','Grass'],baseStats:{hp:85,atk:100,def:122,spa:58,spd:75,spe:54},abilities:{0:'Pickup',1:'Frisk',H:'Insomnia'},heightm:1.7,weightkg:39,color:'Brown',prevo:'pumpkaboosuper',evoType:'trade',eggGroups:['Amorphous'],inheritsFrom:'gourgeist'},bergmite:{num:712,species:'Bergmite',types:['Ice'],baseStats:{hp:55,atk:69,def:85,spa:32,spd:35,spe:28},abilities:{0:'Own Tempo',1:'Ice Body',H:'Sturdy'},heightm:1,weightkg:99.5,color:'Blue',evos:['avalugg'],eggGroups:['Monster','Mineral']},avalugg:{num:713,species:'Avalugg',types:['Ice'],baseStats:{hp:95,atk:117,def:184,spa:44,spd:46,spe:28},abilities:{0:'Own Tempo',1:'Ice Body',H:'Sturdy'},heightm:2,weightkg:505,color:'Blue',prevo:'bergmite',evoLevel:37,eggGroups:['Monster','Mineral']},noibat:{num:714,species:'Noibat',types:['Flying','Dragon'],baseStats:{hp:40,atk:30,def:35,spa:45,spd:40,spe:55},abilities:{0:'Frisk',1:'Infiltrator',H:'Telepathy'},heightm:0.5,weightkg:8,color:'Purple',evos:['noivern'],eggGroups:['Flying','Dragon']},noivern:{num:715,species:'Noivern',types:['Flying','Dragon'],baseStats:{hp:85,atk:70,def:80,spa:97,spd:80,spe:123},abilities:{0:'Frisk',1:'Infiltrator',H:'Telepathy'},heightm:1.5,weightkg:85,color:'Purple',prevo:'noibat',evoLevel:48,eggGroups:['Flying','Dragon']},xerneas:{num:716,species:'Xerneas',types:['Fairy'],gender:'N',baseStats:{hp:126,atk:131,def:95,spa:131,spd:98,spe:99},abilities:{0:'Fairy Aura'},heightm:3,weightkg:215,color:'Blue',eggGroups:['Undiscovered']},yveltal:{num:717,species:'Yveltal',types:['Dark','Flying'],gender:'N',baseStats:{hp:126,atk:131,def:95,spa:131,spd:98,spe:99},abilities:{0:'Dark Aura'},heightm:5.8,weightkg:203,color:'Red',eggGroups:['Undiscovered']},zygarde:{num:718,species:'Zygarde',baseForme:'50%',types:['Dragon','Ground'],gender:'N',baseStats:{hp:108,atk:100,def:121,spa:81,spd:95,spe:95},abilities:{0:'Aura Break',S:'Power Construct'},heightm:5,weightkg:305,color:'Green',eggGroups:['Undiscovered'],otherFormes:['zygarde10','zygardecomplete']},zygarde10:{num:718,species:'Zygarde-10%',baseSpecies:'Zygarde',forme:'10%',types:['Dragon','Ground'],gender:'N',baseStats:{hp:54,atk:100,def:71,spa:61,spd:85,spe:115},abilities:{0:'Aura Break',S:'Power Construct'},heightm:1.2,weightkg:33.5,color:'Green',eggGroups:['Undiscovered'],inheritsFrom:'zygarde'},zygardecomplete:{num:718,species:'Zygarde-Complete',baseSpecies:'Zygarde',forme:'Complete',types:['Dragon','Ground'],gender:'N',baseStats:{hp:216,atk:100,def:121,spa:91,spd:95,spe:85},abilities:{0:'Power Construct'},heightm:4.5,weightkg:610,color:'Green',eggGroups:['Undiscovered'],inheritsFrom:'zygarde'},diancie:{num:719,species:'Diancie',types:['Rock','Fairy'],gender:'N',baseStats:{hp:50,atk:100,def:150,spa:100,spd:150,spe:50},abilities:{0:'Clear Body'},heightm:0.7,weightkg:8.8,color:'Pink',eggGroups:['Undiscovered'],otherFormes:['dianciemega']},dianciemega:{num:719,species:'Diancie-Mega',baseSpecies:'Diancie',forme:'Mega',types:['Rock','Fairy'],gender:'N',baseStats:{hp:50,atk:160,def:110,spa:160,spd:110,spe:110},abilities:{0:'Magic Bounce'},heightm:1.1,weightkg:27.8,color:'Pink',eggGroups:['Undiscovered']},hoopa:{num:720,species:'Hoopa',baseForme:'Confined',types:['Psychic','Ghost'],gender:'N',baseStats:{hp:80,atk:110,def:60,spa:150,spd:130,spe:70},abilities:{0:'Magician'},heightm:0.5,weightkg:9,color:'Purple',eggGroups:['Undiscovered'],otherFormes:['hoopaunbound']},hoopaunbound:{num:720,species:'Hoopa-Unbound',baseSpecies:'Hoopa',forme:'Unbound',types:['Psychic','Dark'],gender:'N',baseStats:{hp:80,atk:160,def:60,spa:170,spd:130,spe:80},abilities:{0:'Magician'},heightm:6.5,weightkg:490,color:'Purple',eggGroups:['Undiscovered'],inheritsFrom:'hoopa'},volcanion:{num:721,species:'Volcanion',types:['Fire','Water'],gender:'N',baseStats:{hp:80,atk:110,def:120,spa:130,spd:90,spe:70},abilities:{0:'Water Absorb'},heightm:1.7,weightkg:195,color:'Brown',eggGroups:['Undiscovered']},rowlet:{num:722,species:'Rowlet',types:['Grass','Flying'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:68,atk:55,def:55,spa:50,spd:50,spe:42},abilities:{0:'Overgrow',H:'Long Reach'},heightm:0.3,weightkg:1.5,color:'Brown',evos:['dartrix'],eggGroups:['Flying']},dartrix:{num:723,species:'Dartrix',types:['Grass','Flying'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:78,atk:75,def:75,spa:70,spd:70,spe:52},abilities:{0:'Overgrow',H:'Long Reach'},heightm:0.7,weightkg:16,color:'Brown',prevo:'rowlet',evoLevel:17,evos:['decidueye'],eggGroups:['Flying']},decidueye:{num:724,species:'Decidueye',types:['Grass','Ghost'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:78,atk:107,def:75,spa:100,spd:100,spe:70},abilities:{0:'Overgrow',H:'Long Reach'},heightm:1.6,weightkg:36.6,color:'Brown',prevo:'dartrix',evoLevel:34,eggGroups:['Flying']},litten:{num:725,species:'Litten',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:45,atk:65,def:40,spa:60,spd:40,spe:70},abilities:{0:'Blaze',H:'Intimidate'},heightm:0.4,weightkg:4.3,color:'Red',evos:['torracat'],eggGroups:['Field']},torracat:{num:726,species:'Torracat',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:65,atk:85,def:50,spa:80,spd:50,spe:90},abilities:{0:'Blaze',H:'Intimidate'},heightm:0.7,weightkg:25,color:'Red',prevo:'litten',evoLevel:17,evos:['incineroar'],eggGroups:['Field']},incineroar:{num:727,species:'Incineroar',types:['Fire','Dark'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:95,atk:115,def:90,spa:80,spd:90,spe:60},abilities:{0:'Blaze',H:'Intimidate'},heightm:1.8,weightkg:83,color:'Red',prevo:'torracat',evoLevel:34,eggGroups:['Field']},popplio:{num:728,species:'Popplio',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:50,atk:54,def:54,spa:66,spd:56,spe:40},abilities:{0:'Torrent',H:'Liquid Voice'},heightm:0.4,weightkg:7.5,color:'Blue',evos:['brionne'],eggGroups:['Water 1','Field']},brionne:{num:729,species:'Brionne',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:60,atk:69,def:69,spa:91,spd:81,spe:50},abilities:{0:'Torrent',H:'Liquid Voice'},heightm:0.6,weightkg:17.5,color:'Blue',prevo:'popplio',evoLevel:17,evos:['primarina'],eggGroups:['Water 1','Field']},primarina:{num:730,species:'Primarina',types:['Water','Fairy'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:80,atk:74,def:74,spa:126,spd:116,spe:60},abilities:{0:'Torrent',H:'Liquid Voice'},heightm:1.8,weightkg:44,color:'Blue',prevo:'brionne',evoLevel:34,eggGroups:['Water 1','Field']},pikipek:{num:731,species:'Pikipek',types:['Normal','Flying'],baseStats:{hp:35,atk:75,def:30,spa:30,spd:30,spe:65},abilities:{0:'Keen Eye',1:'Skill Link',H:'Pickup'},heightm:0.3,weightkg:1.2,color:'Black',evos:['trumbeak'],eggGroups:['Flying']},trumbeak:{num:732,species:'Trumbeak',types:['Normal','Flying'],baseStats:{hp:55,atk:85,def:50,spa:40,spd:50,spe:75},abilities:{0:'Keen Eye',1:'Skill Link',H:'Pickup'},heightm:0.6,weightkg:14.8,color:'Black',prevo:'pikipek',evoLevel:14,evos:['toucannon'],eggGroups:['Flying']},toucannon:{num:733,species:'Toucannon',types:['Normal','Flying'],baseStats:{hp:80,atk:120,def:75,spa:75,spd:75,spe:60},abilities:{0:'Keen Eye',1:'Skill Link',H:'Sheer Force'},heightm:1.1,weightkg:26,color:'Black',prevo:'trumbeak',evoLevel:28,eggGroups:['Flying']},yungoos:{num:734,species:'Yungoos',types:['Normal'],baseStats:{hp:48,atk:70,def:30,spa:30,spd:30,spe:45},abilities:{0:'Stakeout',1:'Strong Jaw',H:'Adaptability'},heightm:0.4,weightkg:6,color:'Brown',evos:['gumshoos'],eggGroups:['Field']},gumshoos:{num:735,species:'Gumshoos',types:['Normal'],baseStats:{hp:88,atk:110,def:60,spa:55,spd:60,spe:45},abilities:{0:'Stakeout',1:'Strong Jaw',H:'Adaptability'},heightm:0.7,weightkg:14.2,color:'Brown',prevo:'yungoos',evoLevel:20,eggGroups:['Field'],otherFormes:['gumshoostotem']},gumshoostotem:{num:735,species:'Gumshoos-Totem',baseSpecies:'Gumshoos',forme:'Totem',types:['Normal'],baseStats:{hp:88,atk:110,def:60,spa:55,spd:60,spe:45},abilities:{0:'Adaptability'},heightm:1.4,weightkg:60,color:'Brown',eggGroups:['Field']},grubbin:{num:736,species:'Grubbin',types:['Bug'],baseStats:{hp:47,atk:62,def:45,spa:55,spd:45,spe:46},abilities:{0:'Swarm'},heightm:0.4,weightkg:4.4,color:'Gray',evos:['charjabug'],eggGroups:['Bug']},charjabug:{num:737,species:'Charjabug',types:['Bug','Electric'],baseStats:{hp:57,atk:82,def:95,spa:55,spd:75,spe:36},abilities:{0:'Battery'},heightm:0.5,weightkg:10.5,color:'Green',prevo:'grubbin',evoLevel:20,evos:['vikavolt'],eggGroups:['Bug']},vikavolt:{num:738,species:'Vikavolt',types:['Bug','Electric'],baseStats:{hp:77,atk:70,def:90,spa:145,spd:75,spe:43},abilities:{0:'Levitate'},heightm:1.5,weightkg:45,color:'Blue',prevo:'charjabug',evoType:'useItem',evoItem:'Thunder Stone',eggGroups:['Bug'],otherFormes:['vikavolttotem']},vikavolttotem:{num:738,species:'Vikavolt-Totem',baseSpecies:'Vikavolt',forme:'Totem',types:['Bug','Electric'],baseStats:{hp:77,atk:70,def:90,spa:145,spd:75,spe:43},abilities:{0:'Levitate'},heightm:2.6,weightkg:147.5,color:'Blue',eggGroups:['Bug']},crabrawler:{num:739,species:'Crabrawler',types:['Fighting'],baseStats:{hp:47,atk:82,def:57,spa:42,spd:47,spe:63},abilities:{0:'Hyper Cutter',1:'Iron Fist',H:'Anger Point'},heightm:0.6,weightkg:7,color:'Purple',evos:['crabominable'],eggGroups:['Water 3']},crabominable:{num:740,species:'Crabominable',types:['Fighting','Ice'],baseStats:{hp:97,atk:132,def:77,spa:62,spd:67,spe:43},abilities:{0:'Hyper Cutter',1:'Iron Fist',H:'Anger Point'},heightm:1.7,weightkg:180,color:'White',prevo:'crabrawler',evoType:'levelExtra',evoCondition:'at Mount Lanakila',eggGroups:['Water 3']},oricorio:{num:741,species:'Oricorio',baseForme:'Baile',types:['Fire','Flying'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:75,atk:70,def:70,spa:98,spd:70,spe:93},abilities:{0:'Dancer'},heightm:0.6,weightkg:3.4,color:'Red',eggGroups:['Flying'],otherFormes:['oricoriopompom','oricoriopau','oricoriosensu']},oricoriopompom:{num:741,species:'Oricorio-Pom-Pom',baseSpecies:'Oricorio',forme:'Pom-Pom',types:['Electric','Flying'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:75,atk:70,def:70,spa:98,spd:70,spe:93},abilities:{0:'Dancer'},heightm:0.6,weightkg:3.4,color:'Yellow',eggGroups:['Flying'],inheritsFrom:'oricorio'},oricoriopau:{num:741,species:"Oricorio-Pa'u",baseSpecies:'Oricorio',forme:"Pa'u",types:['Psychic','Flying'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:75,atk:70,def:70,spa:98,spd:70,spe:93},abilities:{0:'Dancer'},heightm:0.6,weightkg:3.4,color:'Pink',eggGroups:['Flying'],inheritsFrom:'oricorio'},oricoriosensu:{num:741,species:'Oricorio-Sensu',baseSpecies:'Oricorio',forme:'Sensu',types:['Ghost','Flying'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:75,atk:70,def:70,spa:98,spd:70,spe:93},abilities:{0:'Dancer'},heightm:0.6,weightkg:3.4,color:'Purple',eggGroups:['Flying'],inheritsFrom:'oricorio'},cutiefly:{num:742,species:'Cutiefly',types:['Bug','Fairy'],baseStats:{hp:40,atk:45,def:40,spa:55,spd:40,spe:84},abilities:{0:'Honey Gather',1:'Shield Dust',H:'Sweet Veil'},heightm:0.1,weightkg:0.2,color:'Yellow',evos:['ribombee'],eggGroups:['Bug','Fairy']},ribombee:{num:743,species:'Ribombee',types:['Bug','Fairy'],baseStats:{hp:60,atk:55,def:60,spa:95,spd:70,spe:124},abilities:{0:'Honey Gather',1:'Shield Dust',H:'Sweet Veil'},heightm:0.2,weightkg:0.5,color:'Yellow',prevo:'cutiefly',evoLevel:25,eggGroups:['Bug','Fairy'],otherFormes:['ribombeetotem']},ribombeetotem:{num:743,species:'Ribombee-Totem',baseSpecies:'Ribombee',forme:'Totem',types:['Bug','Fairy'],baseStats:{hp:60,atk:55,def:60,spa:95,spd:70,spe:124},abilities:{0:'Sweet Veil'},heightm:0.4,weightkg:2,color:'Yellow',eggGroups:['Bug','Fairy']},rockruff:{num:744,species:'Rockruff',baseForme:'Midday',types:['Rock'],baseStats:{hp:45,atk:65,def:40,spa:30,spd:40,spe:60},abilities:{0:'Keen Eye',1:'Vital Spirit',H:'Steadfast',S:'Own Tempo'},heightm:0.5,weightkg:9.2,color:'Brown',evos:['lycanroc','lycanrocmidnight','lycanrocdusk'],eggGroups:['Field']},lycanroc:{num:745,species:'Lycanroc',baseForme:'Midday',types:['Rock'],baseStats:{hp:75,atk:115,def:65,spa:55,spd:65,spe:112},abilities:{0:'Keen Eye',1:'Sand Rush',H:'Steadfast'},heightm:0.8,weightkg:25,color:'Brown',prevo:'rockruff',evoLevel:25,eggGroups:['Field'],otherFormes:['lycanrocmidnight','lycanrocdusk']},lycanrocmidnight:{num:745,species:'Lycanroc-Midnight',baseSpecies:'Lycanroc',forme:'Midnight',types:['Rock'],baseStats:{hp:85,atk:115,def:75,spa:55,spd:75,spe:82},abilities:{0:'Keen Eye',1:'Vital Spirit',H:'No Guard'},heightm:1.1,weightkg:25,color:'Red',prevo:'rockruff',evoLevel:25,eggGroups:['Field']},lycanrocdusk:{num:745,species:'Lycanroc-Dusk',baseSpecies:'Lycanroc',forme:'Dusk',types:['Rock'],baseStats:{hp:75,atk:117,def:65,spa:55,spd:65,spe:110},abilities:{0:'Tough Claws'},heightm:0.8,weightkg:25,color:'Brown',prevo:'rockruff',evoLevel:25,eggGroups:['Field']},wishiwashi:{num:746,species:'Wishiwashi',baseForme:'Solo',types:['Water'],baseStats:{hp:45,atk:20,def:20,spa:25,spd:25,spe:40},abilities:{0:'Schooling'},heightm:0.2,weightkg:0.3,color:'Blue',eggGroups:['Water 2'],otherFormes:['wishiwashischool']},wishiwashischool:{num:746,species:'Wishiwashi-School',baseSpecies:'Wishiwashi',forme:'School',types:['Water'],baseStats:{hp:45,atk:140,def:130,spa:140,spd:135,spe:30},abilities:{0:'Schooling'},heightm:8.2,weightkg:78.6,color:'Blue',eggGroups:['Water 2']},mareanie:{num:747,species:'Mareanie',types:['Poison','Water'],baseStats:{hp:50,atk:53,def:62,spa:43,spd:52,spe:45},abilities:{0:'Merciless',1:'Limber',H:'Regenerator'},heightm:0.4,weightkg:8,color:'Blue',evos:['toxapex'],eggGroups:['Water 1']},toxapex:{num:748,species:'Toxapex',types:['Poison','Water'],baseStats:{hp:50,atk:63,def:152,spa:53,spd:142,spe:35},abilities:{0:'Merciless',1:'Limber',H:'Regenerator'},heightm:0.7,weightkg:14.5,color:'Blue',prevo:'mareanie',evoLevel:38,eggGroups:['Water 1']},mudbray:{num:749,species:'Mudbray',types:['Ground'],baseStats:{hp:70,atk:100,def:70,spa:45,spd:55,spe:45},abilities:{0:'Own Tempo',1:'Stamina',H:'Inner Focus'},heightm:1,weightkg:110,color:'Brown',evos:['mudsdale'],eggGroups:['Field']},mudsdale:{num:750,species:'Mudsdale',types:['Ground'],baseStats:{hp:100,atk:125,def:100,spa:55,spd:85,spe:35},abilities:{0:'Own Tempo',1:'Stamina',H:'Inner Focus'},heightm:2.5,weightkg:920,color:'Brown',prevo:'mudbray',evoLevel:30,eggGroups:['Field']},dewpider:{num:751,species:'Dewpider',types:['Water','Bug'],baseStats:{hp:38,atk:40,def:52,spa:40,spd:72,spe:27},abilities:{0:'Water Bubble',H:'Water Absorb'},heightm:0.3,weightkg:4,color:'Green',evos:['araquanid'],eggGroups:['Water 1','Bug']},araquanid:{num:752,species:'Araquanid',types:['Water','Bug'],baseStats:{hp:68,atk:70,def:92,spa:50,spd:132,spe:42},abilities:{0:'Water Bubble',H:'Water Absorb'},heightm:1.8,weightkg:82,color:'Green',prevo:'dewpider',evoLevel:22,eggGroups:['Water 1','Bug'],otherFormes:['araquanidtotem']},araquanidtotem:{num:752,species:'Araquanid-Totem',baseSpecies:'Araquanid',forme:'Totem',types:['Water','Bug'],baseStats:{hp:68,atk:70,def:92,spa:50,spd:132,spe:42},abilities:{0:'Water Bubble'},heightm:3.1,weightkg:217.5,color:'Green',eggGroups:['Water 1','Bug']},fomantis:{num:753,species:'Fomantis',types:['Grass'],baseStats:{hp:40,atk:55,def:35,spa:50,spd:35,spe:35},abilities:{0:'Leaf Guard',H:'Contrary'},heightm:0.3,weightkg:1.5,color:'Pink',evos:['lurantis'],eggGroups:['Grass']},lurantis:{num:754,species:'Lurantis',types:['Grass'],baseStats:{hp:70,atk:105,def:90,spa:80,spd:90,spe:45},abilities:{0:'Leaf Guard',H:'Contrary'},heightm:0.9,weightkg:18.5,color:'Pink',prevo:'fomantis',evoLevel:34,eggGroups:['Grass'],otherFormes:['lurantistotem']},lurantistotem:{num:754,species:'Lurantis-Totem',baseSpecies:'Lurantis',forme:'Totem',types:['Grass'],baseStats:{hp:70,atk:105,def:90,spa:80,spd:90,spe:45},abilities:{0:'Leaf Guard'},heightm:1.5,weightkg:58,color:'Pink',eggGroups:['Grass']},morelull:{num:755,species:'Morelull',types:['Grass','Fairy'],baseStats:{hp:40,atk:35,def:55,spa:65,spd:75,spe:15},abilities:{0:'Illuminate',1:'Effect Spore',H:'Rain Dish'},heightm:0.2,weightkg:1.5,color:'Purple',evos:['shiinotic'],eggGroups:['Grass']},shiinotic:{num:756,species:'Shiinotic',types:['Grass','Fairy'],baseStats:{hp:60,atk:45,def:80,spa:90,spd:100,spe:30},abilities:{0:'Illuminate',1:'Effect Spore',H:'Rain Dish'},heightm:1,weightkg:11.5,color:'Purple',prevo:'morelull',evoLevel:24,eggGroups:['Grass']},salandit:{num:757,species:'Salandit',types:['Poison','Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:48,atk:44,def:40,spa:71,spd:40,spe:77},abilities:{0:'Corrosion',H:'Oblivious'},heightm:0.6,weightkg:4.8,color:'Black',evos:['salazzle'],eggGroups:['Monster','Dragon']},salazzle:{num:758,species:'Salazzle',types:['Poison','Fire'],gender:'F',baseStats:{hp:68,atk:64,def:60,spa:111,spd:60,spe:117},abilities:{0:'Corrosion',H:'Oblivious'},heightm:1.2,weightkg:22.2,color:'Black',prevo:'salandit',evoLevel:33,eggGroups:['Monster','Dragon'],otherFormes:['salazzletotem']},salazzletotem:{num:758,species:'Salazzle-Totem',baseSpecies:'Salazzle',forme:'Totem',types:['Poison','Fire'],gender:'F',baseStats:{hp:68,atk:64,def:60,spa:111,spd:60,spe:117},abilities:{0:'Corrosion'},heightm:2.1,weightkg:81,color:'Black',eggGroups:['Monster','Dragon']},stufful:{num:759,species:'Stufful',types:['Normal','Fighting'],baseStats:{hp:70,atk:75,def:50,spa:45,spd:50,spe:50},abilities:{0:'Fluffy',1:'Klutz',H:'Cute Charm'},heightm:0.5,weightkg:6.8,color:'Pink',evos:['bewear'],eggGroups:['Field']},bewear:{num:760,species:'Bewear',types:['Normal','Fighting'],baseStats:{hp:120,atk:125,def:80,spa:55,spd:60,spe:60},abilities:{0:'Fluffy',1:'Klutz',H:'Unnerve'},heightm:2.1,weightkg:135,color:'Pink',prevo:'stufful',evoLevel:27,eggGroups:['Field']},bounsweet:{num:761,species:'Bounsweet',types:['Grass'],gender:'F',baseStats:{hp:42,atk:30,def:38,spa:30,spd:38,spe:32},abilities:{0:'Leaf Guard',1:'Oblivious',H:'Sweet Veil'},heightm:0.3,weightkg:3.2,color:'Purple',evos:['steenee'],eggGroups:['Grass']},steenee:{num:762,species:'Steenee',types:['Grass'],gender:'F',baseStats:{hp:52,atk:40,def:48,spa:40,spd:48,spe:62},abilities:{0:'Leaf Guard',1:'Oblivious',H:'Sweet Veil'},heightm:0.7,weightkg:8.2,color:'Purple',prevo:'bounsweet',evoLevel:18,evos:['tsareena'],eggGroups:['Grass']},tsareena:{num:763,species:'Tsareena',types:['Grass'],gender:'F',baseStats:{hp:72,atk:120,def:98,spa:50,spd:98,spe:72},abilities:{0:'Leaf Guard',1:'Queenly Majesty',H:'Sweet Veil'},heightm:1.2,weightkg:21.4,color:'Purple',prevo:'steenee',evoType:'levelMove',evoMove:'Stomp',eggGroups:['Grass']},comfey:{num:764,species:'Comfey',types:['Fairy'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:51,atk:52,def:90,spa:82,spd:110,spe:100},abilities:{0:'Flower Veil',1:'Triage',H:'Natural Cure'},heightm:0.1,weightkg:0.3,color:'Green',eggGroups:['Grass']},oranguru:{num:765,species:'Oranguru',types:['Normal','Psychic'],baseStats:{hp:90,atk:60,def:80,spa:90,spd:110,spe:60},abilities:{0:'Inner Focus',1:'Telepathy',H:'Symbiosis'},heightm:1.5,weightkg:76,color:'White',eggGroups:['Field']},passimian:{num:766,species:'Passimian',types:['Fighting'],baseStats:{hp:100,atk:120,def:90,spa:40,spd:60,spe:80},abilities:{0:'Receiver',H:'Defiant'},heightm:2,weightkg:82.8,color:'White',eggGroups:['Field']},wimpod:{num:767,species:'Wimpod',types:['Bug','Water'],baseStats:{hp:25,atk:35,def:40,spa:20,spd:30,spe:80},abilities:{0:'Wimp Out'},heightm:0.5,weightkg:12,color:'Gray',evos:['golisopod'],eggGroups:['Bug','Water 3']},golisopod:{num:768,species:'Golisopod',types:['Bug','Water'],baseStats:{hp:75,atk:125,def:140,spa:60,spd:90,spe:40},abilities:{0:'Emergency Exit'},heightm:2,weightkg:108,color:'Gray',prevo:'wimpod',evoLevel:30,eggGroups:['Bug','Water 3']},sandygast:{num:769,species:'Sandygast',types:['Ghost','Ground'],baseStats:{hp:55,atk:55,def:80,spa:70,spd:45,spe:15},abilities:{0:'Water Compaction',H:'Sand Veil'},heightm:0.5,weightkg:70,color:'Brown',evos:['palossand'],eggGroups:['Amorphous']},palossand:{num:770,species:'Palossand',types:['Ghost','Ground'],baseStats:{hp:85,atk:75,def:110,spa:100,spd:75,spe:35},abilities:{0:'Water Compaction',H:'Sand Veil'},heightm:1.3,weightkg:250,color:'Brown',prevo:'sandygast',evoLevel:42,eggGroups:['Amorphous']},pyukumuku:{num:771,species:'Pyukumuku',types:['Water'],baseStats:{hp:55,atk:60,def:130,spa:30,spd:130,spe:5},abilities:{0:'Innards Out',H:'Unaware'},heightm:0.3,weightkg:1.2,color:'Black',eggGroups:['Water 1']},typenull:{num:772,species:'Type: Null',types:['Normal'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:59},abilities:{0:'Battle Armor'},heightm:1.9,weightkg:120.5,color:'Gray',evos:['silvally'],eggGroups:['Undiscovered']},silvally:{num:773,species:'Silvally',types:['Normal'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],otherFormes:['silvallybug','silvallydark','silvallydragon','silvallyelectric','silvallyfairy','silvallyfighting','silvallyfire','silvallyflying','silvallyghost','silvallygrass','silvallyground','silvallyice','silvallypoison','silvallypsychic','silvallyrock','silvallysteel','silvallywater']},silvallybug:{num:773,species:'Silvally-Bug',baseSpecies:'Silvally',forme:'Bug',types:['Bug'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallydark:{num:773,species:'Silvally-Dark',baseSpecies:'Silvally',forme:'Dark',types:['Dark'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallydragon:{num:773,species:'Silvally-Dragon',baseSpecies:'Silvally',forme:'Dragon',types:['Dragon'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallyelectric:{num:773,species:'Silvally-Electric',baseSpecies:'Silvally',forme:'Electric',types:['Electric'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallyfairy:{num:773,species:'Silvally-Fairy',baseSpecies:'Silvally',forme:'Fairy',types:['Fairy'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallyfighting:{num:773,species:'Silvally-Fighting',baseSpecies:'Silvally',forme:'Fighting',types:['Fighting'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallyfire:{num:773,species:'Silvally-Fire',baseSpecies:'Silvally',forme:'Fire',types:['Fire'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallyflying:{num:773,species:'Silvally-Flying',baseSpecies:'Silvally',forme:'Flying',types:['Flying'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallyghost:{num:773,species:'Silvally-Ghost',baseSpecies:'Silvally',forme:'Ghost',types:['Ghost'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallygrass:{num:773,species:'Silvally-Grass',baseSpecies:'Silvally',forme:'Grass',types:['Grass'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallyground:{num:773,species:'Silvally-Ground',baseSpecies:'Silvally',forme:'Ground',types:['Ground'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallyice:{num:773,species:'Silvally-Ice',baseSpecies:'Silvally',forme:'Ice',types:['Ice'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallypoison:{num:773,species:'Silvally-Poison',baseSpecies:'Silvally',forme:'Poison',types:['Poison'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallypsychic:{num:773,species:'Silvally-Psychic',baseSpecies:'Silvally',forme:'Psychic',types:['Psychic'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallyrock:{num:773,species:'Silvally-Rock',baseSpecies:'Silvally',forme:'Rock',types:['Rock'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallysteel:{num:773,species:'Silvally-Steel',baseSpecies:'Silvally',forme:'Steel',types:['Steel'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},silvallywater:{num:773,species:'Silvally-Water',baseSpecies:'Silvally',forme:'Water',types:['Water'],gender:'N',baseStats:{hp:95,atk:95,def:95,spa:95,spd:95,spe:95},abilities:{0:'RKS System'},heightm:2.3,weightkg:100.5,color:'Gray',prevo:'typenull',evoType:'levelFriendship',eggGroups:['Undiscovered'],inheritsFrom:'silvally'},minior:{num:774,species:'Minior',baseForme:'Red',types:['Rock','Flying'],gender:'N',baseStats:{hp:60,atk:100,def:60,spa:100,spd:60,spe:120},abilities:{0:'Shields Down'},heightm:0.3,weightkg:0.3,color:'Red',eggGroups:['Mineral'],otherFormes:['miniormeteor'],otherForms:['miniororange','minioryellow','miniorgreen','miniorblue','miniorindigo','miniorviolet']},miniormeteor:{num:774,species:'Minior-Meteor',baseSpecies:'Minior',forme:'Meteor',types:['Rock','Flying'],gender:'N',baseStats:{hp:60,atk:60,def:100,spa:60,spd:100,spe:60},abilities:{0:'Shields Down'},heightm:0.3,weightkg:40,color:'Brown',eggGroups:['Mineral']},komala:{num:775,species:'Komala',types:['Normal'],baseStats:{hp:65,atk:115,def:65,spa:75,spd:95,spe:65},abilities:{0:'Comatose'},heightm:0.4,weightkg:19.9,color:'Blue',eggGroups:['Field']},turtonator:{num:776,species:'Turtonator',types:['Fire','Dragon'],baseStats:{hp:60,atk:78,def:135,spa:91,spd:85,spe:36},abilities:{0:'Shell Armor'},heightm:2,weightkg:212,color:'Red',eggGroups:['Monster','Dragon']},togedemaru:{num:777,species:'Togedemaru',types:['Electric','Steel'],baseStats:{hp:65,atk:98,def:63,spa:40,spd:73,spe:96},abilities:{0:'Iron Barbs',1:'Lightning Rod',H:'Sturdy'},heightm:0.3,weightkg:3.3,color:'Gray',eggGroups:['Field','Fairy'],otherFormes:['togedemarutotem']},togedemarutotem:{num:777,species:'Togedemaru-Totem',baseSpecies:'Togedemaru',forme:'Totem',types:['Electric','Steel'],baseStats:{hp:65,atk:98,def:63,spa:40,spd:73,spe:96},abilities:{0:'Sturdy'},heightm:0.6,weightkg:13,color:'Gray',eggGroups:['Field','Fairy']},mimikyu:{num:778,species:'Mimikyu',types:['Ghost','Fairy'],baseStats:{hp:55,atk:90,def:80,spa:50,spd:105,spe:96},abilities:{0:'Disguise'},heightm:0.2,weightkg:0.7,color:'Yellow',eggGroups:['Amorphous'],otherFormes:['mimikyubusted','mimikyutotem','mimikyubustedtotem']},mimikyubusted:{num:778,species:'Mimikyu-Busted',baseSpecies:'Mimikyu',forme:'Busted',types:['Ghost','Fairy'],baseStats:{hp:55,atk:90,def:80,spa:50,spd:105,spe:96},abilities:{0:'Disguise'},heightm:0.2,weightkg:0.7,color:'Yellow',eggGroups:['Amorphous'],inheritsFrom:'mimikyu'},mimikyutotem:{num:778,species:'Mimikyu-Totem',baseSpecies:'Mimikyu',forme:'Totem',types:['Ghost','Fairy'],baseStats:{hp:55,atk:90,def:80,spa:50,spd:105,spe:96},abilities:{0:'Disguise'},heightm:0.4,weightkg:2.8,color:'Yellow',eggGroups:['Amorphous']},mimikyubustedtotem:{num:778,species:'Mimikyu-Busted-Totem',baseSpecies:'Mimikyu',forme:'Busted-Totem',types:['Ghost','Fairy'],baseStats:{hp:55,atk:90,def:80,spa:50,spd:105,spe:96},abilities:{0:'Disguise'},heightm:0.4,weightkg:2.8,color:'Yellow',eggGroups:['Amorphous'],inheritsFrom:'mimikyutotem'},bruxish:{num:779,species:'Bruxish',types:['Water','Psychic'],baseStats:{hp:68,atk:105,def:70,spa:70,spd:70,spe:92},abilities:{0:'Dazzling',1:'Strong Jaw',H:'Wonder Skin'},heightm:0.9,weightkg:19,color:'Pink',eggGroups:['Water 2']},drampa:{num:780,species:'Drampa',types:['Normal','Dragon'],baseStats:{hp:78,atk:60,def:85,spa:135,spd:91,spe:36},abilities:{0:'Berserk',1:'Sap Sipper',H:'Cloud Nine'},heightm:3,weightkg:185,color:'White',eggGroups:['Monster','Dragon']},dhelmise:{num:781,species:'Dhelmise',types:['Ghost','Grass'],gender:'N',baseStats:{hp:70,atk:131,def:100,spa:86,spd:90,spe:40},abilities:{0:'Steelworker'},heightm:3.9,weightkg:210,color:'Green',eggGroups:['Mineral']},jangmoo:{num:782,species:'Jangmo-o',types:['Dragon'],baseStats:{hp:45,atk:55,def:65,spa:45,spd:45,spe:45},abilities:{0:'Bulletproof',1:'Soundproof',H:'Overcoat'},heightm:0.6,weightkg:29.7,color:'Gray',evos:['hakamoo'],eggGroups:['Dragon']},hakamoo:{num:783,species:'Hakamo-o',types:['Dragon','Fighting'],baseStats:{hp:55,atk:75,def:90,spa:65,spd:70,spe:65},abilities:{0:'Bulletproof',1:'Soundproof',H:'Overcoat'},heightm:1.2,weightkg:47,color:'Gray',prevo:'jangmoo',evoLevel:35,evos:['kommoo'],eggGroups:['Dragon']},kommoo:{num:784,species:'Kommo-o',types:['Dragon','Fighting'],baseStats:{hp:75,atk:110,def:125,spa:100,spd:105,spe:85},abilities:{0:'Bulletproof',1:'Soundproof',H:'Overcoat'},heightm:1.6,weightkg:78.2,color:'Gray',prevo:'hakamoo',evoLevel:45,eggGroups:['Dragon'],otherFormes:['kommoototem']},kommoototem:{num:784,species:'Kommo-o-Totem',baseSpecies:'Kommo-o',forme:'Totem',types:['Dragon','Fighting'],baseStats:{hp:75,atk:110,def:125,spa:100,spd:105,spe:85},abilities:{0:'Overcoat'},heightm:2.4,weightkg:207.5,color:'Gray',eggGroups:['Dragon']},tapukoko:{num:785,species:'Tapu Koko',types:['Electric','Fairy'],gender:'N',baseStats:{hp:70,atk:115,def:85,spa:95,spd:75,spe:130},abilities:{0:'Electric Surge',H:'Telepathy'},heightm:1.8,weightkg:20.5,color:'Yellow',eggGroups:['Undiscovered']},tapulele:{num:786,species:'Tapu Lele',types:['Psychic','Fairy'],gender:'N',baseStats:{hp:70,atk:85,def:75,spa:130,spd:115,spe:95},abilities:{0:'Psychic Surge',H:'Telepathy'},heightm:1.2,weightkg:18.6,color:'Pink',eggGroups:['Undiscovered']},tapubulu:{num:787,species:'Tapu Bulu',types:['Grass','Fairy'],gender:'N',baseStats:{hp:70,atk:130,def:115,spa:85,spd:95,spe:75},abilities:{0:'Grassy Surge',H:'Telepathy'},heightm:1.9,weightkg:45.5,color:'Red',eggGroups:['Undiscovered']},tapufini:{num:788,species:'Tapu Fini',types:['Water','Fairy'],gender:'N',baseStats:{hp:70,atk:75,def:115,spa:95,spd:130,spe:85},abilities:{0:'Misty Surge',H:'Telepathy'},heightm:1.3,weightkg:21.2,color:'Purple',eggGroups:['Undiscovered']},cosmog:{num:789,species:'Cosmog',types:['Psychic'],gender:'N',baseStats:{hp:43,atk:29,def:31,spa:29,spd:31,spe:37},abilities:{0:'Unaware'},heightm:0.2,weightkg:0.1,color:'Blue',evos:['cosmoem'],eggGroups:['Undiscovered']},cosmoem:{num:790,species:'Cosmoem',types:['Psychic'],gender:'N',baseStats:{hp:43,atk:29,def:131,spa:29,spd:131,spe:37},abilities:{0:'Sturdy'},heightm:0.1,weightkg:999.9,color:'Blue',prevo:'cosmog',evoLevel:43,evos:['solgaleo','lunala'],eggGroups:['Undiscovered']},solgaleo:{num:791,species:'Solgaleo',types:['Psychic','Steel'],gender:'N',baseStats:{hp:137,atk:137,def:107,spa:113,spd:89,spe:97},abilities:{0:'Full Metal Body'},heightm:3.4,weightkg:230,color:'White',prevo:'cosmoem',evoLevel:53,eggGroups:['Undiscovered']},lunala:{num:792,species:'Lunala',types:['Psychic','Ghost'],gender:'N',baseStats:{hp:137,atk:113,def:89,spa:137,spd:107,spe:97},abilities:{0:'Shadow Shield'},heightm:4,weightkg:120,color:'Purple',prevo:'cosmoem',evoLevel:53,eggGroups:['Undiscovered']},nihilego:{num:793,species:'Nihilego',types:['Rock','Poison'],gender:'N',baseStats:{hp:109,atk:53,def:47,spa:127,spd:131,spe:103},abilities:{0:'Beast Boost'},heightm:1.2,weightkg:55.5,color:'White',eggGroups:['Undiscovered']},buzzwole:{num:794,species:'Buzzwole',types:['Bug','Fighting'],gender:'N',baseStats:{hp:107,atk:139,def:139,spa:53,spd:53,spe:79},abilities:{0:'Beast Boost'},heightm:2.4,weightkg:333.6,color:'Red',eggGroups:['Undiscovered']},pheromosa:{num:795,species:'Pheromosa',types:['Bug','Fighting'],gender:'N',baseStats:{hp:71,atk:137,def:37,spa:137,spd:37,spe:151},abilities:{0:'Beast Boost'},heightm:1.8,weightkg:25,color:'White',eggGroups:['Undiscovered']},xurkitree:{num:796,species:'Xurkitree',types:['Electric'],gender:'N',baseStats:{hp:83,atk:89,def:71,spa:173,spd:71,spe:83},abilities:{0:'Beast Boost'},heightm:3.8,weightkg:100,color:'Black',eggGroups:['Undiscovered']},celesteela:{num:797,species:'Celesteela',types:['Steel','Flying'],gender:'N',baseStats:{hp:97,atk:101,def:103,spa:107,spd:101,spe:61},abilities:{0:'Beast Boost'},heightm:9.2,weightkg:999.9,color:'Green',eggGroups:['Undiscovered']},kartana:{num:798,species:'Kartana',types:['Grass','Steel'],gender:'N',baseStats:{hp:59,atk:181,def:131,spa:59,spd:31,spe:109},abilities:{0:'Beast Boost'},heightm:0.3,weightkg:0.1,color:'White',eggGroups:['Undiscovered']},guzzlord:{num:799,species:'Guzzlord',types:['Dark','Dragon'],gender:'N',baseStats:{hp:223,atk:101,def:53,spa:97,spd:53,spe:43},abilities:{0:'Beast Boost'},heightm:5.5,weightkg:888,color:'Black',eggGroups:['Undiscovered']},necrozma:{num:800,species:'Necrozma',types:['Psychic'],gender:'N',baseStats:{hp:97,atk:107,def:101,spa:127,spd:89,spe:79},abilities:{0:'Prism Armor'},heightm:2.4,weightkg:230,color:'Black',eggGroups:['Undiscovered'],otherFormes:['necrozmaduskmane','necrozmadawnwings','necrozmaultra']},necrozmaduskmane:{num:800,species:'Necrozma-Dusk-Mane',baseSpecies:'Necrozma',forme:'Dusk-Mane',types:['Psychic','Steel'],gender:'N',baseStats:{hp:97,atk:157,def:127,spa:113,spd:109,spe:77},abilities:{0:'Prism Armor'},heightm:3.8,weightkg:460,color:'Yellow',eggGroups:['Undiscovered'],inheritsFrom:'necrozma'},necrozmadawnwings:{num:800,species:'Necrozma-Dawn-Wings',baseSpecies:'Necrozma',forme:'Dawn-Wings',types:['Psychic','Ghost'],gender:'N',baseStats:{hp:97,atk:113,def:109,spa:157,spd:127,spe:77},abilities:{0:'Prism Armor'},heightm:4.2,weightkg:350,color:'Blue',eggGroups:['Undiscovered'],inheritsFrom:'necrozma'},necrozmaultra:{num:800,species:'Necrozma-Ultra',baseSpecies:'Necrozma',forme:'Ultra',types:['Psychic','Dragon'],gender:'N',baseStats:{hp:97,atk:167,def:97,spa:167,spd:97,spe:129},abilities:{0:'Neuroforce'},heightm:7.5,weightkg:230,color:'Blue',eggGroups:['Undiscovered'],inheritsFrom:'necrozma'},magearna:{num:801,species:'Magearna',types:['Steel','Fairy'],gender:'N',baseStats:{hp:80,atk:95,def:115,spa:130,spd:115,spe:65},abilities:{0:'Soul-Heart'},heightm:1,weightkg:80.5,color:'Gray',eggGroups:['Undiscovered'],otherFormes:['magearnaoriginal']},magearnaoriginal:{num:801,species:'Magearna-Original',baseSpecies:'Magearna',forme:'Original',types:['Steel','Fairy'],gender:'N',baseStats:{hp:80,atk:95,def:115,spa:130,spd:115,spe:65},abilities:{0:'Soul-Heart'},heightm:1,weightkg:80.5,color:'Red',eggGroups:['Undiscovered'],inheritsFrom:'magearna'},marshadow:{num:802,species:'Marshadow',types:['Fighting','Ghost'],gender:'N',baseStats:{hp:90,atk:125,def:80,spa:90,spd:90,spe:125},abilities:{0:'Technician'},heightm:0.7,weightkg:22.2,color:'Gray',eggGroups:['Undiscovered']},poipole:{num:803,species:'Poipole',types:['Poison'],gender:'N',baseStats:{hp:67,atk:73,def:67,spa:73,spd:67,spe:73},abilities:{0:'Beast Boost'},heightm:0.6,weightkg:1.8,color:'Purple',evos:['naganadel'],eggGroups:['Undiscovered']},naganadel:{num:804,species:'Naganadel',types:['Poison','Dragon'],gender:'N',baseStats:{hp:73,atk:73,def:73,spa:127,spd:73,spe:121},abilities:{0:'Beast Boost'},heightm:3.6,weightkg:150,color:'Purple',prevo:'poipole',evoType:'levelMove',evoMove:'Dragon Pulse',eggGroups:['Undiscovered']},stakataka:{num:805,species:'Stakataka',types:['Rock','Steel'],gender:'N',baseStats:{hp:61,atk:131,def:211,spa:53,spd:101,spe:13},abilities:{0:'Beast Boost'},heightm:5.5,weightkg:820,color:'Gray',eggGroups:['Undiscovered']},blacephalon:{num:806,species:'Blacephalon',types:['Fire','Ghost'],gender:'N',baseStats:{hp:53,atk:127,def:53,spa:151,spd:79,spe:107},abilities:{0:'Beast Boost'},heightm:1.8,weightkg:13,color:'White',eggGroups:['Undiscovered']},zeraora:{num:807,species:'Zeraora',types:['Electric'],gender:'N',baseStats:{hp:88,atk:112,def:75,spa:102,spd:80,spe:143},abilities:{0:'Volt Absorb'},heightm:1.5,weightkg:44.5,color:'Yellow',eggGroups:['Undiscovered']},meltan:{num:808,species:'Meltan',types:['Steel'],gender:'N',baseStats:{hp:46,atk:65,def:65,spa:55,spd:35,spe:34},abilities:{0:'Magnet Pull'},heightm:0.2,weightkg:8,color:'Gray',eggGroups:['Undiscovered']},melmetal:{num:809,species:'Melmetal',types:['Steel'],gender:'N',baseStats:{hp:135,atk:143,def:143,spa:80,spd:65,spe:34},abilities:{0:'Iron Fist'},heightm:2.5,weightkg:800,color:'Gray',eggGroups:['Undiscovered'],otherFormes:['melmetalgmax']},melmetalgmax:{num:809,species:'Melmetal-Gmax',baseSpecies:'Melmetal',forme:'Gmax',types:['Steel'],gender:'N',baseStats:{hp:135,atk:143,def:143,spa:80,spd:65,spe:34},abilities:{0:'Iron Fist'},// TODO
heightm:0,weightkg:0,color:'Gray',eggGroups:['Undiscovered'],inheritsFrom:'melmetal'},grookey:{num:810,species:'Grookey',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:50,atk:65,def:50,spa:40,spd:40,spe:65},abilities:{0:'Overgrow',H:'Grassy Surge'},heightm:0.3,weightkg:5,color:'Green',evos:['thwackey'],eggGroups:['Field','Grass']},thwackey:{num:811,species:'Thwackey',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:70,atk:85,def:70,spa:55,spd:60,spe:80},abilities:{0:'Overgrow',H:'Grassy Surge'},heightm:0.7,weightkg:14,color:'Green',prevo:'grookey',evoLevel:16,evos:['rillaboom'],eggGroups:['Field','Grass']},rillaboom:{num:812,species:'Rillaboom',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:100,atk:125,def:90,spa:60,spd:70,spe:85},abilities:{0:'Overgrow',H:'Grassy Surge'},heightm:2.1,weightkg:90,color:'Green',prevo:'thwackey',evoLevel:35,eggGroups:['Field','Grass']},scorbunny:{num:813,species:'Scorbunny',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:50,atk:71,def:40,spa:40,spd:40,spe:69},abilities:{0:'Blaze',H:'Libero'},heightm:0.3,weightkg:4.5,color:'White',evos:['raboot'],eggGroups:['Field','Human-Like']},raboot:{num:814,species:'Raboot',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:65,atk:86,def:60,spa:55,spd:60,spe:94},abilities:{0:'Blaze',H:'Libero'},heightm:0.6,weightkg:9,color:'Gray',prevo:'scorbunny',evoLevel:16,evos:['cinderace'],eggGroups:['Field','Human-Like']},cinderace:{num:815,species:'Cinderace',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:80,atk:116,def:75,spa:65,spd:75,spe:119},abilities:{0:'Blaze',H:'Libero'},heightm:1.4,weightkg:33,color:'White',evoLevel:35,prevo:'raboot',eggGroups:['Field','Human-Like']},sobble:{num:816,species:'Sobble',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:50,atk:40,def:40,spa:70,spd:40,spe:70},abilities:{0:'Torrent',H:'Sniper'},heightm:0.3,weightkg:4,color:'Blue',evos:['drizzile'],eggGroups:['Water 1','Field']},drizzile:{num:817,species:'Drizzile',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:65,atk:60,def:55,spa:95,spd:55,spe:90},abilities:{0:'Torrent',H:'Sniper'},heightm:0.7,weightkg:11.5,color:'Blue',prevo:'sobble',evoLevel:16,evos:['inteleon'],eggGroups:['Water 1','Field']},inteleon:{num:818,species:'Inteleon',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:70,atk:85,def:65,spa:125,spd:65,spe:120},abilities:{0:'Torrent',H:'Sniper'},heightm:1.9,weightkg:45.2,color:'Blue',prevo:'drizzile',evoLevel:35,eggGroups:['Water 1','Field']},skwovet:{num:819,species:'Skwovet',types:['Normal'],baseStats:{hp:70,atk:55,def:55,spa:35,spd:35,spe:25},abilities:{0:'Cheek Pouch',H:'Gluttony'},heightm:0.3,weightkg:2.5,color:'Brown',evos:['greedent'],eggGroups:['Field']},greedent:{num:820,species:'Greedent',types:['Normal'],baseStats:{hp:120,atk:95,def:95,spa:55,spd:75,spe:20},abilities:{0:'Cheek Pouch',H:'Gluttony'},heightm:0.6,weightkg:6,color:'Brown',prevo:'skwovet',evoLevel:24,eggGroups:['Field']},rookidee:{num:821,species:'Rookidee',types:['Flying'],baseStats:{hp:38,atk:47,def:35,spa:33,spd:35,spe:57},abilities:{0:'Keen Eye',1:'Unnerve',H:'Big Pecks'},heightm:0.2,weightkg:1.8,color:'Blue',evos:['corvisquire'],eggGroups:['Flying']},corvisquire:{num:822,species:'Corvisquire',types:['Flying'],baseStats:{hp:68,atk:67,def:55,spa:43,spd:55,spe:77},abilities:{0:'Keen Eye',1:'Unnerve',H:'Big Pecks'},heightm:0.8,weightkg:16,color:'Blue',prevo:'rookidee',evoLevel:18,evos:['corviknight'],eggGroups:['Flying']},corviknight:{num:823,species:'Corviknight',types:['Flying','Steel'],baseStats:{hp:98,atk:87,def:105,spa:53,spd:85,spe:67},abilities:{0:'Pressure',1:'Unnerve',H:'Mirror Armor'},heightm:2.2,weightkg:75,color:'Purple',prevo:'corvisquire',evoLevel:38,eggGroups:['Flying'],otherFormes:['corviknightgmax']},corviknightgmax:{num:823,species:'Corviknight-Gmax',baseSpecies:'Corviknight',forme:'Gmax',types:['Flying','Steel'],baseStats:{hp:98,atk:87,def:105,spa:53,spd:85,spe:67},abilities:{0:'Pressure',1:'Unnerve',H:'Mirror Armor'},heightm:14,weightkg:0,color:'Purple',eggGroups:['Flying'],inheritsFrom:'corviknight'},blipbug:{num:824,species:'Blipbug',types:['Bug'],baseStats:{hp:25,atk:20,def:20,spa:25,spd:45,spe:45},abilities:{0:'Swarm',1:'Compound Eyes',H:'Telepathy'},heightm:0.4,weightkg:8,color:'Blue',evos:['dottler'],eggGroups:['Bug']},dottler:{num:825,species:'Dottler',types:['Bug','Psychic'],baseStats:{hp:50,atk:35,def:80,spa:50,spd:90,spe:30},abilities:{0:'Swarm',1:'Compound Eyes',H:'Telepathy'},heightm:0.4,weightkg:19.5,color:'Yellow',prevo:'blipbug',evoLevel:10,evos:['orbeetle'],eggGroups:['Bug']},orbeetle:{num:826,species:'Orbeetle',types:['Bug','Psychic'],baseStats:{hp:60,atk:45,def:110,spa:80,spd:120,spe:90},abilities:{0:'Swarm',1:'Frisk',H:'Telepathy'},heightm:0.4,weightkg:40.8,color:'Red',prevo:'dottler',evoLevel:30,eggGroups:['Bug'],otherFormes:['orbeetlegmax']},orbeetlegmax:{num:826,species:'Orbeetle-Gmax',baseSpecies:'Orbeetle',forme:'Gmax',types:['Bug','Psychic'],baseStats:{hp:60,atk:45,def:110,spa:80,spd:120,spe:90},abilities:{0:'Swarm',1:'Frisk',H:'Telepathy'},// TODO
heightm:0,weightkg:0,color:'Red',eggGroups:['Bug'],inheritsFrom:'orbeetle'},nickit:{num:827,species:'Nickit',types:['Dark'],baseStats:{hp:40,atk:28,def:28,spa:47,spd:52,spe:50},abilities:{0:'Run Away',1:'Unburden',H:'Stakeout'},heightm:0.6,weightkg:8.9,color:'Brown',evos:['thievul'],eggGroups:['Field']},thievul:{num:828,species:'Thievul',types:['Dark'],baseStats:{hp:70,atk:58,def:58,spa:87,spd:92,spe:90},abilities:{0:'Run Away',1:'Unburden',H:'Stakeout'},heightm:1.2,weightkg:19.9,color:'Brown',prevo:'nickit',evoLevel:18,eggGroups:['Field']},gossifleur:{num:829,species:'Gossifleur',types:['Grass'],baseStats:{hp:40,atk:40,def:60,spa:40,spd:60,spe:10},abilities:{0:'Cotton Down',1:'Regenerator',H:'Effect Spore'},heightm:0.4,weightkg:2.2,color:'Green',evos:['eldegoss'],eggGroups:['Grass']},eldegoss:{num:830,species:'Eldegoss',types:['Grass'],baseStats:{hp:60,atk:50,def:90,spa:80,spd:120,spe:60},abilities:{0:'Cotton Down',1:'Regenerator',H:'Effect Spore'},heightm:0.5,weightkg:2.5,color:'Green',prevo:'gossifleur',evoLevel:20,eggGroups:['Grass']},wooloo:{num:831,species:'Wooloo',types:['Normal'],baseStats:{hp:42,atk:40,def:55,spa:40,spd:45,spe:48},abilities:{0:'Fluffy',1:'Run Away',H:'Bulletproof'},heightm:0.6,weightkg:6,color:'White',evos:['dubwool'],eggGroups:['Field']},dubwool:{num:832,species:'Dubwool',types:['Normal'],baseStats:{hp:72,atk:80,def:100,spa:60,spd:90,spe:88},abilities:{0:'Fluffy',1:'Steadfast',H:'Bulletproof'},heightm:1.3,weightkg:43,color:'White',prevo:'wooloo',evoLevel:24,eggGroups:['Field']},chewtle:{num:833,species:'Chewtle',types:['Water'],baseStats:{hp:50,atk:64,def:50,spa:38,spd:38,spe:44},abilities:{0:'Strong Jaw',1:'Shell Armor',H:'Swift Swim'},heightm:0.3,weightkg:8.5,color:'Green',evos:['drednaw'],eggGroups:['Monster','Water 1']},drednaw:{num:834,species:'Drednaw',types:['Water','Rock'],baseStats:{hp:90,atk:115,def:90,spa:48,spd:68,spe:74},abilities:{0:'Strong Jaw',1:'Shell Armor',H:'Swift Swim'},heightm:1,weightkg:115.5,color:'Green',prevo:'chewtle',evoLevel:22,eggGroups:['Monster','Water 1'],otherFormes:['drednawgmax']},drednawgmax:{num:834,species:'Drednaw-Gmax',baseSpecies:'Drednaw',forme:'Gmax',types:['Water','Rock'],baseStats:{hp:90,atk:115,def:90,spa:48,spd:68,spe:74},abilities:{0:'Strong Jaw',1:'Shell Armor',H:'Swift Swim'},heightm:24,weightkg:0,color:'Green',eggGroups:['Monster','Water 1'],inheritsFrom:'drednaw'},yamper:{num:835,species:'Yamper',types:['Electric'],baseStats:{hp:59,atk:45,def:50,spa:40,spd:50,spe:26},abilities:{0:'Ball Fetch',H:'Rattled'},heightm:0.3,weightkg:13.5,color:'Yellow',evos:['boltund'],eggGroups:['Field']},boltund:{num:836,species:'Boltund',types:['Electric'],baseStats:{hp:69,atk:90,def:60,spa:90,spd:60,spe:121},abilities:{0:'Strong Jaw',H:'Competitive'},heightm:1,weightkg:34,color:'Yellow',prevo:'yamper',evoLevel:25,eggGroups:['Field']},rolycoly:{num:837,species:'Rolycoly',types:['Rock'],baseStats:{hp:30,atk:40,def:50,spa:40,spd:50,spe:30},abilities:{0:'Steam Engine',1:'Heatproof',H:'Flash Fire'},heightm:0.3,weightkg:12,color:'Black',evos:['carkol'],eggGroups:['Mineral']},carkol:{num:838,species:'Carkol',types:['Rock','Fire'],baseStats:{hp:80,atk:60,def:90,spa:60,spd:70,spe:50},abilities:{0:'Steam Engine',1:'Flame Body',H:'Flash Fire'},heightm:1.1,weightkg:78,color:'Black',prevo:'rolycoly',evoLevel:18,evos:['coalossal'],eggGroups:['Mineral']},coalossal:{num:839,species:'Coalossal',types:['Rock','Fire'],baseStats:{hp:110,atk:80,def:120,spa:80,spd:90,spe:30},abilities:{0:'Steam Engine',1:'Flame Body',H:'Flash Fire'},heightm:2.8,weightkg:310.5,color:'Black',prevo:'carkol',evoLevel:34,eggGroups:['Mineral'],otherFormes:['coalossalgmax']},coalossalgmax:{num:839,species:'Coalossal-Gmax',baseSpecies:'Coalossal',forme:'Gmax',types:['Rock','Fire'],baseStats:{hp:110,atk:80,def:120,spa:80,spd:90,spe:30},abilities:{0:'Steam Engine',1:'Flame Body',H:'Flash Fire'},// TODO
heightm:0,weightkg:0,color:'Black',eggGroups:['Mineral'],inheritsFrom:'coalossal'},applin:{num:840,species:'Applin',types:['Grass','Dragon'],baseStats:{hp:40,atk:40,def:80,spa:40,spd:40,spe:20},abilities:{0:'Ripen',1:'Gluttony',H:'Bulletproof'},heightm:0.2,weightkg:0.5,color:'Green',evos:['flapple','appletun'],eggGroups:['Grass','Dragon']},flapple:{num:841,species:'Flapple',types:['Grass','Dragon'],baseStats:{hp:70,atk:110,def:80,spa:95,spd:60,spe:70},abilities:{0:'Ripen',1:'Gluttony',H:'Hustle'},heightm:0.3,weightkg:1,color:'Green',prevo:'applin',evoType:'useItem',evoItem:'Tart Apple',eggGroups:['Grass','Dragon'],otherFormes:['flapplegmax']},flapplegmax:{num:841,species:'Flapple-Gmax',baseSpecies:'Flapple',forme:'Gmax',types:['Grass','Dragon'],baseStats:{hp:70,atk:110,def:80,spa:95,spd:60,spe:70},abilities:{0:'Ripen',1:'Gluttony',H:'Hustle'},// TODO
heightm:0,weightkg:0,color:'Green',eggGroups:['Grass','Dragon'],inheritsFrom:'flapple'},appletun:{num:842,species:'Appletun',types:['Grass','Dragon'],baseStats:{hp:110,atk:85,def:80,spa:100,spd:80,spe:30},abilities:{0:'Ripen',1:'Gluttony',H:'Thick Fat'},heightm:0.4,weightkg:13,color:'Green',prevo:'applin',evoType:'useItem',evoItem:'Sweet Apple',eggGroups:['Grass','Dragon'],otherFormes:['appletungmax']},appletungmax:{num:842,species:'Appletun-Gmax',baseSpecies:'Appletun',forme:'Gmax',types:['Grass','Dragon'],baseStats:{hp:110,atk:85,def:80,spa:100,spd:80,spe:30},abilities:{0:'Ripen',1:'Gluttony',H:'Thick Fat'},// TODO
heightm:0,weightkg:0,color:'Green',eggGroups:['Grass','Dragon'],inheritsFrom:'appletun'},silicobra:{num:843,species:'Silicobra',types:['Ground'],baseStats:{hp:52,atk:57,def:75,spa:35,spd:50,spe:46},abilities:{0:'Sand Spit',1:'Shed Skin',H:'Sand Veil'},heightm:2.2,weightkg:7.6,color:'Green',evos:['sandaconda'],eggGroups:['Field','Dragon']},sandaconda:{num:844,species:'Sandaconda',types:['Ground'],baseStats:{hp:72,atk:107,def:125,spa:65,spd:70,spe:71},abilities:{0:'Sand Spit',1:'Shed Skin',H:'Sand Veil'},heightm:3.8,weightkg:65.5,color:'Green',prevo:'silicobra',evoLevel:36,eggGroups:['Field','Dragon'],otherFormes:['sandacondagmax']},sandacondagmax:{num:844,species:'Sandaconda-Gmax',baseSpecies:'Sandaconda',forme:'Gmax',types:['Ground'],baseStats:{hp:72,atk:107,def:125,spa:65,spd:70,spe:71},abilities:{0:'Sand Spit',1:'Shed Skin',H:'Sand Veil'},// TODO
heightm:0,weightkg:0,color:'Green',eggGroups:['Field','Dragon'],inheritsFrom:'sandaconda'},cramorant:{num:845,species:'Cramorant',types:['Flying','Water'],baseStats:{hp:70,atk:85,def:55,spa:85,spd:95,spe:85},abilities:{0:'Gulp Missile'},heightm:0.8,weightkg:18,color:'Blue',eggGroups:['Water 1','Flying'],otherFormes:['cramorantgulping','cramorantgorging']},cramorantgulping:{num:845,species:'Cramorant-Gulping',baseSpecies:'Cramorant',forme:'Gulping',types:['Flying','Water'],baseStats:{hp:70,atk:85,def:55,spa:85,spd:95,spe:85},abilities:{0:'Gulp Missile'},heightm:0.8,weightkg:18,color:'Blue',eggGroups:['Water 1','Flying']},cramorantgorging:{num:845,species:'Cramorant-Gorging',baseSpecies:'Cramorant',forme:'Gorging',types:['Flying','Water'],baseStats:{hp:70,atk:85,def:55,spa:85,spd:95,spe:85},abilities:{0:'Gulp Missile'},heightm:0.8,weightkg:18,color:'Blue',eggGroups:['Water 1','Flying']},arrokuda:{num:846,species:'Arrokuda',types:['Water'],baseStats:{hp:41,atk:63,def:40,spa:40,spd:30,spe:66},abilities:{0:'Swift Swim',H:'Propeller Tail'},heightm:0.5,weightkg:1,color:'Brown',evos:['barraskewda'],eggGroups:['Water 2']},barraskewda:{num:847,species:'Barraskewda',types:['Water'],baseStats:{hp:61,atk:123,def:60,spa:60,spd:50,spe:136},abilities:{0:'Swift Swim',H:'Propeller Tail'},heightm:1.3,weightkg:30,color:'Brown',prevo:'arrokuda',evoLevel:26,eggGroups:['Water 2']},toxel:{num:848,species:'Toxel',types:['Electric','Poison'],baseStats:{hp:40,atk:38,def:35,spa:54,spd:35,spe:40},abilities:{0:'Rattled',1:'Static',H:'Klutz'},heightm:0.4,weightkg:11,color:'Purple',evos:['toxtricity','toxtricitylowkey'],eggGroups:['Undiscovered']},toxtricity:{num:849,species:'Toxtricity',baseForme:'Amped',types:['Electric','Poison'],baseStats:{hp:75,atk:98,def:70,spa:114,spd:70,spe:75},abilities:{0:'Punk Rock',1:'Plus',H:'Technician'},heightm:1.6,weightkg:40,color:'Purple',prevo:'toxel',evoLevel:30,eggGroups:['Human-Like'],otherFormes:['toxtricitylowkey','toxtricitygmax']},toxtricitylowkey:{num:849,species:'Toxtricity-Low-Key',baseSpecies:'Toxtricity',forme:'Low-Key',types:['Electric','Poison'],baseStats:{hp:75,atk:98,def:70,spa:114,spd:70,spe:75},abilities:{0:'Punk Rock',1:'Minus',H:'Technician'},heightm:1.6,weightkg:40,color:'Purple',prevo:'toxel',evoLevel:30,eggGroups:['Human-Like'],otherFormes:['toxtricitylowkeygmax']},toxtricitygmax:{num:849,species:'Toxtricity-Gmax',baseSpecies:'Toxtricity',forme:'Gmax',types:['Electric','Poison'],baseStats:{hp:75,atk:98,def:70,spa:114,spd:70,spe:75},abilities:{0:'Punk Rock',1:'Plus',H:'Technician'},heightm:0,weightkg:0,color:'Purple',eggGroups:['Human-Like'],inheritsFrom:'toxtricity'},toxtricitylowkeygmax:{num:849,species:'Toxtricity-Low-Key-Gmax',baseSpecies:'Toxtricity-Low-Key',forme:'Gmax',types:['Electric','Poison'],baseStats:{hp:75,atk:98,def:70,spa:114,spd:70,spe:75},abilities:{0:'Punk Rock',1:'Minus',H:'Technician'},heightm:0,weightkg:0,color:'Purple',eggGroups:['Human-Like'],inheritsFrom:'toxtricitylowkey'},sizzlipede:{num:850,species:'Sizzlipede',types:['Fire','Bug'],baseStats:{hp:50,atk:65,def:45,spa:50,spd:50,spe:45},abilities:{0:'Flash Fire',1:'White Smoke',H:'Flame Body'},heightm:0.7,weightkg:1,color:'Red',evos:['centiskorch'],eggGroups:['Bug']},centiskorch:{num:851,species:'Centiskorch',types:['Fire','Bug'],baseStats:{hp:100,atk:115,def:65,spa:90,spd:90,spe:65},abilities:{0:'Flash Fire',1:'White Smoke',H:'Flame Body'},heightm:3,weightkg:120,color:'Red',prevo:'sizzlipede',evoLevel:28,eggGroups:['Bug'],otherFormes:['centiskorchgmax']},centiskorchgmax:{num:851,species:'Centiskorch-Gmax',baseSpecies:'Centiskorch',forme:'Gmax',types:['Fire','Bug'],baseStats:{hp:100,atk:115,def:65,spa:90,spd:90,spe:65},abilities:{0:'Flash Fire',1:'White Smoke',H:'Flame Body'},// TODO
heightm:0,weightkg:0,color:'Red',eggGroups:['Bug'],inheritsFrom:'centiskorch'},clobbopus:{num:852,species:'Clobbopus',types:['Fighting'],baseStats:{hp:50,atk:68,def:60,spa:50,spd:50,spe:32},abilities:{0:'Limber',H:'Technician'},heightm:0.6,weightkg:4,color:'Brown',evos:['grapploct'],eggGroups:['Water 1','Human-Like']},grapploct:{num:853,species:'Grapploct',types:['Fighting'],baseStats:{hp:80,atk:118,def:90,spa:70,spd:80,spe:42},abilities:{0:'Limber',H:'Technician'},heightm:1.6,weightkg:39,color:'Blue',prevo:'clobbopus',evoType:'levelMove',evoMove:'Taunt',eggGroups:['Water 1','Human-Like']},sinistea:{num:854,species:'Sinistea',types:['Ghost'],gender:'N',baseStats:{hp:40,atk:45,def:45,spa:74,spd:54,spe:50},abilities:{0:'Weak Armor',H:'Cursed Body'},heightm:0.1,weightkg:0.2,color:'Purple',evos:['polteageist'],eggGroups:['Mineral','Amorphous'],otherForms:['sinisteachipped']},polteageist:{num:855,species:'Polteageist',types:['Ghost'],gender:'N',baseStats:{hp:60,atk:65,def:65,spa:134,spd:114,spe:70},abilities:{0:'Weak Armor',H:'Cursed Body'},heightm:0.2,weightkg:0.4,color:'Purple',prevo:'sinistea',evoType:'useItem',evoItem:'Cracked Pot',eggGroups:['Mineral','Amorphous'],otherForms:['polteageistchipped']},hatenna:{num:856,species:'Hatenna',types:['Psychic'],gender:'F',baseStats:{hp:42,atk:30,def:45,spa:56,spd:53,spe:39},abilities:{0:'Healer',1:'Anticipation',H:'Magic Bounce'},heightm:0.4,weightkg:3.4,color:'Pink',evos:['hattrem'],eggGroups:['Fairy']},hattrem:{num:857,species:'Hattrem',types:['Psychic'],gender:'F',baseStats:{hp:57,atk:40,def:65,spa:86,spd:73,spe:49},abilities:{0:'Healer',1:'Anticipation',H:'Magic Bounce'},heightm:0.6,weightkg:4.8,color:'Pink',prevo:'hatenna',evoLevel:32,evos:['hatterene'],eggGroups:['Fairy']},hatterene:{num:858,species:'Hatterene',types:['Psychic','Fairy'],gender:'F',baseStats:{hp:57,atk:90,def:95,spa:136,spd:103,spe:29},abilities:{0:'Healer',1:'Anticipation',H:'Magic Bounce'},heightm:2.1,weightkg:5.1,color:'Pink',prevo:'hattrem',evoLevel:42,eggGroups:['Fairy'],otherFormes:['hatterenegmax']},hatterenegmax:{num:858,species:'Hatterene-Gmax',baseSpecies:'Hatterene',forme:'Gmax',types:['Psychic','Fairy'],gender:'F',baseStats:{hp:57,atk:90,def:95,spa:136,spd:103,spe:29},abilities:{0:'Healer',1:'Anticipation',H:'Magic Bounce'},// TODO
heightm:0,weightkg:0,color:'Pink',eggGroups:['Fairy'],inheritsFrom:'hatterene'},impidimp:{num:859,species:'Impidimp',types:['Dark','Fairy'],gender:'M',baseStats:{hp:45,atk:45,def:30,spa:55,spd:40,spe:50},abilities:{0:'Prankster',1:'Frisk',H:'Pickpocket'},heightm:0.4,weightkg:5.5,color:'Pink',evos:['morgrem'],eggGroups:['Fairy','Human-Like']},morgrem:{num:860,species:'Morgrem',types:['Dark','Fairy'],gender:'M',baseStats:{hp:65,atk:60,def:45,spa:75,spd:55,spe:70},abilities:{0:'Prankster',1:'Frisk',H:'Pickpocket'},heightm:0.8,weightkg:12.5,color:'Pink',prevo:'impidimp',evoLevel:32,evos:['grimmsnarl'],eggGroups:['Fairy','Human-Like']},grimmsnarl:{num:861,species:'Grimmsnarl',types:['Dark','Fairy'],gender:'M',baseStats:{hp:95,atk:120,def:65,spa:95,spd:75,spe:60},abilities:{0:'Prankster',1:'Frisk',H:'Pickpocket'},heightm:1.5,weightkg:61,color:'Purple',prevo:'morgrem',evoLevel:42,eggGroups:['Fairy','Human-Like'],otherFormes:['grimmsnarlgmax']},grimmsnarlgmax:{num:861,species:'Grimmsnarl-Gmax',baseSpecies:'Grimmsnarl',forme:'Gmax',types:['Dark','Fairy'],gender:'M',baseStats:{hp:95,atk:120,def:65,spa:95,spd:75,spe:60},abilities:{0:'Prankster',1:'Frisk',H:'Pickpocket'},// TODO
heightm:0,weightkg:0,color:'Purple',eggGroups:['Fairy','Human-Like'],inheritsFrom:'grimmsnarl'},obstagoon:{num:862,species:'Obstagoon',types:['Dark','Normal'],baseStats:{hp:93,atk:90,def:101,spa:60,spd:81,spe:95},abilities:{0:'Reckless',1:'Guts',H:'Defiant'},heightm:1.6,weightkg:46,color:'Gray',prevo:'linoonegalar',evoLevel:35,evoCondition:'at night',eggGroups:['Field']},perrserker:{num:863,species:'Perrserker',types:['Steel'],baseStats:{hp:70,atk:110,def:100,spa:50,spd:60,spe:50},abilities:{0:'Battle Armor',1:'Tough Claws',H:'Steely Spirit'},heightm:0.8,weightkg:28,color:'Brown',prevo:'meowthgalar',evoLevel:28,eggGroups:['Field']},cursola:{num:864,species:'Cursola',types:['Ghost'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:60,atk:95,def:50,spa:145,spd:130,spe:30},abilities:{0:'Weak Armor',H:'Perish Body'},heightm:1,weightkg:0.4,color:'White',prevo:'corsolagalar',evoLevel:38,eggGroups:['Water 1','Water 3']},sirfetchd:{num:865,species:"Sirfetch'd",types:['Fighting'],baseStats:{hp:62,atk:135,def:95,spa:68,spd:82,spe:65},abilities:{0:'Steadfast',H:'Scrappy'},heightm:0.8,weightkg:117,color:'White',prevo:'farfetchdgalar',evoType:'other',evoCondition:'Land 3 critical hits in 1 battle',eggGroups:['Flying','Field']},mrrime:{num:866,species:'Mr. Rime',types:['Ice','Psychic'],baseStats:{hp:80,atk:85,def:75,spa:110,spd:100,spe:70},abilities:{0:'Tangled Feet',1:'Screen Cleaner',H:'Ice Body'},heightm:1.5,weightkg:58.2,color:'Purple',prevo:'mrmimegalar',evoLevel:42,eggGroups:['Human-Like']},runerigus:{num:867,species:'Runerigus',types:['Ground','Ghost'],baseStats:{hp:58,atk:95,def:145,spa:50,spd:105,spe:30},abilities:{0:'Wandering Spirit'},heightm:1.6,weightkg:66.6,color:'Gray',prevo:'yamaskgalar',evoType:'other',evoCondition:'Have 49+ HP lost and walk under stone sculpture in Dusty Bowl',eggGroups:['Mineral','Amorphous']},milcery:{num:868,species:'Milcery',types:['Fairy'],gender:'F',baseStats:{hp:45,atk:40,def:40,spa:50,spd:61,spe:34},abilities:{0:'Sweet Veil',H:'Aroma Veil'},heightm:0.2,weightkg:0.3,color:'White',evos:['alcremie'],eggGroups:['Fairy','Amorphous']},alcremie:{num:869,species:'Alcremie',baseForme:'Vanilla Cream',types:['Fairy'],gender:'F',baseStats:{hp:65,atk:60,def:75,spa:110,spd:121,spe:64},abilities:{0:'Sweet Veil',H:'Aroma Veil'},heightm:0.3,weightkg:0.5,color:'White',prevo:'milcery',evoType:'other',evoCondition:'spin while holding a Sweet',eggGroups:['Fairy','Amorphous'],otherFormes:['alcremiegmax'],otherForms:['alcremierubycream','alcremiematchacream','alcremiemintcream','alcremielemoncream','alcremiesaltedcream','alcremierubyswirl','alcremiecaramelswirl','alcremierainbowswirl']},alcremiegmax:{num:869,species:'Alcremie-Gmax',baseSpecies:'Alcremie',forme:'Gmax',types:['Fairy'],gender:'F',baseStats:{hp:65,atk:60,def:75,spa:110,spd:121,spe:64},abilities:{0:'Sweet Veil',H:'Aroma Veil'},heightm:30,weightkg:0,color:'White',eggGroups:['Fairy','Amorphous'],inheritsFrom:'alcremie'},falinks:{num:870,species:'Falinks',types:['Fighting'],gender:'N',baseStats:{hp:65,atk:100,def:100,spa:70,spd:60,spe:75},abilities:{0:'Battle Armor',H:'Defiant'},heightm:3,weightkg:62,color:'Yellow',eggGroups:['Fairy','Mineral']},pincurchin:{num:871,species:'Pincurchin',types:['Electric'],baseStats:{hp:48,atk:101,def:95,spa:91,spd:85,spe:15},abilities:{0:'Lightning Rod',H:'Electric Surge'},heightm:0.3,weightkg:1,color:'Purple',eggGroups:['Water 1','Amorphous']},snom:{num:872,species:'Snom',types:['Ice','Bug'],baseStats:{hp:30,atk:25,def:35,spa:45,spd:30,spe:20},abilities:{0:'Shield Dust',H:'Ice Scales'},heightm:0.3,weightkg:3.8,color:'White',evos:['frosmoth'],eggGroups:['Bug']},frosmoth:{num:873,species:'Frosmoth',types:['Ice','Bug'],baseStats:{hp:70,atk:65,def:60,spa:125,spd:90,spe:65},abilities:{0:'Shield Dust',H:'Ice Scales'},heightm:1.3,weightkg:42,color:'White',prevo:'snom',evoType:'levelFriendship',evoCondition:'at night',eggGroups:['Bug']},stonjourner:{num:874,species:'Stonjourner',types:['Rock'],baseStats:{hp:100,atk:125,def:135,spa:20,spd:20,spe:70},abilities:{0:'Power Spot'},heightm:2.5,weightkg:520,color:'Gray',eggGroups:['Mineral']},eiscue:{num:875,species:'Eiscue',types:['Ice'],baseStats:{hp:75,atk:80,def:110,spa:65,spd:90,spe:50},abilities:{0:'Ice Face'},heightm:1.4,weightkg:89,color:'Blue',eggGroups:['Water 1','Field'],otherFormes:['eiscuenoice']},eiscuenoice:{num:875,species:'Eiscue-Noice',baseSpecies:'Eiscue',forme:'Noice',types:['Ice'],baseStats:{hp:75,atk:80,def:70,spa:65,spd:50,spe:130},abilities:{0:'Ice Face'},heightm:1.4,weightkg:89,color:'Blue',eggGroups:['Water 1','Field']},indeedee:{num:876,species:'Indeedee',baseForme:'M',types:['Psychic','Normal'],gender:'M',baseStats:{hp:60,atk:65,def:55,spa:105,spd:95,spe:95},abilities:{0:'Inner Focus',1:'Synchronize',H:'Psychic Surge'},heightm:0.9,weightkg:28,color:'Purple',eggGroups:['Fairy'],otherFormes:['indeedeef']},indeedeef:{num:876,species:'Indeedee-F',baseSpecies:'Indeedee',forme:'F',types:['Psychic','Normal'],gender:'F',baseStats:{hp:70,atk:55,def:65,spa:95,spd:105,spe:85},abilities:{0:'Own Tempo',1:'Synchronize',H:'Psychic Surge'},heightm:0.9,weightkg:28,color:'Purple',eggGroups:['Fairy']},morpeko:{num:877,species:'Morpeko',types:['Electric','Dark'],baseStats:{hp:58,atk:95,def:58,spa:70,spd:58,spe:97},abilities:{0:'Hunger Switch'},heightm:0.3,weightkg:3,color:'Yellow',eggGroups:['Field','Fairy'],otherFormes:['morpekohangry']},morpekohangry:{num:877,species:'Morpeko-Hangry',baseSpecies:'Morpeko',forme:'Hangry',types:['Electric','Dark'],baseStats:{hp:58,atk:95,def:58,spa:70,spd:58,spe:97},abilities:{0:'Hunger Switch'},heightm:0.3,weightkg:3,color:'Yellow',eggGroups:['Field','Fairy']},cufant:{num:878,species:'Cufant',types:['Steel'],baseStats:{hp:72,atk:80,def:49,spa:40,spd:49,spe:40},abilities:{0:'Sheer Force',H:'Heavy Metal'},heightm:1.2,weightkg:100,color:'Yellow',evos:['copperajah'],eggGroups:['Field','Mineral']},copperajah:{num:879,species:'Copperajah',types:['Steel'],baseStats:{hp:122,atk:130,def:69,spa:80,spd:69,spe:30},abilities:{0:'Sheer Force',H:'Heavy Metal'},heightm:3,weightkg:650,color:'Green',prevo:'cufant',evoLevel:34,eggGroups:['Field','Mineral'],otherFormes:['copperajahgmax']},copperajahgmax:{num:879,species:'Copperajah-Gmax',baseSpecies:'Copperajah',forme:'Gmax',types:['Steel'],baseStats:{hp:122,atk:130,def:69,spa:80,spd:69,spe:30},abilities:{0:'Sheer Force',H:'Heavy Metal'},// TODO
heightm:0,weightkg:0,color:'Green',eggGroups:['Field','Mineral'],inheritsFrom:'copperajah'},dracozolt:{num:880,species:'Dracozolt',types:['Electric','Dragon'],gender:'N',baseStats:{hp:90,atk:100,def:90,spa:80,spd:70,spe:75},abilities:{0:'Volt Absorb',1:'Hustle',H:'Sand Rush'},heightm:1.8,weightkg:190,color:'Green',eggGroups:['Undiscovered']},arctozolt:{num:881,species:'Arctozolt',types:['Electric','Ice'],gender:'N',baseStats:{hp:90,atk:100,def:90,spa:90,spd:80,spe:55},abilities:{0:'Volt Absorb',1:'Static',H:'Slush Rush'},heightm:2.3,weightkg:150,color:'Blue',eggGroups:['Undiscovered']},dracovish:{num:882,species:'Dracovish',types:['Water','Dragon'],gender:'N',baseStats:{hp:90,atk:90,def:100,spa:70,spd:80,spe:75},abilities:{0:'Water Absorb',1:'Strong Jaw',H:'Sand Rush'},heightm:2.3,weightkg:215,color:'Green',eggGroups:['Undiscovered']},arctovish:{num:883,species:'Arctovish',types:['Water','Ice'],gender:'N',baseStats:{hp:90,atk:90,def:100,spa:80,spd:90,spe:55},abilities:{0:'Water Absorb',1:'Ice Body',H:'Slush Rush'},heightm:2,weightkg:175,color:'Blue',eggGroups:['Undiscovered']},duraludon:{num:884,species:'Duraludon',types:['Steel','Dragon'],baseStats:{hp:70,atk:95,def:115,spa:120,spd:50,spe:85},abilities:{0:'Light Metal',1:'Heavy Metal',H:'Stalwart'},heightm:1.8,weightkg:40,color:'White',eggGroups:['Mineral','Dragon'],otherFormes:['duraludongmax']},duraludongmax:{num:884,species:'Duraludon-Gmax',baseSpecies:'Duraludon',forme:'Gmax',types:['Steel','Dragon'],baseStats:{hp:70,atk:95,def:115,spa:120,spd:50,spe:85},abilities:{0:'Light Metal',1:'Heavy Metal',H:'Stalwart'},// TODO
heightm:0,weightkg:0,color:'White',eggGroups:['Mineral','Dragon'],inheritsFrom:'duraludon'},dreepy:{num:885,species:'Dreepy',types:['Dragon','Ghost'],baseStats:{hp:28,atk:60,def:30,spa:40,spd:30,spe:82},abilities:{0:'Clear Body',1:'Infiltrator',H:'Cursed Body'},heightm:0.5,weightkg:2,color:'Green',evos:['drakloak'],eggGroups:['Amorphous','Dragon']},drakloak:{num:886,species:'Drakloak',types:['Dragon','Ghost'],baseStats:{hp:68,atk:80,def:50,spa:60,spd:50,spe:102},abilities:{0:'Clear Body',1:'Infiltrator',H:'Cursed Body'},heightm:1.4,weightkg:11,color:'Green',prevo:'dreepy',evoLevel:50,evos:['dragapult'],eggGroups:['Amorphous','Dragon']},dragapult:{num:887,species:'Dragapult',types:['Dragon','Ghost'],baseStats:{hp:88,atk:120,def:75,spa:100,spd:75,spe:142},abilities:{0:'Clear Body',1:'Infiltrator',H:'Cursed Body'},heightm:3,weightkg:50,color:'Green',prevo:'drakloak',evoLevel:60,eggGroups:['Amorphous','Dragon']},zacian:{num:888,species:'Zacian',types:['Fairy'],gender:'N',baseStats:{hp:92,atk:130,def:115,spa:80,spd:115,spe:138},abilities:{0:'Intrepid Sword'},heightm:2.8,weightkg:110,color:'Blue',eggGroups:['Undiscovered'],otherFormes:['zaciancrowned']},zaciancrowned:{num:888,species:'Zacian-Crowned',baseSpecies:'Zacian',forme:'Crowned',types:['Fairy','Steel'],gender:'N',baseStats:{hp:92,atk:170,def:115,spa:80,spd:115,spe:148},abilities:{0:'Intrepid Sword'},heightm:2.8,weightkg:355,color:'Blue',eggGroups:['Undiscovered'],inheritsFrom:'zacian'},zamazenta:{num:889,species:'Zamazenta',types:['Fighting'],gender:'N',baseStats:{hp:92,atk:130,def:115,spa:80,spd:115,spe:138},abilities:{0:'Dauntless Shield'},heightm:2.9,weightkg:210,color:'Red',eggGroups:['Undiscovered'],otherFormes:['zamazentacrowned']},zamazentacrowned:{num:889,species:'Zamazenta-Crowned',baseSpecies:'Zamazenta',forme:'Crowned',types:['Fighting','Steel'],gender:'N',baseStats:{hp:92,atk:130,def:145,spa:80,spd:145,spe:128},abilities:{0:'Dauntless Shield'},heightm:2.9,weightkg:785,color:'Red',eggGroups:['Undiscovered'],inheritsFrom:'zamazenta'},eternatus:{num:890,species:'Eternatus',types:['Poison','Dragon'],gender:'N',baseStats:{hp:140,atk:85,def:95,spa:145,spd:95,spe:130},abilities:{0:'Pressure'},heightm:20,weightkg:950,color:'Purple',eggGroups:['Undiscovered']},eternatuseternamax:{num:890,species:'Eternatus-Eternamax',baseSpecies:'Eternatus',forme:'Eternamax',types:['Poison','Dragon'],gender:'N',baseStats:{hp:255,atk:115,def:250,spa:125,spd:250,spe:130},abilities:{'0':'Pressure'},heightm:100,weightkg:0,color:'Purple',eggGroups:['Undiscovered'],inheritsFrom:'eternatus'},missingno:{num:0,species:'Missingno.',types:['Bird','Normal'],baseStats:{hp:33,atk:136,def:0,spa:6,spd:6,spe:29},abilities:{0:''},heightm:3,weightkg:1590.8,color:'Gray',eggGroups:['Undiscovered']},syclar:{num:-1,species:'Syclar',types:['Ice','Bug'],baseStats:{hp:40,atk:76,def:45,spa:74,spd:39,spe:91},abilities:{0:'Compound Eyes',1:'Snow Cloak',H:'Ice Body'},heightm:0.2,weightkg:4.0,color:'Blue',evos:['syclant'],eggGroups:['Bug']},syclant:{num:-2,species:'Syclant',types:['Ice','Bug'],baseStats:{hp:70,atk:116,def:70,spa:114,spd:64,spe:121},abilities:{0:'Compound Eyes',1:'Mountaineer',H:'Ice Body'},heightm:1.7,weightkg:52,color:'Blue',prevo:'syclar',evoLevel:30,eggGroups:['Bug']},revenankh:{num:-3,species:'Revenankh',types:['Ghost','Fighting'],baseStats:{hp:90,atk:105,def:90,spa:65,spd:110,spe:65},abilities:{0:'Shed Skin',1:'Air Lock',H:'Triage'},heightm:1.8,weightkg:44,color:'White',eggGroups:['Amorphous','Human-Like']},embirch:{num:-4,species:'Embirch',types:['Fire','Grass'],baseStats:{hp:60,atk:40,def:55,spa:65,spd:40,spe:60},abilities:{0:'Reckless',1:'Leaf Guard',H:'Chlorophyll'},heightm:0.6,weightkg:15,color:'Brown',evos:['flarelm'],eggGroups:['Monster','Dragon']},flarelm:{num:-5,species:'Flarelm',types:['Fire','Grass'],baseStats:{hp:90,atk:50,def:95,spa:75,spd:70,spe:40},abilities:{0:'Rock Head',1:'Battle Armor',H:'White Smoke'},heightm:1.4,weightkg:73,color:'Brown',prevo:'embirch',evoLevel:24,evos:['pyroak'],eggGroups:['Monster','Dragon']},pyroak:{num:-6,species:'Pyroak',types:['Fire','Grass'],baseStats:{hp:120,atk:70,def:105,spa:95,spd:90,spe:60},abilities:{0:'Rock Head',1:'Battle Armor',H:'White Smoke'},heightm:2.1,weightkg:168,color:'Brown',prevo:'flarelm',evoLevel:38,eggGroups:['Monster','Dragon']},breezi:{num:-7,species:'Breezi',types:['Poison','Flying'],baseStats:{hp:50,atk:46,def:69,spa:60,spd:50,spe:75},abilities:{0:'Unburden',1:'Own Tempo',H:'Frisk'},heightm:0.4,weightkg:0.6,color:'Purple',evos:['fidgit'],eggGroups:['Field']},fidgit:{num:-8,species:'Fidgit',types:['Poison','Ground'],baseStats:{hp:95,atk:76,def:109,spa:90,spd:80,spe:105},abilities:{0:'Persistent',1:'Vital Spirit',H:'Frisk'},heightm:0.9,weightkg:53,color:'Purple',prevo:'breezi',evoLevel:33,eggGroups:['Field']},rebble:{num:-9,species:'Rebble',types:['Rock'],gender:'N',baseStats:{hp:45,atk:25,def:65,spa:75,spd:55,spe:80},abilities:{0:'Levitate',1:'Solid Rock',H:'Sniper'},heightm:0.3,weightkg:7,color:'Gray',evos:['tactite'],eggGroups:['Undiscovered']},tactite:{num:-10,species:'Tactite',types:['Rock'],gender:'N',baseStats:{hp:70,atk:40,def:65,spa:100,spd:65,spe:95},abilities:{0:'Levitate',1:'Technician',H:'Sniper'},heightm:0.6,weightkg:16,color:'Gray',prevo:'rebble',evoLevel:28,evos:['stratagem'],eggGroups:['Undiscovered']},stratagem:{num:-11,species:'Stratagem',types:['Rock'],gender:'N',baseStats:{hp:90,atk:60,def:65,spa:120,spd:70,spe:130},abilities:{0:'Levitate',1:'Technician',H:'Sniper'},heightm:0.9,weightkg:45,color:'Gray',prevo:'tactite',evoType:'trade',eggGroups:['Undiscovered']},privatyke:{num:-12,species:'Privatyke',types:['Water','Fighting'],baseStats:{hp:65,atk:75,def:65,spa:40,spd:60,spe:45},abilities:{0:'Unaware',H:'Technician'},heightm:1,weightkg:35,color:'Green',evos:['arghonaut'],eggGroups:['Water 1','Water 3']},arghonaut:{num:-13,species:'Arghonaut',types:['Water','Fighting'],baseStats:{hp:105,atk:110,def:95,spa:70,spd:100,spe:75},abilities:{0:'Unaware',H:'Technician'},heightm:1.7,weightkg:151,color:'Green',prevo:'privatyke',evoLevel:37,eggGroups:['Water 1','Water 3']},kitsunoh:{num:-14,species:'Kitsunoh',types:['Steel','Ghost'],baseStats:{hp:80,atk:103,def:85,spa:55,spd:80,spe:110},abilities:{0:'Frisk',1:'Limber',H:'Iron Fist'},heightm:1.1,weightkg:51,color:'Gray',eggGroups:['Field']},cyclohm:{num:-15,species:'Cyclohm',types:['Electric','Dragon'],baseStats:{hp:108,atk:60,def:118,spa:112,spd:70,spe:80},abilities:{0:'Shield Dust',1:'Static',H:'Damp'},heightm:1.6,weightkg:59,color:'Yellow',eggGroups:['Dragon','Monster']},colossoil:{num:-16,species:'Colossoil',types:['Dark','Ground'],baseStats:{hp:133,atk:122,def:72,spa:71,spd:72,spe:95},abilities:{0:'Rebound',1:'Guts',H:'Unnerve'},heightm:2.6,weightkg:683.6,color:'Brown',eggGroups:['Water 2','Field']},krilowatt:{num:-17,species:'Krilowatt',types:['Electric','Water'],baseStats:{hp:151,atk:84,def:73,spa:83,spd:74,spe:105},abilities:{0:'Trace',1:'Magic Guard',H:'Minus'},heightm:0.7,weightkg:10.6,color:'Red',eggGroups:['Water 1','Fairy']},voodoll:{num:-18,species:'Voodoll',types:['Normal','Dark'],baseStats:{hp:55,atk:40,def:55,spa:75,spd:50,spe:70},abilities:{0:'Volt Absorb',1:'Lightning Rod',H:'Cursed Body'},heightm:1,weightkg:25,color:'Brown',evos:['voodoom'],eggGroups:['Human-Like','Field']},voodoom:{num:-19,species:'Voodoom',types:['Fighting','Dark'],baseStats:{hp:90,atk:85,def:80,spa:105,spd:80,spe:110},abilities:{0:'Volt Absorb',1:'Lightning Rod',H:'Cursed Body'},heightm:2,weightkg:75.5,color:'Brown',prevo:'voodoll',evoLevel:32,eggGroups:['Human-Like','Field']},scratchet:{num:-20,species:'Scratchet',types:['Normal','Fighting'],baseStats:{hp:55,atk:85,def:80,spa:20,spd:70,spe:40},abilities:{0:'Scrappy',1:'Prankster',H:'Vital Spirit'},heightm:0.5,weightkg:20,color:'Brown',evos:['tomohawk'],eggGroups:['Field','Flying']},tomohawk:{num:-21,species:'Tomohawk',types:['Flying','Fighting'],baseStats:{hp:105,atk:60,def:90,spa:115,spd:80,spe:85},abilities:{0:'Intimidate',1:'Prankster',H:'Justified'},heightm:1.27,weightkg:37.2,color:'Red',prevo:'scratchet',evoLevel:23,eggGroups:['Field','Flying']},necturine:{num:-22,species:'Necturine',types:['Grass','Ghost'],gender:'F',baseStats:{hp:49,atk:55,def:60,spa:50,spd:75,spe:51},abilities:{0:'Anticipation',H:'Telepathy'},heightm:0.3,weightkg:1.8,color:'White',evos:['necturna'],eggGroups:['Grass','Field']},necturna:{num:-23,species:'Necturna',types:['Grass','Ghost'],gender:'F',baseStats:{hp:64,atk:120,def:100,spa:85,spd:120,spe:58},abilities:{0:'Forewarn',H:'Telepathy'},heightm:1.65,weightkg:49.6,color:'Black',prevo:'necturine',evoLevel:31,eggGroups:['Grass','Field']},mollux:{num:-24,species:'Mollux',types:['Fire','Poison'],baseStats:{hp:95,atk:45,def:83,spa:131,spd:105,spe:76},abilities:{0:'Dry Skin',H:'Illuminate'},heightm:1.2,weightkg:41,color:'Pink',eggGroups:['Fairy','Field']},cupra:{num:-25,species:'Cupra',types:['Bug','Psychic'],baseStats:{hp:50,atk:60,def:49,spa:67,spd:30,spe:44},abilities:{0:'Shield Dust',1:'Keen Eye',H:'Magic Guard'},heightm:0.5,weightkg:4.8,color:'Brown',evos:['argalis'],eggGroups:['Bug']},argalis:{num:-26,species:'Argalis',types:['Bug','Psychic'],baseStats:{hp:60,atk:90,def:89,spa:87,spd:40,spe:54},abilities:{0:'Shed Skin',1:'Compound Eyes',H:'Overcoat'},heightm:1.3,weightkg:341.4,color:'Gray',prevo:'cupra',evoLevel:30,evos:['aurumoth'],eggGroups:['Bug']},aurumoth:{num:-27,species:'Aurumoth',types:['Bug','Psychic'],baseStats:{hp:110,atk:120,def:99,spa:117,spd:60,spe:94},abilities:{0:'Weak Armor',1:'No Guard',H:'Light Metal'},heightm:2.1,weightkg:193,color:'Purple',prevo:'argalis',evoLevel:50,eggGroups:['Bug']},brattler:{num:-28,species:'Brattler',types:['Dark','Grass'],baseStats:{hp:80,atk:70,def:40,spa:20,spd:90,spe:30},abilities:{0:'Harvest',1:'Infiltrator',H:'Rattled'},heightm:1.8,weightkg:11.5,color:'Brown',evos:['malaconda'],eggGroups:['Grass','Dragon']},malaconda:{num:-29,species:'Malaconda',types:['Dark','Grass'],baseStats:{hp:115,atk:100,def:60,spa:40,spd:130,spe:55},abilities:{0:'Harvest',1:'Infiltrator',H:'Drought'},heightm:5.5,weightkg:108.8,color:'Brown',prevo:'brattler',evoLevel:33,eggGroups:['Grass','Dragon']},cawdet:{num:-30,species:'Cawdet',types:['Steel','Flying'],baseStats:{hp:35,atk:72,def:85,spa:40,spd:55,spe:88},abilities:{0:'Keen Eye',1:'Volt Absorb',H:'Big Pecks'},heightm:0.76,weightkg:25.0,color:'Gray',evos:['cawmodore'],eggGroups:['Flying']},cawmodore:{num:-31,species:'Cawmodore',types:['Steel','Flying'],baseStats:{hp:50,atk:92,def:130,spa:65,spd:75,spe:118},abilities:{0:'Intimidate',1:'Volt Absorb',H:'Big Pecks'},heightm:1.7,weightkg:37,color:'Black',prevo:'cawdet',evoLevel:33,eggGroups:['Flying']},volkritter:{num:-32,species:'Volkritter',types:['Water','Fire'],baseStats:{hp:60,atk:30,def:50,spa:80,spd:60,spe:70},abilities:{0:'Anticipation',1:'Infiltrator',H:'Unnerve'},heightm:0.3,weightkg:15,color:'Red',evos:['volkraken'],eggGroups:['Water 1','Water 2']},volkraken:{num:-33,species:'Volkraken',types:['Water','Fire'],baseStats:{hp:100,atk:45,def:80,spa:135,spd:100,spe:95},abilities:{0:'Analytic',1:'Infiltrator',H:'Pressure'},heightm:1.3,weightkg:44.5,color:'Red',prevo:'volkritter',evoLevel:34,eggGroups:['Water 1','Water 2']},snugglow:{num:-34,species:'Snugglow',types:['Electric','Poison'],baseStats:{hp:40,atk:37,def:79,spa:91,spd:68,spe:70},abilities:{0:'Storm Drain',1:'Vital Spirit',H:'Telepathy'},heightm:1.2,weightkg:6,color:'Purple',evos:['plasmanta'],eggGroups:['Water 1','Water 2']},plasmanta:{num:-35,species:'Plasmanta',types:['Electric','Poison'],baseStats:{hp:60,atk:57,def:119,spa:131,spd:98,spe:100},abilities:{0:'Storm Drain',1:'Vital Spirit',H:'Telepathy'},heightm:7,weightkg:460,color:'Purple',prevo:'snugglow',evoLevel:29,eggGroups:['Water 1','Water 2']},floatoy:{num:-36,species:'Floatoy',types:['Water'],baseStats:{hp:48,atk:70,def:40,spa:70,spd:30,spe:77},abilities:{0:'Water Veil',1:'Heatproof',H:'Swift Swim'},heightm:0.8,weightkg:1.9,color:'White',evos:['caimanoe'],eggGroups:['Water 1','Field']},caimanoe:{num:-37,species:'Caimanoe',types:['Water','Steel'],baseStats:{hp:73,atk:85,def:65,spa:80,spd:40,spe:87},abilities:{0:'Water Veil',1:'Heatproof',H:'Light Metal'},heightm:1.4,weightkg:72.5,color:'Gray',prevo:'floatoy',evoLevel:21,evos:['naviathan'],eggGroups:['Water 1','Field']},naviathan:{num:-38,species:'Naviathan',types:['Water','Steel'],baseStats:{hp:103,atk:110,def:90,spa:95,spd:65,spe:97},abilities:{0:'Guts',1:'Heatproof',H:'Light Metal'},heightm:3,weightkg:510,color:'Gray',prevo:'caimanoe',evoLevel:40,eggGroups:['Water 1','Field']},crucibelle:{num:-39,species:'Crucibelle',types:['Rock','Poison'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:106,atk:105,def:65,spa:75,spd:85,spe:104},abilities:{0:'Regenerator',1:'Mold Breaker',H:'Liquid Ooze'},heightm:1.3,weightkg:23.6,color:'Purple',eggGroups:['Amorphous','Mineral'],otherFormes:['crucibellemega']},crucibellemega:{num:-39,species:'Crucibelle-Mega',baseSpecies:'Crucibelle',forme:'Mega',types:['Rock','Poison'],genderRatio:{M:0.25,F:0.75},baseStats:{hp:106,atk:135,def:75,spa:91,spd:125,spe:108},abilities:{0:'Magic Guard'},heightm:1.4,weightkg:22.5,color:'Purple',eggGroups:['Amorphous','Mineral']},pluffle:{num:-40,species:'Pluffle',types:['Fairy'],baseStats:{hp:74,atk:38,def:51,spa:65,spd:78,spe:49},abilities:{0:'Natural Cure',1:'Aroma Veil',H:'Friend Guard'},heightm:0.8,weightkg:1.8,color:'Pink',evos:['kerfluffle'],eggGroups:['Fairy','Human-Like']},kerfluffle:{num:-41,species:'Kerfluffle',types:['Fairy','Fighting'],baseStats:{hp:84,atk:78,def:86,spa:115,spd:88,spe:119},abilities:{0:'Natural Cure',1:'Aroma Veil',H:'Friend Guard'},heightm:2.1,weightkg:24.2,color:'Pink',prevo:'pluffle',evoType:'levelExtra',eggGroups:['Fairy','Human-Like']},pajantom:{num:-42,species:'Pajantom',types:['Dragon','Ghost'],baseStats:{hp:84,atk:133,def:71,spa:51,spd:111,spe:101},abilities:{0:'Comatose'},heightm:1.1,weightkg:3.1,color:'Purple',eggGroups:['Dragon','Monster']},mumbao:{num:-43,species:'Mumbao',types:['Grass','Fairy'],baseStats:{hp:55,atk:30,def:64,spa:87,spd:73,spe:66},abilities:{0:'Solar Power',1:'Trace',H:'Overcoat'},heightm:1,weightkg:250,color:'Brown',evos:['jumbao'],eggGroups:['Grass']},jumbao:{num:-44,species:'Jumbao',types:['Grass','Fairy'],baseStats:{hp:92,atk:63,def:97,spa:124,spd:104,spe:96},abilities:{0:'Drought',1:'Trace',H:'Overcoat'},heightm:2.4,weightkg:600,color:'Brown',prevo:'mumbao',evoType:'levelExtra',eggGroups:['Grass']},fawnifer:{num:-45,species:'Fawnifer',types:['Grass'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:49,atk:61,def:42,spa:52,spd:40,spe:76},abilities:{0:'Overgrow',H:'Lightning Rod'},heightm:0.7,weightkg:6.9,color:'Green',evos:['electrelk'],eggGroups:['Field']},electrelk:{num:-46,species:'Electrelk',types:['Grass','Electric'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:59,atk:81,def:67,spa:57,spd:55,spe:101},abilities:{0:'Overgrow',H:'Galvanize'},heightm:1.4,weightkg:41.5,color:'Green',prevo:'fawnifer',evoLevel:17,evos:['caribolt'],eggGroups:['Field']},caribolt:{num:-47,species:'Caribolt',types:['Grass','Electric'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:84,atk:106,def:82,spa:77,spd:80,spe:106},abilities:{0:'Overgrow',H:'Galvanize'},heightm:2.5,weightkg:140,color:'Green',prevo:'electrelk',evoLevel:34,eggGroups:['Field']},smogecko:{num:-48,species:'Smogecko',types:['Fire'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:48,atk:66,def:43,spa:58,spd:48,spe:56},abilities:{0:'Blaze',H:'Technician'},heightm:0.5,weightkg:8.5,color:'Red',evos:['smoguana'],eggGroups:['Field','Monster']},smoguana:{num:-49,species:'Smoguana',types:['Fire','Ground'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:68,atk:86,def:53,spa:68,spd:68,spe:76},abilities:{0:'Blaze',H:'Technician'},heightm:1.5,weightkg:22.2,color:'Red',prevo:'smogecko',evoLevel:15,evos:['smokomodo'],eggGroups:['Field','Monster']},smokomodo:{num:-50,species:'Smokomodo',types:['Fire','Ground'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:88,atk:116,def:67,spa:88,spd:78,spe:97},abilities:{0:'Blaze',H:'Technician'},heightm:2.2,weightkg:205,color:'Red',prevo:'smoguana',evoLevel:36,eggGroups:['Field','Monster']},swirlpool:{num:-51,species:'Swirlpool',types:['Water'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:61,atk:49,def:70,spa:50,spd:62,spe:28},abilities:{0:'Torrent',H:'Poison Heal'},heightm:0.5,weightkg:7,color:'Blue',evos:['coribalis'],eggGroups:['Water 1','Fairy']},coribalis:{num:-52,species:'Coribalis',types:['Water','Bug'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:76,atk:69,def:90,spa:65,spd:77,spe:43},abilities:{0:'Torrent',H:'Poison Heal'},heightm:1.4,weightkg:24.5,color:'Blue',prevo:'swirlpool',evoLevel:17,evos:['snaelstrom'],eggGroups:['Water 1','Fairy']},snaelstrom:{num:-53,species:'Snaelstrom',types:['Water','Bug'],genderRatio:{M:0.875,F:0.125},baseStats:{hp:91,atk:94,def:110,spa:80,spd:97,spe:63},abilities:{0:'Torrent',H:'Poison Heal'},heightm:2,weightkg:120,color:'Blue',prevo:'coribalis',evoLevel:34,eggGroups:['Water 1','Fairy']},equilibra:{num:-54,species:'Equilibra',types:['Steel','Ground'],gender:'N',baseStats:{hp:102,atk:50,def:96,spa:133,spd:118,spe:60},abilities:{0:'Levitate',1:'Bulletproof',H:'Justified'},heightm:0.8,weightkg:51.3,color:'Brown',eggGroups:['Mineral']},pokestarsmeargle:{num:-5000,species:'Pokestar Smeargle',types:['Normal'],baseStats:{hp:55,atk:20,def:35,spa:20,spd:45,spe:75},abilities:{0:'Own Tempo',1:'Technician',H:'Moody'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Field']},pokestarufo:{num:-5001,species:'Pokestar UFO',types:['Flying','Electric'],gender:'N',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Levitate'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestarufopropu1'],otherFormes:['pokestarufo2','pokestarufopropu2']},pokestarufo2:{num:-5001,species:'Pokestar UFO-2',baseSpecies:'Pokestar UFO',forme:'2',types:['Psychic','Electric'],gender:'N',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Levitate'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered']},pokestarbrycenman:{num:-5002,species:'Pokestar Brycen-Man',types:['Dark','Psychic'],gender:'M',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Levitate'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestarbrycenmanprop']},pokestarmt:{num:-5003,species:'Pokestar MT',types:['Steel'],gender:'N',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Analytic'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestarmtprop']},pokestarmt2:{num:-5004,species:'Pokestar MT2',types:['Steel','Electric'],gender:'N',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Flash Fire'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestarmt2prop']},pokestartransport:{num:-5005,species:'Pokestar Transport',types:['Steel'],gender:'N',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Motor Drive'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestartransportprop']},pokestargiant:{num:-5006,species:'Pokestar Giant',types:['Normal'],gender:'F',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Huge Power'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestargiant2','pokestargiantpropo1','pokestargiantpropo2']},pokestarhumanoid:{num:-5007,species:'Pokestar Humanoid',types:['Normal'],baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Insomnia'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestarhumanoidprop']},pokestarmonster:{num:-5008,species:'Pokestar Monster',types:['Dark'],baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Pressure'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestarmonsterprop']},pokestarf00:{num:-5009,species:'Pokestar F-00',types:['Steel','Normal'],baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Volt Absorb'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestarf00prop']},pokestarf002:{num:-5010,species:'Pokestar F-002',types:['Steel','Normal'],baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Reckless'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestarf002prop']},pokestarspirit:{num:-5011,species:'Pokestar Spirit',types:['Dark','Ghost'],baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Wonder Guard'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestarspiritprop']},pokestarblackdoor:{num:-5012,species:'Pokestar Black Door',types:['Grass'],gender:'F',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Early Bird'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestarblackdoorprop']},pokestarwhitedoor:{num:-5013,species:'Pokestar White Door',types:['Fire'],gender:'M',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Blaze'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestarwhitedoorprop']},pokestarblackbelt:{num:-5014,species:'Pokestar Black Belt',types:['Fighting'],gender:'M',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Huge Power'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered'],otherForms:['pokestarblackbeltprop']},pokestarufopropu2:{num:-5001,species:'Pokestar UFO-PropU2',baseForme:'Pokestar UFO',forme:'PropU2',types:['Psychic','Electric'],gender:'N',baseStats:{hp:100,atk:100,def:100,spa:100,spd:100,spe:100},abilities:{0:'Levitate'},heightm:1.5,weightkg:61,color:'White',eggGroups:['Undiscovered']}};exports.BattlePokedex=BattlePokedex;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var getFormData = exports.getFormData = function getFormData(eventTarget) {
    var keys = Object.keys(eventTarget).filter(function (key) {
        return key.match(/^\d+$/);
    });
    return keys.reduce(function (result, key) {
        var _eventTarget$key = eventTarget[key],
            name = _eventTarget$key.name,
            value = _eventTarget$key.value;

        if (name !== '' && value !== '') {
            result[name] = value;
        }
        return result;
    }, {});
};

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var withOrdinalSuffix = exports.withOrdinalSuffix = function withOrdinalSuffix(number) {
    var i = parseInt(number, 10);
    var j = i % 10;
    var k = i % 100;
    if (j == 1 && k != 11) {
        return i + 'st';
    }
    if (j == 2 && k != 12) {
        return i + 'nd';
    }
    if (j == 3 && k != 13) {
        return i + 'rd';
    }
    return i + 'th';
};

var capFirst = exports.capFirst = function capFirst(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
};

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(204), __esModule: true };

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _from = __webpack_require__(188);

var _from2 = _interopRequireDefault(_from);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return (0, _from2.default)(arr);
  }
};

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(196);

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(195);

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(3).document;
module.exports = document && document.documentElement;


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(14) && !__webpack_require__(30)(function () {
  return Object.defineProperty(__webpack_require__(63)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(29);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(27);
var ITERATOR = __webpack_require__(4)('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(12);
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(31);
var $export = __webpack_require__(13);
var redefine = __webpack_require__(119);
var hide = __webpack_require__(20);
var Iterators = __webpack_require__(27);
var $iterCreate = __webpack_require__(217);
var setToStringTag = __webpack_require__(43);
var getPrototypeOf = __webpack_require__(224);
var ITERATOR = __webpack_require__(4)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(4)('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(42);
var createDesc = __webpack_require__(32);
var toIObject = __webpack_require__(28);
var toPrimitive = __webpack_require__(72);
var has = __webpack_require__(19);
var IE8_DOM_DEFINE = __webpack_require__(108);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(14) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(116);
var hiddenKeys = __webpack_require__(64).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(19);
var toIObject = __webpack_require__(28);
var arrayIndexOf = __webpack_require__(211)(false);
var IE_PROTO = __webpack_require__(68)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 117 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(12);
var isObject = __webpack_require__(18);
var newPromiseCapability = __webpack_require__(65);

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(20);


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(12);
var aFunction = __webpack_require__(40);
var SPECIES = __webpack_require__(4)('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(26);
var invoke = __webpack_require__(215);
var html = __webpack_require__(107);
var cel = __webpack_require__(63);
var global = __webpack_require__(3);
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(29)(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),
/* 122 */
/***/ (function(module, exports) {



/***/ }),
/* 123 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return createBrowserHistory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return createHashHistory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return createMemoryHistory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return createLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return locationsAreEqual; });
/* unused harmony export parsePath */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return createPath; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_resolve_pathname__ = __webpack_require__(377);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_value_equal__ = __webpack_require__(391);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_tiny_warning__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_tiny_invariant__ = __webpack_require__(89);






function addLeadingSlash(path) {
  return path.charAt(0) === '/' ? path : '/' + path;
}
function stripLeadingSlash(path) {
  return path.charAt(0) === '/' ? path.substr(1) : path;
}
function hasBasename(path, prefix) {
  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;
}
function stripBasename(path, prefix) {
  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
}
function stripTrailingSlash(path) {
  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
}
function parsePath(path) {
  var pathname = path || '/';
  var search = '';
  var hash = '';
  var hashIndex = pathname.indexOf('#');

  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }

  var searchIndex = pathname.indexOf('?');

  if (searchIndex !== -1) {
    search = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }

  return {
    pathname: pathname,
    search: search === '?' ? '' : search,
    hash: hash === '#' ? '' : hash
  };
}
function createPath(location) {
  var pathname = location.pathname,
      search = location.search,
      hash = location.hash;
  var path = pathname || '/';
  if (search && search !== '?') path += search.charAt(0) === '?' ? search : "?" + search;
  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : "#" + hash;
  return path;
}

function createLocation(path, state, key, currentLocation) {
  var location;

  if (typeof path === 'string') {
    // Two-arg form: push(path, state)
    location = parsePath(path);
    location.state = state;
  } else {
    // One-arg form: push(location)
    location = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])({}, path);
    if (location.pathname === undefined) location.pathname = '';

    if (location.search) {
      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
    } else {
      location.search = '';
    }

    if (location.hash) {
      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
    } else {
      location.hash = '';
    }

    if (state !== undefined && location.state === undefined) location.state = state;
  }

  try {
    location.pathname = decodeURI(location.pathname);
  } catch (e) {
    if (e instanceof URIError) {
      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
    } else {
      throw e;
    }
  }

  if (key) location.key = key;

  if (currentLocation) {
    // Resolve incomplete/relative pathname relative to current location.
    if (!location.pathname) {
      location.pathname = currentLocation.pathname;
    } else if (location.pathname.charAt(0) !== '/') {
      location.pathname = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_resolve_pathname__["a" /* default */])(location.pathname, currentLocation.pathname);
    }
  } else {
    // When there is no prior location and pathname is empty, set it to /
    if (!location.pathname) {
      location.pathname = '/';
    }
  }

  return location;
}
function locationsAreEqual(a, b) {
  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_value_equal__["a" /* default */])(a.state, b.state);
}

function createTransitionManager() {
  var prompt = null;

  function setPrompt(nextPrompt) {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(prompt == null, 'A history supports only one prompt at a time') : void 0;
    prompt = nextPrompt;
    return function () {
      if (prompt === nextPrompt) prompt = null;
    };
  }

  function confirmTransitionTo(location, action, getUserConfirmation, callback) {
    // TODO: If another transition starts while we're still confirming
    // the previous one, we may end up in a weird state. Figure out the
    // best way to handle this.
    if (prompt != null) {
      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;

      if (typeof result === 'string') {
        if (typeof getUserConfirmation === 'function') {
          getUserConfirmation(result, callback);
        } else {
          process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;
          callback(true);
        }
      } else {
        // Return false from a transition hook to cancel the transition.
        callback(result !== false);
      }
    } else {
      callback(true);
    }
  }

  var listeners = [];

  function appendListener(fn) {
    var isActive = true;

    function listener() {
      if (isActive) fn.apply(void 0, arguments);
    }

    listeners.push(listener);
    return function () {
      isActive = false;
      listeners = listeners.filter(function (item) {
        return item !== listener;
      });
    };
  }

  function notifyListeners() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    listeners.forEach(function (listener) {
      return listener.apply(void 0, args);
    });
  }

  return {
    setPrompt: setPrompt,
    confirmTransitionTo: confirmTransitionTo,
    appendListener: appendListener,
    notifyListeners: notifyListeners
  };
}

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
function getConfirmation(message, callback) {
  callback(window.confirm(message)); // eslint-disable-line no-alert
}
/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */

function supportsHistory() {
  var ua = window.navigator.userAgent;
  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;
  return window.history && 'pushState' in window.history;
}
/**
 * Returns true if browser fires popstate on hash change.
 * IE10 and IE11 do not.
 */

function supportsPopStateOnHashChange() {
  return window.navigator.userAgent.indexOf('Trident') === -1;
}
/**
 * Returns false if using go(n) with hash history causes a full page reload.
 */

function supportsGoWithoutReloadUsingHash() {
  return window.navigator.userAgent.indexOf('Firefox') === -1;
}
/**
 * Returns true if a given popstate event is an extraneous WebKit event.
 * Accounts for the fact that Chrome on iOS fires real popstate events
 * containing undefined state when pressing the back button.
 */

function isExtraneousPopstateEvent(event) {
  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
}

var PopStateEvent = 'popstate';
var HashChangeEvent = 'hashchange';

function getHistoryState() {
  try {
    return window.history.state || {};
  } catch (e) {
    // IE 11 sometimes throws when accessing window.history.state
    // See https://github.com/ReactTraining/history/pull/289
    return {};
  }
}
/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */


function createBrowserHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !canUseDOM ? process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_invariant__["a" /* default */])(false, 'Browser history needs a DOM') : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_invariant__["a" /* default */])(false) : void 0;
  var globalHistory = window.history;
  var canUseHistory = supportsHistory();
  var needsHashChangeListener = !supportsPopStateOnHashChange();
  var _props = props,
      _props$forceRefresh = _props.forceRefresh,
      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';

  function getDOMLocation(historyState) {
    var _ref = historyState || {},
        key = _ref.key,
        state = _ref.state;

    var _window$location = window.location,
        pathname = _window$location.pathname,
        search = _window$location.search,
        hash = _window$location.hash;
    var path = pathname + search + hash;
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".') : void 0;
    if (basename) path = stripBasename(path, basename);
    return createLocation(path, state, key);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var transitionManager = createTransitionManager();

  function setState(nextState) {
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function handlePopState(event) {
    // Ignore extraneous popstate events in WebKit.
    if (isExtraneousPopstateEvent(event)) return;
    handlePop(getDOMLocation(event.state));
  }

  function handleHashChange() {
    handlePop(getDOMLocation(getHistoryState()));
  }

  var forceNextPop = false;

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of keys we've seen in sessionStorage.
    // Instead, we just default to 0 for keys we don't know.

    var toIndex = allKeys.indexOf(toLocation.key);
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allKeys.indexOf(fromLocation.key);
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  }

  var initialLocation = getDOMLocation(getHistoryState());
  var allKeys = [initialLocation.key]; // Public interface

  function createHref(location) {
    return basename + createPath(location);
  }

  function push(path, state) {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'PUSH';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.pushState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.href = href;
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          var nextKeys = allKeys.slice(0, prevIndex + 1);
          nextKeys.push(location.key);
          allKeys = nextKeys;
          setState({
            action: action,
            location: location
          });
        }
      } else {
        process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;
        window.location.href = href;
      }
    });
  }

  function replace(path, state) {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'REPLACE';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.replaceState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.replace(href);
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          if (prevIndex !== -1) allKeys[prevIndex] = location.key;
          setState({
            action: action,
            location: location
          });
        }
      } else {
        process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;
        window.location.replace(href);
      }
    });
  }

  function go(n) {
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

var HashChangeEvent$1 = 'hashchange';
var HashPathCoders = {
  hashbang: {
    encodePath: function encodePath(path) {
      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);
    },
    decodePath: function decodePath(path) {
      return path.charAt(0) === '!' ? path.substr(1) : path;
    }
  },
  noslash: {
    encodePath: stripLeadingSlash,
    decodePath: addLeadingSlash
  },
  slash: {
    encodePath: addLeadingSlash,
    decodePath: addLeadingSlash
  }
};

function stripHash(url) {
  var hashIndex = url.indexOf('#');
  return hashIndex === -1 ? url : url.slice(0, hashIndex);
}

function getHashPath() {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var hashIndex = href.indexOf('#');
  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
}

function pushHashPath(path) {
  window.location.hash = path;
}

function replaceHashPath(path) {
  window.location.replace(stripHash(window.location.href) + '#' + path);
}

function createHashHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !canUseDOM ? process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_invariant__["a" /* default */])(false, 'Hash history needs a DOM') : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_invariant__["a" /* default */])(false) : void 0;
  var globalHistory = window.history;
  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();
  var _props = props,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
      _props$hashType = _props.hashType,
      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';
  var _HashPathCoders$hashT = HashPathCoders[hashType],
      encodePath = _HashPathCoders$hashT.encodePath,
      decodePath = _HashPathCoders$hashT.decodePath;

  function getDOMLocation() {
    var path = decodePath(getHashPath());
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".') : void 0;
    if (basename) path = stripBasename(path, basename);
    return createLocation(path);
  }

  var transitionManager = createTransitionManager();

  function setState(nextState) {
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  var forceNextPop = false;
  var ignorePath = null;

  function locationsAreEqual$$1(a, b) {
    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;
  }

  function handleHashChange() {
    var path = getHashPath();
    var encodedPath = encodePath(path);

    if (path !== encodedPath) {
      // Ensure we always have a properly-encoded hash.
      replaceHashPath(encodedPath);
    } else {
      var location = getDOMLocation();
      var prevLocation = history.location;
      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.

      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.

      ignorePath = null;
      handlePop(location);
    }
  }

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of paths we've seen in sessionStorage.
    // Instead, we just default to 0 for paths we don't know.

    var toIndex = allPaths.lastIndexOf(createPath(toLocation));
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  } // Ensure the hash is encoded properly before doing anything else.


  var path = getHashPath();
  var encodedPath = encodePath(path);
  if (path !== encodedPath) replaceHashPath(encodedPath);
  var initialLocation = getDOMLocation();
  var allPaths = [createPath(initialLocation)]; // Public interface

  function createHref(location) {
    var baseTag = document.querySelector('base');
    var href = '';

    if (baseTag && baseTag.getAttribute('href')) {
      href = stripHash(window.location.href);
    }

    return href + '#' + encodePath(basename + createPath(location));
  }

  function push(path, state) {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;
    var action = 'PUSH';
    var location = createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a PUSH, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        pushHashPath(encodedPath);
        var prevIndex = allPaths.lastIndexOf(createPath(history.location));
        var nextPaths = allPaths.slice(0, prevIndex + 1);
        nextPaths.push(path);
        allPaths = nextPaths;
        setState({
          action: action,
          location: location
        });
      } else {
        process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;
        setState();
      }
    });
  }

  function replace(path, state) {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;
    var action = 'REPLACE';
    var location = createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        replaceHashPath(encodedPath);
      }

      var prevIndex = allPaths.indexOf(createPath(history.location));
      if (prevIndex !== -1) allPaths[prevIndex] = path;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(HashChangeEvent$1, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(HashChangeEvent$1, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

function clamp(n, lowerBound, upperBound) {
  return Math.min(Math.max(n, lowerBound), upperBound);
}
/**
 * Creates a history object that stores locations in memory.
 */


function createMemoryHistory(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      getUserConfirmation = _props.getUserConfirmation,
      _props$initialEntries = _props.initialEntries,
      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,
      _props$initialIndex = _props.initialIndex,
      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var transitionManager = createTransitionManager();

  function setState(nextState) {
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])(history, nextState);

    history.length = history.entries.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var index = clamp(initialIndex, 0, initialEntries.length - 1);
  var entries = initialEntries.map(function (entry) {
    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());
  }); // Public interface

  var createHref = createPath;

  function push(path, state) {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'PUSH';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var prevIndex = history.index;
      var nextIndex = prevIndex + 1;
      var nextEntries = history.entries.slice(0);

      if (nextEntries.length > nextIndex) {
        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
      } else {
        nextEntries.push(location);
      }

      setState({
        action: action,
        location: location,
        index: nextIndex,
        entries: nextEntries
      });
    });
  }

  function replace(path, state) {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'REPLACE';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      history.entries[history.index] = location;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);
    var action = 'POP';
    var location = history.entries[nextIndex];
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (ok) {
        setState({
          action: action,
          location: location,
          index: nextIndex
        });
      } else {
        // Mimic the behavior of DOM histories by
        // causing a render after a cancelled POP.
        setState();
      }
    });
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  function canGo(n) {
    var nextIndex = history.index + n;
    return nextIndex >= 0 && nextIndex < history.entries.length;
  }

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    return transitionManager.setPrompt(prompt);
  }

  function listen(listener) {
    return transitionManager.appendListener(listener);
  }

  var history = {
    length: entries.length,
    action: 'POP',
    location: entries[index],
    index: index,
    entries: entries,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    canGo: canGo,
    block: block,
    listen: listen
  };
  return history;
}



/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)))

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(47),
    stackClear = __webpack_require__(344),
    stackDelete = __webpack_require__(345),
    stackGet = __webpack_require__(346),
    stackHas = __webpack_require__(347),
    stackSet = __webpack_require__(348);

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),
/* 125 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;


/***/ }),
/* 126 */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(130),
    toKey = __webpack_require__(51);

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__(279),
    isObjectLike = __webpack_require__(37);

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;


/***/ }),
/* 129 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(17),
    isKey = __webpack_require__(80),
    stringToPath = __webpack_require__(349),
    toString = __webpack_require__(363);

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(265),
    arraySome = __webpack_require__(271),
    cacheHas = __webpack_require__(297);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(145)))

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(81),
    isArrayLike = __webpack_require__(53),
    isIndex = __webpack_require__(79),
    isObject = __webpack_require__(36);

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(36);

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;


/***/ }),
/* 135 */
/***/ (function(module, exports) {

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;


/***/ }),
/* 136 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(16),
    stubFalse = __webpack_require__(359);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(146)(module)))

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(35),
    isObject = __webpack_require__(36);

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(282),
    baseUnary = __webpack_require__(129),
    nodeUtil = __webpack_require__(335);

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),
/* 140 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BrowserRouter", function() { return BrowserRouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HashRouter", function() { return HashRouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Link", function() { return Link; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavLink", function() { return NavLink; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router__ = __webpack_require__(141);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "MemoryRouter", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Prompt", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Redirect", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Route", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Router", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "StaticRouter", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Switch", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "__RouterContext", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "generatePath", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["i"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "matchPath", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["j"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "useHistory", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["k"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "useLocation", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["l"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "useParams", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["m"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "useRouteMatch", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["n"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "withRouter", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["o"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_inheritsLoose__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history__ = __webpack_require__(123);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_tiny_warning__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_extends__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_tiny_invariant__ = __webpack_require__(89);











/**
 * The public API for a <Router> that uses HTML5 history.
 */

var BrowserRouter =
/*#__PURE__*/
function (_React$Component) {
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(BrowserRouter, _React$Component);

  function BrowserRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_history__["a" /* createBrowserHistory */])(_this.props);
    return _this;
  }

  var _proto = BrowserRouter.prototype;

  _proto.render = function render() {
    return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react_router__["e" /* Router */], {
      history: this.history,
      children: this.props.children
    });
  };

  return BrowserRouter;
}(__WEBPACK_IMPORTED_MODULE_2_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  BrowserRouter.propTypes = {
    basename: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string,
    children: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.node,
    forceRefresh: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.bool,
    getUserConfirmation: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func,
    keyLength: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.number
  };

  BrowserRouter.prototype.componentDidMount = function () {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_tiny_warning__["a" /* default */])(!this.props.history, "<BrowserRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { BrowserRouter as Router }`.") : void 0;
  };
}

/**
 * The public API for a <Router> that uses window.location.hash.
 */

var HashRouter =
/*#__PURE__*/
function (_React$Component) {
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(HashRouter, _React$Component);

  function HashRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_history__["b" /* createHashHistory */])(_this.props);
    return _this;
  }

  var _proto = HashRouter.prototype;

  _proto.render = function render() {
    return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react_router__["e" /* Router */], {
      history: this.history,
      children: this.props.children
    });
  };

  return HashRouter;
}(__WEBPACK_IMPORTED_MODULE_2_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  HashRouter.propTypes = {
    basename: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string,
    children: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.node,
    getUserConfirmation: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func,
    hashType: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.oneOf(["hashbang", "noslash", "slash"])
  };

  HashRouter.prototype.componentDidMount = function () {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_tiny_warning__["a" /* default */])(!this.props.history, "<HashRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { HashRouter as Router }`.") : void 0;
  };
}

var resolveToLocation = function resolveToLocation(to, currentLocation) {
  return typeof to === "function" ? to(currentLocation) : to;
};
var normalizeToLocation = function normalizeToLocation(to, currentLocation) {
  return typeof to === "string" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_history__["c" /* createLocation */])(to, null, null, currentLocation) : to;
};

var forwardRefShim = function forwardRefShim(C) {
  return C;
};

var forwardRef = __WEBPACK_IMPORTED_MODULE_2_react___default.a.forwardRef;

if (typeof forwardRef === "undefined") {
  forwardRef = forwardRefShim;
}

function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}

var LinkAnchor = forwardRef(function (_ref, forwardedRef) {
  var innerRef = _ref.innerRef,
      navigate = _ref.navigate,
      _onClick = _ref.onClick,
      rest = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__["a" /* default */])(_ref, ["innerRef", "navigate", "onClick"]);

  var target = rest.target;

  var props = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_extends__["a" /* default */])({}, rest, {
    onClick: function onClick(event) {
      try {
        if (_onClick) _onClick(event);
      } catch (ex) {
        event.preventDefault();
        throw ex;
      }

      if (!event.defaultPrevented && // onClick prevented default
      event.button === 0 && ( // ignore everything but left clicks
      !target || target === "_self") && // let browser handle "target=_blank" etc.
      !isModifiedEvent(event) // ignore clicks with modifier keys
      ) {
          event.preventDefault();
          navigate();
        }
    }
  }); // React 15 compat


  if (forwardRefShim !== forwardRef) {
    props.ref = forwardedRef || innerRef;
  } else {
    props.ref = innerRef;
  }

  return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement("a", props);
});

if (process.env.NODE_ENV !== "production") {
  LinkAnchor.displayName = "LinkAnchor";
}
/**
 * The public API for rendering a history-aware <a>.
 */


var Link = forwardRef(function (_ref2, forwardedRef) {
  var _ref2$component = _ref2.component,
      component = _ref2$component === void 0 ? LinkAnchor : _ref2$component,
      replace = _ref2.replace,
      to = _ref2.to,
      innerRef = _ref2.innerRef,
      rest = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__["a" /* default */])(_ref2, ["component", "replace", "to", "innerRef"]);

  return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react_router__["h" /* __RouterContext */].Consumer, null, function (context) {
    !context ? process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_tiny_invariant__["a" /* default */])(false, "You should not use <Link> outside a <Router>") : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_tiny_invariant__["a" /* default */])(false) : void 0;
    var history = context.history;
    var location = normalizeToLocation(resolveToLocation(to, context.location), context.location);
    var href = location ? history.createHref(location) : "";

    var props = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_extends__["a" /* default */])({}, rest, {
      href: href,
      navigate: function navigate() {
        var location = resolveToLocation(to, context.location);
        var method = replace ? history.replace : history.push;
        method(location);
      }
    }); // React 15 compat


    if (forwardRefShim !== forwardRef) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }

    return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(component, props);
  });
});

if (process.env.NODE_ENV !== "production") {
  var toType = __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.object, __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func]);
  var refType = __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.shape({
    current: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.any
  })]);
  Link.displayName = "Link";
  Link.propTypes = {
    innerRef: refType,
    onClick: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func,
    replace: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.bool,
    target: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string,
    to: toType.isRequired
  };
}

var forwardRefShim$1 = function forwardRefShim(C) {
  return C;
};

var forwardRef$1 = __WEBPACK_IMPORTED_MODULE_2_react___default.a.forwardRef;

if (typeof forwardRef$1 === "undefined") {
  forwardRef$1 = forwardRefShim$1;
}

function joinClassnames() {
  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {
    classnames[_key] = arguments[_key];
  }

  return classnames.filter(function (i) {
    return i;
  }).join(" ");
}
/**
 * A <Link> wrapper that knows if it's "active" or not.
 */


var NavLink = forwardRef$1(function (_ref, forwardedRef) {
  var _ref$ariaCurrent = _ref["aria-current"],
      ariaCurrent = _ref$ariaCurrent === void 0 ? "page" : _ref$ariaCurrent,
      _ref$activeClassName = _ref.activeClassName,
      activeClassName = _ref$activeClassName === void 0 ? "active" : _ref$activeClassName,
      activeStyle = _ref.activeStyle,
      classNameProp = _ref.className,
      exact = _ref.exact,
      isActiveProp = _ref.isActive,
      locationProp = _ref.location,
      strict = _ref.strict,
      styleProp = _ref.style,
      to = _ref.to,
      innerRef = _ref.innerRef,
      rest = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__["a" /* default */])(_ref, ["aria-current", "activeClassName", "activeStyle", "className", "exact", "isActive", "location", "strict", "style", "to", "innerRef"]);

  return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react_router__["h" /* __RouterContext */].Consumer, null, function (context) {
    !context ? process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_tiny_invariant__["a" /* default */])(false, "You should not use <NavLink> outside a <Router>") : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_tiny_invariant__["a" /* default */])(false) : void 0;
    var currentLocation = locationProp || context.location;
    var toLocation = normalizeToLocation(resolveToLocation(to, currentLocation), currentLocation);
    var path = toLocation.pathname; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202

    var escapedPath = path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
    var match = escapedPath ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_react_router__["j" /* matchPath */])(currentLocation.pathname, {
      path: escapedPath,
      exact: exact,
      strict: strict
    }) : null;
    var isActive = !!(isActiveProp ? isActiveProp(match, currentLocation) : match);
    var className = isActive ? joinClassnames(classNameProp, activeClassName) : classNameProp;
    var style = isActive ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_extends__["a" /* default */])({}, styleProp, {}, activeStyle) : styleProp;

    var props = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_extends__["a" /* default */])({
      "aria-current": isActive && ariaCurrent || null,
      className: className,
      style: style,
      to: toLocation
    }, rest); // React 15 compat


    if (forwardRefShim$1 !== forwardRef$1) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }

    return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(Link, props);
  });
});

if (process.env.NODE_ENV !== "production") {
  NavLink.displayName = "NavLink";
  var ariaCurrentType = __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.oneOf(["page", "step", "location", "date", "time", "true"]);
  NavLink.propTypes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_extends__["a" /* default */])({}, Link.propTypes, {
    "aria-current": ariaCurrentType,
    activeClassName: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string,
    activeStyle: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.object,
    className: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string,
    exact: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.bool,
    isActive: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func,
    location: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.object,
    strict: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.bool,
    style: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.object
  });
}


//# sourceMappingURL=react-router-dom.js.map

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)))

/***/ }),
/* 141 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MemoryRouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Prompt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return Redirect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return Route; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return Router; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return StaticRouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return Switch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return context; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return generatePath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return matchPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return useHistory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return useLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return useParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return useRouteMatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return withRouter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history__ = __webpack_require__(123);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_tiny_warning__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_mini_create_react_context__ = __webpack_require__(364);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_tiny_invariant__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_path_to_regexp__ = __webpack_require__(372);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_path_to_regexp___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_path_to_regexp__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_react_is__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_react_is___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_react_is__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_hoist_non_react_statics__ = __webpack_require__(258);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_hoist_non_react_statics___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_hoist_non_react_statics__);













// TODO: Replace with React.createContext once we can assume React 16+

var createNamedContext = function createNamedContext(name) {
  var context = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_mini_create_react_context__["a" /* default */])();
  context.displayName = name;
  return context;
};

var context =
/*#__PURE__*/
createNamedContext("Router");

/**
 * The public API for putting history on context.
 */

var Router =
/*#__PURE__*/
function (_React$Component) {
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(Router, _React$Component);

  Router.computeRootMatch = function computeRootMatch(pathname) {
    return {
      path: "/",
      url: "/",
      params: {},
      isExact: pathname === "/"
    };
  };

  function Router(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.state = {
      location: props.history.location
    }; // This is a bit of a hack. We have to start listening for location
    // changes here in the constructor in case there are any <Redirect>s
    // on the initial render. If there are, they will replace/push when
    // they mount and since cDM fires in children before parents, we may
    // get a new location before the <Router> is mounted.

    _this._isMounted = false;
    _this._pendingLocation = null;

    if (!props.staticContext) {
      _this.unlisten = props.history.listen(function (location) {
        if (_this._isMounted) {
          _this.setState({
            location: location
          });
        } else {
          _this._pendingLocation = location;
        }
      });
    }

    return _this;
  }

  var _proto = Router.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this._isMounted = true;

    if (this._pendingLocation) {
      this.setState({
        location: this._pendingLocation
      });
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.unlisten) this.unlisten();
  };

  _proto.render = function render() {
    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Provider, {
      children: this.props.children || null,
      value: {
        history: this.props.history,
        location: this.state.location,
        match: Router.computeRootMatch(this.state.location.pathname),
        staticContext: this.props.staticContext
      }
    });
  };

  return Router;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  Router.propTypes = {
    children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node,
    history: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object.isRequired,
    staticContext: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object
  };

  Router.prototype.componentDidUpdate = function (prevProps) {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(prevProps.history === this.props.history, "You cannot change <Router history>") : void 0;
  };
}

/**
 * The public API for a <Router> that stores location in memory.
 */

var MemoryRouter =
/*#__PURE__*/
function (_React$Component) {
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(MemoryRouter, _React$Component);

  function MemoryRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_history__["d" /* createMemoryHistory */])(_this.props);
    return _this;
  }

  var _proto = MemoryRouter.prototype;

  _proto.render = function render() {
    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Router, {
      history: this.history,
      children: this.props.children
    });
  };

  return MemoryRouter;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  MemoryRouter.propTypes = {
    initialEntries: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.array,
    initialIndex: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number,
    getUserConfirmation: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
    keyLength: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number,
    children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node
  };

  MemoryRouter.prototype.componentDidMount = function () {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!this.props.history, "<MemoryRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { MemoryRouter as Router }`.") : void 0;
  };
}

var Lifecycle =
/*#__PURE__*/
function (_React$Component) {
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(Lifecycle, _React$Component);

  function Lifecycle() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Lifecycle.prototype;

  _proto.componentDidMount = function componentDidMount() {
    if (this.props.onMount) this.props.onMount.call(this, this);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.props.onUnmount) this.props.onUnmount.call(this, this);
  };

  _proto.render = function render() {
    return null;
  };

  return Lifecycle;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

/**
 * The public API for prompting the user before navigating away from a screen.
 */

function Prompt(_ref) {
  var message = _ref.message,
      _ref$when = _ref.when,
      when = _ref$when === void 0 ? true : _ref$when;
  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Consumer, null, function (context) {
    !context ? process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You should not use <Prompt> outside a <Router>") : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
    if (!when || context.staticContext) return null;
    var method = context.history.block;
    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Lifecycle, {
      onMount: function onMount(self) {
        self.release = method(message);
      },
      onUpdate: function onUpdate(self, prevProps) {
        if (prevProps.message !== message) {
          self.release();
          self.release = method(message);
        }
      },
      onUnmount: function onUnmount(self) {
        self.release();
      },
      message: message
    });
  });
}

if (process.env.NODE_ENV !== "production") {
  var messageType = __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string]);
  Prompt.propTypes = {
    when: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool,
    message: messageType.isRequired
  };
}

var cache = {};
var cacheLimit = 10000;
var cacheCount = 0;

function compilePath(path) {
  if (cache[path]) return cache[path];
  var generator = __WEBPACK_IMPORTED_MODULE_8_path_to_regexp___default.a.compile(path);

  if (cacheCount < cacheLimit) {
    cache[path] = generator;
    cacheCount++;
  }

  return generator;
}
/**
 * Public API for generating a URL pathname from a path and parameters.
 */


function generatePath(path, params) {
  if (path === void 0) {
    path = "/";
  }

  if (params === void 0) {
    params = {};
  }

  return path === "/" ? path : compilePath(path)(params, {
    pretty: true
  });
}

/**
 * The public API for navigating programmatically with a component.
 */

function Redirect(_ref) {
  var computedMatch = _ref.computedMatch,
      to = _ref.to,
      _ref$push = _ref.push,
      push = _ref$push === void 0 ? false : _ref$push;
  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Consumer, null, function (context) {
    !context ? process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You should not use <Redirect> outside a <Router>") : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
    var history = context.history,
        staticContext = context.staticContext;
    var method = push ? history.push : history.replace;
    var location = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_history__["c" /* createLocation */])(computedMatch ? typeof to === "string" ? generatePath(to, computedMatch.params) : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, to, {
      pathname: generatePath(to.pathname, computedMatch.params)
    }) : to); // When rendering in a static context,
    // set the new location immediately.

    if (staticContext) {
      method(location);
      return null;
    }

    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Lifecycle, {
      onMount: function onMount() {
        method(location);
      },
      onUpdate: function onUpdate(self, prevProps) {
        var prevLocation = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_history__["c" /* createLocation */])(prevProps.to);

        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_history__["e" /* locationsAreEqual */])(prevLocation, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, location, {
          key: prevLocation.key
        }))) {
          method(location);
        }
      },
      to: to
    });
  });
}

if (process.env.NODE_ENV !== "production") {
  Redirect.propTypes = {
    push: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool,
    from: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string,
    to: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object]).isRequired
  };
}

var cache$1 = {};
var cacheLimit$1 = 10000;
var cacheCount$1 = 0;

function compilePath$1(path, options) {
  var cacheKey = "" + options.end + options.strict + options.sensitive;
  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});
  if (pathCache[path]) return pathCache[path];
  var keys = [];
  var regexp = __WEBPACK_IMPORTED_MODULE_8_path_to_regexp___default()(path, keys, options);
  var result = {
    regexp: regexp,
    keys: keys
  };

  if (cacheCount$1 < cacheLimit$1) {
    pathCache[path] = result;
    cacheCount$1++;
  }

  return result;
}
/**
 * Public API for matching a URL pathname to a path.
 */


function matchPath(pathname, options) {
  if (options === void 0) {
    options = {};
  }

  if (typeof options === "string" || Array.isArray(options)) {
    options = {
      path: options
    };
  }

  var _options = options,
      path = _options.path,
      _options$exact = _options.exact,
      exact = _options$exact === void 0 ? false : _options$exact,
      _options$strict = _options.strict,
      strict = _options$strict === void 0 ? false : _options$strict,
      _options$sensitive = _options.sensitive,
      sensitive = _options$sensitive === void 0 ? false : _options$sensitive;
  var paths = [].concat(path);
  return paths.reduce(function (matched, path) {
    if (!path && path !== "") return null;
    if (matched) return matched;

    var _compilePath = compilePath$1(path, {
      end: exact,
      strict: strict,
      sensitive: sensitive
    }),
        regexp = _compilePath.regexp,
        keys = _compilePath.keys;

    var match = regexp.exec(pathname);
    if (!match) return null;
    var url = match[0],
        values = match.slice(1);
    var isExact = pathname === url;
    if (exact && !isExact) return null;
    return {
      path: path,
      // the path used to match
      url: path === "/" && url === "" ? "/" : url,
      // the matched portion of the URL
      isExact: isExact,
      // whether or not we matched exactly
      params: keys.reduce(function (memo, key, index) {
        memo[key.name] = values[index];
        return memo;
      }, {})
    };
  }, null);
}

function isEmptyChildren(children) {
  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.Children.count(children) === 0;
}

function evalChildrenDev(children, props, path) {
  var value = children(props);
  process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(value !== undefined, "You returned `undefined` from the `children` function of " + ("<Route" + (path ? " path=\"" + path + "\"" : "") + ">, but you ") + "should have returned a React element or `null`") : void 0;
  return value || null;
}
/**
 * The public API for matching a single path and rendering.
 */


var Route =
/*#__PURE__*/
function (_React$Component) {
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(Route, _React$Component);

  function Route() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Route.prototype;

  _proto.render = function render() {
    var _this = this;

    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Consumer, null, function (context$1) {
      !context$1 ? process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You should not use <Route> outside a <Router>") : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
      var location = _this.props.location || context$1.location;
      var match = _this.props.computedMatch ? _this.props.computedMatch // <Switch> already computed the match for us
      : _this.props.path ? matchPath(location.pathname, _this.props) : context$1.match;

      var props = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, context$1, {
        location: location,
        match: match
      });

      var _this$props = _this.props,
          children = _this$props.children,
          component = _this$props.component,
          render = _this$props.render; // Preact uses an empty array as children by
      // default, so use null if that's the case.

      if (Array.isArray(children) && children.length === 0) {
        children = null;
      }

      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Provider, {
        value: props
      }, props.match ? children ? typeof children === "function" ? process.env.NODE_ENV !== "production" ? evalChildrenDev(children, props, _this.props.path) : children(props) : children : component ? __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(component, props) : render ? render(props) : null : typeof children === "function" ? process.env.NODE_ENV !== "production" ? evalChildrenDev(children, props, _this.props.path) : children(props) : null);
    });
  };

  return Route;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  Route.propTypes = {
    children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node]),
    component: function component(props, propName) {
      if (props[propName] && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9_react_is__["isValidElementType"])(props[propName])) {
        return new Error("Invalid prop 'component' supplied to 'Route': the prop is not a valid React component");
      }
    },
    exact: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool,
    location: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object,
    path: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string)]),
    render: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
    sensitive: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool,
    strict: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool
  };

  Route.prototype.componentDidMount = function () {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.component), "You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored") : void 0;
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.render), "You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored") : void 0;
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(this.props.component && this.props.render), "You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored") : void 0;
  };

  Route.prototype.componentDidUpdate = function (prevProps) {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(this.props.location && !prevProps.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.') : void 0;
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(!this.props.location && prevProps.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.') : void 0;
  };
}

function addLeadingSlash(path) {
  return path.charAt(0) === "/" ? path : "/" + path;
}

function addBasename(basename, location) {
  if (!basename) return location;
  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, location, {
    pathname: addLeadingSlash(basename) + location.pathname
  });
}

function stripBasename(basename, location) {
  if (!basename) return location;
  var base = addLeadingSlash(basename);
  if (location.pathname.indexOf(base) !== 0) return location;
  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, location, {
    pathname: location.pathname.substr(base.length)
  });
}

function createURL(location) {
  return typeof location === "string" ? location : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_history__["f" /* createPath */])(location);
}

function staticHandler(methodName) {
  return function () {
     process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You cannot %s with <StaticRouter>", methodName) : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) ;
  };
}

function noop() {}
/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */


var StaticRouter =
/*#__PURE__*/
function (_React$Component) {
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(StaticRouter, _React$Component);

  function StaticRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.handlePush = function (location) {
      return _this.navigateTo(location, "PUSH");
    };

    _this.handleReplace = function (location) {
      return _this.navigateTo(location, "REPLACE");
    };

    _this.handleListen = function () {
      return noop;
    };

    _this.handleBlock = function () {
      return noop;
    };

    return _this;
  }

  var _proto = StaticRouter.prototype;

  _proto.navigateTo = function navigateTo(location, action) {
    var _this$props = this.props,
        _this$props$basename = _this$props.basename,
        basename = _this$props$basename === void 0 ? "" : _this$props$basename,
        _this$props$context = _this$props.context,
        context = _this$props$context === void 0 ? {} : _this$props$context;
    context.action = action;
    context.location = addBasename(basename, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_history__["c" /* createLocation */])(location));
    context.url = createURL(context.location);
  };

  _proto.render = function render() {
    var _this$props2 = this.props,
        _this$props2$basename = _this$props2.basename,
        basename = _this$props2$basename === void 0 ? "" : _this$props2$basename,
        _this$props2$context = _this$props2.context,
        context = _this$props2$context === void 0 ? {} : _this$props2$context,
        _this$props2$location = _this$props2.location,
        location = _this$props2$location === void 0 ? "/" : _this$props2$location,
        rest = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_10__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__["a" /* default */])(_this$props2, ["basename", "context", "location"]);

    var history = {
      createHref: function createHref(path) {
        return addLeadingSlash(basename + createURL(path));
      },
      action: "POP",
      location: stripBasename(basename, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_history__["c" /* createLocation */])(location)),
      push: this.handlePush,
      replace: this.handleReplace,
      go: staticHandler("go"),
      goBack: staticHandler("goBack"),
      goForward: staticHandler("goForward"),
      listen: this.handleListen,
      block: this.handleBlock
    };
    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Router, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, rest, {
      history: history,
      staticContext: context
    }));
  };

  return StaticRouter;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  StaticRouter.propTypes = {
    basename: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string,
    context: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object,
    location: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object])
  };

  StaticRouter.prototype.componentDidMount = function () {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!this.props.history, "<StaticRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { StaticRouter as Router }`.") : void 0;
  };
}

/**
 * The public API for rendering the first <Route> that matches.
 */

var Switch =
/*#__PURE__*/
function (_React$Component) {
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(Switch, _React$Component);

  function Switch() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Switch.prototype;

  _proto.render = function render() {
    var _this = this;

    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Consumer, null, function (context) {
      !context ? process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You should not use <Switch> outside a <Router>") : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
      var location = _this.props.location || context.location;
      var element, match; // We use React.Children.forEach instead of React.Children.toArray().find()
      // here because toArray adds keys to all child elements and we do not want
      // to trigger an unmount/remount for two <Route>s that render the same
      // component at different URLs.

      __WEBPACK_IMPORTED_MODULE_1_react___default.a.Children.forEach(_this.props.children, function (child) {
        if (match == null && __WEBPACK_IMPORTED_MODULE_1_react___default.a.isValidElement(child)) {
          element = child;
          var path = child.props.path || child.props.from;
          match = path ? matchPath(location.pathname, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, child.props, {
            path: path
          })) : context.match;
        }
      });
      return match ? __WEBPACK_IMPORTED_MODULE_1_react___default.a.cloneElement(element, {
        location: location,
        computedMatch: match
      }) : null;
    });
  };

  return Switch;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  Switch.propTypes = {
    children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node,
    location: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object
  };

  Switch.prototype.componentDidUpdate = function (prevProps) {
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(this.props.location && !prevProps.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.') : void 0;
    process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(!this.props.location && prevProps.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.') : void 0;
  };
}

/**
 * A public higher-order component to access the imperative API
 */

function withRouter(Component) {
  var displayName = "withRouter(" + (Component.displayName || Component.name) + ")";

  var C = function C(props) {
    var wrappedComponentRef = props.wrappedComponentRef,
        remainingProps = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_10__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__["a" /* default */])(props, ["wrappedComponentRef"]);

    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Consumer, null, function (context) {
      !context ? process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You should not use <" + displayName + " /> outside a <Router>") : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Component, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, remainingProps, context, {
        ref: wrappedComponentRef
      }));
    });
  };

  C.displayName = displayName;
  C.WrappedComponent = Component;

  if (process.env.NODE_ENV !== "production") {
    C.propTypes = {
      wrappedComponentRef: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object])
    };
  }

  return __WEBPACK_IMPORTED_MODULE_11_hoist_non_react_statics___default()(C, Component);
}

var useContext = __WEBPACK_IMPORTED_MODULE_1_react___default.a.useContext;
function useHistory() {
  if (process.env.NODE_ENV !== "production") {
    !(typeof useContext === "function") ? process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You must use React >= 16.8 in order to use useHistory()") : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
  }

  return useContext(context).history;
}
function useLocation() {
  if (process.env.NODE_ENV !== "production") {
    !(typeof useContext === "function") ? process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You must use React >= 16.8 in order to use useLocation()") : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
  }

  return useContext(context).location;
}
function useParams() {
  if (process.env.NODE_ENV !== "production") {
    !(typeof useContext === "function") ? process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You must use React >= 16.8 in order to use useParams()") : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
  }

  var match = useContext(context).match;
  return match ? match.params : {};
}
function useRouteMatch(path) {
  if (process.env.NODE_ENV !== "production") {
    !(typeof useContext === "function") ? process.env.NODE_ENV !== "production" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You must use React >= 16.8 in order to use useRouteMatch()") : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
  }

  return path ? matchPath(useLocation().pathname, path) : useContext(context).match;
}

if (process.env.NODE_ENV !== "production") {
  if (typeof window !== "undefined") {
    var global = window;
    var key = "__react_router_build__";
    var buildNames = {
      cjs: "CommonJS",
      esm: "ES modules",
      umd: "UMD"
    };

    if (global[key] && global[key] !== "esm") {
      var initialBuildName = buildNames[global[key]];
      var secondaryBuildName = buildNames["esm"]; // TODO: Add link to article that explains in detail how to avoid
      // loading 2 different builds.

      throw new Error("You are loading the " + secondaryBuildName + " build of React Router " + ("on a page that is already running the " + initialBuildName + " ") + "build, so things won't work right.");
    }

    global[key] = "esm";
  }
}


//# sourceMappingURL=react-router.js.map

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)))

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(381);
} else {
  module.exports = __webpack_require__(380);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(248);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(7)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(251);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(7)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 145 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 146 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = App;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(140);

var _styles = __webpack_require__(390);

var _styles2 = _interopRequireDefault(_styles);

var _nav = __webpack_require__(175);

var _nav2 = _interopRequireDefault(_nav);

var _permuteLastLayer = __webpack_require__(177);

var _permuteLastLayer2 = _interopRequireDefault(_permuteLastLayer);

var _bookmarks = __webpack_require__(168);

var _bookmarks2 = _interopRequireDefault(_bookmarks);

var _countdowns = __webpack_require__(169);

var _countdowns2 = _interopRequireDefault(_countdowns);

var _home = __webpack_require__(173);

var _home2 = _interopRequireDefault(_home);

var _weddingPhotos = __webpack_require__(184);

var _weddingPhotos2 = _interopRequireDefault(_weddingPhotos);

var _location = __webpack_require__(174);

var _location2 = _interopRequireDefault(_location);

var _flashCards = __webpack_require__(180);

var _flashCards2 = _interopRequireDefault(_flashCards);

var _evHelper = __webpack_require__(178);

var _evHelper2 = _interopRequireDefault(_evHelper);

var _spellBook = __webpack_require__(170);

var _spellBook2 = _interopRequireDefault(_spellBook);

var _test = __webpack_require__(183);

var _test2 = _interopRequireDefault(_test);

var _admin = __webpack_require__(167);

var _admin2 = _interopRequireDefault(_admin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var playing1157 = false;

var isIt1157 = function isIt1157() {
    var now = new Date();
    var hour = now.getHours() % 12;
    var minutes = now.getMinutes();
    var seconds = now.getSeconds();

    if (hour === 11 && minutes === 56 && seconds > 15) {
        !playing1157 && window.open('https://www.youtube.com/watch?v=ucmwSvy3Vlc', '_blank');
        playing1157 = true;
        return;
    }
    playing1157 = false;
};

setInterval(isIt1157, 1000);

function App() {
    return _react2.default.createElement(
        _reactRouterDom.BrowserRouter,
        null,
        _react2.default.createElement(
            'div',
            { className: _styles2.default.container },
            _react2.default.createElement(_nav2.default, null),
            _react2.default.createElement(
                'div',
                { className: _styles2.default.pageContent },
                _react2.default.createElement(
                    _reactRouterDom.Switch,
                    null,
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/weddingphotos' },
                        _react2.default.createElement(_weddingPhotos2.default, null)
                    ),
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/wedding' },
                        _react2.default.createElement(_weddingPhotos2.default, null)
                    ),
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/pll' },
                        _react2.default.createElement(_permuteLastLayer2.default, null)
                    ),
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/bookmarks' },
                        _react2.default.createElement(_bookmarks2.default, null)
                    ),
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/countdowns' },
                        _react2.default.createElement(_countdowns2.default, null)
                    ),
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/location' },
                        _react2.default.createElement(_location2.default, null)
                    ),
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/pokemon/evhelper' },
                        _react2.default.createElement(_evHelper2.default, null)
                    ),
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/pokemon/flashcards' },
                        _react2.default.createElement(_flashCards2.default, null)
                    ),
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/dnd/druidspellbook' },
                        _react2.default.createElement(_spellBook2.default, { casterClass: 'druid' })
                    ),
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/dnd/paladinspellbook' },
                        _react2.default.createElement(_spellBook2.default, { casterClass: 'paladin' })
                    ),
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/dnd/wizardspellbook' },
                        _react2.default.createElement(_spellBook2.default, { casterClass: 'wizard' })
                    ),
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/test' },
                        _react2.default.createElement(_test2.default, null)
                    ),
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/admin' },
                        _react2.default.createElement(_admin2.default, null)
                    ),
                    _react2.default.createElement(
                        _reactRouterDom.Route,
                        { path: '/' },
                        _react2.default.createElement(_home2.default, null)
                    )
                )
            )
        )
    );
}

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _axios = __webpack_require__(22);

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Add adminKey to request
_axios2.default.interceptors.request.use(function (config) {
    var adminKey = localStorage.getItem('adminKey');
    if (adminKey) {
        var headers = Object.assign(config.headers, {
            'x-admin-key': adminKey
        });

        return Object.assign(config, {
            headers: headers
        });
    }
    return config;
});

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (process.env.NODE_ENV === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(368);
} else {
  module.exports = __webpack_require__(367);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 150 */
/***/ (function(module, exports) {

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

module.exports = _inheritsLoose;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(5);
var bind = __webpack_require__(98);
var Axios = __webpack_require__(153);
var mergeConfig = __webpack_require__(96);
var defaults = __webpack_require__(97);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(93);
axios.CancelToken = __webpack_require__(152);
axios.isCancel = __webpack_require__(94);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(166);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(93);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(5);
var buildURL = __webpack_require__(99);
var InterceptorManager = __webpack_require__(154);
var dispatchRequest = __webpack_require__(156);
var mergeConfig = __webpack_require__(96);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(5);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isAbsoluteURL = __webpack_require__(162);
var combineURLs = __webpack_require__(160);

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(5);
var transformData = __webpack_require__(159);
var isCancel = __webpack_require__(94);
var defaults = __webpack_require__(97);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(95);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(5);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(5);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(5);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(5);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(5);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _regenerator = __webpack_require__(24);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(23);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(9);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(11);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(10);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _axios = __webpack_require__(22);

var _axios2 = _interopRequireDefault(_axios);

var _styles = __webpack_require__(383);

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Admin = function (_React$Component) {
    (0, _inherits3.default)(Admin, _React$Component);

    function Admin(props) {
        (0, _classCallCheck3.default)(this, Admin);

        var _this = (0, _possibleConstructorReturn3.default)(this, (Admin.__proto__ || Object.getPrototypeOf(Admin)).call(this, props));

        _this.state = {
            adminKey: ''
        };

        _this.adminKeyChangeHandler = _this.adminKeyChangeHandler.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(Admin, [{
        key: 'componentDidMount',
        value: function () {
            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
                return _regenerator2.default.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                this.setState({
                                    adminKey: localStorage.getItem('adminKey') || ''
                                });

                            case 1:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function componentDidMount() {
                return _ref.apply(this, arguments);
            }

            return componentDidMount;
        }()
    }, {
        key: 'adminKeyChangeHandler',
        value: function adminKeyChangeHandler(event) {
            var adminKey = event.target.value;
            this.setState({
                adminKey: adminKey
            });
            localStorage.setItem('adminKey', adminKey);
        }
    }, {
        key: 'render',
        value: function render() {
            var adminKey = this.state.adminKey;

            return _react2.default.createElement(
                'div',
                { className: _styles2.default.container },
                _react2.default.createElement(
                    'h2',
                    null,
                    'Admin Panel'
                ),
                _react2.default.createElement(
                    'label',
                    null,
                    'Admin Key:',
                    _react2.default.createElement('input', { value: adminKey, type: 'password', onChange: this.adminKeyChangeHandler })
                )
            );
        }
    }]);
    return Admin;
}(_react2.default.Component);

exports.default = Admin;

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _defineProperty2 = __webpack_require__(60);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _regenerator = __webpack_require__(24);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(23);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(9);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(11);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(10);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _axios = __webpack_require__(22);

var _axios2 = _interopRequireDefault(_axios);

var _classnames = __webpack_require__(25);

var _classnames2 = _interopRequireDefault(_classnames);

var _loading = __webpack_require__(58);

var _loading2 = _interopRequireDefault(_loading);

var _dom = __webpack_require__(102);

var _styles = __webpack_require__(384);

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Admin = function (_React$Component) {
    (0, _inherits3.default)(Admin, _React$Component);

    function Admin(props) {
        (0, _classCallCheck3.default)(this, Admin);

        var _this = (0, _possibleConstructorReturn3.default)(this, (Admin.__proto__ || Object.getPrototypeOf(Admin)).call(this, props));

        _this.state = {
            bookmarks: [],
            bookmarksFetched: false,
            visibleEditors: {}
        };

        _this.toggleEditor = _this.toggleEditor.bind(_this);
        _this.addBookmarkHandler = _this.addBookmarkHandler.bind(_this);
        _this.editBookmarkHandler = _this.editBookmarkHandler.bind(_this);
        _this.deleteBookmarkHandler = _this.deleteBookmarkHandler.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(Admin, [{
        key: 'componentDidMount',
        value: function () {
            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
                return _regenerator2.default.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                this.getBookmarks();

                            case 1:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function componentDidMount() {
                return _ref.apply(this, arguments);
            }

            return componentDidMount;
        }()
    }, {
        key: 'getBookmarks',
        value: function () {
            var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
                var res, bookmarks;
                return _regenerator2.default.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.setState({
                                    bookmarksFetched: false,
                                    visibleEditors: {}
                                });
                                _context2.next = 3;
                                return _axios2.default.get('api/bookmarks');

                            case 3:
                                res = _context2.sent;
                                bookmarks = res.data.bookmarks.sort(function (a, b) {
                                    return a.name.localeCompare(b.name);
                                });

                                this.setState({
                                    bookmarks: bookmarks,
                                    bookmarksFetched: true
                                });

                            case 6:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function getBookmarks() {
                return _ref2.apply(this, arguments);
            }

            return getBookmarks;
        }()
    }, {
        key: 'toggleEditor',
        value: function toggleEditor(id) {
            this.setState(function (prevState) {
                var visibleEditors = prevState.visibleEditors;

                return {
                    visibleEditors: Object.assign({}, visibleEditors, (0, _defineProperty3.default)({}, id, !visibleEditors[id]))
                };
            });
        }
    }, {
        key: 'addBookmarkHandler',
        value: function addBookmarkHandler(e) {
            var _this2 = this;

            var newBookmark = (0, _dom.getFormData)(e.target);
            e.target.reset();
            e.preventDefault();

            if (!newBookmark.name) {
                newBookmark.name = newBookmark.url.replace(/^https?:\/\//, '').replace(/\/$/, '');
            }

            this.setState({
                bookmarksFetched: false
            }, (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
                return _regenerator2.default.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                _context3.next = 2;
                                return _axios2.default.post('api/bookmarks', newBookmark);

                            case 2:
                                _this2.getBookmarks();

                            case 3:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, _this2);
            })));
        }
    }, {
        key: 'editBookmarkHandler',
        value: function editBookmarkHandler(e, id) {
            var _this3 = this;

            var updatedBookmark = (0, _dom.getFormData)(e.target);
            e.target.reset();
            e.preventDefault();
            this.setState({
                bookmarksFetched: false
            }, (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4() {
                return _regenerator2.default.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                _context4.next = 2;
                                return _axios2.default.put('api/bookmarks/' + id, updatedBookmark);

                            case 2:
                                _this3.getBookmarks();

                            case 3:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, _this3);
            })));
        }
    }, {
        key: 'deleteBookmarkHandler',
        value: function deleteBookmarkHandler(id) {
            var _this4 = this;

            this.setState({
                bookmarksFetched: false
            }, (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5() {
                return _regenerator2.default.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                _context5.next = 2;
                                return _axios2.default.delete('api/bookmarks/' + id);

                            case 2:
                                _this4.getBookmarks();

                            case 3:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, _this4);
            })));
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            var _state = this.state,
                bookmarks = _state.bookmarks,
                bookmarksFetched = _state.bookmarksFetched,
                visibleEditors = _state.visibleEditors;

            return _react2.default.createElement(
                'div',
                { className: _styles2.default.container },
                _react2.default.createElement(
                    'h2',
                    null,
                    'Bookmarks'
                ),
                _react2.default.createElement(
                    'form',
                    { className: _styles2.default.controls, onSubmit: this.addBookmarkHandler },
                    _react2.default.createElement('input', { type: 'text', name: 'url', placeholder: 'URL' }),
                    _react2.default.createElement('input', { type: 'text', name: 'name', placeholder: 'Name' }),
                    _react2.default.createElement(
                        'button',
                        { type: 'submit' },
                        _react2.default.createElement('i', { className: (0, _classnames2.default)('fa', 'fa-plus') })
                    )
                ),
                _react2.default.createElement('hr', null),
                bookmarksFetched ? _react2.default.createElement(
                    'div',
                    { className: _styles2.default.bookmarks },
                    bookmarks.length > 0 ? bookmarks.map(function (_ref6) {
                        var id = _ref6.id,
                            url = _ref6.url,
                            name = _ref6.name;
                        return _react2.default.createElement(
                            'div',
                            { className: _styles2.default.bookmarkRow, key: 'bookmark-' + id },
                            _react2.default.createElement(
                                'a',
                                { className: _styles2.default.fadeIn, href: url, target: '_blank' },
                                name
                            ),
                            _react2.default.createElement('i', {
                                className: (0, _classnames2.default)('fa', 'fa-pencil'),
                                role: 'button',
                                onClick: function onClick() {
                                    return _this5.toggleEditor(id);
                                }
                            }),
                            visibleEditors[id] && _react2.default.createElement(
                                'form',
                                {
                                    className: _styles2.default.controls,
                                    onSubmit: function onSubmit(e) {
                                        return _this5.editBookmarkHandler(e, id);
                                    }
                                },
                                _react2.default.createElement('input', { type: 'text', name: 'url', placeholder: 'New URL' }),
                                _react2.default.createElement('input', { type: 'text', name: 'name', placeholder: 'New Name' }),
                                _react2.default.createElement(
                                    'button',
                                    { type: 'submit' },
                                    _react2.default.createElement('i', { className: (0, _classnames2.default)('fa', 'fa-save') })
                                ),
                                _react2.default.createElement(
                                    'button',
                                    {
                                        type: 'button',
                                        onClick: function onClick() {
                                            return _this5.deleteBookmarkHandler(id);
                                        }
                                    },
                                    _react2.default.createElement('i', { className: (0, _classnames2.default)('fa', 'fa-trash') })
                                )
                            )
                        );
                    }) : _react2.default.createElement(
                        'div',
                        { className: _styles2.default.fadeIn },
                        'Nothing here!'
                    )
                ) : _react2.default.createElement(_loading2.default, null)
            );
        }
    }]);
    return Admin;
}(_react2.default.Component);

exports.default = Admin;

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _defineProperty2 = __webpack_require__(60);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _regenerator = __webpack_require__(24);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _toConsumableArray2 = __webpack_require__(105);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _asyncToGenerator2 = __webpack_require__(23);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(9);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(11);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(10);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _axios = __webpack_require__(22);

var _axios2 = _interopRequireDefault(_axios);

var _moment = __webpack_require__(392);

var _moment2 = _interopRequireDefault(_moment);

var _classnames = __webpack_require__(25);

var _classnames2 = _interopRequireDefault(_classnames);

var _loading = __webpack_require__(58);

var _loading2 = _interopRequireDefault(_loading);

var _anniversaryCountdown = __webpack_require__(100);

var _dom = __webpack_require__(102);

var _styles = __webpack_require__(385);

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getS = function getS(number) {
    return number === 1 ? '' : 's';
};

var getSize = function getSize(secondsLeft) {
    var maxSize = 10;
    var minSize = 1;
    var daysLeft = secondsLeft / 86400;
    var size = 20 - daysLeft;

    return Math.min(maxSize, Math.max(minSize, size));
};

var getStyleText = function getStyleText(secondsLeft) {
    return {
        fontSize: getSize(secondsLeft) + 'em'
    };
};

var getStyleText2 = function getStyleText2(secondsLeft) {
    var a = getSize(secondsLeft) / 2;

    return {
        fontSize: (a - 1) / 9 + 1 + 'em'
    };
};

var getStyleMargin = function getStyleMargin(secondsLeft) {
    var a = getSize(secondsLeft) - 1;

    return {
        margin: '0 0 -' + a / 5 + 'em'
    };
};

var Admin = function (_React$Component) {
    (0, _inherits3.default)(Admin, _React$Component);

    function Admin(props) {
        (0, _classCallCheck3.default)(this, Admin);

        var _this = (0, _possibleConstructorReturn3.default)(this, (Admin.__proto__ || Object.getPrototypeOf(Admin)).call(this, props));

        _this.state = {
            countdowns: [],
            countdownsFetched: false,
            visibleEditors: {}
        };

        _this.toggleEditor = _this.toggleEditor.bind(_this);
        _this.addCountdownHandler = _this.addCountdownHandler.bind(_this);
        _this.editCountdownHandler = _this.editCountdownHandler.bind(_this);
        _this.deleteCountdownHandler = _this.deleteCountdownHandler.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(Admin, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            this.getCountdowns();
            this.setState({
                updateTimerInterval: setInterval(function () {
                    _this2.updateTimers();
                }, 300)
            });
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            var updateTimerInterval = this.state.updateTimerInterval;

            clearInterval(updateTimerInterval);
        }
    }, {
        key: 'getCountdowns',
        value: function () {
            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
                var res, countdowns, temp, weddingAnniversaryCountdown;
                return _regenerator2.default.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                this.setState({
                                    countdownsFetched: false,
                                    visibleEditors: {}
                                });
                                _context.next = 3;
                                return _axios2.default.get('api/countdowns');

                            case 3:
                                res = _context.sent;
                                countdowns = res.data.countdowns;
                                temp = (0, _anniversaryCountdown.getNextAnniversary)();
                                weddingAnniversaryCountdown = {
                                    endTime: temp.date,
                                    id: 'wedding-anniversary',
                                    name: temp.ordinal + ' wedding anniversary'
                                };

                                this.setState({
                                    countdowns: [weddingAnniversaryCountdown].concat((0, _toConsumableArray3.default)(countdowns)),
                                    countdownsFetched: true
                                });

                            case 8:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function getCountdowns() {
                return _ref.apply(this, arguments);
            }

            return getCountdowns;
        }()
    }, {
        key: 'updateTimers',
        value: function updateTimers() {
            this.setState(function (state) {
                var countdowns = state.countdowns;

                var countdownsWithTimers = countdowns.map(function (countdown) {
                    var endTime = countdown.endTime;

                    var secondsLeft = (0, _moment2.default)(endTime).diff((0, _moment2.default)(), 'seconds');
                    var days = Math.floor(secondsLeft / 86400);
                    var hours = Math.abs(Math.floor(secondsLeft % 86400 / 3600));
                    var minutes = Math.abs(Math.floor(secondsLeft % 3600 / 60));
                    var seconds = Math.abs(Math.floor(secondsLeft % 60));

                    return Object.assign({}, countdown, {
                        days: days,
                        hours: hours,
                        minutes: minutes,
                        seconds: seconds,
                        secondsLeft: secondsLeft
                    });
                })
                // .filter(countdown => countdown.days > -5)
                .sort(function (a, b) {
                    return a.secondsLeft - b.secondsLeft;
                });

                return {
                    countdowns: countdownsWithTimers
                };
            });
        }
    }, {
        key: 'toggleEditor',
        value: function toggleEditor(id) {
            this.setState(function (prevState) {
                var visibleEditors = prevState.visibleEditors;

                return {
                    visibleEditors: Object.assign({}, visibleEditors, (0, _defineProperty3.default)({}, id, !visibleEditors[id]))
                };
            });
        }
    }, {
        key: 'addCountdownHandler',
        value: function addCountdownHandler(e) {
            var _this3 = this;

            var newCountdown = (0, _dom.getFormData)(e.target);
            e.target.reset();
            e.preventDefault();

            newCountdown.endTime = (0, _moment2.default)(newCountdown.endDate + ' ' + newCountdown.endTime).toISOString();

            if (!newCountdown.name) {
                return;
            }

            this.setState({
                countdownsFetched: false
            }, (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
                return _regenerator2.default.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                _context2.next = 2;
                                return _axios2.default.post('api/countdowns', newCountdown);

                            case 2:
                                _this3.getCountdowns();

                            case 3:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, _this3);
            })));
        }
    }, {
        key: 'editCountdownHandler',
        value: function editCountdownHandler(e, id) {
            var _this4 = this;

            var updatedCountdown = (0, _dom.getFormData)(e.target);
            e.target.reset();
            e.preventDefault();
            this.setState({
                countdownsFetched: false
            }, (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
                return _regenerator2.default.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                _context3.next = 2;
                                return _axios2.default.put('api/countdowns/' + id, updatedCountdown);

                            case 2:
                                _this4.getCountdowns();

                            case 3:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, _this4);
            })));
        }
    }, {
        key: 'deleteCountdownHandler',
        value: function deleteCountdownHandler(id) {
            var _this5 = this;

            this.setState({
                countdownsFetched: false
            }, (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4() {
                return _regenerator2.default.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                _context4.next = 2;
                                return _axios2.default.delete('api/countdowns/' + id);

                            case 2:
                                _this5.getCountdowns();

                            case 3:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, _this5);
            })));
        }
    }, {
        key: 'render',
        value: function render() {
            var _this6 = this;

            var _state = this.state,
                countdowns = _state.countdowns,
                countdownsFetched = _state.countdownsFetched,
                visibleEditors = _state.visibleEditors;

            return _react2.default.createElement(
                'div',
                { className: _styles2.default.container },
                _react2.default.createElement(
                    'h2',
                    null,
                    'Countdowns'
                ),
                _react2.default.createElement(
                    'form',
                    { className: _styles2.default.controls, onSubmit: this.addCountdownHandler },
                    _react2.default.createElement('input', { type: 'date', name: 'endDate', placeholder: 'End Date' }),
                    _react2.default.createElement('input', { type: 'time', name: 'endTime', placeholder: 'End Time', defaultValue: '17:00' }),
                    _react2.default.createElement('input', { type: 'text', name: 'name', placeholder: 'Name' }),
                    _react2.default.createElement(
                        'button',
                        { type: 'submit' },
                        _react2.default.createElement('i', { className: (0, _classnames2.default)('fa', 'fa-plus') })
                    )
                ),
                _react2.default.createElement('hr', null),
                countdownsFetched ? _react2.default.createElement(
                    'div',
                    { className: _styles2.default.countdowns },
                    countdowns.length > 0 ? countdowns.map(function (_ref5) {
                        var id = _ref5.id,
                            days = _ref5.days,
                            hours = _ref5.hours,
                            minutes = _ref5.minutes,
                            seconds = _ref5.seconds,
                            secondsLeft = _ref5.secondsLeft,
                            name = _ref5.name;
                        return days && _react2.default.createElement(
                            'div',
                            {
                                className: _styles2.default.countdownColumn,
                                key: 'countdown-' + id
                            },
                            _react2.default.createElement(
                                'div',
                                {
                                    className: (0, _classnames2.default)(_styles2.default.countdownTimer, (0, _defineProperty3.default)({}, _styles2.default.overdue, days < 0)),
                                    style: getStyleMargin(secondsLeft)
                                },
                                _react2.default.createElement(
                                    'span',
                                    { style: getStyleText(secondsLeft) },
                                    days
                                ),
                                _react2.default.createElement(
                                    'label',
                                    { style: getStyleText2(secondsLeft) },
                                    'd,\xA0'
                                ),
                                _react2.default.createElement(
                                    'span',
                                    { style: getStyleText(secondsLeft) },
                                    ('' + hours).padStart(2, '0')
                                ),
                                _react2.default.createElement(
                                    'label',
                                    { style: getStyleText2(secondsLeft) },
                                    'h,\xA0'
                                ),
                                _react2.default.createElement(
                                    'span',
                                    { style: getStyleText(secondsLeft) },
                                    ('' + minutes).padStart(2, '0')
                                ),
                                _react2.default.createElement(
                                    'label',
                                    { style: getStyleText2(secondsLeft) },
                                    'm,\xA0'
                                ),
                                _react2.default.createElement(
                                    'span',
                                    { style: getStyleText(secondsLeft) },
                                    ('' + seconds).padStart(2, '0')
                                ),
                                _react2.default.createElement(
                                    'label',
                                    { style: getStyleText2(secondsLeft) },
                                    's'
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                {
                                    className: _styles2.default.countdownRow,
                                    style: getStyleText2(secondsLeft)
                                },
                                _react2.default.createElement(
                                    'label',
                                    {
                                        className: (0, _classnames2.default)((0, _defineProperty3.default)({}, _styles2.default.overdue, days < 0))
                                    },
                                    name
                                ),
                                id > 0 && _react2.default.createElement(
                                    _react2.default.Fragment,
                                    null,
                                    _react2.default.createElement('i', {
                                        className: (0, _classnames2.default)('fa', 'fa-pencil'),
                                        role: 'button',
                                        onClick: function onClick() {
                                            return _this6.toggleEditor(id);
                                        }
                                    }),
                                    visibleEditors[id] && _react2.default.createElement(
                                        'form',
                                        {
                                            className: _styles2.default.controls,
                                            onSubmit: function onSubmit(e) {
                                                return _this6.editCountdownHandler(e, id);
                                            }
                                        },
                                        _react2.default.createElement('input', {
                                            type: 'date',
                                            name: 'endDate',
                                            placeholder: 'New End Date'
                                        }),
                                        _react2.default.createElement('input', {
                                            type: 'time',
                                            name: 'endTime',
                                            placeholder: 'New End Time'
                                        }),
                                        _react2.default.createElement('input', {
                                            type: 'text',
                                            name: 'name',
                                            placeholder: 'New Name'
                                        }),
                                        _react2.default.createElement(
                                            'button',
                                            { type: 'submit' },
                                            _react2.default.createElement('i', {
                                                className: (0, _classnames2.default)('fa', 'fa-save')
                                            })
                                        ),
                                        _react2.default.createElement(
                                            'button',
                                            {
                                                type: 'button',
                                                onClick: function onClick() {
                                                    return _this6.deleteCountdownHandler(id);
                                                }
                                            },
                                            _react2.default.createElement('i', {
                                                className: (0, _classnames2.default)('fa', 'fa-trash')
                                            })
                                        )
                                    )
                                )
                            )
                        );
                    }) : _react2.default.createElement(
                        'div',
                        { className: _styles2.default.fadeIn },
                        'Nothing here!'
                    )
                ) : _react2.default.createElement(_loading2.default, null)
            );
        }
    }]);
    return Admin;
}(_react2.default.Component);

exports.default = Admin;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _regenerator = __webpack_require__(24);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(23);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(9);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(11);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(10);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _axios = __webpack_require__(22);

var _axios2 = _interopRequireDefault(_axios);

var _classnames = __webpack_require__(25);

var _classnames2 = _interopRequireDefault(_classnames);

var _string = __webpack_require__(103);

var _styles = __webpack_require__(143);

var _styles2 = _interopRequireDefault(_styles);

var _spellCard = __webpack_require__(171);

var _spellCard2 = _interopRequireDefault(_spellCard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SpellBook = function (_React$Component) {
    (0, _inherits3.default)(SpellBook, _React$Component);

    function SpellBook(props) {
        (0, _classCallCheck3.default)(this, SpellBook);

        var _this = (0, _possibleConstructorReturn3.default)(this, (SpellBook.__proto__ || Object.getPrototypeOf(SpellBook)).call(this, props));

        _this.state = {
            spellInfo: {},
            isSpellInfoLoading: false,
            isSpellInfo2Loading: false,
            spellList: {},
            isSpellListLoading: false,
            chosenSpellLevel: null,
            chosenSpellId: null
        };
        return _this;
    }

    (0, _createClass3.default)(SpellBook, [{
        key: 'componentDidMount',
        value: function () {
            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
                return _regenerator2.default.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                this.fetchSpellInfo();
                                this.fetchSpellInfo2();
                                this.fetchSpellList();

                            case 3:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function componentDidMount() {
                return _ref.apply(this, arguments);
            }

            return componentDidMount;
        }()
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {
            var casterClass = this.props.casterClass;

            if (casterClass !== prevProps.casterClass) {
                this.fetchSpellList(casterClass);
            }
        }
    }, {
        key: 'fetchSpellInfo',
        value: function fetchSpellInfo() {
            var _this2 = this;

            this.setState({
                isSpellInfoLoading: true
            }, (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
                var res;
                return _regenerator2.default.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                _context2.next = 2;
                                return _axios2.default.get('/dnd-spells.json');

                            case 2:
                                res = _context2.sent;

                                _this2.setState(function (prevState) {
                                    var spellInfo = prevState.spellInfo;

                                    return {
                                        spellInfo: Object.assign({}, spellInfo, res.data),
                                        isSpellInfoLoading: false
                                    };
                                });

                            case 4:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, _this2);
            })));
        }
    }, {
        key: 'fetchSpellInfo2',
        value: function fetchSpellInfo2() {
            var _this3 = this;

            this.setState({
                isSpellInfo2Loading: true
            }, (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
                var res;
                return _regenerator2.default.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                _context3.next = 2;
                                return _axios2.default.get('/dnd-spells-2.json');

                            case 2:
                                res = _context3.sent;

                                _this3.setState(function (prevState) {
                                    var spellInfo = prevState.spellInfo;

                                    return {
                                        spellInfo: Object.assign({}, spellInfo, res.data),
                                        isSpellInfo2Loading: false
                                    };
                                });

                            case 4:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, _this3);
            })));
        }
    }, {
        key: 'fetchSpellList',
        value: function fetchSpellList() {
            var _this4 = this;

            var casterClass = this.props.casterClass;

            if (casterClass) {
                this.setState({
                    isSpellListLoading: true
                }, (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4() {
                    var res;
                    return _regenerator2.default.wrap(function _callee4$(_context4) {
                        while (1) {
                            switch (_context4.prev = _context4.next) {
                                case 0:
                                    _context4.next = 2;
                                    return _axios2.default.get('/dnd-' + casterClass + '-spell-list.json');

                                case 2:
                                    res = _context4.sent;

                                    _this4.setState({
                                        spellList: res.data,
                                        isSpellListLoading: false
                                    });

                                case 4:
                                case 'end':
                                    return _context4.stop();
                            }
                        }
                    }, _callee4, _this4);
                })));
            }
        }
    }, {
        key: 'getCurrentSpellList',
        value: function getCurrentSpellList() {
            var _state = this.state,
                chosenSpellLevel = _state.chosenSpellLevel,
                spellList = _state.spellList;

            if (chosenSpellLevel) {
                return spellList[chosenSpellLevel].sort();
            }
            return Object.values(spellList).reduce(function (p, spellSublist) {
                return p.concat(spellSublist);
            }, []).sort();
        }
    }, {
        key: 'spellLevelHandler',
        value: function spellLevelHandler(spellLevel) {
            this.setState(function (prevState) {
                if (prevState.chosenSpellLevel === spellLevel) {
                    return {
                        chosenSpellLevel: null
                    };
                }
                return {
                    chosenSpellLevel: spellLevel
                };
            });
        }
    }, {
        key: 'spellHandler',
        value: function spellHandler(spellId) {
            this.setState({
                chosenSpellId: spellId
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            var casterClass = this.props.casterClass;
            var _state2 = this.state,
                spellInfo = _state2.spellInfo,
                spellList = _state2.spellList,
                chosenSpellLevel = _state2.chosenSpellLevel,
                chosenSpellId = _state2.chosenSpellId,
                isSpellInfoLoading = _state2.isSpellInfoLoading,
                isSpellInfo2Loading = _state2.isSpellInfo2Loading,
                isSpellListLoading = _state2.isSpellListLoading;


            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'h2',
                    null,
                    (0, _string.capFirst)(casterClass),
                    ' Spell Book'
                ),
                isSpellInfoLoading || isSpellListLoading || isSpellInfo2Loading ? _react2.default.createElement(
                    'p',
                    null,
                    'Loading...'
                ) : _react2.default.createElement(
                    'div',
                    { className: _styles2.default.spellBook },
                    _react2.default.createElement(
                        'div',
                        { className: _styles2.default.spellLevels },
                        Object.keys(spellList).map(function (level) {
                            return _react2.default.createElement(
                                'button',
                                {
                                    key: casterClass + '-level-' + level,
                                    className: (0, _classnames2.default)(chosenSpellLevel === level && _styles2.default.selected),
                                    onClick: function onClick() {
                                        return _this5.spellLevelHandler(level);
                                    }
                                },
                                level === '0' ? 'Cantrips' : (0, _string.withOrdinalSuffix)(level) + '-level'
                            );
                        })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: _styles2.default.spellNames },
                        this.getCurrentSpellList().map(function (spellId) {
                            return _react2.default.createElement(
                                'button',
                                {
                                    key: casterClass + '-' + spellId + '}',
                                    className: (0, _classnames2.default)(chosenSpellId === spellId && _styles2.default.selected),
                                    onClick: function onClick() {
                                        return _this5.spellHandler(spellId);
                                    }
                                },
                                spellInfo[spellId] ? spellInfo[spellId].name : spellId
                            );
                        })
                    ),
                    _react2.default.createElement(
                        'div',
                        null,
                        spellInfo[chosenSpellId] ? _react2.default.createElement(_spellCard2.default, {
                            key: casterClass + '-' + chosenSpellId + '-card',
                            spell: spellInfo[chosenSpellId]
                        }) : _react2.default.createElement(
                            'h3',
                            null,
                            'Choose a spell.'
                        )
                    )
                )
            );
        }
    }]);
    return SpellBook;
}(_react2.default.Component);

exports.default = SpellBook;

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactMarkdown = __webpack_require__(557);

var _reactMarkdown2 = _interopRequireDefault(_reactMarkdown);

var _classnames = __webpack_require__(25);

var _classnames2 = _interopRequireDefault(_classnames);

var _string = __webpack_require__(103);

var _styles = __webpack_require__(143);

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SpellCard = function SpellCard(props) {
    var _props$spell = props.spell,
        name = _props$spell.name,
        school = _props$spell.school,
        level = _props$spell.level,
        castingTime = _props$spell.castingTime,
        range = _props$spell.range,
        components = _props$spell.components,
        materials = _props$spell.materials,
        duration = _props$spell.duration,
        durationConditions = _props$spell.durationConditions,
        description = _props$spell.description;

    return _react2.default.createElement(
        'div',
        { className: _styles2.default.spellCard },
        _react2.default.createElement(
            'h4',
            null,
            name
        ),
        level === 0 ? _react2.default.createElement(
            'p',
            { className: _styles2.default.spellLevel },
            (0, _string.capFirst)(school) + ' cantrip'
        ) : _react2.default.createElement(
            'p',
            { className: _styles2.default.spellLevel },
            (0, _string.withOrdinalSuffix)(level) + '-level ' + school
        ),
        _react2.default.createElement(
            'div',
            { className: _styles2.default.spellInfoGrid },
            _react2.default.createElement(
                'div',
                null,
                'Casting Time:'
            ),
            _react2.default.createElement(
                'div',
                null,
                castingTime
            ),
            _react2.default.createElement(
                'div',
                null,
                'Range:'
            ),
            _react2.default.createElement(
                'div',
                null,
                range
            ),
            _react2.default.createElement(
                'div',
                null,
                'Components:'
            ),
            _react2.default.createElement(
                'div',
                null,
                components
            ),
            _react2.default.createElement(
                'div',
                null,
                'Duration:'
            ),
            _react2.default.createElement(
                'div',
                null,
                duration
            )
        ),
        _react2.default.createElement(
            _reactMarkdown2.default,
            { className: _styles2.default.spellDescription },
            description
        )
    );
};

exports.default = SpellCard;

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _styles = __webpack_require__(386);

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Header = function Header() {
  return _react2.default.createElement(
    'div',
    { className: _styles2.default.container },
    'Sylvia & Nick'
  );
};

exports.default = Header;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _anniversaryCountdown = __webpack_require__(100);

var _anniversaryCountdown2 = _interopRequireDefault(_anniversaryCountdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Home = function Home() {
    return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(_anniversaryCountdown2.default, null)
    );
};

exports.default = Home;

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(9);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(11);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(10);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _haversine = __webpack_require__(186);

var _haversine2 = _interopRequireDefault(_haversine);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Location = function (_React$Component) {
    (0, _inherits3.default)(Location, _React$Component);

    function Location(props) {
        (0, _classCallCheck3.default)(this, Location);

        var _this = (0, _possibleConstructorReturn3.default)(this, (Location.__proto__ || Object.getPrototypeOf(Location)).call(this, props));

        _this.state = {
            geolocationWatchId: null,
            locationHistory: []
        };

        _this.addLocationToHistory = _this.addLocationToHistory.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(Location, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var geolocationWatchId = navigator.geolocation.watchPosition(this.addLocationToHistory);

            this.setState({
                geolocationWatchId: geolocationWatchId
            });
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            var geolocationWatchId = this.state.geolocationWatchId;

            if (geolocationWatchId !== null) {
                navigator.geolocation.clearWatch(geolocationWatchId);
            }
        }
    }, {
        key: 'addLocationToHistory',
        value: function addLocationToHistory(loc) {
            this.setState(function (state) {
                var locationHistory = state.locationHistory;

                return {
                    locationHistory: locationHistory.concat({
                        coords: {
                            lon: loc.coords.longitude,
                            lat: loc.coords.latitude
                        },
                        time: loc.timestamp
                    })
                };
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var locationHistory = this.state.locationHistory;


            var data = [];
            for (var i = 1; i < locationHistory.length; i++) {
                var location1 = locationHistory[i - 1];
                var location2 = locationHistory[i];
                var coords1 = location1.coords;
                var coords2 = location2.coords;

                var distance = (0, _haversine2.default)(coords1, coords2);

                var duration = (location2.time - location1.time) / 1000;
                var speed = distance / duration; // meters per second;

                if (duration > 0.5) {
                    data.push({
                        distance: distance,
                        time: location2.time,
                        duration: duration,
                        speed: speed
                    });
                }
            }

            data.reverse();
            var lastDatum = data[0];
            var totalDistance = data.map(function (d) {
                return d.distance;
            }).reduce(function (a, c) {
                return a + c;
            }, 0);

            return _react2.default.createElement(
                'div',
                null,
                lastDatum && _react2.default.createElement(
                    'h2',
                    null,
                    (lastDatum.speed * 3.6).toFixed(1) + ' km/h, ' + totalDistance.toFixed(1) + ' m'
                ),
                _react2.default.createElement(
                    'table',
                    null,
                    _react2.default.createElement(
                        'thead',
                        null,
                        _react2.default.createElement(
                            'tr',
                            null,
                            _react2.default.createElement(
                                'th',
                                null,
                                'Distance (m)'
                            ),
                            _react2.default.createElement(
                                'th',
                                null,
                                'Duration (s)'
                            ),
                            _react2.default.createElement(
                                'th',
                                null,
                                'Speed (m/s)'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'tbody',
                        null,
                        data.map(function (datum, i) {
                            return _react2.default.createElement(
                                'tr',
                                { key: '' + datum.time + i },
                                _react2.default.createElement(
                                    'td',
                                    null,
                                    datum.distance.toFixed(3)
                                ),
                                _react2.default.createElement(
                                    'td',
                                    null,
                                    datum.duration.toFixed(3)
                                ),
                                _react2.default.createElement(
                                    'td',
                                    null,
                                    datum.speed.toFixed(3)
                                )
                            );
                        })
                    )
                )
            );
        }
    }]);
    return Location;
}(_react2.default.Component);

exports.default = Location;

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _header = __webpack_require__(172);

var _header2 = _interopRequireDefault(_header);

var _navLink = __webpack_require__(176);

var _navLink2 = _interopRequireDefault(_navLink);

var _styles = __webpack_require__(144);

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Nav = function Nav() {
    return _react2.default.createElement(
        'div',
        { className: _styles2.default.navContainer },
        _react2.default.createElement(_header2.default, null),
        _react2.default.createElement(
            _navLink2.default,
            { icon: 'fa-home', to: '/', exact: true },
            'Home'
        ),
        _react2.default.createElement(
            _navLink2.default,
            { icon: 'fa-bell-o', to: '/wedding' },
            'Wedding Album'
        ),
        _react2.default.createElement(
            _navLink2.default,
            { icon: 'fa-camera-retro', to: '/wedding/photos', indentLevel: 1 },
            'Photos'
        ),
        _react2.default.createElement(
            _navLink.AdminNav,
            { icon: 'fa-bookmark-o', to: '/bookmarks' },
            'Bookmarks'
        ),
        _react2.default.createElement(
            _navLink.AdminNav,
            { icon: 'fa-clock-o', to: '/countdowns' },
            'Countdowns'
        ),
        _react2.default.createElement(
            _navLink2.default,
            { icon: 'fa-gamepad', to: '/pokemon/evhelper' },
            'EV Helper'
        ),
        _react2.default.createElement(
            _navLink2.default,
            { icon: 'fa-pencil', to: '/dnd/druidspellbook' },
            'Druid Spells'
        ),
        _react2.default.createElement(
            _navLink2.default,
            { icon: 'fa-pencil', to: '/dnd/paladinspellbook' },
            'Paladin Spells'
        ),
        _react2.default.createElement(
            _navLink.AdminNav,
            { icon: 'fa-pencil', to: '/dnd/wizardspellbook' },
            'Wizard Spells'
        ),
        _react2.default.createElement(
            _navLink2.default,
            { icon: 'fa-cube', to: '/pll' },
            'Rubik\'s Cube'
        ),
        _react2.default.createElement(
            _navLink2.default,
            { icon: 'fa-rotate-right', to: '/pll', indentLevel: 1 },
            'PLL Algorithms'
        ),
        _react2.default.createElement(
            _navLink.AdminNav,
            { icon: 'fa-tachometer', to: '/location' },
            'Location'
        )
    );
};

exports.default = Nav;

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AdminNav = undefined;

var _extends2 = __webpack_require__(197);

var _extends3 = _interopRequireDefault(_extends2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(140);

var _classnames = __webpack_require__(25);

var _classnames2 = _interopRequireDefault(_classnames);

var _objectWithoutProperties = __webpack_require__(187);

var _objectWithoutProperties2 = _interopRequireDefault(_objectWithoutProperties);

var _styles = __webpack_require__(144);

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var INDENT_PX = 10;

var hasAdminKey = function hasAdminKey() {
    return Boolean(localStorage.getItem('adminKey'));
};

var NavLink = function NavLink(props) {
    var _props$indentLevel = props.indentLevel,
        indentLevel = _props$indentLevel === undefined ? 0 : _props$indentLevel,
        icon = props.icon,
        children = props.children;

    var otherProps = (0, _objectWithoutProperties2.default)(props, ['indentLevel', 'icon', 'children']);
    var style = indentLevel ? {
        marginLeft: indentLevel * INDENT_PX + 'px',
        marginTop: '-4px'
    } : {};
    return _react2.default.createElement(
        _reactRouterDom.NavLink,
        (0, _extends3.default)({
            className: _styles2.default.navLink,
            activeClassName: _styles2.default.activeNavLink
        }, otherProps, {
            style: style
        }),
        _react2.default.createElement('i', { className: (0, _classnames2.default)(_styles2.default.navIcon, 'fa', icon) }),
        _react2.default.createElement(
            'span',
            { className: _styles2.default.navText },
            children
        )
    );
};

var AdminNav = exports.AdminNav = function AdminNav(props) {
    return hasAdminKey() ? NavLink(props) : null;
};

exports.default = NavLink;

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _styles = __webpack_require__(388);

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PLL_GFYCATS = {
    f: {
        probability: 4 / 72,
        gfycatId: 'MarvelousWelllitEthiopianwolf'
    },
    ga: {
        probability: 4 / 72,
        gfycatId: 'VapidSilkyAtlanticblackgoby'
    },
    gb: {
        probability: 4 / 72,
        gfycatId: 'IdleHollowCusimanse'
    },
    gc: {
        probability: 4 / 72,
        gfycatId: 'SomeEsteemedKinglet'
    },
    gd: {
        probability: 4 / 72,
        gfycatId: 'UnkemptForthrightChital'
    },
    ja: {
        probability: 4 / 72,
        gfycatId: 'CrazyCheerfulAyeaye'
    },
    na: {
        probability: 1 / 72,
        gfycatId: 'BriefDeadFlamingo'
    },
    nb: {
        probability: 1 / 72,
        gfycatId: 'SafeBarrenElephant'
    },
    ra: {
        probability: 4 / 72,
        gfycatId: 'ImportantOldfashionedAsiandamselfly'
    },
    rb: {
        probability: 4 / 72,
        gfycatId: 'TotalEntireFlyingfox'
    },
    ua: {
        probability: 4 / 72,
        gfycatId: 'SafeEssentialIaerismetalmark',
        alternatives: ['MildMarriedGuppy']
    },
    ub: {
        probability: 4 / 72,
        gfycatId: 'MediocreAffectionateGnatcatcher'
    },
    v: {
        probability: 4 / 72,
        gfycatId: 'FrightenedUniformHagfish'
    },
    y: {
        probability: 4 / 72,
        gfycatId: 'ShimmeringPleasingBabirusa'
    }
};

var PermuteLastLayerPage = function PermuteLastLayerPage() {
    return _react2.default.createElement(
        'div',
        { className: _styles2.default.container },
        _react2.default.createElement(
            'h1',
            null,
            'PLLs'
        ),
        _react2.default.createElement(
            'p',
            null,
            'Original videos',
            ' ',
            _react2.default.createElement(
                'a',
                { href: 'https://www.youtube.com/watch?v=JvqGU0UZPcE' },
                'Fast PLL Algorithms & Finger Tricks'
            ),
            ' ',
            'and ',
            _react2.default.createElement(
                'a',
                { href: 'https://www.youtube.com/watch?v=TWN9LNCHQY8' },
                'Alternative PLL Algorithms'
            ),
            ' ',
            'by ',
            _react2.default.createElement(
                'a',
                { href: 'https://www.youtube.com/channel/UCqTVfT9JQqhA6_Hi_h_h97Q' },
                'J Perm'
            ),
            '. Generated with ',
            _react2.default.createElement(
                'a',
                { href: 'https://gfycat.com/' },
                'gfycat'
            )
        ),
        _react2.default.createElement(
            'div',
            { className: _styles2.default.imageContainer },
            Object.keys(PLL_GFYCATS).sort().map(function (pll) {
                var gfycatId = PLL_GFYCATS[pll].gfycatId;

                return _react2.default.createElement('img', {
                    key: 'img-' + gfycatId,
                    src: 'https://thumbs.gfycat.com/' + gfycatId + '.webp',
                    className: _styles2.default.picture
                });
            })
        )
    );
};

exports.default = PermuteLastLayerPage;

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _defineProperty2 = __webpack_require__(60);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _regenerator = __webpack_require__(24);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(23);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(9);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(11);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(10);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _sortBy = __webpack_require__(357);

var _sortBy2 = _interopRequireDefault(_sortBy);

var _reverse = __webpack_require__(356);

var _reverse2 = _interopRequireDefault(_reverse);

var _chunk = __webpack_require__(350);

var _chunk2 = _interopRequireDefault(_chunk);

var _classnames = __webpack_require__(25);

var _classnames2 = _interopRequireDefault(_classnames);

var _utils = __webpack_require__(59);

var _yourPokemon = __webpack_require__(260);

var _yourPokemon2 = _interopRequireDefault(_yourPokemon);

var _opponents = __webpack_require__(259);

var _opponents2 = _interopRequireDefault(_opponents);

var _pokemonCard = __webpack_require__(181);

var _pokemonCard2 = _interopRequireDefault(_pokemonCard);

var _styles = __webpack_require__(55);

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var YOUR_LOCAL_STORAGE_KEY = 'ev_finder_your_pokemon';
var OPPONENT_LOCAL_STORAGE_KEY = 'ev_finder_opponent_pokemon';
var MAX_EVS = 508;

var ivs = {
    hp: 31,
    atk: 31,
    def: 31,
    spa: 31,
    spd: 31,
    spe: 31
};

var PokemonEVHelper = function (_React$Component) {
    (0, _inherits3.default)(PokemonEVHelper, _React$Component);

    function PokemonEVHelper(props) {
        (0, _classCallCheck3.default)(this, PokemonEVHelper);

        var _this = (0, _possibleConstructorReturn3.default)(this, (PokemonEVHelper.__proto__ || Object.getPrototypeOf(PokemonEVHelper)).call(this, props));

        var yourInput = localStorage.getItem(YOUR_LOCAL_STORAGE_KEY);
        var yourPokemon = JSON.parse(yourInput);
        var opponentInput = localStorage.getItem(OPPONENT_LOCAL_STORAGE_KEY);
        var opponents = JSON.parse(opponentInput);

        _this.state = {
            yourInput: yourInput || JSON.stringify(_yourPokemon2.default, null, '  '),
            yourError: null,
            yourPokemon: yourInput ? yourPokemon : _yourPokemon2.default,
            opponentInput: opponentInput || JSON.stringify(_opponents2.default, null, '  '),
            opponentError: null,
            opponents: opponentInput ? opponents : _opponents2.default,
            processed: false,
            processedBruteForce: false,
            progress: null,
            queue: [],
            results: [],
            defensiveEVSpreads50: [],
            outerSort: [],
            innerSort: []
        };

        _this.updateQueue = _this.updateQueue.bind(_this);
        _this.processQueueHandler = _this.processQueueHandler.bind(_this);
        _this.bruteForceHandler = _this.bruteForceHandler.bind(_this);
        _this.yourInputHandler = _this.yourInputHandler.bind(_this);
        _this.opponentInputHandler = _this.opponentInputHandler.bind(_this);
        _this.yourResetHandler = _this.yourResetHandler.bind(_this);
        _this.opponentResetHandler = _this.opponentResetHandler.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(PokemonEVHelper, [{
        key: 'componentDidMount',
        value: function () {
            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
                var res, defensiveEVSpreads50;
                return _regenerator2.default.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                this.updateQueue();
                                _context.next = 3;
                                return fetch('/defensive-ev-spreads-50.json');

                            case 3:
                                res = _context.sent;
                                _context.next = 6;
                                return res.json();

                            case 6:
                                defensiveEVSpreads50 = _context.sent;

                                this.setState({
                                    defensiveEVSpreads50: defensiveEVSpreads50
                                });

                            case 8:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function componentDidMount() {
                return _ref.apply(this, arguments);
            }

            return componentDidMount;
        }()
    }, {
        key: 'updateQueue',
        value: function updateQueue() {
            var bruteForce = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
            var _state = this.state,
                yourPokemon = _state.yourPokemon,
                opponents = _state.opponents;

            var queue = (0, _utils.getCalcQueue)(yourPokemon, opponents);
            this.setState({
                processed: false,
                processedBruteForce: false,
                queue: queue
            });
        }
    }, {
        key: 'processQueueHandler',
        value: function processQueueHandler() {
            var _state2 = this.state,
                queue = _state2.queue,
                _state2$yourPokemon = _state2.yourPokemon,
                nature = _state2$yourPokemon.nature,
                evs = _state2$yourPokemon.evs;


            this.setState({
                processed: true,
                results: [{
                    evSpreadName: nature + ' ' + evs.hp + '/' + evs.atk + '/' + evs.def + '/' + evs.spa + '/' + evs.spd + '/' + evs.spe,
                    calculations: (0, _utils.processQueue)(queue)
                }]
            });
        }
    }, {
        key: 'bruteForceHandler',
        value: function () {
            var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
                var _this2 = this;

                var _state3, queue, yourPokemon, opponents, defensiveEVSpreads50, goodResults, evChunks, start;

                return _regenerator2.default.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                _state3 = this.state, queue = _state3.queue, yourPokemon = _state3.yourPokemon, opponents = _state3.opponents, defensiveEVSpreads50 = _state3.defensiveEVSpreads50;
                                goodResults = [];
                                evChunks = (0, _chunk2.default)(defensiveEVSpreads50, Math.max(5, 1000 / queue.length));
                                start = new Date();
                                _context2.next = 6;
                                return evChunks.reduce(function (p, chunk, i) {
                                    return p.then(function () {
                                        return new Promise(function (resolve) {
                                            var progress = i / evChunks.length;
                                            var now = new Date();
                                            var elapsed = now - start;
                                            var estimate = elapsed / progress;
                                            _this2.setState({
                                                progress: 'Progress: ' + (i / evChunks.length * 100).toFixed(1) + '%. Elapsed: ' + (elapsed / 1000).toFixed(0) + ' seconds. Estimate: ' + (estimate / 1000).toFixed(0) + ' seconds.'
                                            });
                                            var _iteratorNormalCompletion = true;
                                            var _didIteratorError = false;
                                            var _iteratorError = undefined;

                                            try {
                                                for (var _iterator = chunk[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                                                    var evs = _step.value;

                                                    var total = (0, _utils.getTotalEVs)(evs);
                                                    var spare = MAX_EVS - total;
                                                    var tempPokemon = Object.assign({}, yourPokemon, {
                                                        display: yourPokemon.species + ' ' + yourPokemon.evs.nature + ' ' + evs.hp + '/x/' + evs.def + '/x/' + evs.spd + '/x',
                                                        evs: Object.assign({}, evs, { nature: yourPokemon.evs.nature })
                                                    });
                                                    var calculations = (0, _utils.processQueue2)(tempPokemon, opponents);
                                                    var a = calculations.reduce(function (p, calc) {
                                                        return p + calc.koChance;
                                                    }, 0);
                                                    var averageKoChance = a / calculations.length;
                                                    goodResults.push({
                                                        evSpreadName: yourPokemon.species + ' ' + yourPokemon.evs.nature + ' ' + evs.hp + '/x/' + evs.def + '/x/' + evs.spd + '/x KOs: ' + averageKoChance + ' Spare: ' + spare,
                                                        calculations: calculations,
                                                        averageKoChance: averageKoChance,
                                                        averageKoChanceR: -averageKoChance,
                                                        spare: spare,
                                                        spareR: -spare,
                                                        hp: evs.hp,
                                                        hpR: -evs.hp
                                                    });
                                                }
                                            } catch (err) {
                                                _didIteratorError = true;
                                                _iteratorError = err;
                                            } finally {
                                                try {
                                                    if (!_iteratorNormalCompletion && _iterator.return) {
                                                        _iterator.return();
                                                    }
                                                } finally {
                                                    if (_didIteratorError) {
                                                        throw _iteratorError;
                                                    }
                                                }
                                            }

                                            setTimeout(resolve, 10);
                                        });
                                    });
                                }, Promise.resolve());

                            case 6:
                                this.setState({
                                    processedBruteForce: true,
                                    progress: null,
                                    results: goodResults
                                });

                            case 7:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function bruteForceHandler() {
                return _ref2.apply(this, arguments);
            }

            return bruteForceHandler;
        }()
    }, {
        key: 'yourInputHandler',
        value: function yourInputHandler(event) {
            var _this3 = this;

            this.setState({
                yourInput: event.target.value
            });
            try {
                var yourPokemon = JSON.parse(event.target.value);
                this.setState({
                    yourPokemon: yourPokemon,
                    yourError: null
                }, function () {
                    try {
                        _this3.updateQueue();
                        localStorage.setItem(YOUR_LOCAL_STORAGE_KEY, JSON.stringify(yourPokemon, null, '  '));
                    } catch (err) {
                        _this3.setState({
                            yourError: '' + err
                        });
                    }
                });
            } catch (err) {
                this.setState({
                    yourError: '' + err
                });
            }
        }
    }, {
        key: 'yourResetHandler',
        value: function yourResetHandler() {
            if (confirm('Reset your Rokemon?')) {
                this.setState({
                    yourInput: JSON.stringify(_yourPokemon2.default, null, '  '),
                    yourError: null,
                    yourPokemon: _yourPokemon2.default
                }, this.updateQueue);
                localStorage.removeItem(YOUR_LOCAL_STORAGE_KEY);
            }
        }
    }, {
        key: 'opponentInputHandler',
        value: function opponentInputHandler(event) {
            var _this4 = this;

            this.setState({
                opponentInput: event.target.value
            });
            try {
                var opponents = JSON.parse(event.target.value);
                this.setState({
                    opponents: opponents,
                    opponentError: null
                }, function () {
                    try {
                        _this4.updateQueue();
                        localStorage.setItem(OPPONENT_LOCAL_STORAGE_KEY, JSON.stringify(opponents, null, '  '));
                    } catch (err) {
                        _this4.setState({
                            opponentError: '' + err
                        });
                    }
                });
            } catch (err) {
                this.setState({
                    opponentError: '' + err
                });
            }
        }
    }, {
        key: 'opponentResetHandler',
        value: function opponentResetHandler() {
            if (confirm('Reset your opponents?')) {
                this.setState({
                    opponentInput: JSON.stringify(_opponents2.default, null, '  '),
                    opponentError: null,
                    opponents: _opponents2.default
                }, this.updateQueue);
                localStorage.removeItem(OPPONENT_LOCAL_STORAGE_KEY);
            }
        }
    }, {
        key: 'makeSortHandler',
        value: function makeSortHandler(property, sortControl) {
            var _this5 = this;

            return function (event) {
                if (event.target.checked) {
                    _this5.setState(function (prevState) {
                        return (0, _defineProperty3.default)({}, sortControl, prevState[sortControl].concat([property]));
                    });
                    return;
                }
                _this5.setState(function (prevState) {
                    return (0, _defineProperty3.default)({}, sortControl, prevState[sortControl].filter(function (a) {
                        return a !== property;
                    }));
                });
            };
        }
    }, {
        key: 'render',
        value: function render() {
            var _state4 = this.state,
                processed = _state4.processed,
                processedBruteForce = _state4.processedBruteForce,
                progress = _state4.progress,
                queue = _state4.queue,
                results = _state4.results,
                yourPokemon = _state4.yourPokemon,
                yourInput = _state4.yourInput,
                yourError = _state4.yourError,
                opponentInput = _state4.opponentInput,
                opponentError = _state4.opponentError,
                defensiveEVSpreads50 = _state4.defensiveEVSpreads50,
                outerSort = _state4.outerSort,
                innerSort = _state4.innerSort;

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: _styles2.default.evSpreadContainer },
                    _react2.default.createElement(
                        'div',
                        { className: _styles2.default.evSpreadColumn },
                        _react2.default.createElement(
                            'h2',
                            null,
                            'Pokemon EV Helper'
                        ),
                        _react2.default.createElement(
                            'div',
                            null,
                            'Simulation controls go here.'
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: _styles2.default.buttonRow },
                            _react2.default.createElement(
                                'button',
                                {
                                    disabled: processed,
                                    onClick: this.processQueueHandler
                                },
                                'Process ' + queue.length
                            ),
                            _react2.default.createElement(
                                'button',
                                {
                                    disabled: processedBruteForce,
                                    onClick: this.bruteForceHandler
                                },
                                'Brute Force ' + queue.length * defensiveEVSpreads50.length
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            null,
                            'Outer Sort: ' + outerSort.join(', ')
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: _styles2.default.sortControls },
                            _react2.default.createElement(
                                'div',
                                { className: _styles2.default.sortControl },
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    'Average KO'
                                ),
                                _react2.default.createElement('input', {
                                    type: 'checkbox',
                                    onChange: this.makeSortHandler('averageKoChance', 'outerSort'),
                                    checked: outerSort.includes('averageKoChance')
                                }),
                                _react2.default.createElement('input', {
                                    type: 'checkbox',
                                    onChange: this.makeSortHandler('averageKoChanceR', 'outerSort'),
                                    checked: outerSort.includes('averageKoChanceR')
                                })
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: _styles2.default.sortControl },
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    'HP EV'
                                ),
                                _react2.default.createElement('input', {
                                    type: 'checkbox',
                                    onChange: this.makeSortHandler('hp', 'outerSort'),
                                    checked: outerSort.includes('hp')
                                }),
                                _react2.default.createElement('input', {
                                    type: 'checkbox',
                                    onChange: this.makeSortHandler('hpR', 'outerSort'),
                                    checked: outerSort.includes('hpR')
                                })
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: _styles2.default.sortControl },
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    'Spare EVs'
                                ),
                                _react2.default.createElement('input', {
                                    type: 'checkbox',
                                    onChange: this.makeSortHandler('spare', 'outerSort'),
                                    checked: outerSort.includes('spare')
                                }),
                                _react2.default.createElement('input', {
                                    type: 'checkbox',
                                    onChange: this.makeSortHandler('spareR', 'outerSort'),
                                    checked: outerSort.includes('spareR')
                                })
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            null,
                            ' Inner Sort: ' + innerSort.join(', ')
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: _styles2.default.sortControls },
                            _react2.default.createElement(
                                'div',
                                { className: _styles2.default.sortControl },
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    'OHKO Chance'
                                ),
                                _react2.default.createElement('input', {
                                    type: 'checkbox',
                                    onChange: this.makeSortHandler('koChance', 'innerSort'),
                                    checked: innerSort.includes('koChance')
                                }),
                                _react2.default.createElement('input', {
                                    type: 'checkbox',
                                    onChange: this.makeSortHandler('koChanceR', 'innerSort'),
                                    checked: innerSort.includes('koChanceR')
                                })
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: _styles2.default.sortControl },
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    'Max Damage'
                                ),
                                _react2.default.createElement('input', {
                                    type: 'checkbox',
                                    onChange: this.makeSortHandler('maxDamage', 'innerSort'),
                                    checked: innerSort.includes('maxDamage')
                                }),
                                _react2.default.createElement('input', {
                                    type: 'checkbox',
                                    onChange: this.makeSortHandler('maxDamageR', 'innerSort'),
                                    checked: innerSort.includes('maxDamageR')
                                })
                            )
                        ),
                        progress && _react2.default.createElement(
                            'div',
                            { style: { whiteSpace: 'pre' } },
                            progress
                        ),
                        results.length > 0 && (0, _sortBy2.default)(results, outerSort).slice(0, 50).map(function (result) {
                            return _react2.default.createElement(
                                'div',
                                { key: result.evSpreadName },
                                _react2.default.createElement(
                                    'label',
                                    null,
                                    result.evSpreadName
                                ),
                                _react2.default.createElement(
                                    'table',
                                    { className: _styles2.default.damageResult },
                                    _react2.default.createElement(
                                        'thead',
                                        null,
                                        _react2.default.createElement(
                                            'tr',
                                            null,
                                            _react2.default.createElement(
                                                'th',
                                                { className: _styles2.default.left },
                                                'Calc'
                                            ),
                                            _react2.default.createElement(
                                                'th',
                                                null,
                                                'OHKO %'
                                            ),
                                            _react2.default.createElement(
                                                'th',
                                                null,
                                                'Max Damage'
                                            )
                                        )
                                    ),
                                    _react2.default.createElement(
                                        'tbody',
                                        null,
                                        (0, _sortBy2.default)(result.calculations.filter(function (a) {
                                            return a.maxDamage > 0;
                                        }), innerSort).slice(0, processedBruteForce ? 10 : -1).map(function (_ref5) {
                                            var display = _ref5.display,
                                                koChance = _ref5.koChance,
                                                maxDamage = _ref5.maxDamage,
                                                hp = _ref5.hp;

                                            return _react2.default.createElement(
                                                'tr',
                                                { key: display },
                                                _react2.default.createElement(
                                                    'td',
                                                    { className: _styles2.default.left },
                                                    display
                                                ),
                                                _react2.default.createElement(
                                                    'td',
                                                    null,
                                                    koChance * 100 + '%'
                                                ),
                                                _react2.default.createElement(
                                                    'td',
                                                    null,
                                                    maxDamage + ' / ' + hp
                                                )
                                            );
                                        })
                                    )
                                )
                            );
                        })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: (0, _classnames2.default)(_styles2.default.evSpreadColumn, _styles2.default.fullHeight) },
                        _react2.default.createElement(
                            'p',
                            { className: _styles2.default.notes },
                            'Pokedex and moves from',
                            ' ',
                            _react2.default.createElement(
                                'a',
                                { href: 'https://github.com/smogon/pokemon-showdown', target: '_blank' },
                                'Pokemon Showdown'
                            ),
                            ', damage calculation from',
                            ' ',
                            _react2.default.createElement(
                                'a',
                                {
                                    href: 'https://github.com/jake-white/VGC-Damage-Calculator',
                                    target: '_blank'
                                },
                                'Trainer Tower\'s damage calculator'
                            )
                        ),
                        _react2.default.createElement(
                            'label',
                            null,
                            'Your Pokemon',
                            _react2.default.createElement(
                                'button',
                                { onClick: this.yourResetHandler },
                                'Reset'
                            )
                        ),
                        _react2.default.createElement('textarea', {
                            className: _styles2.default.yourInput,
                            onChange: this.yourInputHandler,
                            value: yourInput
                        }),
                        yourError && _react2.default.createElement(
                            'div',
                            null,
                            yourError
                        ),
                        _react2.default.createElement('hr', null),
                        _react2.default.createElement(
                            'label',
                            null,
                            'Opponents',
                            _react2.default.createElement(
                                'button',
                                { onClick: this.opponentResetHandler },
                                'Reset'
                            )
                        ),
                        _react2.default.createElement('textarea', {
                            className: _styles2.default.opponentInput,
                            onChange: this.opponentInputHandler,
                            value: opponentInput
                        }),
                        opponentError && _react2.default.createElement(
                            'div',
                            null,
                            opponentError
                        )
                    )
                )
            );
        }
    }]);
    return PokemonEVHelper;
}(_react2.default.Component);

exports.default = PokemonEVHelper;

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _styles = __webpack_require__(55);

var _styles2 = _interopRequireDefault(_styles);

var _types = __webpack_require__(88);

var _types2 = _interopRequireDefault(_types);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FlashCard = function FlashCard(_ref) {
    var aType = _ref.aType,
        dType = _ref.dType,
        answer = _ref.answer,
        answerHandler = _ref.answerHandler;

    return _react2.default.createElement(
        'div',
        { className: _styles2.default.cardContainer },
        _react2.default.createElement(
            'div',
            { className: _styles2.default.question },
            _react2.default.createElement(
                'table',
                null,
                _react2.default.createElement(
                    'thead',
                    null,
                    _react2.default.createElement(
                        'tr',
                        null,
                        _react2.default.createElement(
                            'th',
                            null,
                            'Attacker'
                        ),
                        _react2.default.createElement(
                            'th',
                            null,
                            'Defender'
                        )
                    )
                ),
                _react2.default.createElement(
                    'tbody',
                    null,
                    _react2.default.createElement(
                        'tr',
                        null,
                        _react2.default.createElement(
                            'td',
                            { className: _types2.default[aType] },
                            aType
                        ),
                        _react2.default.createElement(
                            'td',
                            { className: _types2.default[dType] },
                            dType
                        )
                    )
                )
            )
        ),
        _react2.default.createElement(
            'div',
            { className: _styles2.default.answer },
            _react2.default.createElement(
                'table',
                null,
                _react2.default.createElement(
                    'tbody',
                    null,
                    _react2.default.createElement(
                        'tr',
                        null,
                        _react2.default.createElement(
                            'td',
                            null,
                            _react2.default.createElement(
                                'button',
                                null,
                                '1'
                            )
                        ),
                        _react2.default.createElement(
                            'td',
                            null,
                            _react2.default.createElement(
                                'button',
                                null,
                                '2'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'tr',
                        null,
                        _react2.default.createElement(
                            'td',
                            null,
                            _react2.default.createElement(
                                'button',
                                null,
                                '0.5'
                            )
                        ),
                        _react2.default.createElement(
                            'td',
                            null,
                            _react2.default.createElement(
                                'button',
                                null,
                                '0'
                            )
                        )
                    )
                )
            )
        )
    );
};

exports.default = FlashCard;

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(9);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(11);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(10);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _typeInfo = __webpack_require__(76);

var _typeInfo2 = _interopRequireDefault(_typeInfo);

var _flashCard = __webpack_require__(179);

var _flashCard2 = _interopRequireDefault(_flashCard);

var _utils = __webpack_require__(59);

var _styles = __webpack_require__(55);

var _styles2 = _interopRequireDefault(_styles);

var _types = __webpack_require__(88);

var _types2 = _interopRequireDefault(_types);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PokemonFlashCards = function (_React$Component) {
    (0, _inherits3.default)(PokemonFlashCards, _React$Component);

    function PokemonFlashCards(props) {
        (0, _classCallCheck3.default)(this, PokemonFlashCards);

        var _this = (0, _possibleConstructorReturn3.default)(this, (PokemonFlashCards.__proto__ || Object.getPrototypeOf(PokemonFlashCards)).call(this, props));

        _this.state = {};
        return _this;
    }

    (0, _createClass3.default)(PokemonFlashCards, [{
        key: 'render',
        value: function render() {
            var order = _typeInfo2.default.order,
                types = _typeInfo2.default.types;

            return _react2.default.createElement(
                'div',
                null,
                order.map(function (type) {
                    return _react2.default.createElement(_flashCard2.default, { key: 'card-' + type, aType: type, dType: type });
                })
            );
        }
    }]);
    return PokemonFlashCards;
}(_react2.default.Component);

exports.default = PokemonFlashCards;

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _typeInfo = __webpack_require__(76);

var _typeInfo2 = _interopRequireDefault(_typeInfo);

var _pokedex = __webpack_require__(101);

var _utils = __webpack_require__(59);

var _styles = __webpack_require__(55);

var _styles2 = _interopRequireDefault(_styles);

var _types = __webpack_require__(88);

var _types2 = _interopRequireDefault(_types);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var statNames = ['HP', 'Atk', 'Def', 'SpA', 'SpD', 'Spe'];

var capitalizeFirstLetter = function capitalizeFirstLetter(string) {
    return string.toLocaleLowerCase('en').charAt(0).toLocaleUpperCase('en') + string.slice(1);
};

var evDisplay = function evDisplay(evs) {
    return statNames.map(function (statName) {
        return evs[statName.toLocaleLowerCase('en')] > 0 && statName + ' ' + evs[statName.toLocaleLowerCase('en')];
    }).filter(function (a) {
        return a;
    }).join(' / ');
};

var PokemonCard = function PokemonCard(props) {
    var pokemon = props.pokemon,
        _props$showControls = props.showControls,
        showControls = _props$showControls === undefined ? false : _props$showControls;
    var species = pokemon.species,
        ivs = pokemon.ivs,
        evs = pokemon.evs,
        item = pokemon.item,
        ability = pokemon.ability,
        moves = pokemon.moves,
        _pokemon$level = pokemon.level,
        level = _pokemon$level === undefined ? 50 : _pokemon$level;


    try {
        var dex = _pokedex.BattlePokedex[species.toLocaleLowerCase('en')];
        var finalStats = (0, _utils.getFinalStats)(pokemon);

        return _react2.default.createElement(
            'div',
            { className: _styles2.default.pokemonCard },
            _react2.default.createElement(
                'div',
                null,
                dex.species + ' @ ' + (item || 'No Item')
            ),
            _react2.default.createElement(
                'div',
                null,
                'Ability: ' + ability
            ),
            _react2.default.createElement(
                'div',
                null,
                'Level: ' + level
            ),
            _react2.default.createElement(
                'div',
                null,
                'EVs: ' + evDisplay(evs)
            ),
            _react2.default.createElement(
                'div',
                null,
                capitalizeFirstLetter(evs.nature) + ' Nature'
            ),
            moves.map(function (move) {
                return _react2.default.createElement(
                    'div',
                    { key: species + '-' + move },
                    '- ' + move
                );
            })
        );
    } catch (e) {
        return _react2.default.createElement(
            'div',
            { className: _styles2.default.pokemonCard },
            'There\'s a problem with your pokemon.'
        );
    }
};

exports.default = PokemonCard;

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*

List of flags and their descriptions:

authentic: Ignores a target's substitute.
bite: Power is multiplied by 1.5 when used by a Pokemon with the Strong Jaw Ability.
bullet: Has no effect on Pokemon with the Bulletproof Ability.
charge: The user is unable to make a move between turns.
contact: Makes contact.
dance: When used by a Pokemon, other Pokemon with the Dancer Ability can attempt to execute the same move.
defrost: Thaws the user if executed successfully while the user is frozen.
distance: Can target a Pokemon positioned anywhere in a Triple Battle.
gravity: Prevented from being executed or selected during Gravity's effect.
heal: Prevented from being executed or selected during Heal Block's effect.
mirror: Can be copied by Mirror Move.
mystery: Unknown effect.
nonsky: Prevented from being executed or selected in a Sky Battle.
powder: Has no effect on Grass-type Pokemon, Pokemon with the Overcoat Ability, and Pokemon holding Safety Goggles.
protect: Blocked by Detect, Protect, Spiky Shield, and if not a Status move, King's Shield.
pulse: Power is multiplied by 1.5 when used by a Pokemon with the Mega Launcher Ability.
punch: Power is multiplied by 1.2 when used by a Pokemon with the Iron Fist Ability.
recharge: If this move is successful, the user must recharge on the following turn and cannot make a move.
reflectable: Bounced back to the original user by Magic Coat or the Magic Bounce Ability.
snatch: Can be stolen from the original user and instead used by another Pokemon using Snatch.
sound: Has no effect on Pokemon with the Soundproof Ability.

*//**@type {{[k: string]: MoveData}} */var _slicedToArray2=__webpack_require__(198);var _slicedToArray3=_interopRequireDefault(_slicedToArray2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var BattleMovedex={'10000000voltthunderbolt':{num:719,accuracy:true,basePower:195,category:'Special',desc:'Has a very high chance for a critical hit.',shortDesc:'Very high critical hit ratio.',id:'10000000voltthunderbolt',isNonstandard:'Past',isViable:true,name:'10,000,000 Volt Thunderbolt',pp:1,priority:0,flags:{},isZ:'pikashuniumz',critRatio:3,secondary:null,target:'normal',type:'Electric',contestType:'Cool'},absorb:{num:71,accuracy:100,basePower:20,category:'Special',desc:'The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.',shortDesc:'User recovers 50% of the damage dealt.',id:'absorb',name:'Absorb',pp:25,priority:0,flags:{protect:1,mirror:1,heal:1},drain:[1,2],secondary:null,target:'normal',type:'Grass',contestType:'Clever'},accelerock:{num:709,accuracy:100,basePower:40,category:'Physical',desc:'No additional effect.',shortDesc:'Usually goes first.',id:'accelerock',isViable:true,name:'Accelerock',pp:20,priority:1,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Rock',contestType:'Cool'},acid:{num:51,accuracy:100,basePower:40,category:'Special',desc:"Has a 10% chance to lower the target's Special Defense by 1 stage.",shortDesc:'10% chance to lower the foe(s) Sp. Def by 1.',id:'acid',name:'Acid',pp:30,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,boosts:{spd:-1}},target:'allAdjacentFoes',type:'Poison',contestType:'Clever'},acidarmor:{num:151,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Defense by 2 stages.",shortDesc:"Raises the user's Defense by 2.",id:'acidarmor',name:'Acid Armor',pp:20,priority:0,flags:{snatch:1},boosts:{def:2},secondary:null,target:'self',type:'Poison',zMoveEffect:'clearnegativeboost',contestType:'Tough'},aciddownpour:{num:628,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'aciddownpour',isNonstandard:'Past',name:'Acid Downpour',pp:1,priority:0,flags:{},isZ:'poisoniumz',secondary:null,target:'normal',type:'Poison',contestType:'Cool'},acidspray:{num:491,accuracy:100,basePower:40,category:'Special',desc:"Has a 100% chance to lower the target's Special Defense by 2 stages.",shortDesc:"100% chance to lower the target's Sp. Def by 2.",id:'acidspray',name:'Acid Spray',pp:20,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:{chance:100,boosts:{spd:-2}},target:'normal',type:'Poison',contestType:'Beautiful'},acrobatics:{num:512,accuracy:100,basePower:55,basePowerCallback:function basePowerCallback(pokemon,target,move){if(!pokemon.item){this.debug('Power doubled for no item');return move.basePower*2;}return move.basePower;},category:'Physical',shortDesc:'Power doubles if the user has no held item.',id:'acrobatics',isViable:true,name:'Acrobatics',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1,distance:1},secondary:null,target:'any',type:'Flying',contestType:'Cool'},acupressure:{num:367,accuracy:true,basePower:0,category:'Status',desc:'Raises a random stat by 2 stages as long as the stat is not already at stage 6. The user can choose to use this move on itself or an adjacent ally. Fails if no stat stage can be raised or if used on an ally with a substitute.',shortDesc:'Raises a random stat of the user or an ally by 2.',id:'acupressure',name:'Acupressure',pp:30,priority:0,flags:{},onHit:function onHit(target){var stats=[];for(var stat in target.boosts){// @ts-ignore
if(target.boosts[stat]<6){stats.push(stat);}}if(stats.length){var randomStat=this.sample(stats);/**@type {{[k: string]: number}} */var boost={};boost[randomStat]=2;this.boost(boost);}else{return false;}},secondary:null,target:'adjacentAllyOrSelf',type:'Normal',zMoveEffect:'crit2',contestType:'Tough'},aerialace:{num:332,accuracy:true,basePower:60,category:'Physical',shortDesc:'This move does not check accuracy.',id:'aerialace',isViable:true,name:'Aerial Ace',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1,distance:1},secondary:null,target:'any',type:'Flying',contestType:'Cool'},aeroblast:{num:177,accuracy:95,basePower:100,category:'Special',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'aeroblast',isNonstandard:'Past',name:'Aeroblast',pp:5,priority:0,flags:{protect:1,mirror:1,distance:1},critRatio:2,secondary:null,target:'any',type:'Flying',contestType:'Cool'},afteryou:{num:495,accuracy:true,basePower:0,category:'Status',desc:'The target makes its move immediately after the user this turn, no matter the priority of its selected move. Fails if the target would have moved next anyway, or if the target already moved this turn.',shortDesc:'The target makes its move right after the user.',id:'afteryou',name:'After You',pp:15,priority:0,flags:{authentic:1,mystery:1},onHit:function onHit(target,source,move){if(target.side.active.length<2)return false;// fails in singles
var action=this.queue.willMove(target);if(action){this.queue.prioritizeAction(action,move);this.add('-activate',target,'move: After You');}else{return false;}},secondary:null,target:'normal',type:'Normal',zMoveBoost:{spe:1},contestType:'Cute'},agility:{num:97,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Speed by 2 stages.",shortDesc:"Raises the user's Speed by 2.",id:'agility',isViable:true,name:'Agility',pp:30,priority:0,flags:{snatch:1},boosts:{spe:2},secondary:null,target:'self',type:'Psychic',zMoveEffect:'clearnegativeboost',contestType:'Cool'},aircutter:{num:314,accuracy:95,basePower:60,category:'Special',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio. Hits adjacent foes.',id:'aircutter',name:'Air Cutter',pp:25,priority:0,flags:{protect:1,mirror:1},critRatio:2,secondary:null,target:'allAdjacentFoes',type:'Flying',contestType:'Cool'},airslash:{num:403,accuracy:95,basePower:75,category:'Special',desc:'Has a 30% chance to flinch the target.',shortDesc:'30% chance to flinch the target.',id:'airslash',isViable:true,name:'Air Slash',pp:15,priority:0,flags:{protect:1,mirror:1,distance:1},secondary:{chance:30,volatileStatus:'flinch'},target:'any',type:'Flying',contestType:'Cool'},alloutpummeling:{num:624,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'alloutpummeling',isNonstandard:'Past',name:'All-Out Pummeling',pp:1,priority:0,flags:{},isZ:'fightiniumz',secondary:null,target:'normal',type:'Fighting',contestType:'Cool'},allyswitch:{num:502,accuracy:true,basePower:0,category:'Status',desc:'The user swaps positions with its ally. Fails if the user is the only Pokemon on its side.',shortDesc:'The user swaps positions with its ally.',id:'allyswitch',name:'Ally Switch',pp:15,priority:2,flags:{},onTryHit:function onTryHit(source){if(source.side.active.length===1)return false;if(source.side.active.length===3&&source.position===1)return false;},onHit:function onHit(pokemon){var newPosition=pokemon.position===0?pokemon.side.active.length-1:0;if(!pokemon.side.active[newPosition])return false;if(pokemon.side.active[newPosition].fainted)return false;this.swapPosition(pokemon,newPosition,'[from] move: Ally Switch');},secondary:null,target:'self',type:'Psychic',zMoveBoost:{spe:2},contestType:'Clever'},amnesia:{num:133,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Special Defense by 2 stages.",shortDesc:"Raises the user's Sp. Def by 2.",id:'amnesia',name:'Amnesia',pp:20,priority:0,flags:{snatch:1},boosts:{spd:2},secondary:null,target:'self',type:'Psychic',zMoveEffect:'clearnegativeboost',contestType:'Cute'},anchorshot:{num:677,accuracy:100,basePower:80,category:'Physical',desc:'Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.',shortDesc:'Prevents the target from switching out.',id:'anchorshot',isViable:true,name:'Anchor Shot',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:100,onHit:function onHit(target,source,move){if(source.isActive)target.addVolatile('trapped',source,move,'trapper');}},target:'normal',type:'Steel',contestType:'Tough'},ancientpower:{num:246,accuracy:100,basePower:60,category:'Special',desc:"Has a 10% chance to raise the user's Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage.",shortDesc:'10% chance to raise all stats by 1 (not acc/eva).',id:'ancientpower',name:'Ancient Power',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,self:{boosts:{atk:1,def:1,spa:1,spd:1,spe:1}}},target:'normal',type:'Rock',contestType:'Tough'},appleacid:{num:787,accuracy:100,basePower:80,category:'Special',desc:"Has a 100% chance to lower the target's Special Defense by 1 stage.",shortDesc:"100% chance to lower the target's Sp. Def by 1.",id:'appleacid',name:'Apple Acid',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,boosts:{spd:-1}},target:'normal',type:'Grass'},aquajet:{num:453,accuracy:100,basePower:40,category:'Physical',desc:'No additional effect.',shortDesc:'Usually goes first.',id:'aquajet',isViable:true,name:'Aqua Jet',pp:20,priority:1,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Water',contestType:'Cool'},aquaring:{num:392,accuracy:true,basePower:0,category:'Status',desc:'The user has 1/16 of its maximum HP, rounded down, restored at the end of each turn while it remains active. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down. If the user uses Baton Pass, the replacement will receive the healing effect.',shortDesc:'User recovers 1/16 max HP per turn.',id:'aquaring',name:'Aqua Ring',pp:20,priority:0,flags:{snatch:1},volatileStatus:'aquaring',effect:{onStart:function onStart(pokemon){this.add('-start',pokemon,'Aqua Ring');},onResidualOrder:6,onResidual:function onResidual(pokemon){this.heal(pokemon.baseMaxhp/16);}},secondary:null,target:'self',type:'Water',zMoveBoost:{def:1},contestType:'Beautiful'},aquatail:{num:401,accuracy:90,basePower:90,category:'Physical',shortDesc:'No additional effect.',id:'aquatail',isViable:true,name:'Aqua Tail',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Water',contestType:'Beautiful'},armthrust:{num:292,accuracy:100,basePower:15,category:'Physical',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.",shortDesc:'Hits 2-5 times in one turn.',id:'armthrust',name:'Arm Thrust',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},multihit:[2,5],secondary:null,target:'normal',type:'Fighting',contestType:'Tough'},aromatherapy:{num:312,accuracy:true,basePower:0,category:'Status',desc:"Every Pokemon in the user's party is cured of its major status condition. Active Pokemon with the Sap Sipper Ability are not cured, unless they are the user.",shortDesc:"Cures the user's party of all status conditions.",id:'aromatherapy',isViable:true,name:'Aromatherapy',pp:5,priority:0,flags:{snatch:1,distance:1},onHit:function onHit(pokemon,source,move){this.add('-activate',source,'move: Aromatherapy');var success=false;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=pokemon.side.pokemon[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var ally=_step.value;if(ally!==source&&(ally.hasAbility('sapsipper')||ally.volatiles['substitute']&&!move.infiltrates)){continue;}if(ally.cureStatus())success=true;}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return success;},target:'allyTeam',type:'Grass',zMoveEffect:'heal',contestType:'Clever'},aromaticmist:{num:597,accuracy:true,basePower:0,category:'Status',desc:"Raises the target's Special Defense by 1 stage. Fails if there is no ally adjacent to the user.",shortDesc:"Raises an ally's Sp. Def by 1.",id:'aromaticmist',name:'Aromatic Mist',pp:20,priority:0,flags:{authentic:1},boosts:{spd:1},secondary:null,target:'adjacentAlly',type:'Fairy',zMoveBoost:{spd:2},contestType:'Beautiful'},assist:{num:274,accuracy:true,basePower:0,category:'Status',desc:"A random move among those known by the user's party members is selected for use. Does not select Assist, Baneful Bunker, Beak Blast, Belch, Bestow, Bounce, Celebrate, Chatter, Circle Throw, Copycat, Counter, Covet, Destiny Bond, Detect, Dig, Dive, Dragon Tail, Endure, Feint, Fly, Focus Punch, Follow Me, Helping Hand, Hold Hands, King's Shield, Mat Block, Me First, Metronome, Mimic, Mirror Coat, Mirror Move, Nature Power, Phantom Force, Protect, Rage Powder, Roar, Shadow Force, Shell Trap, Sketch, Sky Drop, Sleep Talk, Snatch, Spiky Shield, Spotlight, Struggle, Switcheroo, Thief, Transform, Trick, Whirlwind, or any Z-Move.",shortDesc:'Uses a random move known by a team member.',id:'assist',isNonstandard:'Past',name:'Assist',pp:20,priority:0,flags:{},onHit:function onHit(target){var noAssist=['assist','banefulbunker','beakblast','belch','bestow','bounce','celebrate','chatter','circlethrow','copycat','counter','covet','destinybond','detect','dig','dive','dragontail','endure','feint','fly','focuspunch','followme','helpinghand','holdhands','kingsshield','matblock','mefirst','metronome','mimic','mirrorcoat','mirrormove','naturepower','phantomforce','protect','ragepowder','roar','shadowforce','shelltrap','sketch','skydrop','sleeptalk','snatch','spikyshield','spotlight','struggle','switcheroo','thief','transform','trick','whirlwind'];var moves=[];var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=target.side.pokemon[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var pokemon=_step2.value;if(pokemon===target)continue;var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=pokemon.moveSlots[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var moveSlot=_step3.value;var moveid=moveSlot.id;if(noAssist.includes(moveid))continue;var move=this.dex.getMove(moveid);if(move.isZ||move.isMax){continue;}moves.push(moveid);}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}var randomMove='';if(moves.length)randomMove=this.sample(moves);if(!randomMove){return false;}this.useMove(randomMove,target);},secondary:null,target:'self',type:'Normal',contestType:'Cute'},assurance:{num:372,accuracy:100,basePower:60,basePowerCallback:function basePowerCallback(pokemon,target,move){if(target.hurtThisTurn){this.debug('Boosted for being damaged this turn');return move.basePower*2;}return move.basePower;},category:'Physical',desc:'Power doubles if the target has already taken damage this turn, other than direct damage from Belly Drum, confusion, Curse, or Pain Split.',shortDesc:'Power doubles if target was damaged this turn.',id:'assurance',name:'Assurance',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Dark',contestType:'Clever'},astonish:{num:310,accuracy:100,basePower:30,category:'Physical',desc:'Has a 30% chance to flinch the target.',shortDesc:'30% chance to flinch the target.',id:'astonish',name:'Astonish',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Ghost',contestType:'Cute'},attackorder:{num:454,accuracy:100,basePower:90,category:'Physical',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'attackorder',isViable:true,name:'Attack Order',pp:15,priority:0,flags:{protect:1,mirror:1},critRatio:2,secondary:null,target:'normal',type:'Bug',contestType:'Clever'},attract:{num:213,accuracy:100,basePower:0,category:'Status',desc:'Causes the target to become infatuated, making it unable to attack 50% of the time. Fails if both the user and the target are the same gender, if either is genderless, or if the target is already infatuated. The effect ends when either the user or the target is no longer active. Pokemon with the Oblivious Ability or protected by the Aroma Veil Ability are immune.',shortDesc:'A target of the opposite gender gets infatuated.',id:'attract',name:'Attract',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1,authentic:1},volatileStatus:'attract',effect:{noCopy:true,// doesn't get copied by Baton Pass
onStart:function onStart(pokemon,source,effect){if(!(pokemon.gender==='M'&&source.gender==='F')&&!(pokemon.gender==='F'&&source.gender==='M')){this.debug('incompatible gender');return false;}if(!this.runEvent('Attract',pokemon,source)){this.debug('Attract event failed');return false;}if(effect.id==='cutecharm'){this.add('-start',pokemon,'Attract','[from] ability: Cute Charm','[of] '+source);}else if(effect.id==='destinyknot'){this.add('-start',pokemon,'Attract','[from] item: Destiny Knot','[of] '+source);}else{this.add('-start',pokemon,'Attract');}},onUpdate:function onUpdate(pokemon){if(this.effectData.source&&!this.effectData.source.isActive&&pokemon.volatiles['attract']){this.debug('Removing Attract volatile on '+pokemon);pokemon.removeVolatile('attract');}},onBeforeMovePriority:2,onBeforeMove:function onBeforeMove(pokemon,target,move){this.add('-activate',pokemon,'move: Attract','[of] '+this.effectData.source);if(this.randomChance(1,2)){this.add('cant',pokemon,'Attract');return false;}},onEnd:function onEnd(pokemon){this.add('-end',pokemon,'Attract','[silent]');}},secondary:null,target:'normal',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Cute'},aurasphere:{num:396,accuracy:true,basePower:80,category:'Special',shortDesc:'This move does not check accuracy.',id:'aurasphere',isViable:true,name:'Aura Sphere',pp:20,priority:0,flags:{bullet:1,protect:1,pulse:1,mirror:1,distance:1},secondary:null,target:'any',type:'Fighting',contestType:'Beautiful'},aurawheel:{num:783,accuracy:100,basePower:110,category:'Physical',desc:'If the user is a Morpeko, this move will be Electric type. If the user is a Morpeko-Hangry, this move will be Dark type. Has a 100% chance to raise the users Speed by 1 stage. This move fails if the user is not a Morpeko or Morpeko-Hangry.',shortDesc:'Morpeko: Electric; Hangry: Dark; 100% +1 Spe.',id:'aurawheel',isViable:true,name:'Aura Wheel',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,self:{boosts:{spe:1}}},onTryMove:function onTryMove(pokemon,target,move){if(pokemon.template.baseSpecies==='Morpeko'){return;}this.add('-fail',pokemon,'move: Aura Wheel');this.hint('Only a Pokemon whose form is Morpeko or Morpeko-Hangry can use this move.');return null;},onModifyType:function onModifyType(move,pokemon){if(pokemon.template.species==='Morpeko-Hangry'){move.type='Dark';}else{move.type='Electric';}},target:'normal',type:'Electric'},aurorabeam:{num:62,accuracy:100,basePower:65,category:'Special',desc:"Has a 10% chance to lower the target's Attack by 1 stage.",shortDesc:"10% chance to lower the target's Attack by 1.",id:'aurorabeam',name:'Aurora Beam',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,boosts:{atk:-1}},target:'normal',type:'Ice',contestType:'Beautiful'},auroraveil:{num:694,accuracy:true,basePower:0,category:'Status',desc:"For 5 turns, the user and its party members take 0.5x damage from physical and special attacks, or 0.66x damage if in a Double Battle; does not reduce damage further with Reflect or Light Screen. Critical hits ignore this protection. It is removed from the user's side if the user or an ally is successfully hit by Brick Break, Psychic Fangs, or Defog. Brick Break and Psychic Fangs remove the effect before damage is calculated. Lasts for 8 turns if the user is holding Light Clay. Fails unless the weather is Hail.",shortDesc:'For 5 turns, damage to allies is halved. Hail only.',id:'auroraveil',isViable:true,name:'Aurora Veil',pp:20,priority:0,flags:{snatch:1},sideCondition:'auroraveil',onTryHitSide:function onTryHitSide(){if(!this.field.isWeather('hail'))return false;},effect:{duration:5,durationCallback:function durationCallback(target,source,effect){if(source&&source.hasItem('lightclay')){return 8;}return 5;},onAnyModifyDamage:function onAnyModifyDamage(damage,source,target,move){if(target!==source&&target.side===this.effectData.target){if(target.side.getSideCondition('reflect')&&this.getCategory(move)==='Physical'||target.side.getSideCondition('lightscreen')&&this.getCategory(move)==='Special'){return;}if(!target.getMoveHitData(move).crit&&!move.infiltrates){this.debug('Aurora Veil weaken');if(target.side.active.length>1)return this.chainModify([0xaac,0x1000]);return this.chainModify(0.5);}}},onStart:function onStart(side){this.add('-sidestart',side,'move: Aurora Veil');},onResidualOrder:21,onResidualSubOrder:1,onEnd:function onEnd(side){this.add('-sideend',side,'move: Aurora Veil');}},secondary:null,target:'allySide',type:'Ice',zMoveBoost:{spe:1},contestType:'Beautiful'},autotomize:{num:475,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Speed by 2 stages. If the user's Speed was changed, the user's weight is reduced by 100 kg as long as it remains active. This effect is stackable but cannot reduce the user's weight to less than 0.1 kg.",shortDesc:"Raises the user's Speed by 2; user loses 100 kg.",id:'autotomize',isViable:true,name:'Autotomize',pp:15,priority:0,flags:{snatch:1},onTryHit:function onTryHit(pokemon){var hasContrary=pokemon.hasAbility('contrary');if(!hasContrary&&pokemon.boosts.spe===6||hasContrary&&pokemon.boosts.spe===-6){return false;}},boosts:{spe:2},onHit:function onHit(pokemon){if(pokemon.weighthg>1){pokemon.weighthg=Math.max(1,pokemon.weighthg-1000);this.add('-start',pokemon,'Autotomize');}},secondary:null,target:'self',type:'Steel',zMoveEffect:'clearnegativeboost',contestType:'Beautiful'},avalanche:{num:419,accuracy:100,basePower:60,basePowerCallback:function basePowerCallback(pokemon,target,move){var damagedByTarget=pokemon.attackedBy.some(function(p){return p.source===target&&p.damage>0&&p.thisTurn;});if(damagedByTarget){this.debug('Boosted for getting hit by '+target);return move.basePower*2;}return move.basePower;},category:'Physical',desc:'Power doubles if the user was hit by the target this turn.',shortDesc:'Power doubles if user is damaged by the target.',id:'avalanche',isViable:true,name:'Avalanche',pp:10,priority:-4,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Ice',contestType:'Beautiful'},babydolleyes:{num:608,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Attack by 1 stage.",shortDesc:"Lowers the target's Attack by 1.",id:'babydolleyes',name:'Baby-Doll Eyes',pp:30,priority:1,flags:{protect:1,reflectable:1,mirror:1,mystery:1},boosts:{atk:-1},secondary:null,target:'normal',type:'Fairy',zMoveBoost:{def:1},contestType:'Cute'},baddybad:{num:737,accuracy:95,basePower:80,category:'Special',desc:'This move summons Reflect for 5 turns upon use.',shortDesc:'Summons Reflect.',id:'baddybad',isNonstandard:'LGPE',isViable:true,name:'Baddy Bad',pp:15,priority:0,flags:{protect:1},self:{sideCondition:'reflect'},secondary:null,target:'normal',type:'Dark',contestType:'Clever'},banefulbunker:{num:661,accuracy:true,basePower:0,category:'Status',desc:"The user is protected from most attacks made by other Pokemon during this turn, and Pokemon making contact with the user become poisoned. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Detect, Endure, King's Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn.",shortDesc:'Protects from moves. Contact: poison.',id:'banefulbunker',isViable:true,name:'Baneful Bunker',pp:10,priority:4,flags:{},stallingMove:true,volatileStatus:'banefulbunker',onTryHit:function onTryHit(target,source,move){return!!this.queue.willAct()&&this.runEvent('StallMove',target);},onHit:function onHit(pokemon){pokemon.addVolatile('stall');},effect:{duration:1,onStart:function onStart(target){this.add('-singleturn',target,'move: Protect');},onTryHitPriority:3,onTryHit:function onTryHit(target,source,move){if(!move.flags['protect']){if(move.isZ||move.isMax)target.getMoveHitData(move).zBrokeProtect=true;return;}this.add('-activate',target,'move: Protect');var lockedmove=source.getVolatile('lockedmove');if(lockedmove){// Outrage counter is reset
if(source.volatiles['lockedmove'].duration===2){delete source.volatiles['lockedmove'];}}if(move.flags['contact']){source.trySetStatus('psn',target);}return this.NOT_FAIL;},onHit:function onHit(target,source,move){if(move.isZPowered&&move.flags['contact']){source.trySetStatus('psn',target);}}},secondary:null,target:'self',type:'Poison',zMoveBoost:{def:1},contestType:'Tough'},barrage:{num:140,accuracy:85,basePower:15,category:'Physical',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.",shortDesc:'Hits 2-5 times in one turn.',id:'barrage',isNonstandard:'Past',name:'Barrage',pp:20,priority:0,flags:{bullet:1,protect:1,mirror:1},multihit:[2,5],secondary:null,target:'normal',type:'Normal',contestType:'Cute'},barrier:{num:112,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Defense by 2 stages.",shortDesc:"Raises the user's Defense by 2.",id:'barrier',isNonstandard:'Past',name:'Barrier',pp:20,priority:0,flags:{snatch:1},boosts:{def:2},secondary:null,target:'self',type:'Psychic',zMoveEffect:'clearnegativeboost',contestType:'Cool'},batonpass:{num:226,accuracy:true,basePower:0,category:'Status',desc:"The user is replaced with another Pokemon in its party. The selected Pokemon has the user's stat stage changes, confusion, and certain move effects transferred to it.",shortDesc:'User switches, passing stat changes and more.',id:'batonpass',isViable:true,name:'Baton Pass',pp:40,priority:0,flags:{},selfSwitch:'copyvolatile',secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Cute'},beakblast:{num:690,accuracy:100,basePower:100,category:'Physical',desc:'If the user is hit by a contact move this turn before it can execute this move, the attacker is burned.',shortDesc:'Burns on contact with the user before it moves.',id:'beakblast',isNonstandard:'Past',name:'Beak Blast',pp:15,priority:-3,flags:{bullet:1,protect:1},beforeTurnCallback:function beforeTurnCallback(pokemon){pokemon.addVolatile('beakblast');},effect:{duration:1,onStart:function onStart(pokemon){this.add('-singleturn',pokemon,'move: Beak Blast');},onHit:function onHit(pokemon,source,move){if(move.flags['contact']){source.trySetStatus('brn',pokemon);}}},// FIXME: onMoveAborted(pokemon) {pokemon.removeVolatile('beakblast')},
onAfterMove:function onAfterMove(pokemon){pokemon.removeVolatile('beakblast');},secondary:null,target:'normal',type:'Flying',contestType:'Tough'},beatup:{num:251,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon,target,move){// @ts-ignore
return 5+Math.floor(move.allies.shift().template.baseStats.atk/10);},category:'Physical',desc:"Hits one time for the user and one time for each unfainted Pokemon without a major status condition in the user's party. The power of each hit is equal to 5+(X/10), where X is each participating Pokemon's base Attack; each hit is considered to come from the user.",shortDesc:'All healthy allies aid in damaging the target.',id:'beatup',name:'Beat Up',pp:10,priority:0,flags:{protect:1,mirror:1,mystery:1},onModifyMove:function onModifyMove(move,pokemon){move.allies=pokemon.side.pokemon.filter(function(ally){return ally===pokemon||!ally.fainted&&!ally.status;});move.multihit=move.allies.length;},secondary:null,target:'normal',type:'Dark',contestType:'Clever'},behemothbash:{num:782,accuracy:100,basePower:100,category:'Physical',desc:'Deals double damage against Dynamax and Gigantamax Pokemon.',shortDesc:'Double damage against Dynamax/Gigantamax.',id:'behemothbash',isViable:true,name:'Behemoth Bash',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Steel'},behemothblade:{num:781,accuracy:100,basePower:100,category:'Physical',desc:'Deals double damage against Dynamax and Gigantamax Pokemon.',shortDesc:'Double damage against Dynamax/Gigantamax.',id:'behemothblade',isViable:true,name:'Behemoth Blade',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Steel'},belch:{num:562,accuracy:90,basePower:120,category:'Special',desc:'This move cannot be selected until the user eats a Berry, either by eating one that was held, stealing and eating one off another Pokemon with Bug Bite or Pluck, or eating one that was thrown at it with Fling. Once the condition is met, this move can be selected and used for the rest of the battle even if the user gains or uses another item or switches out. Consuming a Berry with Natural Gift does not count for the purposes of eating one.',shortDesc:'Cannot be selected until the user eats a Berry.',id:'belch',name:'Belch',pp:10,priority:0,flags:{protect:1},// Move disabling implemented in Battle#nextTurn in sim/battle.js
secondary:null,target:'normal',type:'Poison',contestType:'Tough'},bellydrum:{num:187,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Attack by 12 stages in exchange for the user losing 1/2 of its maximum HP, rounded down. Fails if the user would faint or if its Attack stat stage is 6.",shortDesc:'User loses 50% max HP. Maximizes Attack.',id:'bellydrum',name:'Belly Drum',pp:10,priority:0,flags:{snatch:1},onHit:function onHit(target){if(target.hp<=target.maxhp/2||target.boosts.atk>=6||target.maxhp===1){// Shedinja clause
return false;}this.directDamage(target.maxhp/2);this.boost({atk:12},target);},secondary:null,target:'self',type:'Normal',zMoveEffect:'heal',contestType:'Cute'},bestow:{num:516,accuracy:true,basePower:0,category:'Status',desc:"The target receives the user's held item. Fails if the user has no item or is holding a Mail or Z-Crystal, if the target is already holding an item, if the user is a Kyogre holding a Blue Orb, a Groudon holding a Red Orb, a Giratina holding a Griseous Orb, an Arceus holding a Plate, a Genesect holding a Drive, a Silvally holding a Memory, a Pokemon that can Mega Evolve holding the Mega Stone for its species, or if the target is one of those Pokemon and the user is holding the respective item.",shortDesc:'User passes its held item to the target.',id:'bestow',isNonstandard:'Past',name:'Bestow',pp:15,priority:0,flags:{mirror:1,authentic:1,mystery:1},onHit:function onHit(target,source,move){if(target.item){return false;}var myItem=source.takeItem();if(!myItem)return false;if(!this.singleEvent('TakeItem',myItem,source.itemData,target,source,move,myItem)||!target.setItem(myItem)){source.item=myItem.id;return false;}this.add('-item',target,myItem.name,'[from] move: Bestow','[of] '+source);},secondary:null,target:'normal',type:'Normal',zMoveBoost:{spe:2},contestType:'Cute'},bide:{num:117,accuracy:true,basePower:0,category:'Physical',desc:"The user spends two turns locked into this move and then, on the second turn after using this move, the user attacks the last Pokemon that hit it, inflicting double the damage in HP it lost to attacks during the two turns. If the last Pokemon that hit it is no longer active, the user attacks a random opposing Pokemon instead. If the user is prevented from moving during this move's use, the effect ends. This move does not check accuracy and does not ignore type immunity.",shortDesc:'Waits 2 turns; deals double the damage taken.',id:'bide',isNonstandard:'Past',name:'Bide',pp:10,priority:1,flags:{contact:1,protect:1},volatileStatus:'bide',ignoreImmunity:true,beforeMoveCallback:function beforeMoveCallback(pokemon){if(pokemon.volatiles['bide'])return true;},effect:{duration:3,onLockMove:'bide',onStart:function onStart(pokemon){this.effectData.totalDamage=0;this.add('-start',pokemon,'move: Bide');},onDamagePriority:-101,onDamage:function onDamage(damage,target,source,move){if(!move||move.effectType!=='Move'||!source)return;this.effectData.totalDamage+=damage;this.effectData.lastDamageSource=source;},onBeforeMove:function onBeforeMove(pokemon,target,move){if(this.effectData.duration===1){this.add('-end',pokemon,'move: Bide');target=this.effectData.lastDamageSource;if(!target||!this.effectData.totalDamage){this.attrLastMove('[still]');this.add('-fail',pokemon);return false;}if(!target.isActive){var possibleTarget=this.getRandomTarget(pokemon,this.dex.getMove('pound'));if(!possibleTarget){this.add('-miss',pokemon);return false;}target=possibleTarget;}var moveData={id:'bide',name:'Bide',accuracy:true,damage:this.effectData.totalDamage*2,category:'Physical',priority:1,flags:{contact:1,protect:1},effectType:'Move',type:'Normal'};// @ts-ignore
this.tryMoveHit(target,pokemon,moveData);return false;}this.add('-activate',pokemon,'move: Bide');},onMoveAborted:function onMoveAborted(pokemon){pokemon.removeVolatile('bide');},onEnd:function onEnd(pokemon){this.add('-end',pokemon,'move: Bide','[silent]');}},secondary:null,target:'self',type:'Normal',contestType:'Tough'},bind:{num:20,accuracy:85,basePower:15,category:'Physical',desc:'Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',shortDesc:'Traps and damages the target for 4-5 turns.',id:'bind',name:'Bind',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},volatileStatus:'partiallytrapped',secondary:null,target:'normal',type:'Normal',contestType:'Tough'},bite:{num:44,accuracy:100,basePower:60,category:'Physical',desc:'Has a 30% chance to flinch the target.',shortDesc:'30% chance to flinch the target.',id:'bite',name:'Bite',pp:25,priority:0,flags:{bite:1,contact:1,protect:1,mirror:1},secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Dark',contestType:'Tough'},blackholeeclipse:{num:654,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'blackholeeclipse',isNonstandard:'Past',name:'Black Hole Eclipse',pp:1,priority:0,flags:{},isZ:'darkiniumz',secondary:null,target:'normal',type:'Dark',contestType:'Cool'},blastburn:{num:307,accuracy:90,basePower:150,category:'Special',desc:'If this move is successful, the user must recharge on the following turn and cannot select a move.',shortDesc:'User cannot move next turn.',id:'blastburn',name:'Blast Burn',pp:5,priority:0,flags:{recharge:1,protect:1,mirror:1},self:{volatileStatus:'mustrecharge'},secondary:null,target:'normal',type:'Fire',contestType:'Beautiful'},blazekick:{num:299,accuracy:90,basePower:85,category:'Physical',desc:'Has a 10% chance to burn the target and a higher chance for a critical hit.',shortDesc:'High critical hit ratio. 10% chance to burn.',id:'blazekick',isViable:true,name:'Blaze Kick',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},critRatio:2,secondary:{chance:10,status:'brn'},target:'normal',type:'Fire',contestType:'Cool'},blizzard:{num:59,accuracy:70,basePower:110,category:'Special',desc:'Has a 10% chance to freeze the target. If the weather is Hail, this move does not check accuracy.',shortDesc:"10% chance to freeze foe(s). Can't miss in hail.",id:'blizzard',isViable:true,name:'Blizzard',pp:5,priority:0,flags:{protect:1,mirror:1},onModifyMove:function onModifyMove(move){if(this.field.isWeather('hail'))move.accuracy=true;},secondary:{chance:10,status:'frz'},target:'allAdjacentFoes',type:'Ice',contestType:'Beautiful'},block:{num:335,accuracy:true,basePower:0,category:'Status',desc:'Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.',shortDesc:'Prevents the target from switching out.',id:'block',name:'Block',pp:5,priority:0,flags:{reflectable:1,mirror:1},onHit:function onHit(target,source,move){return target.addVolatile('trapped',source,move,'trapper');},secondary:null,target:'normal',type:'Normal',zMoveBoost:{def:1},contestType:'Cute'},bloomdoom:{num:644,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'bloomdoom',isNonstandard:'Past',name:'Bloom Doom',pp:1,priority:0,flags:{},isZ:'grassiumz',secondary:null,target:'normal',type:'Grass',contestType:'Cool'},blueflare:{num:551,accuracy:85,basePower:130,category:'Special',desc:'Has a 20% chance to burn the target.',shortDesc:'20% chance to burn the target.',id:'blueflare',isViable:true,name:'Blue Flare',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:{chance:20,status:'brn'},target:'normal',type:'Fire',contestType:'Beautiful'},bodypress:{num:776,accuracy:100,basePower:80,category:'Physical',desc:"Damage is calculated using the user's Defense stat instead of Attack, including stat stage changes. The user's Ability is used as normal.",shortDesc:'Uses Def instead of Atk in damage calculation.',id:'bodypress',isViable:true,name:'Body Press',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},useSourceDefensiveAsOffensive:true,secondary:null,target:'normal',type:'Fighting'},bodyslam:{num:34,accuracy:100,basePower:85,category:'Physical',desc:'Has a 30% chance to paralyze the target. Damage doubles and no accuracy check is done if the target has used Minimize while active.',shortDesc:'30% chance to paralyze the target.',id:'bodyslam',isViable:true,name:'Body Slam',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1,nonsky:1},secondary:{chance:30,status:'par'},target:'normal',type:'Normal',contestType:'Tough'},boltbeak:{num:754,accuracy:100,basePower:85,basePowerCallback:function basePowerCallback(pokemon,target,move){if(target.newlySwitched||this.queue.willMove(target)){this.debug('Bolt Beak damage boost');return move.basePower*2;}this.debug('Bolt Beak NOT boosted');return move.basePower;},category:'Physical',desc:"If the user moves before the target, this move's power is doubled.",shortDesc:'Double power if the user moves first.',id:'boltbeak',isViable:true,name:'Bolt Beak',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Electric'},boltstrike:{num:550,accuracy:85,basePower:130,category:'Physical',desc:'Has a 20% chance to paralyze the target.',shortDesc:'20% chance to paralyze the target.',id:'boltstrike',isViable:true,name:'Bolt Strike',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:20,status:'par'},target:'normal',type:'Electric',contestType:'Beautiful'},boneclub:{num:125,accuracy:85,basePower:65,category:'Physical',desc:'Has a 10% chance to flinch the target.',shortDesc:'10% chance to flinch the target.',id:'boneclub',isNonstandard:'Past',name:'Bone Club',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,volatileStatus:'flinch'},target:'normal',type:'Ground',contestType:'Tough'},bonemerang:{num:155,accuracy:90,basePower:50,category:'Physical',desc:"Hits twice. If the first hit breaks the target's substitute, it will take damage for the second hit.",shortDesc:'Hits 2 times in one turn.',id:'bonemerang',isNonstandard:'Past',name:'Bonemerang',pp:10,priority:0,flags:{protect:1,mirror:1},multihit:2,secondary:null,target:'normal',type:'Ground',gmaxPower:130,contestType:'Tough'},bonerush:{num:198,accuracy:90,basePower:25,category:'Physical',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.",shortDesc:'Hits 2-5 times in one turn.',id:'bonerush',name:'Bone Rush',pp:10,priority:0,flags:{protect:1,mirror:1},multihit:[2,5],secondary:null,target:'normal',type:'Ground',zMovePower:140,gmaxPower:130,contestType:'Tough'},boomburst:{num:586,accuracy:100,basePower:140,category:'Special',desc:'No additional effect.',shortDesc:'No additional effect. Hits adjacent Pokemon.',id:'boomburst',isViable:true,name:'Boomburst',pp:10,priority:0,flags:{protect:1,mirror:1,sound:1,authentic:1},secondary:null,target:'allAdjacent',type:'Normal',contestType:'Tough'},bounce:{num:340,accuracy:85,basePower:85,category:'Physical',desc:'Has a 30% chance to paralyze the target. This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Gust, Hurricane, Sky Uppercut, Smack Down, Thousand Arrows, Thunder, and Twister, and Gust and Twister have doubled power when used against it. If the user is holding a Power Herb, the move completes in one turn.',shortDesc:'Bounces turn 1. Hits turn 2. 30% paralyze.',id:'bounce',name:'Bounce',pp:5,priority:0,flags:{contact:1,charge:1,protect:1,mirror:1,gravity:1,distance:1},onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}this.add('-prepare',attacker,move.name,defender);if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},effect:{duration:2,onInvulnerability:function onInvulnerability(target,source,move){if(['gust','twister','skyuppercut','thunder','hurricane','smackdown','thousandarrows'].includes(move.id)){return;}return false;},onSourceBasePower:function onSourceBasePower(basePower,target,source,move){if(move.id==='gust'||move.id==='twister'){return this.chainModify(2);}}},secondary:{chance:30,status:'par'},target:'any',type:'Flying',contestType:'Cute'},bouncybubble:{num:733,accuracy:100,basePower:60,category:'Special',desc:'The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.',shortDesc:'User recovers 50% of the damage dealt.',id:'bouncybubble',isNonstandard:'LGPE',isViable:true,name:'Bouncy Bubble',pp:20,priority:0,flags:{protect:1,heal:1},drain:[1,2],secondary:null,target:'normal',type:'Water',contestType:'Clever'},branchpoke:{num:785,accuracy:100,basePower:40,category:'Physical',desc:'No additional effect.',shortDesc:'No additional effect.',id:'branchpoke',name:'Branch Poke',pp:40,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Grass'},bravebird:{num:413,accuracy:100,basePower:120,category:'Physical',desc:'If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.',shortDesc:'Has 33% recoil.',id:'bravebird',isViable:true,name:'Brave Bird',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1,distance:1},recoil:[33,100],secondary:null,target:'any',type:'Flying',contestType:'Cool'},breakingswipe:{num:784,accuracy:100,basePower:60,category:'Physical',desc:"100% chance to lower the foe's Attack by 1 stage. Hits all adjacent foes.",shortDesc:"100% chance to lower adjacent foes' Atk by 1.",id:'breakingswipe',name:'Breaking Swipe',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:100,boosts:{atk:-1}},target:'allAdjacentFoes',type:'Dragon'},breakneckblitz:{num:622,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'breakneckblitz',isNonstandard:'Past',name:'Breakneck Blitz',pp:1,priority:0,flags:{},isZ:'normaliumz',secondary:null,target:'normal',type:'Normal',contestType:'Cool'},brickbreak:{num:280,accuracy:100,basePower:75,category:'Physical',desc:"If this attack does not miss, the effects of Reflect, Light Screen, and Aurora Veil end for the target's side of the field before damage is calculated.",shortDesc:'Destroys screens, unless the target is immune.',id:'brickbreak',isViable:true,name:'Brick Break',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},onTryHit:function onTryHit(pokemon){// will shatter screens through sub, before you hit
if(pokemon.runImmunity('Fighting')){pokemon.side.removeSideCondition('reflect');pokemon.side.removeSideCondition('lightscreen');pokemon.side.removeSideCondition('auroraveil');}},secondary:null,target:'normal',type:'Fighting',contestType:'Cool'},brine:{num:362,accuracy:100,basePower:65,category:'Special',desc:'Power doubles if the target has less than or equal to half of its maximum HP remaining.',shortDesc:"Power doubles if the target's HP is 50% or less.",id:'brine',name:'Brine',pp:10,priority:0,flags:{protect:1,mirror:1},onBasePower:function onBasePower(basePower,pokemon,target){if(target.hp*2<=target.maxhp){return this.chainModify(2);}},secondary:null,target:'normal',type:'Water',contestType:'Tough'},brutalswing:{num:693,accuracy:100,basePower:60,category:'Physical',desc:'No additional effect.',shortDesc:'No additional effect. Hits adjacent Pokemon.',id:'brutalswing',name:'Brutal Swing',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'allAdjacent',type:'Dark',contestType:'Tough'},bubble:{num:145,accuracy:100,basePower:40,category:'Special',desc:"Has a 10% chance to lower the target's Speed by 1 stage.",shortDesc:'10% chance to lower the foe(s) Speed by 1.',id:'bubble',isNonstandard:'Past',name:'Bubble',pp:30,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,boosts:{spe:-1}},target:'allAdjacentFoes',type:'Water',contestType:'Cute'},bubblebeam:{num:61,accuracy:100,basePower:65,category:'Special',desc:"Has a 10% chance to lower the target's Speed by 1 stage.",shortDesc:"10% chance to lower the target's Speed by 1.",id:'bubblebeam',name:'Bubble Beam',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,boosts:{spe:-1}},target:'normal',type:'Water',contestType:'Beautiful'},bugbite:{num:450,accuracy:100,basePower:60,category:'Physical',desc:"If this move is successful and the user has not fainted, it steals the target's held Berry if it is holding one and eats it immediately, gaining its effects even if the user's item is being ignored. Items lost to this move cannot be regained with Recycle or the Harvest Ability.",shortDesc:"User steals and eats the target's Berry.",id:'bugbite',name:'Bug Bite',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},onHit:function onHit(target,source){var item=target.getItem();if(source.hp&&item.isBerry&&target.takeItem(source)){this.add('-enditem',target,item.name,'[from] stealeat','[move] Bug Bite','[of] '+source);if(this.singleEvent('Eat',item,null,source,null,null)){this.runEvent('EatItem',source,null,null,item);if(item.id==='leppaberry')target.staleness='external';}if(item.onEat)source.ateBerry=true;}},secondary:null,target:'normal',type:'Bug',contestType:'Cute'},bugbuzz:{num:405,accuracy:100,basePower:90,category:'Special',desc:"Has a 10% chance to lower the target's Special Defense by 1 stage.",shortDesc:"10% chance to lower the target's Sp. Def by 1.",id:'bugbuzz',isViable:true,name:'Bug Buzz',pp:10,priority:0,flags:{protect:1,mirror:1,sound:1,authentic:1},secondary:{chance:10,boosts:{spd:-1}},target:'normal',type:'Bug',contestType:'Beautiful'},bulkup:{num:339,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Attack and Defense by 1 stage.",shortDesc:"Raises the user's Attack and Defense by 1.",id:'bulkup',isViable:true,name:'Bulk Up',pp:20,priority:0,flags:{snatch:1},boosts:{atk:1,def:1},secondary:null,target:'self',type:'Fighting',zMoveBoost:{atk:1},contestType:'Cool'},bulldoze:{num:523,accuracy:100,basePower:60,category:'Physical',desc:"Has a 100% chance to lower the target's Speed by 1 stage.",shortDesc:'100% chance lower adjacent Pkmn Speed by 1.',id:'bulldoze',name:'Bulldoze',pp:20,priority:0,flags:{protect:1,mirror:1,nonsky:1},secondary:{chance:100,boosts:{spe:-1}},target:'allAdjacent',type:'Ground',contestType:'Tough'},bulletpunch:{num:418,accuracy:100,basePower:40,category:'Physical',desc:'No additional effect.',shortDesc:'Usually goes first.',id:'bulletpunch',isViable:true,name:'Bullet Punch',pp:30,priority:1,flags:{contact:1,protect:1,mirror:1,punch:1},secondary:null,target:'normal',type:'Steel',contestType:'Tough'},bulletseed:{num:331,accuracy:100,basePower:25,category:'Physical',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.",shortDesc:'Hits 2-5 times in one turn.',id:'bulletseed',isViable:true,name:'Bullet Seed',pp:30,priority:0,flags:{bullet:1,protect:1,mirror:1},multihit:[2,5],secondary:null,target:'normal',type:'Grass',zMovePower:140,gmaxPower:130,contestType:'Cool'},burnup:{num:682,accuracy:100,basePower:130,category:'Special',desc:"Fails unless the user is a Fire type. If this move is successful, the user's Fire type becomes typeless as long as it remains active.",shortDesc:"User's Fire type becomes typeless; must be Fire.",id:'burnup',name:'Burn Up',pp:5,priority:0,flags:{protect:1,mirror:1,defrost:1},onTryMove:function onTryMove(pokemon,target,move){if(pokemon.hasType('Fire'))return;this.add('-fail',pokemon,'move: Burn Up');this.attrLastMove('[still]');return null;},self:{onHit:function onHit(pokemon){pokemon.setType(pokemon.getTypes(true).map(function(type){return type==='Fire'?'???':type;}));this.add('-start',pokemon,'typechange',pokemon.types.join('/'),'[from] move: Burn Up');}},secondary:null,target:'normal',type:'Fire',contestType:'Clever'},buzzybuzz:{num:734,accuracy:100,basePower:60,category:'Special',desc:'Has a 100% chance to paralyze the foe.',shortDesc:'100% chance to paralyze the foe.',id:'buzzybuzz',isNonstandard:'LGPE',isViable:true,name:'Buzzy Buzz',pp:20,priority:0,flags:{protect:1},secondary:{chance:100,status:'par'},target:'normal',type:'Electric',contestType:'Clever'},calmmind:{num:347,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Special Attack and Special Defense by 1 stage.",shortDesc:"Raises the user's Sp. Atk and Sp. Def by 1.",id:'calmmind',isViable:true,name:'Calm Mind',pp:20,priority:0,flags:{snatch:1},boosts:{spa:1,spd:1},secondary:null,target:'self',type:'Psychic',zMoveEffect:'clearnegativeboost',contestType:'Clever'},camouflage:{num:293,accuracy:true,basePower:0,category:'Status',desc:"The user's type changes based on the battle terrain. Normal type on the regular Wi-Fi terrain, Electric type during Electric Terrain, Fairy type during Misty Terrain, Grass type during Grassy Terrain, and Psychic type during Psychic Terrain. Fails if the user's type cannot be changed or if the user is already purely that type.",shortDesc:"Changes user's type by terrain (default Normal).",id:'camouflage',isNonstandard:'Past',name:'Camouflage',pp:20,priority:0,flags:{snatch:1},onHit:function onHit(target){var newType='Normal';if(this.field.isTerrain('electricterrain')){newType='Electric';}else if(this.field.isTerrain('grassyterrain')){newType='Grass';}else if(this.field.isTerrain('mistyterrain')){newType='Fairy';}else if(this.field.isTerrain('psychicterrain')){newType='Psychic';}if(target.getTypes().join()===newType||!target.setType(newType))return false;this.add('-start',target,'typechange',newType);},secondary:null,target:'self',type:'Normal',zMoveBoost:{evasion:1},contestType:'Clever'},captivate:{num:445,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Special Attack by 2 stages. The target is unaffected if both the user and the target are the same gender, or if either is genderless. Pokemon with the Oblivious Ability are immune.",shortDesc:'Lowers the foe(s) Sp. Atk by 2 if opposite gender.',id:'captivate',isNonstandard:'Past',name:'Captivate',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1},onTryImmunity:function onTryImmunity(pokemon,source){return pokemon.gender==='M'&&source.gender==='F'||pokemon.gender==='F'&&source.gender==='M';},boosts:{spa:-2},secondary:null,target:'allAdjacentFoes',type:'Normal',zMoveBoost:{spd:2},contestType:'Cute'},catastropika:{num:658,accuracy:true,basePower:210,category:'Physical',shortDesc:'No additional effect.',id:'catastropika',isNonstandard:'Past',isViable:true,name:'Catastropika',pp:1,priority:0,flags:{contact:1},isZ:'pikaniumz',secondary:null,target:'normal',type:'Electric',contestType:'Cool'},celebrate:{num:606,accuracy:true,basePower:0,category:'Status',shortDesc:'No competitive use.',id:'celebrate',name:'Celebrate',pp:40,priority:0,flags:{},onTryHit:function onTryHit(target,source){this.add('-activate',target,'move: Celebrate');},secondary:null,target:'self',type:'Normal',zMoveBoost:{atk:1,def:1,spa:1,spd:1,spe:1},contestType:'Cute'},charge:{num:268,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Special Defense by 1 stage. If the user uses an Electric-type attack on the next turn, its power will be doubled.",shortDesc:"+1 SpD, user's Electric move next turn 2x power.",id:'charge',name:'Charge',pp:20,priority:0,flags:{snatch:1},volatileStatus:'charge',onHit:function onHit(pokemon){this.add('-activate',pokemon,'move: Charge');},effect:{duration:2,onRestart:function onRestart(pokemon){this.effectData.duration=2;},onBasePowerPriority:3,onBasePower:function onBasePower(basePower,attacker,defender,move){if(move.type==='Electric'){this.debug('charge boost');return this.chainModify(2);}}},boosts:{spd:1},secondary:null,target:'self',type:'Electric',zMoveBoost:{spd:1},contestType:'Clever'},chargebeam:{num:451,accuracy:90,basePower:50,category:'Special',desc:"Has a 70% chance to raise the user's Special Attack by 1 stage.",shortDesc:"70% chance to raise the user's Sp. Atk by 1.",id:'chargebeam',name:'Charge Beam',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:70,self:{boosts:{spa:1}}},target:'normal',type:'Electric',contestType:'Beautiful'},charm:{num:204,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Attack by 2 stages.",shortDesc:"Lowers the target's Attack by 2.",id:'charm',name:'Charm',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},boosts:{atk:-2},secondary:null,target:'normal',type:'Fairy',zMoveBoost:{def:1},contestType:'Cute'},chatter:{num:448,accuracy:100,basePower:65,category:'Special',desc:'Has a 100% chance to confuse the target.',shortDesc:'100% chance to confuse the target.',id:'chatter',isNonstandard:'Past',name:'Chatter',pp:20,priority:0,flags:{protect:1,mirror:1,sound:1,distance:1,authentic:1},noSketch:true,secondary:{chance:100,volatileStatus:'confusion'},target:'any',type:'Flying',contestType:'Cute'},chipaway:{num:498,accuracy:100,basePower:70,category:'Physical',desc:"Ignores the target's stat stage changes, including evasiveness.",shortDesc:"Ignores the target's stat stage changes.",id:'chipaway',isNonstandard:'Past',name:'Chip Away',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},ignoreDefensive:true,ignoreEvasion:true,secondary:null,target:'normal',type:'Normal',contestType:'Tough'},circlethrow:{num:509,accuracy:90,basePower:60,category:'Physical',desc:'If both the user and the target have not fainted, the target is forced to switch out and be replaced with a random unfainted ally. This effect fails if the target is under the effect of Ingrain, has the Suction Cups Ability, or this move hit a substitute.',shortDesc:'Forces the target to switch to a random ally.',id:'circlethrow',isViable:true,name:'Circle Throw',pp:10,priority:-6,flags:{contact:1,protect:1,mirror:1},forceSwitch:true,target:'normal',type:'Fighting',contestType:'Cool'},clamp:{num:128,accuracy:85,basePower:35,category:'Physical',desc:'Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',shortDesc:'Traps and damages the target for 4-5 turns.',id:'clamp',isNonstandard:'Past',name:'Clamp',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},volatileStatus:'partiallytrapped',secondary:null,target:'normal',type:'Water',contestType:'Tough'},clangingscales:{num:691,accuracy:100,basePower:110,category:'Special',desc:"Lowers the user's Defense by 1 stage.",shortDesc:"Lowers the user's Defense by 1.",id:'clangingscales',isViable:true,name:'Clanging Scales',pp:5,priority:0,flags:{protect:1,mirror:1,sound:1,authentic:1},selfBoost:{boosts:{def:-1}},secondary:null,target:'allAdjacentFoes',type:'Dragon',contestType:'Tough'},clangoroussoul:{num:775,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage in exchange for the user losing 1/3 of its maximum HP, rounded down. Fails if the user would faint or if its Attack, Defense, Special Attack, Special Defense, and Speed stat stages are 6.",shortDesc:'User loses 33% max HP. Raises all stats by 1.',id:'clangoroussoul',isViable:true,name:'Clangorous Soul',pp:5,priority:0,flags:{snatch:1,sound:1,dance:1},onTryHit:function onTryHit(pokemon,target,move){if(pokemon.hp<=pokemon.maxhp/3||pokemon.maxhp===1){return false;}// @ts-ignore
if(!this.boost(move.boosts))return null;delete move.boosts;},onHit:function onHit(pokemon){this.directDamage(pokemon.maxhp/3);},boosts:{atk:1,def:1,spa:1,spd:1,spe:1},secondary:null,target:'self',type:'Dragon'},clangoroussoulblaze:{num:728,accuracy:true,basePower:185,category:'Special',desc:"Raises the user's Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage.",shortDesc:"Raises the user's Atk/Def/SpAtk/SpDef/Spe by 1.",id:'clangoroussoulblaze',isNonstandard:'Past',isViable:true,name:'Clangorous Soulblaze',pp:1,priority:0,flags:{sound:1,authentic:1},selfBoost:{boosts:{atk:1,def:1,spa:1,spd:1,spe:1}},isZ:'kommoniumz',secondary:{// Sheer Force negates the selfBoost even though it is not secondary
},target:'allAdjacentFoes',type:'Dragon',contestType:'Cool'},clearsmog:{num:499,accuracy:true,basePower:50,category:'Special',shortDesc:"Resets all of the target's stat stages to 0.",id:'clearsmog',isViable:true,name:'Clear Smog',pp:15,priority:0,flags:{protect:1,mirror:1},onHit:function onHit(target){target.clearBoosts();this.add('-clearboost',target);},secondary:null,target:'normal',type:'Poison',contestType:'Beautiful'},closecombat:{num:370,accuracy:100,basePower:120,category:'Physical',desc:"Lowers the user's Defense and Special Defense by 1 stage.",shortDesc:"Lowers the user's Defense and Sp. Def by 1.",id:'closecombat',isViable:true,name:'Close Combat',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},self:{boosts:{def:-1,spd:-1}},secondary:null,target:'normal',type:'Fighting',contestType:'Tough'},coil:{num:489,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Attack, Defense, and accuracy by 1 stage.",shortDesc:"Raises user's Attack, Defense, accuracy by 1.",id:'coil',isViable:true,name:'Coil',pp:20,priority:0,flags:{snatch:1},boosts:{atk:1,def:1,accuracy:1},secondary:null,target:'self',type:'Poison',zMoveEffect:'clearnegativeboost',contestType:'Tough'},cometpunch:{num:4,accuracy:85,basePower:18,category:'Physical',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.",shortDesc:'Hits 2-5 times in one turn.',id:'cometpunch',isNonstandard:'Past',name:'Comet Punch',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},multihit:[2,5],secondary:null,target:'normal',type:'Normal',gmaxPower:100,contestType:'Tough'},confide:{num:590,accuracy:true,basePower:0,category:'Status',desc:"Lowers the target's Special Attack by 1 stage.",shortDesc:"Lowers the target's Sp. Atk by 1.",id:'confide',name:'Confide',pp:20,priority:0,flags:{reflectable:1,mirror:1,sound:1,authentic:1},boosts:{spa:-1},secondary:null,target:'normal',type:'Normal',zMoveBoost:{spd:1},contestType:'Cute'},confuseray:{num:109,accuracy:100,basePower:0,category:'Status',desc:'Causes the target to become confused.',shortDesc:'Confuses the target.',id:'confuseray',name:'Confuse Ray',pp:10,priority:0,flags:{protect:1,reflectable:1,mirror:1},volatileStatus:'confusion',secondary:null,target:'normal',type:'Ghost',zMoveBoost:{spa:1},contestType:'Clever'},confusion:{num:93,accuracy:100,basePower:50,category:'Special',desc:'Has a 10% chance to confuse the target.',shortDesc:'10% chance to confuse the target.',id:'confusion',name:'Confusion',pp:25,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,volatileStatus:'confusion'},target:'normal',type:'Psychic',contestType:'Clever'},constrict:{num:132,accuracy:100,basePower:10,category:'Physical',desc:"Has a 10% chance to lower the target's Speed by 1 stage.",shortDesc:"10% chance to lower the target's Speed by 1.",id:'constrict',isNonstandard:'Past',name:'Constrict',pp:35,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:10,boosts:{spe:-1}},target:'normal',type:'Normal',contestType:'Tough'},continentalcrush:{num:632,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'continentalcrush',isNonstandard:'Past',name:'Continental Crush',pp:1,priority:0,flags:{},isZ:'rockiumz',secondary:null,target:'normal',type:'Rock',contestType:'Cool'},conversion:{num:160,accuracy:true,basePower:0,category:'Status',desc:"The user's type changes to match the original type of the move in its first move slot. Fails if the user cannot change its type, or if the type is one of the user's current types.",shortDesc:"Changes user's type to match its first move.",id:'conversion',isNonstandard:'Past',name:'Conversion',pp:30,priority:0,flags:{snatch:1},onHit:function onHit(target){var type=this.dex.getMove(target.moveSlots[0].id).type;if(target.hasType(type)||!target.setType(type))return false;this.add('-start',target,'typechange',type);},secondary:null,target:'self',type:'Normal',zMoveBoost:{atk:1,def:1,spa:1,spd:1,spe:1},contestType:'Beautiful'},conversion2:{num:176,accuracy:true,basePower:0,category:'Status',desc:"The user's type changes to match a type that resists or is immune to the type of the last move used by the target, but not either of its current types. The determined type of the move is used rather than the original type. Fails if the target has not made a move, if the user cannot change its type, or if this move would only be able to select one of the user's current types.",shortDesc:"Changes user's type to resist target's last move.",id:'conversion2',isNonstandard:'Past',name:'Conversion 2',pp:30,priority:0,flags:{authentic:1},onHit:function onHit(target,source){if(!target.lastMove){return false;}var possibleTypes=[];var attackType=target.lastMove.type;for(var type in this.dex.data.TypeChart){if(source.hasType(type))continue;var typeCheck=this.dex.data.TypeChart[type].damageTaken[attackType];if(typeCheck===2||typeCheck===3){possibleTypes.push(type);}}if(!possibleTypes.length){return false;}var randomType=this.sample(possibleTypes);if(!source.setType(randomType))return false;this.add('-start',source,'typechange',randomType);},secondary:null,target:'normal',type:'Normal',zMoveEffect:'heal',contestType:'Beautiful'},copycat:{num:383,accuracy:true,basePower:0,category:'Status',desc:"The user uses the last move used by any Pokemon, including itself. Fails if no move has been used, or if the last move used was Assist, Baneful Bunker, Beak Blast, Belch, Bestow, Celebrate, Chatter, Circle Throw, Copycat, Counter, Covet, Crafty Shield, Destiny Bond, Detect, Dragon Tail, Endure, Feint, Focus Punch, Follow Me, Helping Hand, Hold Hands, King's Shield, Mat Block, Me First, Metronome, Mimic, Mirror Coat, Mirror Move, Nature Power, Obstruct, Protect, Rage Powder, Roar, Shell Trap, Sketch, Sleep Talk, Snatch, Spiky Shield, Spotlight, Struggle, Switcheroo, Thief, Transform, Trick, Whirlwind, or any Z-Move.",shortDesc:'Uses the last move used in the battle.',id:'copycat',name:'Copycat',pp:20,priority:0,flags:{},onHit:function onHit(pokemon){var noCopycat=['assist','banefulbunker','beakblast','belch','bestow','celebrate','chatter','circlethrow','copycat','counter','covet','craftyshield','destinybond','detect','dragontail','endure','feint','focuspunch','followme','helpinghand','holdhands','kingsshield','matblock','mefirst','metronome','mimic','mirrorcoat','mirrormove','naturepower','obstruct','protect','ragepowder','roar','shelltrap','sketch','sleeptalk','snatch','spikyshield','spotlight','struggle','switcheroo','thief','transform','trick','whirlwind'];var move=this.lastMove;if(!move)return;if(move.maxPowered)move=this.dex.getMove(move.baseMove);if(noCopycat.includes(move.id)||move.isZ||move.isMax){return false;}this.useMove(move.id,pokemon);},secondary:null,target:'self',type:'Normal',zMoveBoost:{accuracy:1},contestType:'Cute'},coreenforcer:{num:687,accuracy:100,basePower:100,category:'Special',desc:"If the user moves after the target, the target's Ability is rendered ineffective as long as it remains active. If the target uses Baton Pass, the replacement will remain under this effect. If the target's Ability is Battle Bond, Comatose, Disguise, Multitype, Power Construct, RKS System, Schooling, Shields Down, Stance Change, or Zen Mode, this effect does not happen, and receiving the effect through Baton Pass ends the effect immediately.",shortDesc:'Nullifies the foe(s) Ability if the foe(s) move first.',id:'coreenforcer',isNonstandard:'Past',name:'Core Enforcer',pp:10,priority:0,flags:{protect:1,mirror:1},onHit:function onHit(target){if(['battlebond','comatose','disguise','multitype','powerconstruct','rkssystem','schooling','shieldsdown','stancechange','zenmode'].includes(target.ability))return;if(target.newlySwitched||this.queue.willMove(target))return;target.addVolatile('gastroacid');},onAfterSubDamage:function onAfterSubDamage(damage,target){if(['battlebond','comatose','disguise','multitype','powerconstruct','rkssystem','schooling','shieldsdown','stancechange','zenmode'].includes(target.ability))return;if(target.newlySwitched||this.queue.willMove(target))return;target.addVolatile('gastroacid');},secondary:null,target:'allAdjacentFoes',type:'Dragon',zMovePower:140,contestType:'Tough'},corkscrewcrash:{num:638,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'corkscrewcrash',isNonstandard:'Past',name:'Corkscrew Crash',pp:1,priority:0,flags:{},isZ:'steeliumz',secondary:null,target:'normal',type:'Steel',contestType:'Cool'},cosmicpower:{num:322,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Defense and Special Defense by 1 stage.",shortDesc:"Raises the user's Defense and Sp. Def by 1.",id:'cosmicpower',name:'Cosmic Power',pp:20,priority:0,flags:{snatch:1},boosts:{def:1,spd:1},secondary:null,target:'self',type:'Psychic',zMoveBoost:{spd:1},contestType:'Beautiful'},cottonguard:{num:538,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Defense by 3 stages.",shortDesc:"Raises the user's Defense by 3.",id:'cottonguard',isViable:true,name:'Cotton Guard',pp:10,priority:0,flags:{snatch:1},boosts:{def:3},secondary:null,target:'self',type:'Grass',zMoveEffect:'clearnegativeboost',contestType:'Cute'},cottonspore:{num:178,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Speed by 2 stages.",shortDesc:"Lowers the target's Speed by 2.",id:'cottonspore',name:'Cotton Spore',pp:40,priority:0,flags:{powder:1,protect:1,reflectable:1,mirror:1},boosts:{spe:-2},secondary:null,target:'allAdjacentFoes',type:'Grass',zMoveEffect:'clearnegativeboost',contestType:'Beautiful'},counter:{num:68,accuracy:100,basePower:0,damageCallback:function damageCallback(pokemon){if(!pokemon.volatiles['counter'])return 0;return pokemon.volatiles['counter'].damage||1;},category:'Physical',desc:"Deals damage to the last opposing Pokemon to hit the user with a physical attack this turn equal to twice the HP lost by the user from that attack. If the user did not lose HP from the attack, this move deals 1 HP of damage instead. If that opposing Pokemon's position is no longer in use and there is another opposing Pokemon on the field, the damage is done to it instead. Only the last hit of a multi-hit attack is counted. Fails if the user was not hit by an opposing Pokemon's physical attack this turn.",shortDesc:'If hit by physical attack, returns double damage.',id:'counter',name:'Counter',pp:20,priority:-5,flags:{contact:1,protect:1},beforeTurnCallback:function beforeTurnCallback(pokemon){pokemon.addVolatile('counter');},onTryHit:function onTryHit(target,source,move){if(!source.volatiles['counter'])return false;if(source.volatiles['counter'].position===null)return false;},effect:{duration:1,noCopy:true,onStart:function onStart(target,source,move){this.effectData.position=null;this.effectData.damage=0;},onRedirectTargetPriority:-1,onRedirectTarget:function onRedirectTarget(target,source,source2){if(source!==this.effectData.target)return;return source.side.foe.active[this.effectData.position];},onDamagingHit:function onDamagingHit(damage,target,source,move){if(source.side!==target.side&&this.getCategory(move)==='Physical'){this.effectData.position=source.position;this.effectData.damage=2*damage;}}},secondary:null,target:'scripted',type:'Fighting',gmaxPower:75,contestType:'Tough'},courtchange:{num:756,accuracy:100,basePower:0,category:'Status',desc:"Switches the Mist, Light Screen, Reflect, Spikes, Safeguard, Tailwind, Toxic Spikes, Stealth Rock, Water Pledge, Fire Pledge, Grass Pledge, Sticky Web, Aurora Veil, G-Max Steelsurge, and G-Max Wildfire effects from the user's side to the target's side and vice versa.",shortDesc:'Swaps field effects with the foe.',id:'courtchange',isViable:true,name:'Court Change',pp:10,priority:0,flags:{mirror:1},onHitField:function onHitField(target,source){var sourceSide=source.side;var targetSide=source.side.foe;var sideConditions=['mist','lightscreen','reflect','spikes','safeguard','tailwind','toxicspikes','stealthrock','waterpledge','firepledge','grasspledge','stickyweb','auroraveil','gmaxsteelsurge','gmaxwildfire'];var success=false;var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=sideConditions[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var id=_step4.value;var effectName=this.dex.getEffect(id).name;if(sourceSide.sideConditions[id]&&targetSide.sideConditions[id]){var _ref=[targetSide.sideConditions[id],sourceSide.sideConditions[id]];sourceSide.sideConditions[id]=_ref[0];targetSide.sideConditions[id]=_ref[1];this.add('-sideend',sourceSide,effectName,'[silent]');this.add('-sideend',targetSide,effectName,'[silent]');}else if(sourceSide.sideConditions[id]&&!targetSide.sideConditions[id]){targetSide.sideConditions[id]=sourceSide.sideConditions[id];delete sourceSide.sideConditions[id];this.add('-sideend',sourceSide,effectName,'[silent]');}else if(targetSide.sideConditions[id]&&!sourceSide.sideConditions[id]){sourceSide.sideConditions[id]=targetSide.sideConditions[id];delete targetSide.sideConditions[id];this.add('-sideend',targetSide,effectName,'[silent]');}else{continue;}var sourceLayers=sourceSide.sideConditions[id]?sourceSide.sideConditions[id].layers||1:0;var targetLayers=targetSide.sideConditions[id]?targetSide.sideConditions[id].layers||1:0;for(;sourceLayers>0;sourceLayers--){this.add('-sidestart',sourceSide,effectName,'[silent]');}for(;targetLayers>0;targetLayers--){this.add('-sidestart',targetSide,effectName,'[silent]');}success=true;}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}if(!success)return false;this.add('-activate',source,'move: Court Change');},secondary:null,target:'all',type:'Normal'},covet:{num:343,accuracy:100,basePower:60,category:'Physical',desc:"If this attack was successful and the user has not fainted, it steals the target's held item if the user is not holding one. The target's item is not stolen if it is a Mail or Z-Crystal, or if the target is a Kyogre holding a Blue Orb, a Groudon holding a Red Orb, a Giratina holding a Griseous Orb, an Arceus holding a Plate, a Genesect holding a Drive, a Silvally holding a Memory, or a Pokemon that can Mega Evolve holding the Mega Stone for its species. Items lost to this move cannot be regained with Recycle or the Harvest Ability.",shortDesc:"If the user has no item, it steals the target's.",id:'covet',name:'Covet',pp:25,priority:0,flags:{contact:1,protect:1,mirror:1},onAfterHit:function onAfterHit(target,source,move){if(source.item||source.volatiles['gem']){return;}var yourItem=target.takeItem(source);if(!yourItem){return;}if(!this.singleEvent('TakeItem',yourItem,target.itemData,source,target,move,yourItem)||!source.setItem(yourItem)){target.item=yourItem.id;// bypass setItem so we don't break choicelock or anything
return;}this.add('-item',source,yourItem,'[from] move: Covet','[of] '+target);},secondary:null,target:'normal',type:'Normal',contestType:'Cute'},crabhammer:{num:152,accuracy:90,basePower:100,category:'Physical',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'crabhammer',isViable:true,name:'Crabhammer',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},critRatio:2,secondary:null,target:'normal',type:'Water',contestType:'Tough'},craftyshield:{num:578,accuracy:true,basePower:0,category:'Status',desc:"The user and its party members are protected from non-damaging attacks made by other Pokemon, including allies, during this turn. Fails if the user moves last this turn or if this move is already in effect for the user's side.",shortDesc:'Protects allies from Status moves this turn.',id:'craftyshield',name:'Crafty Shield',pp:10,priority:3,flags:{},sideCondition:'craftyshield',onTryHitSide:function onTryHitSide(side,source){return!!this.queue.willAct();},effect:{duration:1,onStart:function onStart(target,source){this.add('-singleturn',source,'Crafty Shield');},onTryHitPriority:3,onTryHit:function onTryHit(target,source,move){if(move&&(move.target==='self'||move.category!=='Status'))return;this.add('-activate',target,'move: Crafty Shield');return this.NOT_FAIL;}},secondary:null,target:'allySide',type:'Fairy',zMoveBoost:{spd:1},contestType:'Clever'},crosschop:{num:238,accuracy:80,basePower:100,category:'Physical',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'crosschop',isViable:true,name:'Cross Chop',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},critRatio:2,secondary:null,target:'normal',type:'Fighting',contestType:'Cool'},crosspoison:{num:440,accuracy:100,basePower:70,category:'Physical',desc:'Has a 10% chance to poison the target and a higher chance for a critical hit.',shortDesc:'High critical hit ratio. 10% chance to poison.',id:'crosspoison',name:'Cross Poison',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:10,status:'psn'},critRatio:2,target:'normal',type:'Poison',contestType:'Cool'},crunch:{num:242,accuracy:100,basePower:80,category:'Physical',desc:"Has a 20% chance to lower the target's Defense by 1 stage.",shortDesc:"20% chance to lower the target's Defense by 1.",id:'crunch',isViable:true,name:'Crunch',pp:15,priority:0,flags:{bite:1,contact:1,protect:1,mirror:1},secondary:{chance:20,boosts:{def:-1}},target:'normal',type:'Dark',contestType:'Tough'},crushclaw:{num:306,accuracy:95,basePower:75,category:'Physical',desc:"Has a 50% chance to lower the target's Defense by 1 stage.",shortDesc:"50% chance to lower the target's Defense by 1.",id:'crushclaw',name:'Crush Claw',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:50,boosts:{def:-1}},target:'normal',type:'Normal',contestType:'Cool'},crushgrip:{num:462,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon,target){return Math.floor(Math.floor((120*(100*Math.floor(target.hp*4096/target.maxhp))+2048-1)/4096)/100)||1;},category:'Physical',desc:"Power is equal to 120 * (target's current HP / target's maximum HP), rounded half down, but not less than 1.",shortDesc:'More power the more HP the target has left.',id:'crushgrip',isNonstandard:'Past',name:'Crush Grip',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',zMovePower:190,gmaxPower:140,contestType:'Tough'},curse:{num:174,accuracy:true,basePower:0,category:'Status',desc:"If the user is not a Ghost type, lowers the user's Speed by 1 stage and raises the user's Attack and Defense by 1 stage. If the user is a Ghost type, the user loses 1/2 of its maximum HP, rounded down and even if it would cause fainting, in exchange for the target losing 1/4 of its maximum HP, rounded down, at the end of each turn while it is active. If the target uses Baton Pass, the replacement will continue to be affected. Fails if there is no target or if the target is already affected.",shortDesc:'Curses if Ghost, else -1 Spe, +1 Atk, +1 Def.',id:'curse',name:'Curse',pp:10,priority:0,flags:{authentic:1},volatileStatus:'curse',onModifyMove:function onModifyMove(move,source,target){if(!source.hasType('Ghost')){// @ts-ignore
move.target=move.nonGhostTarget;}},onTryHit:function onTryHit(target,source,move){if(!source.hasType('Ghost')){delete move.volatileStatus;delete move.onHit;move.self={boosts:{spe:-1,atk:1,def:1}};}else if(move.volatileStatus&&target.volatiles.curse){return false;}},onHit:function onHit(target,source){this.directDamage(source.maxhp/2,source,source);},effect:{onStart:function onStart(pokemon,source){this.add('-start',pokemon,'Curse','[of] '+source);},onResidualOrder:10,onResidual:function onResidual(pokemon){this.damage(pokemon.baseMaxhp/4);}},secondary:null,target:'normal',nonGhostTarget:'self',type:'Ghost',zMoveEffect:'curse',contestType:'Tough'},cut:{num:15,accuracy:95,basePower:50,category:'Physical',shortDesc:'No additional effect.',id:'cut',name:'Cut',pp:30,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',contestType:'Cool'},darkestlariat:{num:663,accuracy:100,basePower:85,category:'Physical',desc:"Ignores the target's stat stage changes, including evasiveness.",shortDesc:"Ignores the target's stat stage changes.",id:'darkestlariat',isViable:true,name:'Darkest Lariat',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},ignoreEvasion:true,ignoreDefensive:true,secondary:null,target:'normal',type:'Dark',contestType:'Cool'},darkpulse:{num:399,accuracy:100,basePower:80,category:'Special',desc:'Has a 20% chance to flinch the target.',shortDesc:'20% chance to flinch the target.',id:'darkpulse',isViable:true,name:'Dark Pulse',pp:15,priority:0,flags:{protect:1,pulse:1,mirror:1,distance:1},secondary:{chance:20,volatileStatus:'flinch'},target:'any',type:'Dark',contestType:'Cool'},darkvoid:{num:464,accuracy:50,basePower:0,category:'Status',desc:"Causes the target to fall asleep. This move cannot be used successfully unless the user's current form, while considering Transform, is Darkrai.",shortDesc:'Darkrai: Causes the foe(s) to fall asleep.',id:'darkvoid',isNonstandard:'Past',name:'Dark Void',pp:10,priority:0,flags:{protect:1,reflectable:1,mirror:1},status:'slp',onTryMove:function onTryMove(pokemon,target,move){if(pokemon.template.species==='Darkrai'||move.hasBounced){return;}this.add('-fail',pokemon,'move: Dark Void');this.hint('Only a Pokemon whose form is Darkrai can use this move.');return null;},secondary:null,target:'allAdjacentFoes',type:'Dark',zMoveEffect:'clearnegativeboost',contestType:'Clever'},dazzlinggleam:{num:605,accuracy:100,basePower:80,category:'Special',desc:'No additional effect.',shortDesc:'No additional effect. Hits adjacent foes.',id:'dazzlinggleam',isViable:true,name:'Dazzling Gleam',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'allAdjacentFoes',type:'Fairy',contestType:'Beautiful'},decorate:{num:777,accuracy:true,basePower:0,category:'Status',desc:"Sharply raises the target's Attack and Special Attack stats.",shortDesc:"Raises the target's Atk and Sp. Atk by 2.",id:'decorate',name:'Decorate',pp:15,priority:0,flags:{mystery:1},secondary:null,boosts:{atk:2,spa:2},target:'normal',type:'Fairy'},defendorder:{num:455,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Defense and Special Defense by 1 stage.",shortDesc:"Raises the user's Defense and Sp. Def by 1.",id:'defendorder',name:'Defend Order',pp:10,priority:0,flags:{snatch:1},boosts:{def:1,spd:1},secondary:null,target:'self',type:'Bug',zMoveBoost:{def:1},contestType:'Clever'},defensecurl:{num:111,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Defense by 1 stage. As long as the user remains active, the power of the user's Ice Ball and Rollout will be doubled (this effect is not stackable).",shortDesc:"Raises the user's Defense by 1.",id:'defensecurl',name:'Defense Curl',pp:40,priority:0,flags:{snatch:1},boosts:{def:1},volatileStatus:'defensecurl',effect:{noCopy:true},secondary:null,target:'self',type:'Normal',zMoveBoost:{accuracy:1},contestType:'Cute'},defog:{num:432,accuracy:true,basePower:0,category:'Status',desc:"Lowers the target's evasiveness by 1 stage. If this move is successful and whether or not the target's evasiveness was affected, the effects of Reflect, Light Screen, Aurora Veil, Safeguard, Mist, Spikes, Toxic Spikes, Stealth Rock, and Sticky Web end for the target's side, and the effects of Spikes, Toxic Spikes, Stealth Rock, and Sticky Web end for the user's side. Ignores a target's substitute, although a substitute will still block the lowering of evasiveness.",shortDesc:"-1 evasion; clears user and target side's hazards.",id:'defog',isViable:true,name:'Defog',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1,authentic:1},onHit:function onHit(target,source,move){var success=false;if(!target.volatiles['substitute']||move.infiltrates)success=!!this.boost({evasion:-1});var removeTarget=['reflect','lightscreen','auroraveil','safeguard','mist','spikes','toxicspikes','stealthrock','stickyweb','gmaxsteelsurge'];var removeAll=['spikes','toxicspikes','stealthrock','stickyweb','gmaxsteelsurge'];var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=removeTarget[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var targetCondition=_step5.value;if(target.side.removeSideCondition(targetCondition)){if(!removeAll.includes(targetCondition))continue;this.add('-sideend',target.side,this.dex.getEffect(targetCondition).name,'[from] move: Defog','[of] '+source);success=true;}}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=removeAll[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var sideCondition=_step6.value;if(source.side.removeSideCondition(sideCondition)){this.add('-sideend',source.side,this.dex.getEffect(sideCondition).name,'[from] move: Defog','[of] '+source);success=true;}}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}this.field.clearTerrain();return success;},secondary:null,target:'normal',type:'Flying',zMoveBoost:{accuracy:1},contestType:'Cool'},destinybond:{num:194,accuracy:true,basePower:0,category:'Status',desc:"Until the user's next move, if an opposing Pokemon's attack knocks the user out, that Pokemon faints as well, unless the attack was Doom Desire or Future Sight. Fails if the user used this move successfully as its last move, disregarding moves used through the Dancer Ability.",shortDesc:'If an opponent knocks out the user, it also faints.',id:'destinybond',isViable:true,name:'Destiny Bond',pp:5,priority:0,flags:{authentic:1},volatileStatus:'destinybond',onPrepareHit:function onPrepareHit(pokemon){return!pokemon.removeVolatile('destinybond');},effect:{onStart:function onStart(pokemon){this.add('-singlemove',pokemon,'Destiny Bond');},onFaint:function onFaint(target,source,effect){if(!source||!effect||target.side===source.side)return;if(effect.effectType==='Move'&&!effect.isFutureMove){if(source.volatiles['dynamax']){this.add('-hint','Dynamaxed Pokémon are immune to Destiny Bond.');return;}this.add('-activate',target,'move: Destiny Bond');source.faint();}},onBeforeMovePriority:-1,onBeforeMove:function onBeforeMove(pokemon,target,move){if(move.id==='destinybond')return;this.debug('removing Destiny Bond before attack');pokemon.removeVolatile('destinybond');},onMoveAborted:function onMoveAborted(pokemon,target,move){pokemon.removeVolatile('destinybond');},onBeforeSwitchOutPriority:1,onBeforeSwitchOut:function onBeforeSwitchOut(pokemon){pokemon.removeVolatile('destinybond');}},secondary:null,target:'self',type:'Ghost',zMoveEffect:'redirect',contestType:'Clever'},detect:{num:197,accuracy:true,basePower:0,category:'Status',desc:"The user is protected from most attacks made by other Pokemon during this turn. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Detect, Endure, King's Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn.",shortDesc:'Prevents moves from affecting the user this turn.',id:'detect',isViable:true,name:'Detect',pp:5,priority:4,flags:{},stallingMove:true,volatileStatus:'protect',onPrepareHit:function onPrepareHit(pokemon){return!!this.queue.willAct()&&this.runEvent('StallMove',pokemon);},onHit:function onHit(pokemon){pokemon.addVolatile('stall');},secondary:null,target:'self',type:'Fighting',zMoveBoost:{evasion:1},contestType:'Cool'},devastatingdrake:{num:652,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'devastatingdrake',isNonstandard:'Past',name:'Devastating Drake',pp:1,priority:0,flags:{},isZ:'dragoniumz',secondary:null,target:'normal',type:'Dragon',contestType:'Cool'},diamondstorm:{num:591,accuracy:95,basePower:100,category:'Physical',desc:"Has a 50% chance to raise the user's Defense by 2 stages.",shortDesc:"50% chance to raise user's Def by 2 for each hit.",id:'diamondstorm',isNonstandard:'Past',isViable:true,name:'Diamond Storm',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:{chance:50,self:{boosts:{def:2}}},target:'allAdjacentFoes',type:'Rock',contestType:'Beautiful'},dig:{num:91,accuracy:100,basePower:80,category:'Physical',desc:'This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Earthquake and Magnitude but takes double damage from them, and is also unaffected by weather. If the user is holding a Power Herb, the move completes in one turn.',shortDesc:'Digs underground turn 1, strikes turn 2.',id:'dig',name:'Dig',pp:10,priority:0,flags:{contact:1,charge:1,protect:1,mirror:1,nonsky:1},onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}this.add('-prepare',attacker,move.name,defender);if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},effect:{duration:2,onImmunity:function onImmunity(type,pokemon){if(type==='sandstorm'||type==='hail')return false;},onInvulnerability:function onInvulnerability(target,source,move){if(['earthquake','magnitude'].includes(move.id)){return;}return false;},onSourceModifyDamage:function onSourceModifyDamage(damage,source,target,move){if(move.id==='earthquake'||move.id==='magnitude'){return this.chainModify(2);}}},secondary:null,target:'normal',type:'Ground',contestType:'Tough'},disable:{num:50,accuracy:100,basePower:0,category:'Status',desc:"For 4 turns, the target's last move used becomes disabled. Fails if one of the target's moves is already disabled, if the target has not made a move, or if the target no longer knows the move.",shortDesc:"For 4 turns, disables the target's last move used.",id:'disable',isViable:true,name:'Disable',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1,authentic:1},volatileStatus:'disable',onTryHit:function onTryHit(target){if(!target.lastMove||target.lastMove.isZ||target.lastMove.isMax){return false;}},effect:{duration:5,noCopy:true,// doesn't get copied by Baton Pass
onStart:function onStart(pokemon,source,effect){// The target hasn't taken its turn, or Cursed Body activated and the move was not used through Dancer or Instruct
if(this.queue.willMove(pokemon)||pokemon===this.activePokemon&&this.activeMove&&!this.activeMove.isExternal){this.effectData.duration--;}if(!pokemon.lastMove){this.debug("pokemon hasn't moved yet");return false;}var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=pokemon.moveSlots[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var moveSlot=_step7.value;if(moveSlot.id===pokemon.lastMove.id){if(!moveSlot.pp){this.debug('Move out of PP');return false;}else{if(effect.id==='cursedbody'){this.add('-start',pokemon,'Disable',moveSlot.move,'[from] ability: Cursed Body','[of] '+source);}else{this.add('-start',pokemon,'Disable',moveSlot.move);}this.effectData.move=pokemon.lastMove.id;return;}}}// this can happen if Disable works on a Z-move
}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}return false;},onResidualOrder:14,onEnd:function onEnd(pokemon){this.add('-end',pokemon,'Disable');},onBeforeMovePriority:7,onBeforeMove:function onBeforeMove(attacker,defender,move){if(!move.isZ&&move.id===this.effectData.move){this.add('cant',attacker,'Disable',move);return false;}},onDisableMove:function onDisableMove(pokemon){var _iteratorNormalCompletion8=true;var _didIteratorError8=false;var _iteratorError8=undefined;try{for(var _iterator8=pokemon.moveSlots[Symbol.iterator](),_step8;!(_iteratorNormalCompletion8=(_step8=_iterator8.next()).done);_iteratorNormalCompletion8=true){var moveSlot=_step8.value;if(moveSlot.id===this.effectData.move){pokemon.disableMove(moveSlot.id);}}}catch(err){_didIteratorError8=true;_iteratorError8=err;}finally{try{if(!_iteratorNormalCompletion8&&_iterator8.return){_iterator8.return();}}finally{if(_didIteratorError8){throw _iteratorError8;}}}}},secondary:null,target:'normal',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Clever'},disarmingvoice:{num:574,accuracy:true,basePower:40,category:'Special',desc:'This move does not check accuracy.',shortDesc:'This move does not check accuracy. Hits foes.',id:'disarmingvoice',name:'Disarming Voice',pp:15,priority:0,flags:{protect:1,mirror:1,sound:1,authentic:1},secondary:null,target:'allAdjacentFoes',type:'Fairy',contestType:'Cute'},discharge:{num:435,accuracy:100,basePower:80,category:'Special',desc:'Has a 30% chance to paralyze the target.',shortDesc:'30% chance to paralyze adjacent Pokemon.',id:'discharge',isViable:true,name:'Discharge',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:{chance:30,status:'par'},target:'allAdjacent',type:'Electric',contestType:'Beautiful'},dive:{num:291,accuracy:100,basePower:80,category:'Physical',desc:'This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Surf and Whirlpool but takes double damage from them, and is also unaffected by weather. If the user is holding a Power Herb, the move completes in one turn.',shortDesc:'Dives underwater turn 1, strikes turn 2.',id:'dive',name:'Dive',pp:10,priority:0,flags:{contact:1,charge:1,protect:1,mirror:1,nonsky:1},onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}if(attacker.hasAbility('gulpmissile')&&attacker.template.species==='Cramorant'&&!attacker.transformed){var forme=attacker.hp<=attacker.maxhp/2?'cramorantgorging':'cramorantgulping';attacker.formeChange(forme,move);}this.add('-prepare',attacker,move.name,defender);if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},effect:{duration:2,onImmunity:function onImmunity(type,pokemon){if(type==='sandstorm'||type==='hail')return false;},onInvulnerability:function onInvulnerability(target,source,move){if(['surf','whirlpool'].includes(move.id)){return;}return false;},onSourceModifyDamage:function onSourceModifyDamage(damage,source,target,move){if(move.id==='surf'||move.id==='whirlpool'){return this.chainModify(2);}}},secondary:null,target:'normal',type:'Water',contestType:'Beautiful'},dizzypunch:{num:146,accuracy:100,basePower:70,category:'Physical',desc:'Has a 20% chance to confuse the target.',shortDesc:'20% chance to confuse the target.',id:'dizzypunch',isNonstandard:'Past',name:'Dizzy Punch',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},secondary:{chance:20,volatileStatus:'confusion'},target:'normal',type:'Normal',contestType:'Cute'},doomdesire:{num:353,accuracy:100,basePower:140,category:'Special',desc:"Deals damage two turns after this move is used. At the end of that turn, the damage is calculated at that time and dealt to the Pokemon at the position the target had when the move was used. If the user is no longer active at the time, damage is calculated based on the user's natural Special Attack stat, types, and level, with no boosts from its held item or Ability. Fails if this move or Future Sight is already in effect for the target's position.",shortDesc:'Hits two turns after being used.',id:'doomdesire',name:'Doom Desire',pp:5,priority:0,flags:{},isFutureMove:true,onTry:function onTry(source,target){if(!target.side.addSlotCondition(target,'futuremove'))return false;Object.assign(target.side.slotConditions[target.position]['futuremove'],{move:'doomdesire',source:source,moveData:{id:'doomdesire',name:'Doom Desire',accuracy:100,basePower:140,category:'Special',priority:0,flags:{},effectType:'Move',isFutureMove:true,type:'Steel'}});this.add('-start',source,'Doom Desire');return null;},secondary:null,target:'normal',type:'Steel',contestType:'Beautiful'},doubleedge:{num:38,accuracy:100,basePower:120,category:'Physical',desc:'If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.',shortDesc:'Has 33% recoil.',id:'doubleedge',isViable:true,name:'Double-Edge',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},recoil:[33,100],secondary:null,target:'normal',type:'Normal',contestType:'Tough'},doublehit:{num:458,accuracy:90,basePower:35,category:'Physical',desc:"Hits twice. If the first hit breaks the target's substitute, it will take damage for the second hit.",shortDesc:'Hits 2 times in one turn.',id:'doublehit',name:'Double Hit',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},multihit:2,secondary:null,target:'normal',type:'Normal',zMovePower:140,gmaxPower:120,contestType:'Cool'},doubleironbash:{num:742,accuracy:100,basePower:60,category:'Physical',desc:"Hits twice. If the first hit breaks the target's substitute, it will take damage for the second hit. Has a 30% chance to flinch the target.",shortDesc:'Hits twice. 30% chance to flinch.',id:'doubleironbash',isViable:true,name:'Double Iron Bash',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},multihit:2,secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Steel',zMovePower:180,gmaxPower:140,contestType:'Clever'},doublekick:{num:24,accuracy:100,basePower:30,category:'Physical',desc:"Hits twice. If the first hit breaks the target's substitute, it will take damage for the second hit.",shortDesc:'Hits 2 times in one turn.',id:'doublekick',name:'Double Kick',pp:30,priority:0,flags:{contact:1,protect:1,mirror:1},multihit:2,secondary:null,target:'normal',type:'Fighting',gmaxPower:80,contestType:'Cool'},doubleslap:{num:3,accuracy:85,basePower:15,category:'Physical',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.",shortDesc:'Hits 2-5 times in one turn.',id:'doubleslap',isNonstandard:'Past',name:'Double Slap',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},multihit:[2,5],secondary:null,target:'normal',type:'Normal',contestType:'Cute'},doubleteam:{num:104,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's evasiveness by 1 stage.",shortDesc:"Raises the user's evasiveness by 1.",id:'doubleteam',name:'Double Team',pp:15,priority:0,flags:{snatch:1},boosts:{evasion:1},secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Cool'},dracometeor:{num:434,accuracy:90,basePower:130,category:'Special',desc:"Lowers the user's Special Attack by 2 stages.",shortDesc:"Lowers the user's Sp. Atk by 2.",id:'dracometeor',isViable:true,name:'Draco Meteor',pp:5,priority:0,flags:{protect:1,mirror:1},self:{boosts:{spa:-2}},secondary:null,target:'normal',type:'Dragon',contestType:'Beautiful'},dragonascent:{num:620,accuracy:100,basePower:120,category:'Physical',desc:"Lowers the user's Defense and Special Defense by 1 stage.",shortDesc:"Lowers the user's Defense and Sp. Def by 1.",id:'dragonascent',isNonstandard:'Past',name:'Dragon Ascent',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1,distance:1},self:{boosts:{def:-1,spd:-1}},target:'any',type:'Flying',contestType:'Beautiful'},dragonbreath:{num:225,accuracy:100,basePower:60,category:'Special',desc:'Has a 30% chance to paralyze the target.',shortDesc:'30% chance to paralyze the target.',id:'dragonbreath',name:'Dragon Breath',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:{chance:30,status:'par'},target:'normal',type:'Dragon',contestType:'Cool'},dragonclaw:{num:337,accuracy:100,basePower:80,category:'Physical',shortDesc:'No additional effect.',id:'dragonclaw',isViable:true,name:'Dragon Claw',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Dragon',contestType:'Cool'},dragondance:{num:349,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Attack and Speed by 1 stage.",shortDesc:"Raises the user's Attack and Speed by 1.",id:'dragondance',isViable:true,name:'Dragon Dance',pp:20,priority:0,flags:{snatch:1,dance:1},boosts:{atk:1,spe:1},secondary:null,target:'self',type:'Dragon',zMoveEffect:'clearnegativeboost',contestType:'Cool'},dragondarts:{num:751,accuracy:100,basePower:50,category:'Physical',desc:'Hits two times with smart targeting. In singles, hits the foe twice. In Doubles, if hitting either foe would fail (from immunity, protection moves, semi-invulnerability, absorption abilities, or accuracy), hits the other foe twice. Otherwise, hits the target once, and then the other foe once. Target redirection (Follow Me, etc) causes it to hit that target twice.',shortDesc:'Hits 2x (hit 2 targets other foe smartly)',id:'dragondarts',name:'Dragon Darts',pp:10,priority:0,flags:{protect:1,mirror:1},multihit:2,smartTarget:true,secondary:null,target:'normal',type:'Dragon',gmaxPower:130},dragonhammer:{num:692,accuracy:100,basePower:90,category:'Physical',shortDesc:'No additional effect.',id:'dragonhammer',isNonstandard:'Past',name:'Dragon Hammer',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Dragon',contestType:'Tough'},dragonpulse:{num:406,accuracy:100,basePower:85,category:'Special',shortDesc:'No additional effect.',id:'dragonpulse',isViable:true,name:'Dragon Pulse',pp:10,priority:0,flags:{protect:1,pulse:1,mirror:1,distance:1},secondary:null,target:'any',type:'Dragon',contestType:'Beautiful'},dragonrage:{num:82,accuracy:100,basePower:0,damage:40,category:'Special',shortDesc:'Deals 40 HP of damage to the target.',id:'dragonrage',isNonstandard:'Past',name:'Dragon Rage',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Dragon',contestType:'Cool'},dragonrush:{num:407,accuracy:75,basePower:100,category:'Physical',desc:'Has a 20% chance to flinch the target. Damage doubles and no accuracy check is done if the target has used Minimize while active.',shortDesc:'20% chance to flinch the target.',id:'dragonrush',name:'Dragon Rush',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:20,volatileStatus:'flinch'},target:'normal',type:'Dragon',contestType:'Tough'},dragontail:{num:525,accuracy:90,basePower:60,category:'Physical',desc:'If both the user and the target have not fainted, the target is forced to switch out and be replaced with a random unfainted ally. This effect fails if the target used Ingrain previously, has the Suction Cups Ability, or this move hit a substitute.',shortDesc:'Forces the target to switch to a random ally.',id:'dragontail',isViable:true,name:'Dragon Tail',pp:10,priority:-6,flags:{contact:1,protect:1,mirror:1},forceSwitch:true,target:'normal',type:'Dragon',contestType:'Tough'},drainingkiss:{num:577,accuracy:100,basePower:50,category:'Special',desc:'The user recovers 3/4 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.',shortDesc:'User recovers 75% of the damage dealt.',id:'drainingkiss',name:'Draining Kiss',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,heal:1},drain:[3,4],secondary:null,target:'normal',type:'Fairy',contestType:'Cute'},drainpunch:{num:409,accuracy:100,basePower:75,category:'Physical',desc:'The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.',shortDesc:'User recovers 50% of the damage dealt.',id:'drainpunch',isViable:true,name:'Drain Punch',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1,heal:1},drain:[1,2],secondary:null,target:'normal',type:'Fighting',contestType:'Tough'},dreameater:{num:138,accuracy:100,basePower:100,category:'Special',desc:'The target is unaffected by this move unless it is asleep. The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.',shortDesc:'User gains 1/2 HP inflicted. Sleeping target only.',id:'dreameater',name:'Dream Eater',pp:15,priority:0,flags:{protect:1,mirror:1,heal:1},drain:[1,2],onTryImmunity:function onTryImmunity(target){return target.status==='slp'||target.hasAbility('comatose');},secondary:null,target:'normal',type:'Psychic',contestType:'Clever'},drillpeck:{num:65,accuracy:100,basePower:80,category:'Physical',shortDesc:'No additional effect.',id:'drillpeck',name:'Drill Peck',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1,distance:1},secondary:null,target:'any',type:'Flying',contestType:'Cool'},drillrun:{num:529,accuracy:95,basePower:80,category:'Physical',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'drillrun',isViable:true,name:'Drill Run',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},critRatio:2,secondary:null,target:'normal',type:'Ground',contestType:'Tough'},drumbeating:{num:778,accuracy:100,basePower:80,category:'Physical',desc:"Has a 100% chance to lower the target's Speed by 1 stage.",shortDesc:"100% chance to lower the target's Speed by 1.",id:'drumbeating',isViable:true,name:'Drum Beating',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,boosts:{spe:-1}},target:'normal',type:'Grass'},dualchop:{num:530,accuracy:90,basePower:40,category:'Physical',desc:"Hits twice. If the first hit breaks the target's substitute, it will take damage for the second hit.",shortDesc:'Hits 2 times in one turn.',id:'dualchop',name:'Dual Chop',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},multihit:2,secondary:null,target:'normal',type:'Dragon',gmaxPower:130,contestType:'Tough'},dynamaxcannon:{num:744,accuracy:100,basePower:100,category:'Special',desc:'Deals double damage against Dynamax and Gigantamax Pokemon.',shortDesc:'Double damage against Dynamax/Gigantamax.',id:'dynamaxcannon',isViable:true,name:'Dynamax Cannon',pp:5,priority:0,flags:{protect:1},secondary:null,target:'normal',type:'Dragon'},dynamicpunch:{num:223,accuracy:50,basePower:100,category:'Physical',desc:'Has a 100% chance to confuse the target.',shortDesc:'100% chance to confuse the target.',id:'dynamicpunch',name:'Dynamic Punch',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},secondary:{chance:100,volatileStatus:'confusion'},target:'normal',type:'Fighting',contestType:'Cool'},earthpower:{num:414,accuracy:100,basePower:90,category:'Special',desc:"Has a 10% chance to lower the target's Special Defense by 1 stage.",shortDesc:"10% chance to lower the target's Sp. Def by 1.",id:'earthpower',isViable:true,name:'Earth Power',pp:10,priority:0,flags:{protect:1,mirror:1,nonsky:1},secondary:{chance:10,boosts:{spd:-1}},target:'normal',type:'Ground',contestType:'Beautiful'},earthquake:{num:89,accuracy:100,basePower:100,category:'Physical',desc:'Damage doubles if the target is using Dig.',shortDesc:'Hits adjacent Pokemon. Double damage on Dig.',id:'earthquake',isViable:true,name:'Earthquake',pp:10,priority:0,flags:{protect:1,mirror:1,nonsky:1},secondary:null,target:'allAdjacent',type:'Ground',contestType:'Tough'},echoedvoice:{num:497,accuracy:100,basePower:40,basePowerCallback:function basePowerCallback(){if(this.field.pseudoWeather.echoedvoice){return 40*this.field.pseudoWeather.echoedvoice.multiplier;}return 40;},category:'Special',desc:"For every consecutive turn that this move is used by at least one Pokemon, this move's power is multiplied by the number of turns to pass, but not more than 5.",shortDesc:'Power increases when used on consecutive turns.',id:'echoedvoice',name:'Echoed Voice',pp:15,priority:0,flags:{protect:1,mirror:1,sound:1,authentic:1},onTry:function onTry(){this.field.addPseudoWeather('echoedvoice');},effect:{duration:2,onStart:function onStart(){this.effectData.multiplier=1;},onRestart:function onRestart(){if(this.effectData.duration!==2){this.effectData.duration=2;if(this.effectData.multiplier<5){this.effectData.multiplier++;}}}},secondary:null,target:'normal',type:'Normal',contestType:'Beautiful'},eerieimpulse:{num:598,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Special Attack by 2 stages.",shortDesc:"Lowers the target's Sp. Atk by 2.",id:'eerieimpulse',name:'Eerie Impulse',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1},boosts:{spa:-2},secondary:null,target:'normal',type:'Electric',zMoveBoost:{spd:1},contestType:'Clever'},eggbomb:{num:121,accuracy:75,basePower:100,category:'Physical',shortDesc:'No additional effect.',id:'eggbomb',isNonstandard:'Past',name:'Egg Bomb',pp:10,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',contestType:'Cute'},electricterrain:{num:604,accuracy:true,basePower:0,category:'Status',desc:'For 5 turns, the terrain becomes Electric Terrain. During the effect, the power of Electric-type attacks made by grounded Pokemon is multiplied by 1.3 and grounded Pokemon cannot fall asleep; Pokemon already asleep do not wake up. Camouflage transforms the user into an Electric type, Nature Power becomes Thunderbolt, and Secret Power has a 30% chance to cause paralysis. Fails if the current terrain is Electric Terrain.',shortDesc:"5 turns. Grounded: +Electric power, can't sleep.",id:'electricterrain',name:'Electric Terrain',pp:10,priority:0,flags:{nonsky:1},terrain:'electricterrain',effect:{duration:5,durationCallback:function durationCallback(source,effect){if(source&&source.hasItem('terrainextender')){return 8;}return 5;},onSetStatus:function onSetStatus(status,target,source,effect){if(status.id==='slp'&&target.isGrounded()&&!target.isSemiInvulnerable()){if(effect.effectType==='Move'&&!effect.secondaries){this.add('-activate',target,'move: Electric Terrain');}return false;}},onTryAddVolatile:function onTryAddVolatile(status,target){if(!target.isGrounded()||target.isSemiInvulnerable())return;if(status.id==='yawn'){this.add('-activate',target,'move: Electric Terrain');return null;}},onBasePower:function onBasePower(basePower,attacker,defender,move){if(move.type==='Electric'&&attacker.isGrounded()&&!attacker.isSemiInvulnerable()){this.debug('electric terrain boost');return this.chainModify([0x14cd,0x1000]);}},onStart:function onStart(battle,source,effect){if(effect&&effect.effectType==='Ability'){this.add('-fieldstart','move: Electric Terrain','[from] ability: '+effect,'[of] '+source);}else{this.add('-fieldstart','move: Electric Terrain');}},onResidualOrder:21,onResidualSubOrder:2,onEnd:function onEnd(){this.add('-fieldend','move: Electric Terrain');}},secondary:null,target:'all',type:'Electric',zMoveBoost:{spe:1},contestType:'Clever'},electrify:{num:582,accuracy:true,basePower:0,category:'Status',desc:"Causes the target's move to become Electric type this turn. Among effects that can change a move's type, this effect happens last. Fails if the target already moved this turn.",shortDesc:"Changes the target's move to Electric this turn.",id:'electrify',name:'Electrify',pp:20,priority:0,flags:{protect:1,mirror:1,mystery:1},volatileStatus:'electrify',onTryHit:function onTryHit(target){if(!this.queue.willMove(target)&&target.activeTurns)return false;},effect:{duration:1,onStart:function onStart(target){this.add('-singleturn',target,'move: Electrify');},onModifyTypePriority:-2,onModifyType:function onModifyType(move){if(move.id!=='struggle'){this.debug('Electrify making move type electric');move.type='Electric';}}},secondary:null,target:'normal',type:'Electric',zMoveBoost:{spa:1},contestType:'Clever'},electroball:{num:486,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon,target){var ratio=Math.floor(pokemon.getStat('spe')/target.getStat('spe'));if(!isFinite(ratio))ratio=0;var bp=[40,60,80,120,150][Math.min(ratio,4)];this.debug(bp+' bp');return bp;},category:'Special',desc:"The power of this move depends on (user's current Speed / target's current Speed), rounded down. Power is equal to 150 if the result is 4 or more, 120 if 3, 80 if 2, 60 if 1, 40 if less than 1. If the target's current Speed is 0, this move's power is 40.",shortDesc:'More power the faster the user is than the target.',id:'electroball',name:'Electro Ball',pp:10,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Electric',zMovePower:160,gmaxPower:130,contestType:'Cool'},electroweb:{num:527,accuracy:95,basePower:55,category:'Special',desc:"Has a 100% chance to lower the target's Speed by 1 stage.",shortDesc:'100% chance to lower the foe(s) Speed by 1.',id:'electroweb',name:'Electroweb',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,boosts:{spe:-1}},target:'allAdjacentFoes',type:'Electric',contestType:'Beautiful'},embargo:{num:373,accuracy:100,basePower:0,category:'Status',desc:"For 5 turns, the target's held item has no effect. An item's effect of causing forme changes is unaffected, but any other effects from such items are negated. During the effect, Fling and Natural Gift are prevented from being used by the target. Items thrown at the target with Fling will still activate for it. If the target uses Baton Pass, the replacement will remain unable to use items.",shortDesc:"For 5 turns, the target's item has no effect.",id:'embargo',isNonstandard:'Past',name:'Embargo',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1},volatileStatus:'embargo',effect:{duration:5,onStart:function onStart(pokemon){this.add('-start',pokemon,'Embargo');},// Item suppression implemented in Pokemon.ignoringItem() within sim/pokemon.js
onResidualOrder:18,onEnd:function onEnd(pokemon){this.add('-end',pokemon,'Embargo');}},secondary:null,target:'normal',type:'Dark',zMoveBoost:{spa:1},contestType:'Clever'},ember:{num:52,accuracy:100,basePower:40,category:'Special',desc:'Has a 10% chance to burn the target.',shortDesc:'10% chance to burn the target.',id:'ember',name:'Ember',pp:25,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,status:'brn'},target:'normal',type:'Fire',contestType:'Cute'},encore:{num:227,accuracy:100,basePower:0,category:'Status',desc:'For its next 3 turns, the target is forced to repeat its last move used. If the affected move runs out of PP, the effect ends. Fails if the target is already under this effect, if it has not made a move, if the move has 0 PP, or if the move is Assist, Copycat, Encore, Me First, Metronome, Mimic, Mirror Move, Nature Power, Sketch, Sleep Talk, Struggle, Transform, or any Z-Move.',shortDesc:'Target repeats its last move for its next 3 turns.',id:'encore',isViable:true,name:'Encore',pp:5,priority:0,flags:{protect:1,reflectable:1,mirror:1,authentic:1},volatileStatus:'encore',effect:{duration:3,noCopy:true,// doesn't get copied by Z-Baton Pass
onStart:function onStart(target){var noEncore=['assist','copycat','encore','mefirst','metronome','mimic','mirrormove','naturepower','sketch','sleeptalk','struggle','transform'];var move=target.lastMove;if(!move||target.volatiles['dynamax'])return false;if(move.maxPowered)move=this.dex.getMove(move.baseMove);var moveIndex=target.moves.indexOf(move.id);if(move.isZ||noEncore.includes(move.id)||!target.moveSlots[moveIndex]||target.moveSlots[moveIndex].pp<=0){// it failed
return false;}this.effectData.move=move.id;this.add('-start',target,'Encore');if(!this.queue.willMove(target)){this.effectData.duration++;}},onOverrideAction:function onOverrideAction(pokemon,target,move){if(move.id!==this.effectData.move)return this.effectData.move;},onResidualOrder:13,onResidual:function onResidual(target){if(target.moves.includes(this.effectData.move)&&target.moveSlots[target.moves.indexOf(this.effectData.move)].pp<=0){// early termination if you run out of PP
target.removeVolatile('encore');}},onEnd:function onEnd(target){this.add('-end',target,'Encore');},onDisableMove:function onDisableMove(pokemon){if(!this.effectData.move||!pokemon.hasMove(this.effectData.move)){return;}var _iteratorNormalCompletion9=true;var _didIteratorError9=false;var _iteratorError9=undefined;try{for(var _iterator9=pokemon.moveSlots[Symbol.iterator](),_step9;!(_iteratorNormalCompletion9=(_step9=_iterator9.next()).done);_iteratorNormalCompletion9=true){var moveSlot=_step9.value;if(moveSlot.id!==this.effectData.move){pokemon.disableMove(moveSlot.id);}}}catch(err){_didIteratorError9=true;_iteratorError9=err;}finally{try{if(!_iteratorNormalCompletion9&&_iterator9.return){_iterator9.return();}}finally{if(_didIteratorError9){throw _iteratorError9;}}}}},secondary:null,target:'normal',type:'Normal',zMoveBoost:{spe:1},contestType:'Cute'},endeavor:{num:283,accuracy:100,basePower:0,damageCallback:function damageCallback(pokemon,target){return target.getUndynamaxedHP()-pokemon.hp;},category:'Physical',desc:"Deals damage to the target equal to (target's current HP - user's current HP). The target is unaffected if its current HP is less than or equal to the user's current HP.",shortDesc:"Lowers the target's HP to the user's HP.",id:'endeavor',isViable:true,name:'Endeavor',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},onTryImmunity:function onTryImmunity(target,pokemon){return pokemon.hp<target.hp;},secondary:null,target:'normal',type:'Normal',zMovePower:160,gmaxPower:130,contestType:'Tough'},endure:{num:203,accuracy:true,basePower:0,category:'Status',desc:"The user will survive attacks made by other Pokemon during this turn with at least 1 HP. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Detect, Endure, King's Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn.",shortDesc:'User survives attacks this turn with at least 1 HP.',id:'endure',name:'Endure',pp:10,priority:4,flags:{},stallingMove:true,volatileStatus:'endure',onTryHit:function onTryHit(pokemon){return this.queue.willAct()&&this.runEvent('StallMove',pokemon);},onHit:function onHit(pokemon){pokemon.addVolatile('stall');},effect:{duration:1,onStart:function onStart(target){this.add('-singleturn',target,'move: Endure');},onDamagePriority:-10,onDamage:function onDamage(damage,target,source,effect){if(effect&&effect.effectType==='Move'&&damage>=target.hp){this.add('-activate',target,'move: Endure');return target.hp-1;}}},secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Tough'},energyball:{num:412,accuracy:100,basePower:90,category:'Special',desc:"Has a 10% chance to lower the target's Special Defense by 1 stage.",shortDesc:"10% chance to lower the target's Sp. Def by 1.",id:'energyball',isViable:true,name:'Energy Ball',pp:10,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:{chance:10,boosts:{spd:-1}},target:'normal',type:'Grass',contestType:'Beautiful'},entrainment:{num:494,accuracy:100,basePower:0,category:'Status',desc:"Causes the target's Ability to become the same as the user's. Fails if the target's Ability is Battle Bond, Comatose, Disguise, Multitype, Power Construct, RKS System, Schooling, Shields Down, Stance Change, Truant, or the same Ability as the user, or if the user's Ability is Battle Bond, Comatose, Disguise, Flower Gift, Forecast, Illusion, Imposter, Multitype, Power Construct, Power of Alchemy, Receiver, RKS System, Schooling, Shields Down, Stance Change, Trace, or Zen Mode.",shortDesc:"The target's Ability changes to match the user's.",id:'entrainment',name:'Entrainment',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},onTryHit:function onTryHit(target,source){if(target===source||target.volatiles['dynamax'])return false;var bannedTargetAbilities=['battlebond','comatose','disguise','multitype','powerconstruct','rkssystem','schooling','shieldsdown','stancechange','truant'];var bannedSourceAbilities=['battlebond','comatose','disguise','flowergift','forecast','illusion','imposter','multitype','powerconstruct','powerofalchemy','receiver','rkssystem','schooling','shieldsdown','stancechange','trace','zenmode'];if(bannedTargetAbilities.includes(target.ability)||bannedSourceAbilities.includes(source.ability)||target.ability===source.ability){return false;}},onHit:function onHit(target,source){var oldAbility=target.setAbility(source.ability);if(oldAbility){this.add('-ability',target,target.getAbility().name,'[from] move: Entrainment');return;}return false;},secondary:null,target:'normal',type:'Normal',zMoveBoost:{spd:1},contestType:'Cute'},eruption:{num:284,accuracy:100,basePower:150,basePowerCallback:function basePowerCallback(pokemon,target,move){return move.basePower*pokemon.hp/pokemon.maxhp;},category:'Special',desc:"Power is equal to (user's current HP * 150 / user's maximum HP), rounded down, but not less than 1.",shortDesc:"Less power as user's HP decreases. Hits foe(s).",id:'eruption',isViable:true,name:'Eruption',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'allAdjacentFoes',type:'Fire',contestType:'Beautiful'},eternabeam:{num:795,accuracy:90,basePower:160,category:'Special',desc:'If this move is successful, the user must recharge on the following turn and cannot select a move.',shortDesc:'User cannot move next turn.',id:'eternabeam',name:'Eternabeam',pp:10,priority:0,flags:{recharge:1,protect:1,mirror:1},self:{volatileStatus:'mustrecharge'},secondary:null,target:'normal',type:'Dragon'},explosion:{num:153,accuracy:100,basePower:250,category:'Physical',desc:'The user faints after using this move, even if this move fails for having no target. This move is prevented from executing if any active Pokemon has the Damp Ability.',shortDesc:'Hits adjacent Pokemon. The user faints.',id:'explosion',isViable:true,name:'Explosion',pp:5,priority:0,flags:{protect:1,mirror:1},selfdestruct:'always',secondary:null,target:'allAdjacent',type:'Normal',contestType:'Beautiful'},extrasensory:{num:326,accuracy:100,basePower:80,category:'Special',desc:'Has a 10% chance to flinch the target.',shortDesc:'10% chance to flinch the target.',id:'extrasensory',isViable:true,name:'Extrasensory',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,volatileStatus:'flinch'},target:'normal',type:'Psychic',contestType:'Cool'},extremeevoboost:{num:702,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Attack, Defense, Special Attack, Special Defense, and Speed by 2 stages.",shortDesc:"Raises user's Atk, Def, SpA, SpD, and Spe by 2.",id:'extremeevoboost',isNonstandard:'Past',isViable:true,name:'Extreme Evoboost',pp:1,priority:0,flags:{},isZ:'eeviumz',boosts:{atk:2,def:2,spa:2,spd:2,spe:2},secondary:null,target:'self',type:'Normal',contestType:'Beautiful'},extremespeed:{num:245,accuracy:100,basePower:80,category:'Physical',desc:'No additional effect.',shortDesc:'Nearly always goes first.',id:'extremespeed',isViable:true,name:'Extreme Speed',pp:5,priority:2,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',contestType:'Cool'},facade:{num:263,accuracy:100,basePower:70,category:'Physical',desc:"Power doubles if the user is burned, paralyzed, or poisoned. The physical damage halving effect from the user's burn is ignored.",shortDesc:'Power doubles if user is burn/poison/paralyzed.',id:'facade',isViable:true,name:'Facade',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},onBasePower:function onBasePower(basePower,pokemon){if(pokemon.status&&pokemon.status!=='slp'){return this.chainModify(2);}},secondary:null,target:'normal',type:'Normal',contestType:'Cute'},fairylock:{num:587,accuracy:true,basePower:0,category:'Status',desc:'Prevents all active Pokemon from switching next turn. A Pokemon can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. Fails if the effect is already active.',shortDesc:'Prevents all Pokemon from switching next turn.',id:'fairylock',name:'Fairy Lock',pp:10,priority:0,flags:{mirror:1,authentic:1},pseudoWeather:'fairylock',effect:{duration:2,onStart:function onStart(target){this.add('-fieldactivate','move: Fairy Lock');},onTrapPokemon:function onTrapPokemon(pokemon){pokemon.tryTrap();}},secondary:null,target:'all',type:'Fairy',zMoveBoost:{def:1},contestType:'Clever'},fairywind:{num:584,accuracy:100,basePower:40,category:'Special',shortDesc:'No additional effect.',id:'fairywind',name:'Fairy Wind',pp:30,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Fairy',contestType:'Beautiful'},fakeout:{num:252,accuracy:100,basePower:40,category:'Physical',desc:"Has a 100% chance to flinch the target. Fails unless it is the user's first turn on the field.",shortDesc:'Hits first. First turn out only. 100% flinch chance.',id:'fakeout',isViable:true,name:'Fake Out',pp:10,priority:3,flags:{contact:1,protect:1,mirror:1},onTry:function onTry(pokemon,target){if(pokemon.activeTurns>1){this.attrLastMove('[still]');this.add('-fail',pokemon);this.hint('Fake Out only works on your first turn out.');return null;}},secondary:{chance:100,volatileStatus:'flinch'},target:'normal',type:'Normal',contestType:'Cute'},faketears:{num:313,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Special Defense by 2 stages.",shortDesc:"Lowers the target's Sp. Def by 2.",id:'faketears',name:'Fake Tears',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},boosts:{spd:-2},secondary:null,target:'normal',type:'Dark',zMoveBoost:{spa:1},contestType:'Cute'},falsesurrender:{num:793,accuracy:true,basePower:80,category:'Physical',shortDesc:'This move does not check accuracy.',id:'falsesurrender',isViable:true,name:'False Surrender',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Dark'},falseswipe:{num:206,accuracy:100,basePower:40,category:'Physical',desc:'Leaves the target with at least 1 HP.',shortDesc:'Always leaves the target with at least 1 HP.',id:'falseswipe',name:'False Swipe',pp:40,priority:0,flags:{contact:1,protect:1,mirror:1},noFaint:true,secondary:null,target:'normal',type:'Normal',contestType:'Cool'},featherdance:{num:297,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Attack by 2 stages.",shortDesc:"Lowers the target's Attack by 2.",id:'featherdance',name:'Feather Dance',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1,dance:1},boosts:{atk:-2},secondary:null,target:'normal',type:'Flying',zMoveBoost:{def:1},contestType:'Beautiful'},feint:{num:364,accuracy:100,basePower:30,category:'Physical',desc:"If this move is successful, it breaks through the target's Baneful Bunker, Detect, King's Shield, Protect, or Spiky Shield for this turn, allowing other Pokemon to attack the target normally. If the target's side is protected by Crafty Shield, Mat Block, Quick Guard, or Wide Guard, that protection is also broken for this turn and other Pokemon may attack the target's side normally.",shortDesc:'Nullifies Detect, Protect, and Quick/Wide Guard.',id:'feint',name:'Feint',pp:10,priority:2,flags:{mirror:1},breaksProtect:true,// Breaking protection implemented in scripts.js
secondary:null,target:'normal',type:'Normal',contestType:'Clever'},feintattack:{num:185,accuracy:true,basePower:60,category:'Physical',shortDesc:'This move does not check accuracy.',id:'feintattack',isNonstandard:'Past',name:'Feint Attack',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Dark',contestType:'Clever'},fellstinger:{num:565,accuracy:100,basePower:50,category:'Physical',desc:"Raises the user's Attack by 3 stages if this move knocks out the target.",shortDesc:"Raises user's Attack by 3 if this KOes the target.",id:'fellstinger',name:'Fell Stinger',pp:25,priority:0,flags:{contact:1,protect:1,mirror:1},onAfterMoveSecondarySelf:function onAfterMoveSecondarySelf(pokemon,target,move){if(!target||target.fainted||target.hp<=0)this.boost({atk:3},pokemon,pokemon,move);},secondary:null,target:'normal',type:'Bug',contestType:'Cool'},fierydance:{num:552,accuracy:100,basePower:80,category:'Special',desc:"Has a 50% chance to raise the user's Special Attack by 1 stage.",shortDesc:"50% chance to raise the user's Sp. Atk by 1.",id:'fierydance',isNonstandard:'Past',name:'Fiery Dance',pp:10,priority:0,flags:{protect:1,mirror:1,dance:1},secondary:{chance:50,self:{boosts:{spa:1}}},target:'normal',type:'Fire',contestType:'Beautiful'},finalgambit:{num:515,accuracy:100,basePower:0,damageCallback:function damageCallback(pokemon){var damage=pokemon.hp;pokemon.faint();return damage;},category:'Special',desc:"Deals damage to the target equal to the user's current HP. If this move is successful, the user faints.",shortDesc:"Does damage equal to the user's HP. User faints.",id:'finalgambit',name:'Final Gambit',pp:5,priority:0,flags:{protect:1},selfdestruct:'ifHit',secondary:null,target:'normal',type:'Fighting',zMovePower:180,contestType:'Tough'},fireblast:{num:126,accuracy:85,basePower:110,category:'Special',desc:'Has a 10% chance to burn the target.',shortDesc:'10% chance to burn the target.',id:'fireblast',isViable:true,name:'Fire Blast',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,status:'brn'},target:'normal',type:'Fire',contestType:'Beautiful'},firefang:{num:424,accuracy:95,basePower:65,category:'Physical',desc:'Has a 10% chance to burn the target and a 10% chance to flinch it.',shortDesc:'10% chance to burn. 10% chance to flinch.',id:'firefang',isViable:true,name:'Fire Fang',pp:15,priority:0,flags:{bite:1,contact:1,protect:1,mirror:1},secondaries:[{chance:10,status:'brn'},{chance:10,volatileStatus:'flinch'}],target:'normal',type:'Fire',contestType:'Cool'},firelash:{num:680,accuracy:100,basePower:80,category:'Physical',desc:"Has a 100% chance to lower the target's Defense by 1 stage.",shortDesc:"100% chance to lower the target's Defense by 1.",id:'firelash',isViable:true,name:'Fire Lash',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:100,boosts:{def:-1}},target:'normal',type:'Fire',contestType:'Cute'},firepledge:{num:519,accuracy:100,basePower:80,basePowerCallback:function basePowerCallback(target,source,move){if(['grasspledge','waterpledge'].includes(move.sourceEffect)){this.add('-combine');return 150;}return 80;},category:'Special',desc:"If one of the user's allies chose to use Grass Pledge or Water Pledge this turn and has not moved yet, it takes its turn immediately after the user and the user's move does nothing. If combined with Grass Pledge, the ally uses Fire Pledge with 150 power and a sea of fire appears on the target's side for 4 turns, which causes damage to non-Fire types equal to 1/8 of their maximum HP, rounded down, at the end of each turn during effect, including the last turn. If combined with Water Pledge, the ally uses Water Pledge with 150 power and a rainbow appears on the user's side for 4 turns, which doubles secondary effect chances but does not stack with the Serene Grace Ability. When used as a combined move, this move gains STAB no matter what the user's type is. This move does not consume the user's Fire Gem.",shortDesc:'Use with Grass or Water Pledge for added effect.',id:'firepledge',name:'Fire Pledge',pp:10,priority:0,flags:{protect:1,mirror:1,nonsky:1},onPrepareHit:function onPrepareHit(target,source,move){var _iteratorNormalCompletion10=true;var _didIteratorError10=false;var _iteratorError10=undefined;try{for(var _iterator10=this.queue[Symbol.iterator](),_step10;!(_iteratorNormalCompletion10=(_step10=_iterator10.next()).done);_iteratorNormalCompletion10=true){var action=_step10.value;// @ts-ignore
if(!action.move||!action.pokemon||!action.pokemon.isActive||action.pokemon.fainted)continue;// @ts-ignore
if(action.pokemon.side===source.side&&['grasspledge','waterpledge'].includes(action.move.id)){// @ts-ignore
this.queue.prioritizeAction(action,move);this.add('-waiting',source,action.pokemon);return null;}}}catch(err){_didIteratorError10=true;_iteratorError10=err;}finally{try{if(!_iteratorNormalCompletion10&&_iterator10.return){_iterator10.return();}}finally{if(_didIteratorError10){throw _iteratorError10;}}}},onModifyMove:function onModifyMove(move){if(move.sourceEffect==='waterpledge'){move.type='Water';move.forceSTAB=true;move.self={sideCondition:'waterpledge'};}if(move.sourceEffect==='grasspledge'){move.type='Fire';move.forceSTAB=true;move.sideCondition='firepledge';}},effect:{duration:4,onStart:function onStart(targetSide){this.add('-sidestart',targetSide,'Fire Pledge');},onEnd:function onEnd(targetSide){var _iteratorNormalCompletion11=true;var _didIteratorError11=false;var _iteratorError11=undefined;try{for(var _iterator11=targetSide.active[Symbol.iterator](),_step11;!(_iteratorNormalCompletion11=(_step11=_iterator11.next()).done);_iteratorNormalCompletion11=true){var pokemon=_step11.value;if(pokemon&&!pokemon.hasType('Fire')){this.damage(pokemon.baseMaxhp/8,pokemon);}}}catch(err){_didIteratorError11=true;_iteratorError11=err;}finally{try{if(!_iteratorNormalCompletion11&&_iterator11.return){_iterator11.return();}}finally{if(_didIteratorError11){throw _iteratorError11;}}}this.add('-sideend',targetSide,'Fire Pledge');},onResidual:function onResidual(side){var _iteratorNormalCompletion12=true;var _didIteratorError12=false;var _iteratorError12=undefined;try{for(var _iterator12=side.active[Symbol.iterator](),_step12;!(_iteratorNormalCompletion12=(_step12=_iterator12.next()).done);_iteratorNormalCompletion12=true){var pokemon=_step12.value;if(pokemon&&!pokemon.hasType('Fire')){this.damage(pokemon.baseMaxhp/8,pokemon);}}}catch(err){_didIteratorError12=true;_iteratorError12=err;}finally{try{if(!_iteratorNormalCompletion12&&_iterator12.return){_iterator12.return();}}finally{if(_didIteratorError12){throw _iteratorError12;}}}}},secondary:null,target:'normal',type:'Fire',contestType:'Beautiful'},firepunch:{num:7,accuracy:100,basePower:75,category:'Physical',desc:'Has a 10% chance to burn the target.',shortDesc:'10% chance to burn the target.',id:'firepunch',isViable:true,name:'Fire Punch',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},secondary:{chance:10,status:'brn'},target:'normal',type:'Fire',contestType:'Tough'},firespin:{num:83,accuracy:85,basePower:35,category:'Special',desc:'Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',shortDesc:'Traps and damages the target for 4-5 turns.',id:'firespin',name:'Fire Spin',pp:15,priority:0,flags:{protect:1,mirror:1},volatileStatus:'partiallytrapped',secondary:null,target:'normal',type:'Fire',contestType:'Beautiful'},firstimpression:{num:660,accuracy:100,basePower:90,category:'Physical',desc:"Fails unless it is the user's first turn on the field.",shortDesc:'Hits first. First turn out only.',id:'firstimpression',isViable:true,name:'First Impression',pp:10,priority:2,flags:{contact:1,protect:1,mirror:1},onTry:function onTry(pokemon,target){if(pokemon.activeTurns>1){this.add('-fail',pokemon);this.attrLastMove('[still]');this.hint('First Impression only works on your first turn out.');return null;}},secondary:null,target:'normal',type:'Bug',contestType:'Cute'},fishiousrend:{num:755,accuracy:100,basePower:85,basePowerCallback:function basePowerCallback(pokemon,target,move){if(target.newlySwitched||this.queue.willMove(target)){this.debug('Fishious Rend damage boost');return move.basePower*2;}this.debug('Fishious Rend NOT boosted');return move.basePower;},category:'Physical',desc:"If the user moves before the target, this move's power is doubled.",shortDesc:'Double power if the user moves first.',id:'fishiousrend',isViable:true,name:'Fishious Rend',pp:10,priority:0,flags:{bite:1,contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Water'},fissure:{num:90,accuracy:30,basePower:0,category:'Physical',desc:"Deals damage to the target equal to the target's maximum HP. Ignores accuracy and evasiveness modifiers. This attack's accuracy is equal to (user's level - target's level + 30)%, and fails if the target is at a higher level. Pokemon with the Sturdy Ability are immune.",shortDesc:'OHKOs the target. Fails if user is a lower level.',id:'fissure',name:'Fissure',pp:5,priority:0,flags:{protect:1,mirror:1,nonsky:1},ohko:true,secondary:null,target:'normal',type:'Ground',zMovePower:180,gmaxPower:130,contestType:'Tough'},flail:{num:175,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon,target){var ratio=pokemon.hp*48/pokemon.maxhp;if(ratio<2){return 200;}if(ratio<5){return 150;}if(ratio<10){return 100;}if(ratio<17){return 80;}if(ratio<33){return 40;}return 20;},category:'Physical',desc:"The power of this move is 20 if X is 33 to 48, 40 if X is 17 to 32, 80 if X is 10 to 16, 100 if X is 5 to 9, 150 if X is 2 to 4, and 200 if X is 0 or 1, where X is equal to (user's current HP * 48 / user's maximum HP), rounded down.",shortDesc:'More power the less HP the user has left.',id:'flail',name:'Flail',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',zMovePower:160,gmaxPower:130,contestType:'Cute'},flameburst:{num:481,accuracy:100,basePower:70,category:'Special',desc:"If this move is successful, the target's ally loses 1/16 of its maximum HP, rounded down, unless it has the Magic Guard Ability.",shortDesc:'Damages Pokemon next to the target as well.',id:'flameburst',isNonstandard:'Past',name:'Flame Burst',pp:15,priority:0,flags:{protect:1,mirror:1},onHit:function onHit(target,source,move){if(target.side.active.length===1){return;}var _iteratorNormalCompletion13=true;var _didIteratorError13=false;var _iteratorError13=undefined;try{for(var _iterator13=target.side.active[Symbol.iterator](),_step13;!(_iteratorNormalCompletion13=(_step13=_iterator13.next()).done);_iteratorNormalCompletion13=true){var ally=_step13.value;if(ally&&this.isAdjacent(target,ally)){this.damage(ally.baseMaxhp/16,ally,source,this.dex.getEffect('Flame Burst'));}}}catch(err){_didIteratorError13=true;_iteratorError13=err;}finally{try{if(!_iteratorNormalCompletion13&&_iterator13.return){_iterator13.return();}}finally{if(_didIteratorError13){throw _iteratorError13;}}}},onAfterSubDamage:function onAfterSubDamage(damage,target,source,move){if(target.side.active.length===1){return;}var _iteratorNormalCompletion14=true;var _didIteratorError14=false;var _iteratorError14=undefined;try{for(var _iterator14=target.side.active[Symbol.iterator](),_step14;!(_iteratorNormalCompletion14=(_step14=_iterator14.next()).done);_iteratorNormalCompletion14=true){var ally=_step14.value;if(ally&&this.isAdjacent(target,ally)){this.damage(ally.baseMaxhp/16,ally,source,this.dex.getEffect('Flame Burst'));}}}catch(err){_didIteratorError14=true;_iteratorError14=err;}finally{try{if(!_iteratorNormalCompletion14&&_iterator14.return){_iterator14.return();}}finally{if(_didIteratorError14){throw _iteratorError14;}}}},secondary:null,target:'normal',type:'Fire',contestType:'Beautiful'},flamecharge:{num:488,accuracy:100,basePower:50,category:'Physical',desc:"Has a 100% chance to raise the user's Speed by 1 stage.",shortDesc:"100% chance to raise the user's Speed by 1.",id:'flamecharge',isViable:true,name:'Flame Charge',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:100,self:{boosts:{spe:1}}},target:'normal',type:'Fire',contestType:'Cool'},flamewheel:{num:172,accuracy:100,basePower:60,category:'Physical',desc:'Has a 10% chance to burn the target.',shortDesc:'10% chance to burn the target. Thaws user.',id:'flamewheel',name:'Flame Wheel',pp:25,priority:0,flags:{contact:1,protect:1,mirror:1,defrost:1},secondary:{chance:10,status:'brn'},target:'normal',type:'Fire',contestType:'Beautiful'},flamethrower:{num:53,accuracy:100,basePower:90,category:'Special',desc:'Has a 10% chance to burn the target.',shortDesc:'10% chance to burn the target.',id:'flamethrower',isViable:true,name:'Flamethrower',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,status:'brn'},target:'normal',type:'Fire',contestType:'Beautiful'},flareblitz:{num:394,accuracy:100,basePower:120,category:'Physical',desc:'Has a 10% chance to burn the target. If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.',shortDesc:'Has 33% recoil. 10% chance to burn. Thaws user.',id:'flareblitz',isViable:true,name:'Flare Blitz',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1,defrost:1},recoil:[33,100],secondary:{chance:10,status:'brn'},target:'normal',type:'Fire',contestType:'Cool'},flash:{num:148,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's accuracy by 1 stage.",shortDesc:"Lowers the target's accuracy by 1.",id:'flash',isNonstandard:'Past',name:'Flash',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1},boosts:{accuracy:-1},secondary:null,target:'normal',type:'Normal',zMoveBoost:{evasion:1},contestType:'Beautiful'},flashcannon:{num:430,accuracy:100,basePower:80,category:'Special',desc:"Has a 10% chance to lower the target's Special Defense by 1 stage.",shortDesc:"10% chance to lower the target's Sp. Def by 1.",id:'flashcannon',isViable:true,name:'Flash Cannon',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,boosts:{spd:-1}},target:'normal',type:'Steel',contestType:'Beautiful'},flatter:{num:260,accuracy:100,basePower:0,category:'Status',desc:"Raises the target's Special Attack by 1 stage and confuses it.",shortDesc:"Raises the target's Sp. Atk by 1 and confuses it.",id:'flatter',name:'Flatter',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},volatileStatus:'confusion',boosts:{spa:1},secondary:null,target:'normal',type:'Dark',zMoveBoost:{spd:1},contestType:'Clever'},fleurcannon:{num:705,accuracy:90,basePower:130,category:'Special',desc:"Lowers the user's Special Attack by 2 stages.",shortDesc:"Lowers the user's Sp. Atk by 2.",id:'fleurcannon',isNonstandard:'Past',name:'Fleur Cannon',pp:5,priority:0,flags:{protect:1,mirror:1},self:{boosts:{spa:-2}},secondary:null,target:'normal',type:'Fairy',contestType:'Beautiful'},fling:{num:374,accuracy:100,basePower:0,category:'Physical',desc:"The power of this move is based on the user's held item. The held item is lost and it activates for the target if applicable. If there is no target or the target avoids this move by protecting itself, the user's held item is still lost. The user can regain a thrown item with Recycle or the Harvest Ability. Fails if the user has no held item, if the held item cannot be thrown, if the user is under the effect of Embargo or Magic Room, or if the user has the Klutz Ability.",shortDesc:"Flings the user's item at the target. Power varies.",id:'fling',name:'Fling',pp:10,priority:0,flags:{protect:1,mirror:1,mystery:1},onPrepareHit:function onPrepareHit(target,source,move){if(source.ignoringItem())return false;var item=source.getItem();if(!this.singleEvent('TakeItem',item,source.itemData,source,source,move,item))return false;if(!item.fling)return false;move.basePower=item.fling.basePower;if(item.isBerry){move.onHit=function(foe){if(this.singleEvent('Eat',item,null,foe,null,null)){this.runEvent('EatItem',foe,null,null,item);if(item.id==='leppaberry')foe.staleness='external';}if(item.onEat)foe.ateBerry=true;};}else if(item.fling.effect){move.onHit=item.fling.effect;}else{if(!move.secondaries)move.secondaries=[];if(item.fling.status){move.secondaries.push({status:item.fling.status});}else if(item.fling.volatileStatus){move.secondaries.push({volatileStatus:item.fling.volatileStatus});}}source.setItem('');source.lastItem=item.id;source.usedItemThisTurn=true;this.add('-enditem',source,item.name,'[from] move: Fling');this.runEvent('AfterUseItem',source,null,null,item);},secondary:null,target:'normal',type:'Dark',contestType:'Cute'},floatyfall:{num:731,accuracy:95,basePower:90,category:'Physical',desc:'Has a 30% chance to flinch the target.',shortDesc:'30% chance to flinch the target.',id:'floatyfall',isNonstandard:'LGPE',isViable:true,name:'Floaty Fall',pp:15,priority:0,flags:{contact:1,protect:1,gravity:1},secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Flying',contestType:'Cool'},floralhealing:{num:666,accuracy:true,basePower:0,category:'Status',desc:'The target restores 1/2 of its maximum HP, rounded half up. If the terrain is Grassy Terrain, the target instead restores 2/3 of its maximum HP, rounded half down.',shortDesc:'Heals the target by 50% of its max HP.',id:'floralhealing',isNonstandard:'Past',name:'Floral Healing',pp:10,priority:0,flags:{protect:1,reflectable:1,heal:1,mystery:1},onHit:function onHit(target,source){var success=false;if(this.field.isTerrain('grassyterrain')){success=!!this.heal(this.modify(target.baseMaxhp,0.667));// TODO: find out the real value
}else{success=!!this.heal(Math.ceil(target.baseMaxhp*0.5));}if(success&&target.side.id!==source.side.id){target.staleness='external';}return success;},secondary:null,target:'normal',type:'Fairy',zMoveEffect:'clearnegativeboost',contestType:'Beautiful'},flowershield:{num:579,accuracy:true,basePower:0,category:'Status',desc:'Raises the Defense of all active Grass-type Pokemon by 1 stage. Fails if there are no active Grass-type Pokemon.',shortDesc:'Raises Defense by 1 of all active Grass types.',id:'flowershield',name:'Flower Shield',pp:10,priority:0,flags:{distance:1},onHitField:function onHitField(target,source,move){var targets=[];var _iteratorNormalCompletion15=true;var _didIteratorError15=false;var _iteratorError15=undefined;try{for(var _iterator15=this.getAllActive()[Symbol.iterator](),_step15;!(_iteratorNormalCompletion15=(_step15=_iterator15.next()).done);_iteratorNormalCompletion15=true){var pokemon=_step15.value;if(pokemon.hasType('Grass')){// This move affects every Grass-type Pokemon in play.
targets.push(pokemon);}}}catch(err){_didIteratorError15=true;_iteratorError15=err;}finally{try{if(!_iteratorNormalCompletion15&&_iterator15.return){_iterator15.return();}}finally{if(_didIteratorError15){throw _iteratorError15;}}}var success=false;var _iteratorNormalCompletion16=true;var _didIteratorError16=false;var _iteratorError16=undefined;try{for(var _iterator16=targets[Symbol.iterator](),_step16;!(_iteratorNormalCompletion16=(_step16=_iterator16.next()).done);_iteratorNormalCompletion16=true){var _target=_step16.value;success=this.boost({def:1},_target,source,move)||success;}}catch(err){_didIteratorError16=true;_iteratorError16=err;}finally{try{if(!_iteratorNormalCompletion16&&_iterator16.return){_iterator16.return();}}finally{if(_didIteratorError16){throw _iteratorError16;}}}return success;},secondary:null,target:'all',type:'Fairy',zMoveBoost:{def:1},contestType:'Beautiful'},fly:{num:19,accuracy:95,basePower:90,category:'Physical',desc:'This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Gust, Hurricane, Sky Uppercut, Smack Down, Thousand Arrows, Thunder, and Twister, and Gust and Twister have doubled power when used against it. If the user is holding a Power Herb, the move completes in one turn.',shortDesc:'Flies up on first turn, then strikes the next turn.',id:'fly',name:'Fly',pp:15,priority:0,flags:{contact:1,charge:1,protect:1,mirror:1,gravity:1,distance:1},onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}this.add('-prepare',attacker,move.name,defender);if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},effect:{duration:2,onInvulnerability:function onInvulnerability(target,source,move){if(['gust','twister','skyuppercut','thunder','hurricane','smackdown','thousandarrows'].includes(move.id)){return;}return false;},onSourceModifyDamage:function onSourceModifyDamage(damage,source,target,move){if(move.id==='gust'||move.id==='twister'){return this.chainModify(2);}}},secondary:null,target:'any',type:'Flying',contestType:'Clever'},flyingpress:{num:560,accuracy:95,basePower:100,category:'Physical',desc:'This move combines Flying in its type effectiveness against the target. Damage doubles and no accuracy check is done if the target has used Minimize while active.',shortDesc:'Combines Flying in its type effectiveness.',id:'flyingpress',name:'Flying Press',pp:10,flags:{contact:1,protect:1,mirror:1,gravity:1,distance:1,nonsky:1},onEffectiveness:function onEffectiveness(typeMod,target,type,move){return typeMod+this.dex.getEffectiveness('Flying',type);},priority:0,secondary:null,target:'any',type:'Fighting',zMovePower:170,contestType:'Tough'},focusblast:{num:411,accuracy:70,basePower:120,category:'Special',desc:"Has a 10% chance to lower the target's Special Defense by 1 stage.",shortDesc:"10% chance to lower the target's Sp. Def by 1.",id:'focusblast',isViable:true,name:'Focus Blast',pp:5,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:{chance:10,boosts:{spd:-1}},target:'normal',type:'Fighting',contestType:'Cool'},focusenergy:{num:116,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's chance for a critical hit by 2 stages. Fails if the user already has the effect. Baton Pass can be used to transfer this effect to an ally.",shortDesc:"Raises the user's critical hit ratio by 2.",id:'focusenergy',name:'Focus Energy',pp:30,priority:0,flags:{snatch:1},volatileStatus:'focusenergy',effect:{onStart:function onStart(target,source,effect){if(effect&&effect.id==='zpower'){this.add('-start',target,'move: Focus Energy','[zeffect]');}else if(effect&&['imposter','psychup','transform'].includes(effect.id)){this.add('-start',target,'move: Focus Energy','[silent]');}else{this.add('-start',target,'move: Focus Energy');}},onModifyCritRatio:function onModifyCritRatio(critRatio){return critRatio+2;}},secondary:null,target:'self',type:'Normal',zMoveBoost:{accuracy:1},contestType:'Cool'},focuspunch:{num:264,accuracy:100,basePower:150,category:'Physical',desc:'The user loses its focus and does nothing if it is hit by a damaging attack this turn before it can execute the move.',shortDesc:'Fails if the user takes damage before it hits.',id:'focuspunch',isViable:true,name:'Focus Punch',pp:20,priority:-3,flags:{contact:1,protect:1,punch:1},beforeTurnCallback:function beforeTurnCallback(pokemon){pokemon.addVolatile('focuspunch');},beforeMoveCallback:function beforeMoveCallback(pokemon){if(pokemon.volatiles['focuspunch']&&pokemon.volatiles['focuspunch'].lostFocus){this.add('cant',pokemon,'Focus Punch','Focus Punch');return true;}},effect:{duration:1,onStart:function onStart(pokemon){this.add('-singleturn',pokemon,'move: Focus Punch');},onHit:function onHit(pokemon,source,move){if(move.category!=='Status'){pokemon.volatiles['focuspunch'].lostFocus=true;}}},secondary:null,target:'normal',type:'Fighting',contestType:'Tough'},followme:{num:266,accuracy:true,basePower:0,category:'Status',desc:'Until the end of the turn, all single-target attacks from the opposing side are redirected to the user. Such attacks are redirected to the user before they can be reflected by Magic Coat or the Magic Bounce Ability, or drawn in by the Lightning Rod or Storm Drain Abilities. Fails if it is not a Double Battle or Battle Royal. This effect is ignored while the user is under the effect of Sky Drop.',shortDesc:"The foes' moves target the user on the turn used.",id:'followme',name:'Follow Me',pp:20,priority:2,flags:{},volatileStatus:'followme',onTryHit:function onTryHit(target){if(target.side.active.length<2)return false;},effect:{duration:1,onStart:function onStart(target,source,effect){if(effect&&effect.id==='zpower'){this.add('-singleturn',target,'move: Follow Me','[zeffect]');}else{this.add('-singleturn',target,'move: Follow Me');}},onFoeRedirectTargetPriority:1,onFoeRedirectTarget:function onFoeRedirectTarget(target,source,source2,move){if(!this.effectData.target.isSkyDropped()&&this.validTarget(this.effectData.target,source,move.target)){if(move.smartTarget)move.smartTarget=false;this.debug('Follow Me redirected target of move');return this.effectData.target;}}},secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Cute'},forcepalm:{num:395,accuracy:100,basePower:60,category:'Physical',desc:'Has a 30% chance to paralyze the target.',shortDesc:'30% chance to paralyze the target.',id:'forcepalm',name:'Force Palm',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:30,status:'par'},target:'normal',type:'Fighting',contestType:'Cool'},foresight:{num:193,accuracy:true,basePower:0,category:'Status',desc:'As long as the target remains active, its evasiveness stat stage is ignored during accuracy checks against it if it is greater than 0, and Normal- and Fighting-type attacks can hit the target if it is a Ghost type. Fails if the target is already affected, or affected by Miracle Eye or Odor Sleuth.',shortDesc:'Fighting, Normal hit Ghost. Evasiveness ignored.',id:'foresight',isNonstandard:'Past',name:'Foresight',pp:40,priority:0,flags:{protect:1,reflectable:1,mirror:1,authentic:1},volatileStatus:'foresight',onTryHit:function onTryHit(target){if(target.volatiles['miracleeye'])return false;},effect:{noCopy:true,onStart:function onStart(pokemon){this.add('-start',pokemon,'Foresight');},onNegateImmunity:function onNegateImmunity(pokemon,type){if(pokemon.hasType('Ghost')&&['Normal','Fighting'].includes(type))return false;},onModifyBoost:function onModifyBoost(boosts){if(boosts.evasion&&boosts.evasion>0){boosts.evasion=0;}}},secondary:null,target:'normal',type:'Normal',zMoveEffect:'crit2',contestType:'Clever'},forestscurse:{num:571,accuracy:100,basePower:0,category:'Status',desc:'Causes the Grass type to be added to the target, effectively making it have two or three types. Fails if the target is already a Grass type. If Trick-or-Treat adds a type to the target, it replaces the type added by this move and vice versa.',shortDesc:"Adds Grass to the target's type(s).",id:'forestscurse',name:"Forest's Curse",pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},onHit:function onHit(target){if(target.hasType('Grass'))return false;if(!target.addType('Grass'))return false;this.add('-start',target,'typeadd','Grass',"[from] move: Forest's Curse");},secondary:null,target:'normal',type:'Grass',zMoveBoost:{atk:1,def:1,spa:1,spd:1,spe:1},contestType:'Clever'},foulplay:{num:492,accuracy:100,basePower:95,category:'Physical',desc:"Damage is calculated using the target's Attack stat, including stat stage changes. The user's Ability, item, and burn are used as normal.",shortDesc:"Uses target's Attack stat in damage calculation.",id:'foulplay',isViable:true,name:'Foul Play',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},useTargetOffensive:true,secondary:null,target:'normal',type:'Dark',contestType:'Clever'},freezedry:{num:573,accuracy:100,basePower:70,category:'Special',desc:"Has a 10% chance to freeze the target. This move's type effectiveness against Water is changed to be super effective no matter what this move's type is.",shortDesc:'10% chance to freeze. Super effective on Water.',id:'freezedry',isViable:true,name:'Freeze-Dry',pp:20,priority:0,flags:{protect:1,mirror:1},onEffectiveness:function onEffectiveness(typeMod,target,type){if(type==='Water')return 1;},secondary:{chance:10,status:'frz'},target:'normal',type:'Ice',contestType:'Beautiful'},freezeshock:{num:553,accuracy:90,basePower:140,category:'Physical',desc:'Has a 30% chance to paralyze the target. This attack charges on the first turn and executes on the second. If the user is holding a Power Herb, the move completes in one turn.',shortDesc:'Charges turn 1. Hits turn 2. 30% paralyze.',id:'freezeshock',name:'Freeze Shock',pp:5,priority:0,flags:{charge:1,protect:1,mirror:1},onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}this.add('-prepare',attacker,move.name,defender);if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},secondary:{chance:30,status:'par'},target:'normal',type:'Ice',contestType:'Beautiful'},freezyfrost:{num:739,accuracy:90,basePower:100,category:'Special',desc:'Resets the stat stages of all active Pokemon to 0.',shortDesc:'Eliminates all stat changes.',id:'freezyfrost',isNonstandard:'LGPE',isViable:true,name:'Freezy Frost',pp:10,priority:0,flags:{protect:1},onHit:function onHit(){this.add('-clearallboost');var _iteratorNormalCompletion17=true;var _didIteratorError17=false;var _iteratorError17=undefined;try{for(var _iterator17=this.getAllActive()[Symbol.iterator](),_step17;!(_iteratorNormalCompletion17=(_step17=_iterator17.next()).done);_iteratorNormalCompletion17=true){var pokemon=_step17.value;pokemon.clearBoosts();}}catch(err){_didIteratorError17=true;_iteratorError17=err;}finally{try{if(!_iteratorNormalCompletion17&&_iterator17.return){_iterator17.return();}}finally{if(_didIteratorError17){throw _iteratorError17;}}}},secondary:null,target:'normal',type:'Ice',contestType:'Clever'},frenzyplant:{num:338,accuracy:90,basePower:150,category:'Special',desc:'If this move is successful, the user must recharge on the following turn and cannot select a move.',shortDesc:'User cannot move next turn.',id:'frenzyplant',name:'Frenzy Plant',pp:5,priority:0,flags:{recharge:1,protect:1,mirror:1,nonsky:1},self:{volatileStatus:'mustrecharge'},secondary:null,target:'normal',type:'Grass',contestType:'Cool'},frostbreath:{num:524,accuracy:90,basePower:60,category:'Special',desc:'This move is always a critical hit unless the target is under the effect of Lucky Chant or has the Battle Armor or Shell Armor Abilities.',shortDesc:'Always results in a critical hit.',id:'frostbreath',name:'Frost Breath',pp:10,priority:0,flags:{protect:1,mirror:1},willCrit:true,secondary:null,target:'normal',type:'Ice',contestType:'Beautiful'},frustration:{num:218,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon){return Math.floor((255-pokemon.happiness)*10/25)||1;},category:'Physical',desc:"Power is equal to the greater of ((255 - user's Happiness) * 2/5), rounded down, or 1.",shortDesc:'Max 102 power at minimum Happiness.',id:'frustration',isNonstandard:'Past',isViable:true,name:'Frustration',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',zMovePower:160,gmaxPower:130,contestType:'Cute'},furyattack:{num:31,accuracy:85,basePower:15,category:'Physical',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.",shortDesc:'Hits 2-5 times in one turn.',id:'furyattack',name:'Fury Attack',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},multihit:[2,5],secondary:null,target:'normal',type:'Normal',contestType:'Cool'},furycutter:{num:210,accuracy:95,basePower:40,basePowerCallback:function basePowerCallback(pokemon,target,move){if(!pokemon.volatiles.furycutter||move.hit===1){pokemon.addVolatile('furycutter');}return this.dex.clampIntRange(move.basePower*pokemon.volatiles.furycutter.multiplier,1,160);},category:'Physical',desc:'Power doubles with each successful hit, up to a maximum of 160 power. The power is reset if this move misses or another move is used.',shortDesc:'Power doubles with each hit, up to 160.',id:'furycutter',name:'Fury Cutter',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},effect:{duration:2,onStart:function onStart(){this.effectData.multiplier=1;},onRestart:function onRestart(){if(this.effectData.multiplier<4){this.effectData.multiplier<<=1;}this.effectData.duration=2;}},secondary:null,target:'normal',type:'Bug',contestType:'Cool'},furyswipes:{num:154,accuracy:80,basePower:18,category:'Physical',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.",shortDesc:'Hits 2-5 times in one turn.',id:'furyswipes',name:'Fury Swipes',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},multihit:[2,5],secondary:null,target:'normal',type:'Normal',gmaxPower:100,contestType:'Tough'},fusionbolt:{num:559,accuracy:100,basePower:100,category:'Physical',desc:'Power doubles if the last move used by any Pokemon this turn was Fusion Flare.',shortDesc:'Power doubles if used after Fusion Flare.',id:'fusionbolt',isViable:true,name:'Fusion Bolt',pp:5,priority:0,flags:{protect:1,mirror:1},onBasePower:function onBasePower(basePower,pokemon){if(this.lastMoveThisTurn&&this.lastMoveThisTurn.id==='fusionflare'){this.debug('double power');return this.chainModify(2);}},secondary:null,target:'normal',type:'Electric',contestType:'Cool'},fusionflare:{num:558,accuracy:100,basePower:100,category:'Special',desc:'Power doubles if the last move used by any Pokemon this turn was Fusion Bolt.',shortDesc:'Power doubles if used after Fusion Bolt.',id:'fusionflare',isViable:true,name:'Fusion Flare',pp:5,priority:0,flags:{protect:1,mirror:1,defrost:1},onBasePower:function onBasePower(basePower,pokemon){if(this.lastMoveThisTurn&&this.lastMoveThisTurn.id==='fusionbolt'){this.debug('double power');return this.chainModify(2);}},secondary:null,target:'normal',type:'Fire',contestType:'Beautiful'},futuresight:{num:248,accuracy:100,basePower:120,category:'Special',desc:"Deals damage two turns after this move is used. At the end of that turn, the damage is calculated at that time and dealt to the Pokemon at the position the target had when the move was used. If the user is no longer active at the time, damage is calculated based on the user's natural Special Attack stat, types, and level, with no boosts from its held item or Ability. Fails if this move or Doom Desire is already in effect for the target's position.",shortDesc:'Hits two turns after being used.',id:'futuresight',name:'Future Sight',pp:10,priority:0,flags:{},ignoreImmunity:true,isFutureMove:true,onTry:function onTry(source,target){if(!target.side.addSlotCondition(target,'futuremove'))return false;Object.assign(target.side.slotConditions[target.position]['futuremove'],{duration:3,move:'futuresight',source:source,moveData:{id:'futuresight',name:'Future Sight',accuracy:100,basePower:120,category:'Special',priority:0,flags:{},ignoreImmunity:false,effectType:'Move',isFutureMove:true,type:'Psychic'}});this.add('-start',source,'move: Future Sight');return null;},secondary:null,target:'normal',type:'Psychic',contestType:'Clever'},gastroacid:{num:380,accuracy:100,basePower:0,category:'Status',desc:"Causes the target's Ability to be rendered ineffective as long as it remains active. If the target uses Baton Pass, the replacement will remain under this effect. If the target's Ability is Battle Bond, Comatose, Disguise, Multitype, Power Construct, RKS System, Schooling, Shields Down, Stance Change, or Zen Mode, this move fails, and receiving the effect through Baton Pass ends the effect immediately.",shortDesc:"Nullifies the target's Ability.",id:'gastroacid',name:'Gastro Acid',pp:10,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},volatileStatus:'gastroacid',onTryHit:function onTryHit(pokemon){var bannedAbilities=['battlebond','comatose','disguise','multitype','powerconstruct','rkssystem','schooling','shieldsdown','stancechange','zenmode'];if(bannedAbilities.includes(pokemon.ability)){return false;}},effect:{// Ability suppression implemented in Pokemon.ignoringAbility() within sim/pokemon.js
onStart:function onStart(pokemon){this.add('-endability',pokemon);this.singleEvent('End',pokemon.getAbility(),pokemon.abilityData,pokemon,pokemon,'gastroacid');}},secondary:null,target:'normal',type:'Poison',zMoveBoost:{spe:1},contestType:'Tough'},geargrind:{num:544,accuracy:85,basePower:50,category:'Physical',desc:"Hits twice. If the first hit breaks the target's substitute, it will take damage for the second hit.",shortDesc:'Hits 2 times in one turn.',id:'geargrind',isViable:true,name:'Gear Grind',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},multihit:2,secondary:null,target:'normal',type:'Steel',zMovePower:180,gmaxPower:130,contestType:'Clever'},gearup:{num:674,accuracy:true,basePower:0,category:'Status',desc:"Raises the Attack and Special Attack of Pokemon on the user's side with the Plus or Minus Abilities by 1 stage.",shortDesc:'Raises Atk, Sp. Atk of allies with Plus/Minus by 1.',id:'gearup',name:'Gear Up',pp:20,priority:0,flags:{snatch:1,authentic:1},onHitSide:function onHitSide(side,source,move){var targets=[];var _iteratorNormalCompletion18=true;var _didIteratorError18=false;var _iteratorError18=undefined;try{for(var _iterator18=side.active[Symbol.iterator](),_step18;!(_iteratorNormalCompletion18=(_step18=_iterator18.next()).done);_iteratorNormalCompletion18=true){var pokemon=_step18.value;if(pokemon.hasAbility(['plus','minus'])){targets.push(pokemon);}}}catch(err){_didIteratorError18=true;_iteratorError18=err;}finally{try{if(!_iteratorNormalCompletion18&&_iterator18.return){_iterator18.return();}}finally{if(_didIteratorError18){throw _iteratorError18;}}}if(!targets.length)return false;var didSomething=false;var _iteratorNormalCompletion19=true;var _didIteratorError19=false;var _iteratorError19=undefined;try{for(var _iterator19=targets[Symbol.iterator](),_step19;!(_iteratorNormalCompletion19=(_step19=_iterator19.next()).done);_iteratorNormalCompletion19=true){var target=_step19.value;didSomething=this.boost({atk:1,spa:1},target,source,move,false,true)||didSomething;}}catch(err){_didIteratorError19=true;_iteratorError19=err;}finally{try{if(!_iteratorNormalCompletion19&&_iterator19.return){_iterator19.return();}}finally{if(_didIteratorError19){throw _iteratorError19;}}}return didSomething;},secondary:null,target:'allySide',type:'Steel',zMoveBoost:{spa:1},contestType:'Clever'},genesissupernova:{num:703,accuracy:true,basePower:185,category:'Special',desc:'If this move is successful, the terrain becomes Psychic Terrain.',shortDesc:'Summons Psychic Terrain.',id:'genesissupernova',isNonstandard:'Past',isViable:true,name:'Genesis Supernova',pp:1,priority:0,flags:{},isZ:'mewniumz',secondary:{chance:100,self:{onHit:function onHit(){this.field.setTerrain('psychicterrain');}}},target:'normal',type:'Psychic',contestType:'Cool'},geomancy:{num:601,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Special Attack, Special Defense, and Speed by 2 stages. This attack charges on the first turn and executes on the second. If the user is holding a Power Herb, the move completes in one turn.",shortDesc:'Charges, then raises SpA, SpD, Spe by 2 turn 2.',id:'geomancy',isNonstandard:'Past',name:'Geomancy',pp:10,priority:0,flags:{charge:1,nonsky:1},onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}this.add('-prepare',attacker,move.name,defender);if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},boosts:{spa:2,spd:2,spe:2},secondary:null,target:'self',type:'Fairy',zMoveBoost:{atk:1,def:1,spa:1,spd:1,spe:1},contestType:'Beautiful'},gigadrain:{num:202,accuracy:100,basePower:75,category:'Special',desc:'The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.',shortDesc:'User recovers 50% of the damage dealt.',id:'gigadrain',isViable:true,name:'Giga Drain',pp:10,priority:0,flags:{protect:1,mirror:1,heal:1},drain:[1,2],secondary:null,target:'normal',type:'Grass',contestType:'Clever'},gigaimpact:{num:416,accuracy:90,basePower:150,category:'Physical',desc:'If this move is successful, the user must recharge on the following turn and cannot select a move.',shortDesc:'User cannot move next turn.',id:'gigaimpact',name:'Giga Impact',pp:5,priority:0,flags:{contact:1,recharge:1,protect:1,mirror:1},self:{volatileStatus:'mustrecharge'},secondary:null,target:'normal',type:'Normal',contestType:'Tough'},gigavolthavoc:{num:646,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'gigavolthavoc',isNonstandard:'Past',name:'Gigavolt Havoc',pp:1,priority:0,flags:{},isZ:'electriumz',secondary:null,target:'normal',type:'Electric',contestType:'Cool'},glaciate:{num:549,accuracy:95,basePower:65,category:'Special',desc:"Has a 100% chance to lower the target's Speed by 1 stage.",shortDesc:'100% chance to lower the foe(s) Speed by 1.',id:'glaciate',name:'Glaciate',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,boosts:{spe:-1}},target:'allAdjacentFoes',type:'Ice',contestType:'Beautiful'},glare:{num:137,accuracy:100,basePower:0,category:'Status',desc:'Paralyzes the target.',shortDesc:'Paralyzes the target.',id:'glare',isViable:true,name:'Glare',pp:30,priority:0,flags:{protect:1,reflectable:1,mirror:1},status:'par',secondary:null,target:'normal',type:'Normal',zMoveBoost:{spd:1},contestType:'Tough'},glitzyglow:{num:736,accuracy:95,basePower:80,category:'Special',desc:'This move summons Light Screen for 5 turns upon use.',shortDesc:'Summons Light Screen.',id:'glitzyglow',isNonstandard:'LGPE',isViable:true,name:'Glitzy Glow',pp:15,priority:0,flags:{protect:1},self:{sideCondition:'lightscreen'},secondary:null,target:'normal',type:'Psychic',contestType:'Clever'},gmaxbefuddle:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Sleeps, poisons, or paralyzes opponent(s). Base Power scales with the base move's Base Power.",shortDesc:'Foes: SLP/PSN/PAR. BP scales with base move.',id:'gmaxbefuddle',isNonstandard:'Unobtainable',name:'G-Max Befuddle',pp:5,priority:0,flags:{},isMax:'Butterfree',self:{onHit:function onHit(source){var _iteratorNormalCompletion20=true;var _didIteratorError20=false;var _iteratorError20=undefined;try{for(var _iterator20=source.side.foe.active[Symbol.iterator](),_step20;!(_iteratorNormalCompletion20=(_step20=_iterator20.next()).done);_iteratorNormalCompletion20=true){var pokemon=_step20.value;var result=this.random(3);if(result===0){pokemon.trySetStatus('slp',source);}else if(result===1){pokemon.trySetStatus('par',source);}else{pokemon.trySetStatus('psn',source);}}}catch(err){_didIteratorError20=true;_iteratorError20=err;}finally{try{if(!_iteratorNormalCompletion20&&_iterator20.return){_iterator20.return();}}finally{if(_didIteratorError20){throw _iteratorError20;}}}}},target:'adjacentFoe',type:'Bug',contestType:'Cool'},gmaxcentiferno:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends if target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move. Base Power scales with the base move's Base Power.",shortDesc:'Traps/damages foes. BP scales w/ base move.',id:'gmaxcentiferno',isNonstandard:'Unobtainable',name:'G-Max Centiferno',pp:5,priority:0,flags:{},isMax:'Centiskorch',self:{onHit:function onHit(source){var _iteratorNormalCompletion21=true;var _didIteratorError21=false;var _iteratorError21=undefined;try{for(var _iterator21=source.side.foe.active[Symbol.iterator](),_step21;!(_iteratorNormalCompletion21=(_step21=_iterator21.next()).done);_iteratorNormalCompletion21=true){var pokemon=_step21.value;pokemon.addVolatile('partiallytrapped',source,this.dex.getActiveMove('G-Max Centiferno'),'trapper');}}catch(err){_didIteratorError21=true;_iteratorError21=err;}finally{try{if(!_iteratorNormalCompletion21&&_iterator21.return){_iterator21.return();}}finally{if(_didIteratorError21){throw _iteratorError21;}}}}},secondary:null,target:'adjacentFoe',type:'Fire',contestType:'Cool'},gmaxchistrike:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Applies Focus Energy to the user and its allies. Base Power scales with the base move's Base Power.",shortDesc:'User side: Focus Energy. BP scales w/ base move.',id:'gmaxchistrike',isNonstandard:'Unobtainable',name:'G-Max Chi Strike',pp:5,priority:0,flags:{},isMax:'Machamp',self:{onHit:function onHit(source){var _iteratorNormalCompletion22=true;var _didIteratorError22=false;var _iteratorError22=undefined;try{for(var _iterator22=source.side.active[Symbol.iterator](),_step22;!(_iteratorNormalCompletion22=(_step22=_iterator22.next()).done);_iteratorNormalCompletion22=true){var pokemon=_step22.value;pokemon.addVolatile('focusenergy');}}catch(err){_didIteratorError22=true;_iteratorError22=err;}finally{try{if(!_iteratorNormalCompletion22&&_iterator22.return){_iterator22.return();}}finally{if(_didIteratorError22){throw _iteratorError22;}}}}},secondary:null,target:'adjacentFoe',type:'Fighting',contestType:'Cool'},gmaxcuddle:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Infatuates opponents. Base Power scales with the base move's Base Power.",shortDesc:'Infatuates opponents. BP scales with base move.',id:'gmaxcuddle',isNonstandard:'Unobtainable',name:'G-Max Cuddle',pp:5,priority:0,flags:{},isMax:'Eevee',self:{onHit:function onHit(source){var _iteratorNormalCompletion23=true;var _didIteratorError23=false;var _iteratorError23=undefined;try{for(var _iterator23=source.side.foe.active[Symbol.iterator](),_step23;!(_iteratorNormalCompletion23=(_step23=_iterator23.next()).done);_iteratorNormalCompletion23=true){var pokemon=_step23.value;pokemon.addVolatile('attract');}}catch(err){_didIteratorError23=true;_iteratorError23=err;}finally{try{if(!_iteratorNormalCompletion23&&_iterator23.return){_iterator23.return();}}finally{if(_didIteratorError23){throw _iteratorError23;}}}}},secondary:null,target:'adjacentFoe',type:'Normal',contestType:'Cool'},gmaxdepletion:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Lowers the PP of the opponent(s) last used move. Base Power scales with the base move's Base Power.",shortDesc:'Foe: Lowers PP of last move. BP scales w/ base move.',id:'gmaxdepletion',isNonstandard:'Unobtainable',name:'G-Max Depletion',pp:5,priority:0,flags:{},isMax:'Duraludon',self:{onHit:function onHit(source){var _iteratorNormalCompletion24=true;var _didIteratorError24=false;var _iteratorError24=undefined;try{for(var _iterator24=source.side.foe.active[Symbol.iterator](),_step24;!(_iteratorNormalCompletion24=(_step24=_iterator24.next()).done);_iteratorNormalCompletion24=true){var pokemon=_step24.value;var move=pokemon.lastMove;if(move&&!move.isZ&&!move.isMax){var ppDeducted=pokemon.deductPP(move.id,4);if(ppDeducted){this.add('-activate',pokemon,'move: Max Depletion',move.name,ppDeducted);return;}}return false;}}catch(err){_didIteratorError24=true;_iteratorError24=err;}finally{try{if(!_iteratorNormalCompletion24&&_iterator24.return){_iterator24.return();}}finally{if(_didIteratorError24){throw _iteratorError24;}}}}},secondary:null,target:'adjacentFoe',type:'Dragon',contestType:'Cool'},gmaxfinale:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Heals user and allies for 1/6 of their post-Gigantamax max HP. Base Power scales with the base move's Base Power.",shortDesc:'Heals user and allies. BP scales with base move.',id:'gmaxfinale',isNonstandard:'Unobtainable',name:'G-Max Finale',pp:5,priority:0,flags:{},isMax:'Alcremie',self:{onHit:function onHit(target,source,move){var _iteratorNormalCompletion25=true;var _didIteratorError25=false;var _iteratorError25=undefined;try{for(var _iterator25=source.side.active[Symbol.iterator](),_step25;!(_iteratorNormalCompletion25=(_step25=_iterator25.next()).done);_iteratorNormalCompletion25=true){var pokemon=_step25.value;this.heal(pokemon.maxhp/6,pokemon,source,move);}}catch(err){_didIteratorError25=true;_iteratorError25=err;}finally{try{if(!_iteratorNormalCompletion25&&_iterator25.return){_iterator25.return();}}finally{if(_didIteratorError25){throw _iteratorError25;}}}}},secondary:null,target:'adjacentFoe',type:'Fairy',contestType:'Cool'},gmaxfoamburst:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Lowers the Speed of opponents by 2 stages. Base Power scales with the base move's Base Power.",shortDesc:"Foes: -2 Speed. BP scales with base move's BP.",id:'gmaxfoamburst',isNonstandard:'Unobtainable',name:'G-Max Foam Burst',pp:5,priority:0,flags:{},isMax:'Kingler',self:{onHit:function onHit(source){var _iteratorNormalCompletion26=true;var _didIteratorError26=false;var _iteratorError26=undefined;try{for(var _iterator26=source.side.foe.active[Symbol.iterator](),_step26;!(_iteratorNormalCompletion26=(_step26=_iterator26.next()).done);_iteratorNormalCompletion26=true){var pokemon=_step26.value;this.boost({spe:-2},pokemon);}}catch(err){_didIteratorError26=true;_iteratorError26=err;}finally{try{if(!_iteratorNormalCompletion26&&_iterator26.return){_iterator26.return();}}finally{if(_didIteratorError26){throw _iteratorError26;}}}}},secondary:null,target:'adjacentFoe',type:'Water',contestType:'Cool'},gmaxgoldrush:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Confuses opponents. Base Power scales with the base move's Base Power.",shortDesc:"Confuses foes. BP scales with base move's BP.",id:'gmaxgoldrush',isNonstandard:'Unobtainable',name:'G-Max Gold Rush',pp:5,priority:0,flags:{},isMax:'Meowth',self:{onHit:function onHit(source){var _iteratorNormalCompletion27=true;var _didIteratorError27=false;var _iteratorError27=undefined;try{for(var _iterator27=source.side.foe.active[Symbol.iterator](),_step27;!(_iteratorNormalCompletion27=(_step27=_iterator27.next()).done);_iteratorNormalCompletion27=true){var pokemon=_step27.value;pokemon.addVolatile('confusion');}}catch(err){_didIteratorError27=true;_iteratorError27=err;}finally{try{if(!_iteratorNormalCompletion27&&_iterator27.return){_iterator27.return();}}finally{if(_didIteratorError27){throw _iteratorError27;}}}}},secondary:null,target:'adjacentFoe',type:'Normal',contestType:'Cool'},gmaxgravitas:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Summons Gravity. Base Power scales with the base move's Base Power.",shortDesc:'Summons Gravity. BP scales with base move.',id:'gmaxgravitas',isNonstandard:'Unobtainable',name:'G-Max Gravitas',pp:5,priority:0,flags:{},isMax:'Orbeetle',self:{pseudoWeather:'gravity'},target:'adjacentFoe',type:'Psychic',contestType:'Cool'},gmaxmalodor:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Poisons opponents. Base Power scales with the base move's Base Power.",shortDesc:'Poisons opponents. BP scales with base move.',id:'gmaxmalodor',isNonstandard:'Unobtainable',name:'G-Max Malodor',pp:5,priority:0,flags:{},isMax:'Garbodor',self:{onHit:function onHit(source){var _iteratorNormalCompletion28=true;var _didIteratorError28=false;var _iteratorError28=undefined;try{for(var _iterator28=source.side.foe.active[Symbol.iterator](),_step28;!(_iteratorNormalCompletion28=(_step28=_iterator28.next()).done);_iteratorNormalCompletion28=true){var pokemon=_step28.value;pokemon.trySetStatus('psn',source);}}catch(err){_didIteratorError28=true;_iteratorError28=err;}finally{try{if(!_iteratorNormalCompletion28&&_iterator28.return){_iterator28.return();}}finally{if(_didIteratorError28){throw _iteratorError28;}}}}},target:'adjacentFoe',type:'Poison',contestType:'Cool'},gmaxmeltdown:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Applies Torment to opponents. Base Power scales with the base move's Base Power.",shortDesc:'Applies Torment to foes. BP scales with base move.',id:'gmaxmeltdown',isNonstandard:'Unobtainable',name:'G-Max Meltdown',pp:5,priority:0,flags:{},isMax:'Melmetal',self:{onHit:function onHit(source){var _iteratorNormalCompletion29=true;var _didIteratorError29=false;var _iteratorError29=undefined;try{for(var _iterator29=source.side.foe.active[Symbol.iterator](),_step29;!(_iteratorNormalCompletion29=(_step29=_iterator29.next()).done);_iteratorNormalCompletion29=true){var pokemon=_step29.value;if(!pokemon.volatiles['dynamax'])pokemon.addVolatile('torment');}}catch(err){_didIteratorError29=true;_iteratorError29=err;}finally{try{if(!_iteratorNormalCompletion29&&_iterator29.return){_iterator29.return();}}finally{if(_didIteratorError29){throw _iteratorError29;}}}}},secondary:null,target:'adjacentFoe',type:'Steel',contestType:'Cool'},gmaxreplenish:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Has a 50% chance of restoring all Berries on the user's side. Base Power scales with the base move's Base Power.",shortDesc:'50% restore berries. BP scales w/ base move.',id:'gmaxreplenish',isNonstandard:'Unobtainable',name:'G-Max Replenish',pp:5,priority:0,flags:{},isMax:'Snorlax',self:{onHit:function onHit(source){if(this.random(2)===0)return;var _iteratorNormalCompletion30=true;var _didIteratorError30=false;var _iteratorError30=undefined;try{for(var _iterator30=source.side.active[Symbol.iterator](),_step30;!(_iteratorNormalCompletion30=(_step30=_iterator30.next()).done);_iteratorNormalCompletion30=true){var pokemon=_step30.value;if(!pokemon.item&&pokemon.lastItem&&this.dex.getItem(pokemon.lastItem).isBerry){var item=pokemon.lastItem;pokemon.lastItem='';this.add('-item',pokemon,this.dex.getItem(item),'[from] move: G-Max Replenish');pokemon.setItem(item);}}}catch(err){_didIteratorError30=true;_iteratorError30=err;}finally{try{if(!_iteratorNormalCompletion30&&_iterator30.return){_iterator30.return();}}finally{if(_didIteratorError30){throw _iteratorError30;}}}}},secondary:null,target:'adjacentFoe',type:'Normal',contestType:'Cool'},gmaxresonance:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Summons Aurora Veil. Base Power scales with the base move's Base Power.",shortDesc:'Summons Aurora Veil. BP scales w/ base move.',id:'gmaxresonance',isNonstandard:'Unobtainable',name:'G-Max Resonance',pp:5,priority:0,flags:{},isMax:'Lapras',self:{sideCondition:'auroraveil'},secondary:null,target:'adjacentFoe',type:'Ice',contestType:'Cool'},gmaxsandblast:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends if target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move. Base Power scales with the base move's Base Power.",shortDesc:'Traps/damages foes. BP scales w/ base move.',id:'gmaxsandblast',isNonstandard:'Unobtainable',name:'G-Max Sandblast',pp:5,priority:0,flags:{},isMax:'Sandaconda',self:{onHit:function onHit(source){var _iteratorNormalCompletion31=true;var _didIteratorError31=false;var _iteratorError31=undefined;try{for(var _iterator31=source.side.foe.active[Symbol.iterator](),_step31;!(_iteratorNormalCompletion31=(_step31=_iterator31.next()).done);_iteratorNormalCompletion31=true){var pokemon=_step31.value;pokemon.addVolatile('partiallytrapped',source,this.dex.getActiveMove('G-Max Sandblast'),'trapper');}}catch(err){_didIteratorError31=true;_iteratorError31=err;}finally{try{if(!_iteratorNormalCompletion31&&_iterator31.return){_iterator31.return();}}finally{if(_didIteratorError31){throw _iteratorError31;}}}}},secondary:null,target:'adjacentFoe',type:'Ground',contestType:'Cool'},gmaxsmite:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Confuses opponents. Base Power scales with the base move's Base Power.",shortDesc:'Confuses opponents. BP scales with base move.',id:'gmaxsmite',isNonstandard:'Unobtainable',name:'G-Max Smite',pp:5,priority:0,flags:{},isMax:'Hatterene',self:{onHit:function onHit(source){var _iteratorNormalCompletion32=true;var _didIteratorError32=false;var _iteratorError32=undefined;try{for(var _iterator32=source.side.foe.active[Symbol.iterator](),_step32;!(_iteratorNormalCompletion32=(_step32=_iterator32.next()).done);_iteratorNormalCompletion32=true){var pokemon=_step32.value;pokemon.addVolatile('confusion',source);}}catch(err){_didIteratorError32=true;_iteratorError32=err;}finally{try{if(!_iteratorNormalCompletion32&&_iterator32.return){_iterator32.return();}}finally{if(_didIteratorError32){throw _iteratorError32;}}}}},secondary:null,target:'adjacentFoe',type:'Fairy',contestType:'Cool'},gmaxsnooze:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Has a 50% chance of applying Yawn to the target. Base Power scales with the base move's Base Power.",shortDesc:'50% Yawn chance. BP scales w/ base move.',id:'gmaxsnooze',isNonstandard:'Unobtainable',name:'G-Max Snooze',pp:5,priority:0,flags:{},isMax:'Grimmsnarl',onHit:function onHit(target){if(target.status||!target.runStatusImmunity('slp'))return;if(this.random(2)===0)return;target.addVolatile('yawn');},onAfterSubDamage:function onAfterSubDamage(damage,target){if(target.status||!target.runStatusImmunity('slp'))return;if(this.random(2)===0)return;target.addVolatile('yawn');},secondary:null,target:'adjacentFoe',type:'Dark',contestType:'Cool'},gmaxsteelsurge:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Sets a Steel-type entry hazard. Base Power scales with the base move's Base Power.",shortDesc:'Sets Steel entry hazard. BP scales w/ base move.',id:'gmaxsteelsurge',isNonstandard:'Unobtainable',name:'G-Max Steelsurge',pp:5,priority:0,flags:{},isMax:'Copperajah',self:{onHit:function onHit(source){source.side.foe.addSideCondition('gmaxsteelsurge');}},effect:{onStart:function onStart(side){this.add('-sidestart',side,'move: G-Max Steelsurge');},onSwitchIn:function onSwitchIn(pokemon){if(pokemon.hasItem('heavydutyboots'))return;var typeMod=this.dex.clampIntRange(pokemon.runEffectiveness(this.dex.getActiveMove('G-Max Steelsurge')),-6,6);this.damage(pokemon.maxhp*Math.pow(2,typeMod)/8);}},secondary:null,target:'adjacentFoe',type:'Steel',contestType:'Cool'},gmaxstonesurge:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Sets Stealth Rock. Base Power scales with the base move's Base Power.",shortDesc:"Sets Stealth Rock. BP scales w/ base move's BP.",id:'gmaxstonesurge',isNonstandard:'Unobtainable',name:'G-Max Stonesurge',pp:5,priority:0,flags:{},isMax:'Drednaw',self:{onHit:function onHit(source){source.side.foe.addSideCondition('stealthrock');}},secondary:null,target:'adjacentFoe',type:'Water',contestType:'Cool'},gmaxstunshock:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Opponents are each randomly paralyzed or poisoned. Base Power scales with the base move's Base Power.",shortDesc:"Foe(s): Par/Psn. BP scales with base move's BP.",id:'gmaxstunshock',isNonstandard:'Unobtainable',name:'G-Max Stun Shock',pp:10,priority:0,flags:{},isMax:'Toxtricity',self:{onHit:function onHit(source){var _iteratorNormalCompletion33=true;var _didIteratorError33=false;var _iteratorError33=undefined;try{for(var _iterator33=source.side.foe.active[Symbol.iterator](),_step33;!(_iteratorNormalCompletion33=(_step33=_iterator33.next()).done);_iteratorNormalCompletion33=true){var pokemon=_step33.value;var result=this.random(2);if(result===0){pokemon.trySetStatus('par',source);}else{pokemon.trySetStatus('psn',source);}}}catch(err){_didIteratorError33=true;_iteratorError33=err;}finally{try{if(!_iteratorNormalCompletion33&&_iterator33.return){_iterator33.return();}}finally{if(_didIteratorError33){throw _iteratorError33;}}}}},secondary:null,target:'adjacentFoe',type:'Electric',contestType:'Cool'},gmaxsweetness:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Cures status on user's team. Base Power scales with the base move's Base Power.",shortDesc:"Cures team's statuses. BP scales with base move's BP.",id:'gmaxsweetness',isNonstandard:'Unobtainable',name:'G-Max Sweetness',pp:10,priority:0,flags:{},isMax:'Appletun',self:{onHit:function onHit(source){var _iteratorNormalCompletion34=true;var _didIteratorError34=false;var _iteratorError34=undefined;try{for(var _iterator34=source.side.pokemon[Symbol.iterator](),_step34;!(_iteratorNormalCompletion34=(_step34=_iterator34.next()).done);_iteratorNormalCompletion34=true){var ally=_step34.value;ally.cureStatus();}}catch(err){_didIteratorError34=true;_iteratorError34=err;}finally{try{if(!_iteratorNormalCompletion34&&_iterator34.return){_iterator34.return();}}finally{if(_didIteratorError34){throw _iteratorError34;}}}}},secondary:null,target:'adjacentFoe',type:'Grass',contestType:'Cool'},gmaxtartness:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Lowers opponents' evasion by 1 stage. Base Power scales with the base move's Base Power.",shortDesc:"Foe(s): -1 evasion. BP scales with base move's BP.",id:'gmaxtartness',isNonstandard:'Unobtainable',name:'G-Max Tartness',pp:10,priority:0,flags:{},isMax:'Flapple',self:{onHit:function onHit(source){var _iteratorNormalCompletion35=true;var _didIteratorError35=false;var _iteratorError35=undefined;try{for(var _iterator35=source.side.foe.active[Symbol.iterator](),_step35;!(_iteratorNormalCompletion35=(_step35=_iterator35.next()).done);_iteratorNormalCompletion35=true){var pokemon=_step35.value;this.boost({evasion:-1},pokemon);}}catch(err){_didIteratorError35=true;_iteratorError35=err;}finally{try{if(!_iteratorNormalCompletion35&&_iterator35.return){_iterator35.return();}}finally{if(_didIteratorError35){throw _iteratorError35;}}}}},secondary:null,target:'adjacentFoe',type:'Grass',contestType:'Cool'},gmaxterror:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Traps opponents. Base Power scales with the base move's Base Power.",shortDesc:"Traps foe(s). BP scales with base move's BP.",id:'gmaxterror',isNonstandard:'Unobtainable',name:'G-Max Terror',pp:10,priority:0,flags:{},isMax:'Gengar',self:{onHit:function onHit(source){var _iteratorNormalCompletion36=true;var _didIteratorError36=false;var _iteratorError36=undefined;try{for(var _iterator36=source.side.foe.active[Symbol.iterator](),_step36;!(_iteratorNormalCompletion36=(_step36=_iterator36.next()).done);_iteratorNormalCompletion36=true){var pokemon=_step36.value;pokemon.addVolatile('trapped',source,null,'trapper');}}catch(err){_didIteratorError36=true;_iteratorError36=err;}finally{try{if(!_iteratorNormalCompletion36&&_iterator36.return){_iterator36.return();}}finally{if(_didIteratorError36){throw _iteratorError36;}}}}},secondary:null,target:'adjacentFoe',type:'Ghost',contestType:'Cool'},gmaxvolcalith:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Damages opponent(s) by 1/8 of their maximum HP for four turns. Base Power scales with the base move's Base Power.",shortDesc:'Damages foes for 4 turns. BP scales w/ base move.',id:'gmaxvolcalith',isNonstandard:'Unobtainable',name:'G-Max Volcalith',pp:10,priority:0,flags:{},isMax:'Coalossal',self:{onHit:function onHit(source){source.side.foe.addSideCondition('gmaxvolcalith');}},effect:{duration:4,onStart:function onStart(targetSide){this.add('-sidestart',targetSide,'G-Max Volcalith');},onResidual:function onResidual(targetSide){var _iteratorNormalCompletion37=true;var _didIteratorError37=false;var _iteratorError37=undefined;try{for(var _iterator37=targetSide.active[Symbol.iterator](),_step37;!(_iteratorNormalCompletion37=(_step37=_iterator37.next()).done);_iteratorNormalCompletion37=true){var pokemon=_step37.value;this.damage(pokemon.baseMaxhp/8,pokemon);}}catch(err){_didIteratorError37=true;_iteratorError37=err;}finally{try{if(!_iteratorNormalCompletion37&&_iterator37.return){_iterator37.return();}}finally{if(_didIteratorError37){throw _iteratorError37;}}}},onEnd:function onEnd(targetSide){this.add('-sideend',targetSide,'G-Max Volcalith');}},secondary:null,target:'adjacentFoe',type:'Rock',contestType:'Cool'},gmaxvoltcrash:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Paralyzes opponents. Base Power scales with the base move's Base Power.",shortDesc:"Paralyzes foe(s). BP scales with base move's BP.",id:'gmaxvoltcrash',isNonstandard:'Unobtainable',name:'G-Max Volt Crash',pp:10,priority:0,flags:{},isMax:'Pikachu',self:{onHit:function onHit(source){var _iteratorNormalCompletion38=true;var _didIteratorError38=false;var _iteratorError38=undefined;try{for(var _iterator38=source.side.foe.active[Symbol.iterator](),_step38;!(_iteratorNormalCompletion38=(_step38=_iterator38.next()).done);_iteratorNormalCompletion38=true){var pokemon=_step38.value;pokemon.trySetStatus('par',source);}}catch(err){_didIteratorError38=true;_iteratorError38=err;}finally{try{if(!_iteratorNormalCompletion38&&_iterator38.return){_iterator38.return();}}finally{if(_didIteratorError38){throw _iteratorError38;}}}}},secondary:null,target:'adjacentFoe',type:'Electric',contestType:'Cool'},gmaxwildfire:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Damages non-Fire-type opponent(s) by 1/6 of their maximum HP for four turns. Base Power scales with the base move's Base Power.",shortDesc:'Damages foes for 4 turns. BP scales w/ base move.',id:'gmaxwildfire',isNonstandard:'Unobtainable',name:'G-Max Wildfire',pp:10,priority:0,flags:{},isMax:'Charizard',self:{onHit:function onHit(source){source.side.foe.addSideCondition('gmaxwildfire');}},effect:{duration:4,onStart:function onStart(targetSide){this.add('-sidestart',targetSide,'G-Max Wildfire');},onResidual:function onResidual(targetSide){var _iteratorNormalCompletion39=true;var _didIteratorError39=false;var _iteratorError39=undefined;try{for(var _iterator39=targetSide.active[Symbol.iterator](),_step39;!(_iteratorNormalCompletion39=(_step39=_iterator39.next()).done);_iteratorNormalCompletion39=true){var pokemon=_step39.value;if(!pokemon.hasType('Fire'))this.damage(pokemon.baseMaxhp/6,pokemon);}}catch(err){_didIteratorError39=true;_iteratorError39=err;}finally{try{if(!_iteratorNormalCompletion39&&_iterator39.return){_iterator39.return();}}finally{if(_didIteratorError39){throw _iteratorError39;}}}},onEnd:function onEnd(targetSide){var _iteratorNormalCompletion40=true;var _didIteratorError40=false;var _iteratorError40=undefined;try{for(var _iterator40=targetSide.active[Symbol.iterator](),_step40;!(_iteratorNormalCompletion40=(_step40=_iterator40.next()).done);_iteratorNormalCompletion40=true){var pokemon=_step40.value;if(!pokemon.hasType('Fire'))this.damage(pokemon.baseMaxhp/6,pokemon);}}catch(err){_didIteratorError40=true;_iteratorError40=err;}finally{try{if(!_iteratorNormalCompletion40&&_iterator40.return){_iterator40.return();}}finally{if(_didIteratorError40){throw _iteratorError40;}}}this.add('-sideend',targetSide,'G-Max Wildfire');}},secondary:null,target:'adjacentFoe',type:'Fire',contestType:'Cool'},gmaxwindrage:{num:1000,accuracy:true,basePower:10,category:'Physical',desc:"Removes Reflect, Light Screen, Aurora Veil, Spikes, Toxic Spikes, Stealth Rock, Sticky Web, Mist, Safeguard, G-Max Steelsurge, and Terrains from the field. This move's Base Power scales with the base move's Base Power.",shortDesc:"Clears field. BP scales with base move's BP.",id:'gmaxwindrage',isNonstandard:'Unobtainable',name:'G-Max Wind Rage',pp:10,priority:0,flags:{},isMax:'Corviknight',self:{onHit:function onHit(source){var success=false;var removeTarget=['reflect','lightscreen','auroraveil','safeguard','mist','spikes','toxicspikes','stealthrock','stickyweb'];var removeAll=['spikes','toxicspikes','stealthrock','stickyweb','gmaxsteelsurge'];var _iteratorNormalCompletion41=true;var _didIteratorError41=false;var _iteratorError41=undefined;try{for(var _iterator41=removeTarget[Symbol.iterator](),_step41;!(_iteratorNormalCompletion41=(_step41=_iterator41.next()).done);_iteratorNormalCompletion41=true){var targetCondition=_step41.value;if(source.side.foe.removeSideCondition(targetCondition)){if(!removeAll.includes(targetCondition))continue;this.add('-sideend',source.side.foe,this.dex.getEffect(targetCondition).name,'[from] move: G-Max Wind Rage','[of] '+source);success=true;}}}catch(err){_didIteratorError41=true;_iteratorError41=err;}finally{try{if(!_iteratorNormalCompletion41&&_iterator41.return){_iterator41.return();}}finally{if(_didIteratorError41){throw _iteratorError41;}}}var _iteratorNormalCompletion42=true;var _didIteratorError42=false;var _iteratorError42=undefined;try{for(var _iterator42=removeAll[Symbol.iterator](),_step42;!(_iteratorNormalCompletion42=(_step42=_iterator42.next()).done);_iteratorNormalCompletion42=true){var sideCondition=_step42.value;if(source.side.removeSideCondition(sideCondition)){this.add('-sideend',source.side,this.dex.getEffect(sideCondition).name,'[from] move: G-Max Wind Rage','[of] '+source);success=true;}}}catch(err){_didIteratorError42=true;_iteratorError42=err;}finally{try{if(!_iteratorNormalCompletion42&&_iterator42.return){_iterator42.return();}}finally{if(_didIteratorError42){throw _iteratorError42;}}}this.field.clearTerrain();return success;}},secondary:null,target:'adjacentFoe',type:'Flying',contestType:'Cool'},grassknot:{num:447,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon,target){var targetWeight=target.getWeight();if(targetWeight>=2000){this.debug('120 bp');return 120;}if(targetWeight>=1000){this.debug('100 bp');return 100;}if(targetWeight>=500){this.debug('80 bp');return 80;}if(targetWeight>=250){this.debug('60 bp');return 60;}if(targetWeight>=100){this.debug('40 bp');return 40;}this.debug('20 bp');return 20;},category:'Special',desc:"This move's power is 20 if the target weighs less than 10 kg, 40 if less than 25 kg, 60 if less than 50 kg, 80 if less than 100 kg, 100 if less than 200 kg, and 120 if greater than or equal to 200 kg.",shortDesc:'More power the heavier the target.',id:'grassknot',isViable:true,name:'Grass Knot',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1,nonsky:1},onTryHit:function onTryHit(target,source,move){if(target.volatiles['dynamax']){this.add('-fail',source,'move: Grass Knot','[from] Dynamax');this.attrLastMove('[still]');return null;}},secondary:null,target:'normal',type:'Grass',zMovePower:160,gmaxPower:130,contestType:'Cute'},grasspledge:{num:520,accuracy:100,basePower:80,basePowerCallback:function basePowerCallback(target,source,move){if(['waterpledge','firepledge'].includes(move.sourceEffect)){this.add('-combine');return 150;}return 80;},category:'Special',desc:"If one of the user's allies chose to use Fire Pledge or Water Pledge this turn and has not moved yet, it takes its turn immediately after the user and the user's move does nothing. If combined with Fire Pledge, the ally uses Fire Pledge with 150 power and a sea of fire appears on the target's side for 4 turns, which causes damage to non-Fire types equal to 1/8 of their maximum HP, rounded down, at the end of each turn during effect, including the last turn. If combined with Water Pledge, the ally uses Grass Pledge with 150 power and a swamp appears on the target's side for 4 turns, which quarters the Speed of each Pokemon on that side. When used as a combined move, this move gains STAB no matter what the user's type is. This move does not consume the user's Grass Gem.",shortDesc:'Use with Fire or Water Pledge for added effect.',id:'grasspledge',name:'Grass Pledge',pp:10,priority:0,flags:{protect:1,mirror:1,nonsky:1},onPrepareHit:function onPrepareHit(target,source,move){var _iteratorNormalCompletion43=true;var _didIteratorError43=false;var _iteratorError43=undefined;try{for(var _iterator43=this.queue[Symbol.iterator](),_step43;!(_iteratorNormalCompletion43=(_step43=_iterator43.next()).done);_iteratorNormalCompletion43=true){var action=_step43.value;// @ts-ignore
if(!action.move||!action.pokemon||!action.pokemon.isActive||action.pokemon.fainted)continue;// @ts-ignore
if(action.pokemon.side===source.side&&['waterpledge','firepledge'].includes(action.move.id)){// @ts-ignore
this.queue.prioritizeAction(action,move);this.add('-waiting',source,action.pokemon);return null;}}}catch(err){_didIteratorError43=true;_iteratorError43=err;}finally{try{if(!_iteratorNormalCompletion43&&_iterator43.return){_iterator43.return();}}finally{if(_didIteratorError43){throw _iteratorError43;}}}},onModifyMove:function onModifyMove(move){if(move.sourceEffect==='waterpledge'){move.type='Grass';move.forceSTAB=true;move.sideCondition='grasspledge';}if(move.sourceEffect==='firepledge'){move.type='Fire';move.forceSTAB=true;move.sideCondition='firepledge';}},effect:{duration:4,onStart:function onStart(targetSide){this.add('-sidestart',targetSide,'Grass Pledge');},onEnd:function onEnd(targetSide){this.add('-sideend',targetSide,'Grass Pledge');},onModifySpe:function onModifySpe(spe,pokemon){return this.chainModify(0.25);}},secondary:null,target:'normal',type:'Grass',contestType:'Beautiful'},grasswhistle:{num:320,accuracy:55,basePower:0,category:'Status',shortDesc:'Causes the target to fall asleep.',id:'grasswhistle',isNonstandard:'Past',name:'Grass Whistle',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1,sound:1,authentic:1},status:'slp',secondary:null,target:'normal',type:'Grass',zMoveBoost:{spe:1},contestType:'Clever'},grassyterrain:{num:580,accuracy:true,basePower:0,category:'Status',desc:'For 5 turns, the terrain becomes Grassy Terrain. During the effect, the power of Grass-type attacks used by grounded Pokemon is multiplied by 1.3, the power of Bulldoze, Earthquake, and Magnitude used against grounded Pokemon is multiplied by 0.5, and grounded Pokemon have 1/16 of their maximum HP, rounded down, restored at the end of each turn, including the last turn. Camouflage transforms the user into a Grass type, Nature Power becomes Energy Ball, and Secret Power has a 30% chance to cause sleep. Fails if the current terrain is Grassy Terrain.',shortDesc:'5 turns. Grounded: +Grass power, +1/16 max HP.',id:'grassyterrain',name:'Grassy Terrain',pp:10,priority:0,flags:{nonsky:1},terrain:'grassyterrain',effect:{duration:5,durationCallback:function durationCallback(source,effect){if(source&&source.hasItem('terrainextender')){return 8;}return 5;},onBasePower:function onBasePower(basePower,attacker,defender,move){var weakenedMoves=['earthquake','bulldoze','magnitude'];if(weakenedMoves.includes(move.id)){this.debug('move weakened by grassy terrain');return this.chainModify(0.5);}if(move.type==='Grass'&&attacker.isGrounded()){this.debug('grassy terrain boost');return this.chainModify([0x14cd,0x1000]);}},onStart:function onStart(battle,source,effect){if(effect&&effect.effectType==='Ability'){this.add('-fieldstart','move: Grassy Terrain','[from] ability: '+effect,'[of] '+source);}else{this.add('-fieldstart','move: Grassy Terrain');}},onResidualOrder:5,onResidualSubOrder:3,onResidual:function onResidual(){this.eachEvent('Terrain');},onTerrain:function onTerrain(pokemon){if(pokemon.isGrounded()&&!pokemon.isSemiInvulnerable()){this.debug('Pokemon is grounded, healing through Grassy Terrain.');this.heal(pokemon.baseMaxhp/16,pokemon,pokemon);}},onEnd:function onEnd(){if(!this.effectData.duration)this.eachEvent('Terrain');this.add('-fieldend','move: Grassy Terrain');}},secondary:null,target:'all',type:'Grass',zMoveBoost:{def:1},contestType:'Beautiful'},gravapple:{num:788,accuracy:100,basePower:80,category:'Physical',desc:"Has a 100% chance to lower the target's Defense by 1 stage. This move's base power is 1.5x stronger in Gravity.",shortDesc:'Foe: 100% -1 Def. 1.5x Power in Gravity.',id:'gravapple',name:'Grav Apple',pp:10,priority:0,flags:{protect:1,mirror:1},onBasePower:function onBasePower(basePower){if(this.field.getPseudoWeather('gravity')){return this.chainModify(1.5);}},secondary:{chance:100,boosts:{def:-1}},target:'normal',type:'Grass'},gravity:{num:356,accuracy:true,basePower:0,category:'Status',desc:'For 5 turns, the evasiveness of all active Pokemon is multiplied by 0.6. At the time of use, Bounce, Fly, Magnet Rise, Sky Drop, and Telekinesis end immediately for all active Pokemon. During the effect, Bounce, Fly, Flying Press, High Jump Kick, Jump Kick, Magnet Rise, Sky Drop, Splash, and Telekinesis are prevented from being used by all active Pokemon. Ground-type attacks, Spikes, Toxic Spikes, Sticky Web, and the Arena Trap Ability can affect Flying types or Pokemon with the Levitate Ability. Fails if this move is already in effect.',shortDesc:'For 5 turns, negates all Ground immunities.',id:'gravity',name:'Gravity',pp:5,priority:0,flags:{nonsky:1},pseudoWeather:'gravity',effect:{duration:5,durationCallback:function durationCallback(source,effect){if(source&&source.hasAbility('persistent')){this.add('-activate',source,'ability: Persistent',effect);return 7;}return 5;},onStart:function onStart(){this.add('-fieldstart','move: Gravity');var _iteratorNormalCompletion44=true;var _didIteratorError44=false;var _iteratorError44=undefined;try{for(var _iterator44=this.getAllActive()[Symbol.iterator](),_step44;!(_iteratorNormalCompletion44=(_step44=_iterator44.next()).done);_iteratorNormalCompletion44=true){var pokemon=_step44.value;var applies=false;if(pokemon.removeVolatile('bounce')||pokemon.removeVolatile('fly')){applies=true;this.queue.cancelMove(pokemon);pokemon.removeVolatile('twoturnmove');}if(pokemon.volatiles['skydrop']){applies=true;this.queue.cancelMove(pokemon);if(pokemon.volatiles['skydrop'].source){this.add('-end',pokemon.volatiles['twoturnmove'].source,'Sky Drop','[interrupt]');}pokemon.removeVolatile('skydrop');pokemon.removeVolatile('twoturnmove');}if(pokemon.volatiles['magnetrise']){applies=true;delete pokemon.volatiles['magnetrise'];}if(pokemon.volatiles['telekinesis']){applies=true;delete pokemon.volatiles['telekinesis'];}if(applies)this.add('-activate',pokemon,'move: Gravity');}}catch(err){_didIteratorError44=true;_iteratorError44=err;}finally{try{if(!_iteratorNormalCompletion44&&_iterator44.return){_iterator44.return();}}finally{if(_didIteratorError44){throw _iteratorError44;}}}},onModifyAccuracy:function onModifyAccuracy(accuracy){if(typeof accuracy!=='number')return;return accuracy*5/3;},onDisableMove:function onDisableMove(pokemon){var _iteratorNormalCompletion45=true;var _didIteratorError45=false;var _iteratorError45=undefined;try{for(var _iterator45=pokemon.moveSlots[Symbol.iterator](),_step45;!(_iteratorNormalCompletion45=(_step45=_iterator45.next()).done);_iteratorNormalCompletion45=true){var moveSlot=_step45.value;if(this.dex.getMove(moveSlot.id).flags['gravity']){pokemon.disableMove(moveSlot.id);}}}catch(err){_didIteratorError45=true;_iteratorError45=err;}finally{try{if(!_iteratorNormalCompletion45&&_iterator45.return){_iterator45.return();}}finally{if(_didIteratorError45){throw _iteratorError45;}}}},// groundedness implemented in battle.engine.js:BattlePokemon#isGrounded
onBeforeMovePriority:6,onBeforeMove:function onBeforeMove(pokemon,target,move){if(move.flags['gravity']){this.add('cant',pokemon,'move: Gravity',move);return false;}},onResidualOrder:22,onEnd:function onEnd(){this.add('-fieldend','move: Gravity');}},secondary:null,target:'all',type:'Psychic',zMoveBoost:{spa:1},contestType:'Clever'},growl:{num:45,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Attack by 1 stage.",shortDesc:'Lowers the foe(s) Attack by 1.',id:'growl',name:'Growl',pp:40,priority:0,flags:{protect:1,reflectable:1,mirror:1,sound:1,authentic:1},boosts:{atk:-1},secondary:null,target:'allAdjacentFoes',type:'Normal',zMoveBoost:{def:1},contestType:'Cute'},growth:{num:74,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Attack and Special Attack by 1 stage. If the weather is Sunny Day or Desolate Land, this move raises the user's Attack and Special Attack by 2 stages. If the user is holding Utility Umbrella, this move will only raise the user's Attack and Special Attack by 1 stage, even if the weather is Sunny Day or Desolate Land.",shortDesc:"Raises user's Attack and Sp. Atk by 1; 2 in Sun.",id:'growth',name:'Growth',pp:20,priority:0,flags:{snatch:1},onModifyMove:function onModifyMove(move,pokemon){if(['sunnyday','desolateland'].includes(pokemon.effectiveWeather()))move.boosts={atk:2,spa:2};},boosts:{atk:1,spa:1},secondary:null,target:'self',type:'Normal',zMoveBoost:{spa:1},contestType:'Beautiful'},grudge:{num:288,accuracy:true,basePower:0,category:'Status',desc:"Until the user's next turn, if an opposing Pokemon's attack knocks the user out, that move loses all its remaining PP.",shortDesc:'If the user faints, the attack used loses all its PP.',id:'grudge',name:'Grudge',pp:5,priority:0,flags:{authentic:1},volatileStatus:'grudge',effect:{onStart:function onStart(pokemon){this.add('-singlemove',pokemon,'Grudge');},onFaint:function onFaint(target,source,effect){if(!source||source.fainted||!effect)return;if(effect.effectType==='Move'&&!effect.isFutureMove&&source.lastMove){var _iteratorNormalCompletion46=true;var _didIteratorError46=false;var _iteratorError46=undefined;try{for(var _iterator46=source.moveSlots[Symbol.iterator](),_step46;!(_iteratorNormalCompletion46=(_step46=_iterator46.next()).done);_iteratorNormalCompletion46=true){var moveSlot=_step46.value;if(moveSlot.id===source.lastMove.id){moveSlot.pp=0;this.add('-activate',source,'move: Grudge',this.dex.getMove(source.lastMove.id).name);}}}catch(err){_didIteratorError46=true;_iteratorError46=err;}finally{try{if(!_iteratorNormalCompletion46&&_iterator46.return){_iterator46.return();}}finally{if(_didIteratorError46){throw _iteratorError46;}}}}},onBeforeMovePriority:100,onBeforeMove:function onBeforeMove(pokemon){this.debug('removing Grudge before attack');pokemon.removeVolatile('grudge');}},secondary:null,target:'self',type:'Ghost',zMoveEffect:'redirect',contestType:'Tough'},guardianofalola:{num:698,accuracy:true,basePower:0,damageCallback:function damageCallback(pokemon,target){var hp75=Math.floor(target.getUndynamaxedHP()*3/4);if(target.volatiles['banefulbunker']||target.volatiles['kingsshield']||target.side.getSideCondition('matblock')||target.volatiles['protect']||target.volatiles['spikyshield']){this.add('-zbroken',target);return this.dex.clampIntRange(Math.ceil(hp75/4-0.5),1);}return this.dex.clampIntRange(hp75,1);},category:'Special',desc:'Deals damage to the target equal to 3/4 of its current HP, rounded down, but not less than 1 HP.',shortDesc:"Does damage equal to 3/4 target's current HP.",id:'guardianofalola',isNonstandard:'Past',name:'Guardian of Alola',pp:1,priority:0,flags:{},isZ:'tapuniumz',secondary:null,target:'normal',type:'Fairy',contestType:'Tough'},guardsplit:{num:470,accuracy:true,basePower:0,category:'Status',desc:"The user and the target have their Defense and Special Defense stats set to be equal to the average of the user and the target's Defense and Special Defense stats, respectively, rounded down. Stat stage changes are unaffected.",shortDesc:'Averages Defense and Sp. Def stats with target.',id:'guardsplit',name:'Guard Split',pp:10,priority:0,flags:{protect:1,mystery:1},onHit:function onHit(target,source){var newdef=Math.floor((target.storedStats.def+source.storedStats.def)/2);target.storedStats.def=newdef;source.storedStats.def=newdef;var newspd=Math.floor((target.storedStats.spd+source.storedStats.spd)/2);target.storedStats.spd=newspd;source.storedStats.spd=newspd;this.add('-activate',source,'move: Guard Split','[of] '+target);},secondary:null,target:'normal',type:'Psychic',zMoveBoost:{spe:1},contestType:'Clever'},guardswap:{num:385,accuracy:true,basePower:0,category:'Status',desc:'The user swaps its Defense and Special Defense stat stage changes with the target.',shortDesc:'Swaps Defense and Sp. Def changes with target.',id:'guardswap',name:'Guard Swap',pp:10,priority:0,flags:{protect:1,mirror:1,authentic:1,mystery:1},onHit:function onHit(target,source){var targetBoosts={};var sourceBoosts={};var _arr=['def','spd'];for(var _i=0;_i<_arr.length;_i++){var stat=_arr[_i];// @ts-ignore
targetBoosts[stat]=target.boosts[stat];// @ts-ignore
sourceBoosts[stat]=source.boosts[stat];}source.setBoost(targetBoosts);target.setBoost(sourceBoosts);this.add('-swapboost',source,target,'def, spd','[from] move: Guard Swap');},secondary:null,target:'normal',type:'Psychic',zMoveBoost:{spe:1},contestType:'Clever'},guillotine:{num:12,accuracy:30,basePower:0,category:'Physical',desc:"Deals damage to the target equal to the target's maximum HP. Ignores accuracy and evasiveness modifiers. This attack's accuracy is equal to (user's level - target's level + 30)%, and fails if the target is at a higher level. Pokemon with the Sturdy Ability are immune.",shortDesc:'OHKOs the target. Fails if user is a lower level.',id:'guillotine',name:'Guillotine',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},ohko:true,secondary:null,target:'normal',type:'Normal',zMovePower:180,gmaxPower:130,contestType:'Cool'},gunkshot:{num:441,accuracy:80,basePower:120,category:'Physical',desc:'Has a 30% chance to poison the target.',shortDesc:'30% chance to poison the target.',id:'gunkshot',isViable:true,name:'Gunk Shot',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:{chance:30,status:'psn'},target:'normal',type:'Poison',contestType:'Tough'},gust:{num:16,accuracy:100,basePower:40,category:'Special',desc:'Power doubles if the target is using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop.',shortDesc:'Power doubles during Bounce, Fly, and Sky Drop.',id:'gust',name:'Gust',pp:35,priority:0,flags:{protect:1,mirror:1,distance:1},secondary:null,target:'any',type:'Flying',contestType:'Clever'},gyroball:{num:360,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon,target){var power=Math.floor(25*target.getStat('spe')/pokemon.getStat('spe'))+1;if(!isFinite(power))power=1;if(power>150)power=150;this.debug(power+' bp');return power;},category:'Physical',desc:"Power is equal to (25 * target's current Speed / user's current Speed) + 1, rounded down, but not more than 150. If the user's current Speed is 0, this move's power is 1.",shortDesc:'More power the slower the user than the target.',id:'gyroball',isViable:true,name:'Gyro Ball',pp:5,priority:0,flags:{bullet:1,contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Steel',zMovePower:160,gmaxPower:130,contestType:'Cool'},hail:{num:258,accuracy:true,basePower:0,category:'Status',desc:'For 5 turns, the weather becomes Hail. At the end of each turn except the last, all active Pokemon lose 1/16 of their maximum HP, rounded down, unless they are an Ice type or have the Ice Body, Magic Guard, Overcoat, or Snow Cloak Abilities. Lasts for 8 turns if the user is holding Icy Rock. Fails if the current weather is Hail.',shortDesc:'For 5 turns, hail crashes down.',id:'hail',name:'Hail',pp:10,priority:0,flags:{},weather:'hail',secondary:null,target:'all',type:'Ice',zMoveBoost:{spe:1},contestType:'Beautiful'},hammerarm:{num:359,accuracy:90,basePower:100,category:'Physical',desc:"Lowers the user's Speed by 1 stage.",shortDesc:"Lowers the user's Speed by 1.",id:'hammerarm',isViable:true,name:'Hammer Arm',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},self:{boosts:{spe:-1}},secondary:null,target:'normal',type:'Fighting',contestType:'Tough'},happyhour:{num:603,accuracy:true,basePower:0,category:'Status',shortDesc:'No competitive use.',id:'happyhour',name:'Happy Hour',pp:30,priority:0,flags:{},onTryHit:function onTryHit(target,source){this.add('-activate',target,'move: Happy Hour');},secondary:null,target:'allySide',type:'Normal',zMoveBoost:{atk:1,def:1,spa:1,spd:1,spe:1},contestType:'Cute'},harden:{num:106,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Defense by 1 stage.",shortDesc:"Raises the user's Defense by 1.",id:'harden',name:'Harden',pp:30,priority:0,flags:{snatch:1},boosts:{def:1},secondary:null,target:'self',type:'Normal',zMoveBoost:{def:1},contestType:'Tough'},haze:{num:114,accuracy:true,basePower:0,category:'Status',desc:'Resets the stat stages of all active Pokemon to 0.',shortDesc:'Eliminates all stat changes.',id:'haze',isViable:true,name:'Haze',pp:30,priority:0,flags:{authentic:1},onHitField:function onHitField(){this.add('-clearallboost');var _iteratorNormalCompletion47=true;var _didIteratorError47=false;var _iteratorError47=undefined;try{for(var _iterator47=this.getAllActive()[Symbol.iterator](),_step47;!(_iteratorNormalCompletion47=(_step47=_iterator47.next()).done);_iteratorNormalCompletion47=true){var pokemon=_step47.value;pokemon.clearBoosts();}}catch(err){_didIteratorError47=true;_iteratorError47=err;}finally{try{if(!_iteratorNormalCompletion47&&_iterator47.return){_iterator47.return();}}finally{if(_didIteratorError47){throw _iteratorError47;}}}},secondary:null,target:'all',type:'Ice',zMoveEffect:'heal',contestType:'Beautiful'},headbutt:{num:29,accuracy:100,basePower:70,category:'Physical',desc:'Has a 30% chance to flinch the target.',shortDesc:'30% chance to flinch the target.',id:'headbutt',name:'Headbutt',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Normal',contestType:'Tough'},headcharge:{num:543,accuracy:100,basePower:120,category:'Physical',desc:'If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded half up, but not less than 1 HP.',shortDesc:'Has 1/4 recoil.',id:'headcharge',isNonstandard:'Past',name:'Head Charge',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},recoil:[1,4],secondary:null,target:'normal',type:'Normal',contestType:'Tough'},headsmash:{num:457,accuracy:80,basePower:150,category:'Physical',desc:'If the target lost HP, the user takes recoil damage equal to 1/2 the HP lost by the target, rounded half up, but not less than 1 HP.',shortDesc:'Has 1/2 recoil.',id:'headsmash',isViable:true,name:'Head Smash',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},recoil:[1,2],secondary:null,target:'normal',type:'Rock',contestType:'Tough'},healbell:{num:215,accuracy:true,basePower:0,category:'Status',desc:"Every Pokemon in the user's party is cured of its major status condition. Active Pokemon with the Soundproof Ability are not cured.",shortDesc:"Cures the user's party of all status conditions.",id:'healbell',isViable:true,name:'Heal Bell',pp:5,priority:0,flags:{snatch:1,sound:1,distance:1,authentic:1},onHit:function onHit(pokemon,source){this.add('-activate',source,'move: Heal Bell');var side=pokemon.side;var success=false;var _iteratorNormalCompletion48=true;var _didIteratorError48=false;var _iteratorError48=undefined;try{for(var _iterator48=side.pokemon[Symbol.iterator](),_step48;!(_iteratorNormalCompletion48=(_step48=_iterator48.next()).done);_iteratorNormalCompletion48=true){var ally=_step48.value;if(ally.hasAbility('soundproof'))continue;if(ally.cureStatus())success=true;}}catch(err){_didIteratorError48=true;_iteratorError48=err;}finally{try{if(!_iteratorNormalCompletion48&&_iterator48.return){_iterator48.return();}}finally{if(_didIteratorError48){throw _iteratorError48;}}}return success;},target:'allyTeam',type:'Normal',zMoveEffect:'heal',contestType:'Beautiful'},healblock:{num:377,accuracy:100,basePower:0,category:'Status',desc:'For 5 turns, the target is prevented from restoring any HP as long as it remains active. During the effect, healing and draining moves are unusable, and Abilities and items that grant healing will not heal the user. If an affected Pokemon uses Baton Pass, the replacement will remain unable to restore its HP. Pain Split and the Regenerator Ability are unaffected.',shortDesc:'For 5 turns, the foe(s) is prevented from healing.',id:'healblock',isNonstandard:'Past',name:'Heal Block',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1},volatileStatus:'healblock',effect:{duration:5,durationCallback:function durationCallback(target,source,effect){if(source&&source.hasAbility('persistent')){this.add('-activate',source,'ability: Persistent',effect);return 7;}return 5;},onStart:function onStart(pokemon){this.add('-start',pokemon,'move: Heal Block');},onDisableMove:function onDisableMove(pokemon){var _iteratorNormalCompletion49=true;var _didIteratorError49=false;var _iteratorError49=undefined;try{for(var _iterator49=pokemon.moveSlots[Symbol.iterator](),_step49;!(_iteratorNormalCompletion49=(_step49=_iterator49.next()).done);_iteratorNormalCompletion49=true){var moveSlot=_step49.value;if(this.dex.getMove(moveSlot.id).flags['heal']){pokemon.disableMove(moveSlot.id);}}}catch(err){_didIteratorError49=true;_iteratorError49=err;}finally{try{if(!_iteratorNormalCompletion49&&_iterator49.return){_iterator49.return();}}finally{if(_didIteratorError49){throw _iteratorError49;}}}},onBeforeMovePriority:6,onBeforeMove:function onBeforeMove(pokemon,target,move){if(move.flags['heal']&&!move.isZ&&!move.isMax){this.add('cant',pokemon,'move: Heal Block',move);return false;}},onResidualOrder:17,onEnd:function onEnd(pokemon){this.add('-end',pokemon,'move: Heal Block');},onTryHeal:function onTryHeal(damage,target,source,effect){if(effect&&effect.id==='zpower'||this.effectData.isZ)return damage;return false;}},secondary:null,target:'allAdjacentFoes',type:'Psychic',zMoveBoost:{spa:2},contestType:'Clever'},healingwish:{num:361,accuracy:true,basePower:0,category:'Status',desc:'The user faints and the next injured or statused Pokemon brought in has its HP fully restored along with having any major status condition cured. The healing happens before hazards take effect. Is not consumed if the Pokemon sent out is not injured or statused. Fails if the user is the last unfainted Pokemon in its party.',shortDesc:'User faints. Next hurt Pokemon is fully healed.',id:'healingwish',isViable:true,name:'Healing Wish',pp:10,priority:0,flags:{snatch:1,heal:1},onTryHit:function onTryHit(pokemon,target,move){if(!this.canSwitch(pokemon.side)){delete move.selfdestruct;return false;}},selfdestruct:'ifHit',slotCondition:'healingwish',effect:{onSwap:function onSwap(target){if(!target.fainted&&(target.hp<target.maxhp||target.status)){target.heal(target.maxhp);target.setStatus('');this.add('-heal',target,target.getHealth,'[from] move: Healing Wish');target.side.removeSlotCondition(target,'healingwish');}}},secondary:null,target:'self',type:'Psychic',contestType:'Beautiful'},healorder:{num:456,accuracy:true,basePower:0,category:'Status',desc:'The user restores 1/2 of its maximum HP, rounded half up.',shortDesc:'Heals the user by 50% of its max HP.',id:'healorder',isNonstandard:'Past',isViable:true,name:'Heal Order',pp:10,priority:0,flags:{snatch:1,heal:1},heal:[1,2],secondary:null,target:'self',type:'Bug',zMoveEffect:'clearnegativeboost',contestType:'Clever'},healpulse:{num:505,accuracy:true,basePower:0,category:'Status',desc:'The target restores 1/2 of its maximum HP, rounded half up. If the user has the Mega Launcher Ability, the target instead restores 3/4 of its maximum HP, rounded half down.',shortDesc:'Heals the target by 50% of its max HP.',id:'healpulse',name:'Heal Pulse',pp:10,priority:0,flags:{protect:1,pulse:1,reflectable:1,distance:1,heal:1,mystery:1},onHit:function onHit(target,source){var success=false;if(source.hasAbility('megalauncher')){success=!!this.heal(this.modify(target.baseMaxhp,0.75));}else{success=!!this.heal(Math.ceil(target.baseMaxhp*0.5));}if(success&&target.side.id!==source.side.id){target.staleness='external';}return success;},secondary:null,target:'any',type:'Psychic',zMoveEffect:'clearnegativeboost',contestType:'Beautiful'},heartstamp:{num:531,accuracy:100,basePower:60,category:'Physical',desc:'Has a 30% chance to flinch the target.',shortDesc:'30% chance to flinch the target.',id:'heartstamp',isNonstandard:'Past',name:'Heart Stamp',pp:25,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Psychic',contestType:'Cute'},heartswap:{num:391,accuracy:true,basePower:0,category:'Status',desc:'The user swaps all its stat stage changes with the target.',shortDesc:'Swaps all stat changes with target.',id:'heartswap',isNonstandard:'Past',name:'Heart Swap',pp:10,priority:0,flags:{protect:1,mirror:1,authentic:1,mystery:1},onHit:function onHit(target,source){var targetBoosts={};var sourceBoosts={};for(var i in target.boosts){// @ts-ignore
targetBoosts[i]=target.boosts[i];// @ts-ignore
sourceBoosts[i]=source.boosts[i];}target.setBoost(sourceBoosts);source.setBoost(targetBoosts);this.add('-swapboost',source,target,'[from] move: Heart Swap');},secondary:null,target:'normal',type:'Psychic',zMoveEffect:'crit2',contestType:'Clever'},heatcrash:{num:535,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon,target){var targetWeight=target.getWeight();var pokemonWeight=pokemon.getWeight();if(pokemonWeight>targetWeight*5){return 120;}if(pokemonWeight>targetWeight*4){return 100;}if(pokemonWeight>targetWeight*3){return 80;}if(pokemonWeight>targetWeight*2){return 60;}return 40;},category:'Physical',desc:"The power of this move depends on (user's weight / target's weight), rounded down. Power is equal to 120 if the result is 5 or more, 100 if 4, 80 if 3, 60 if 2, and 40 if 1 or less. Damage doubles and no accuracy check is done if the target has used Minimize while active.",shortDesc:'More power the heavier the user than the target.',id:'heatcrash',name:'Heat Crash',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,nonsky:1},onTryHit:function onTryHit(target,pokemon,move){if(target.volatiles['dynamax']){this.add('-fail',pokemon,'Dynamax');this.attrLastMove('[still]');return null;}},secondary:null,target:'normal',type:'Fire',zMovePower:160,gmaxPower:130,contestType:'Tough'},heatwave:{num:257,accuracy:90,basePower:95,category:'Special',desc:'Has a 10% chance to burn the target.',shortDesc:'10% chance to burn the foe(s).',id:'heatwave',isViable:true,name:'Heat Wave',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,status:'brn'},target:'allAdjacentFoes',type:'Fire',contestType:'Beautiful'},heavyslam:{num:484,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon,target){var targetWeight=target.getWeight();var pokemonWeight=pokemon.getWeight();if(pokemonWeight>targetWeight*5){return 120;}if(pokemonWeight>targetWeight*4){return 100;}if(pokemonWeight>targetWeight*3){return 80;}if(pokemonWeight>targetWeight*2){return 60;}return 40;},category:'Physical',desc:"The power of this move depends on (user's weight / target's weight), rounded down. Power is equal to 120 if the result is 5 or more, 100 if 4, 80 if 3, 60 if 2, and 40 if 1 or less. Damage doubles and no accuracy check is done if the target has used Minimize while active.",shortDesc:'More power the heavier the user than the target.',id:'heavyslam',isViable:true,name:'Heavy Slam',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,nonsky:1},onTryHit:function onTryHit(target,pokemon,move){if(target.volatiles['dynamax']){this.add('-fail',pokemon,'Dynamax');this.attrLastMove('[still]');return null;}},secondary:null,target:'normal',type:'Steel',zMovePower:160,gmaxPower:130,contestType:'Tough'},helpinghand:{num:270,accuracy:true,basePower:0,category:'Status',desc:"The power of the target's attack this turn is multiplied by 1.5 (this effect is stackable). Fails if there is no ally adjacent to the user or if the ally already moved this turn, but does not fail if the ally is using a two-turn move.",shortDesc:"One adjacent ally's move power is 1.5x this turn.",id:'helpinghand',name:'Helping Hand',pp:20,priority:5,flags:{authentic:1},volatileStatus:'helpinghand',onTryHit:function onTryHit(target){if(!target.newlySwitched&&!this.queue.willMove(target))return false;},effect:{duration:1,onStart:function onStart(target,source){this.effectData.multiplier=1.5;this.add('-singleturn',target,'Helping Hand','[of] '+source);},onRestart:function onRestart(target,source){this.effectData.multiplier*=1.5;this.add('-singleturn',target,'Helping Hand','[of] '+source);},onBasePowerPriority:3,onBasePower:function onBasePower(basePower){this.debug('Boosting from Helping Hand: '+this.effectData.multiplier);return this.chainModify(this.effectData.multiplier);}},secondary:null,target:'adjacentAlly',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Clever'},hex:{num:506,accuracy:100,basePower:65,basePowerCallback:function basePowerCallback(pokemon,target,move){if(target.status||target.hasAbility('comatose'))return move.basePower*2;return move.basePower;},category:'Special',desc:'Power doubles if the target has a major status condition.',shortDesc:'Power doubles if the target has a status ailment.',id:'hex',isViable:true,name:'Hex',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Ghost',zMovePower:160,contestType:'Clever'},hiddenpower:{num:237,accuracy:100,basePower:60,category:'Special',desc:"This move's type depends on the user's individual values (IVs), and can be any type but Fairy and Normal.",shortDesc:"Varies in type based on the user's IVs.",id:'hiddenpower',isNonstandard:'Past',name:'Hidden Power',pp:15,priority:0,flags:{protect:1,mirror:1},onModifyType:function onModifyType(move,pokemon){move.type=pokemon.hpType||'Dark';},secondary:null,target:'normal',type:'Normal',contestType:'Clever'},hiddenpowerbug:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',name:'Hidden Power Bug',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Bug',contestType:'Clever'},hiddenpowerdark:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',name:'Hidden Power Dark',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Dark',contestType:'Clever'},hiddenpowerdragon:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',name:'Hidden Power Dragon',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Dragon',contestType:'Clever'},hiddenpowerelectric:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',isViable:true,name:'Hidden Power Electric',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Electric',contestType:'Clever'},hiddenpowerfighting:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',isViable:true,name:'Hidden Power Fighting',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Fighting',contestType:'Clever'},hiddenpowerfire:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',isViable:true,name:'Hidden Power Fire',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Fire',contestType:'Clever'},hiddenpowerflying:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',name:'Hidden Power Flying',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Flying',contestType:'Clever'},hiddenpowerghost:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',name:'Hidden Power Ghost',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Ghost',contestType:'Clever'},hiddenpowergrass:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',isViable:true,name:'Hidden Power Grass',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Grass',contestType:'Clever'},hiddenpowerground:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',name:'Hidden Power Ground',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Ground',contestType:'Clever'},hiddenpowerice:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',isViable:true,name:'Hidden Power Ice',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Ice',contestType:'Clever'},hiddenpowerpoison:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',name:'Hidden Power Poison',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Poison',contestType:'Clever'},hiddenpowerpsychic:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',name:'Hidden Power Psychic',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Psychic',contestType:'Clever'},hiddenpowerrock:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',name:'Hidden Power Rock',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Rock',contestType:'Clever'},hiddenpowersteel:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',name:'Hidden Power Steel',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Steel',contestType:'Clever'},hiddenpowerwater:{num:237,accuracy:100,basePower:60,category:'Special',desc:'',shortDesc:'',id:'hiddenpower',isNonstandard:'Past',name:'Hidden Power Water',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Water',contestType:'Clever'},highhorsepower:{num:667,accuracy:95,basePower:95,category:'Physical',shortDesc:'No additional effect.',id:'highhorsepower',isViable:true,name:'High Horsepower',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Ground',contestType:'Tough'},highjumpkick:{num:136,accuracy:90,basePower:130,category:'Physical',desc:'If this attack is not successful, the user loses half of its maximum HP, rounded down, as crash damage. Pokemon with the Magic Guard Ability are unaffected by crash damage.',shortDesc:'User is hurt by 50% of its max HP if it misses.',id:'highjumpkick',isViable:true,name:'High Jump Kick',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,gravity:1},hasCustomRecoil:true,onMoveFail:function onMoveFail(target,source,move){this.damage(source.baseMaxhp/2,source,source,this.dex.getEffect('High Jump Kick'));},secondary:null,target:'normal',type:'Fighting',contestType:'Cool'},holdback:{num:610,accuracy:100,basePower:40,category:'Physical',desc:'Leaves the target with at least 1 HP.',shortDesc:'Always leaves the target with at least 1 HP.',id:'holdback',name:'Hold Back',pp:40,priority:0,flags:{contact:1,protect:1,mirror:1},noFaint:true,secondary:null,target:'normal',type:'Normal',contestType:'Cool'},holdhands:{num:615,accuracy:true,basePower:0,category:'Status',desc:'No competitive use. Fails if there is no ally adjacent to the user.',shortDesc:'No competitive use.',id:'holdhands',name:'Hold Hands',pp:40,priority:0,flags:{authentic:1},secondary:null,target:'adjacentAlly',type:'Normal',zMoveBoost:{atk:1,def:1,spa:1,spd:1,spe:1},contestType:'Cute'},honeclaws:{num:468,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Attack and accuracy by 1 stage.",shortDesc:"Raises the user's Attack and accuracy by 1.",id:'honeclaws',isViable:true,name:'Hone Claws',pp:15,priority:0,flags:{snatch:1},boosts:{atk:1,accuracy:1},secondary:null,target:'self',type:'Dark',zMoveBoost:{atk:1},contestType:'Cute'},hornattack:{num:30,accuracy:100,basePower:65,category:'Physical',shortDesc:'No additional effect.',id:'hornattack',name:'Horn Attack',pp:25,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',contestType:'Cool'},horndrill:{num:32,accuracy:30,basePower:0,category:'Physical',desc:"Deals damage to the target equal to the target's maximum HP. Ignores accuracy and evasiveness modifiers. This attack's accuracy is equal to (user's level - target's level + 30)%, and fails if the target is at a higher level. Pokemon with the Sturdy Ability are immune.",shortDesc:'OHKOs the target. Fails if user is a lower level.',id:'horndrill',name:'Horn Drill',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},ohko:true,secondary:null,target:'normal',type:'Normal',zMovePower:180,gmaxPower:130,contestType:'Cool'},hornleech:{num:532,accuracy:100,basePower:75,category:'Physical',desc:'The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.',shortDesc:'User recovers 50% of the damage dealt.',id:'hornleech',isViable:true,name:'Horn Leech',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,heal:1},drain:[1,2],secondary:null,target:'normal',type:'Grass',contestType:'Tough'},howl:{num:336,accuracy:true,basePower:0,category:'Status',desc:'Raises the Attack of the user and all allies 1 stage.',shortDesc:"Raises the user's and ally's Attack by 1.",id:'howl',name:'Howl',pp:40,priority:0,flags:{snatch:1},boosts:{atk:1},secondary:null,target:'allies',type:'Normal',zMoveBoost:{atk:1},contestType:'Cool'},hurricane:{num:542,accuracy:70,basePower:110,category:'Special',desc:"Has a 30% chance to confuse the target. This move can hit a target using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop. If the weather is Primordial Sea or Rain Dance, this move does not check accuracy. If the weather is Desolate Land or Sunny Day, this move's accuracy is 50%. If this move is used against a Pokemon holding Utility Umbrella, this move's accuracy remains at 70%.",shortDesc:"30% chance to confuse target. Can't miss in rain.",id:'hurricane',isViable:true,name:'Hurricane',pp:10,priority:0,flags:{protect:1,mirror:1,distance:1},onModifyMove:function onModifyMove(move,pokemon,target){switch(pokemon.effectiveWeather()){case'raindance':case'primordialsea':move.accuracy=true;break;case'sunnyday':case'desolateland':move.accuracy=50;break;}},secondary:{chance:30,volatileStatus:'confusion'},target:'any',type:'Flying',contestType:'Tough'},hydrocannon:{num:308,accuracy:90,basePower:150,category:'Special',desc:'If this move is successful, the user must recharge on the following turn and cannot select a move.',shortDesc:'User cannot move next turn.',id:'hydrocannon',name:'Hydro Cannon',pp:5,priority:0,flags:{recharge:1,protect:1,mirror:1},self:{volatileStatus:'mustrecharge'},secondary:null,target:'normal',type:'Water',contestType:'Beautiful'},hydropump:{num:56,accuracy:80,basePower:110,category:'Special',shortDesc:'No additional effect.',id:'hydropump',isViable:true,name:'Hydro Pump',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Water',contestType:'Beautiful'},hydrovortex:{num:642,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'hydrovortex',isNonstandard:'Past',name:'Hydro Vortex',pp:1,priority:0,flags:{},isZ:'wateriumz',secondary:null,target:'normal',type:'Water',contestType:'Cool'},hyperbeam:{num:63,accuracy:90,basePower:150,category:'Special',desc:'If this move is successful, the user must recharge on the following turn and cannot select a move.',shortDesc:'User cannot move next turn.',id:'hyperbeam',name:'Hyper Beam',pp:5,priority:0,flags:{recharge:1,protect:1,mirror:1},self:{volatileStatus:'mustrecharge'},secondary:null,target:'normal',type:'Normal',contestType:'Cool'},hyperfang:{num:158,accuracy:90,basePower:80,category:'Physical',desc:'Has a 10% chance to flinch the target.',shortDesc:'10% chance to flinch the target.',id:'hyperfang',isNonstandard:'Past',name:'Hyper Fang',pp:15,priority:0,flags:{bite:1,contact:1,protect:1,mirror:1},secondary:{chance:10,volatileStatus:'flinch'},target:'normal',type:'Normal',contestType:'Cool'},hyperspacefury:{num:621,accuracy:true,basePower:100,category:'Physical',desc:"Lowers the user's Defense by 1 stage. This move cannot be used successfully unless the user's current form, while considering Transform, is Hoopa Unbound. If this move is successful, it breaks through the target's Baneful Bunker, Detect, King's Shield, Protect, or Spiky Shield for this turn, allowing other Pokemon to attack the target normally. If the target's side is protected by Crafty Shield, Mat Block, Quick Guard, or Wide Guard, that protection is also broken for this turn and other Pokemon may attack the target's side normally.",shortDesc:"Hoopa-U: Lowers user's Def by 1; breaks protect.",id:'hyperspacefury',isNonstandard:'Past',name:'Hyperspace Fury',pp:5,priority:0,flags:{mirror:1,authentic:1},breaksProtect:true,onTry:function onTry(pokemon){if(pokemon.template.species==='Hoopa-Unbound'){return;}this.hint('Only a Pokemon whose form is Hoopa Unbound can use this move.');if(pokemon.template.species==='Hoopa'){this.add('-fail',pokemon,'move: Hyperspace Fury','[forme]');return null;}this.add('-fail',pokemon,'move: Hyperspace Fury');return null;},self:{boosts:{def:-1}},secondary:null,target:'normal',type:'Dark',contestType:'Tough'},hyperspacehole:{num:593,accuracy:true,basePower:80,category:'Special',desc:"If this move is successful, it breaks through the target's Baneful Bunker, Detect, King's Shield, Protect, or Spiky Shield for this turn, allowing other Pokemon to attack the target normally. If the target's side is protected by Crafty Shield, Mat Block, Quick Guard, or Wide Guard, that protection is also broken for this turn and other Pokemon may attack the target's side normally.",shortDesc:"Breaks the target's protection for this turn.",id:'hyperspacehole',isNonstandard:'Past',name:'Hyperspace Hole',pp:5,priority:0,flags:{mirror:1,authentic:1},breaksProtect:true,secondary:null,target:'normal',type:'Psychic',contestType:'Clever'},hypervoice:{num:304,accuracy:100,basePower:90,category:'Special',desc:'No additional effect.',shortDesc:'No additional effect. Hits adjacent foes.',id:'hypervoice',isViable:true,name:'Hyper Voice',pp:10,priority:0,flags:{protect:1,mirror:1,sound:1,authentic:1},secondary:null,target:'allAdjacentFoes',type:'Normal',contestType:'Cool'},hypnosis:{num:95,accuracy:60,basePower:0,category:'Status',shortDesc:'Causes the target to fall asleep.',id:'hypnosis',name:'Hypnosis',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1},status:'slp',secondary:null,target:'normal',type:'Psychic',zMoveBoost:{spe:1},contestType:'Clever'},iceball:{num:301,accuracy:90,basePower:30,basePowerCallback:function basePowerCallback(pokemon,target,move){var bp=move.basePower;if(pokemon.volatiles.iceball&&pokemon.volatiles.iceball.hitCount){bp*=Math.pow(2,pokemon.volatiles.iceball.hitCount);}if(pokemon.status!=='slp')pokemon.addVolatile('iceball');if(pokemon.volatiles.defensecurl){bp*=2;}this.debug('Ice Ball bp: '+bp);return bp;},category:'Physical',desc:"If this move is successful, the user is locked into this move and cannot make another move until it misses, 5 turns have passed, or the attack cannot be used. Power doubles with each successful hit of this move and doubles again if Defense Curl was used previously by the user. If this move is called by Sleep Talk, the move is used for one turn. If this move hits an active Disguise during the effect, the power multiplier is paused but the turn counter is not, potentially allowing the multiplier to be used on the user's next move after this effect ends.",shortDesc:'Power doubles with each hit. Repeats for 5 turns.',id:'iceball',isNonstandard:'Past',name:'Ice Ball',pp:20,priority:0,flags:{bullet:1,contact:1,protect:1,mirror:1},effect:{duration:2,onLockMove:'iceball',onStart:function onStart(){this.effectData.hitCount=1;},onRestart:function onRestart(){this.effectData.hitCount++;if(this.effectData.hitCount<5){this.effectData.duration=2;}},onResidual:function onResidual(target){if(target.lastMove&&target.lastMove.id==='struggle'){// don't lock
delete target.volatiles['iceball'];}}},secondary:null,target:'normal',type:'Ice',contestType:'Beautiful'},icebeam:{num:58,accuracy:100,basePower:90,category:'Special',desc:'Has a 10% chance to freeze the target.',shortDesc:'10% chance to freeze the target.',id:'icebeam',isViable:true,name:'Ice Beam',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,status:'frz'},target:'normal',type:'Ice',contestType:'Beautiful'},iceburn:{num:554,accuracy:90,basePower:140,category:'Special',desc:'Has a 30% chance to burn the target. This attack charges on the first turn and executes on the second. If the user is holding a Power Herb, the move completes in one turn.',shortDesc:'Charges turn 1. Hits turn 2. 30% burn.',id:'iceburn',name:'Ice Burn',pp:5,priority:0,flags:{charge:1,protect:1,mirror:1},onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}this.add('-prepare',attacker,move.name,defender);if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},secondary:{chance:30,status:'brn'},target:'normal',type:'Ice',contestType:'Beautiful'},icefang:{num:423,accuracy:95,basePower:65,category:'Physical',desc:'Has a 10% chance to freeze the target and a 10% chance to flinch it.',shortDesc:'10% chance to freeze. 10% chance to flinch.',id:'icefang',isViable:true,name:'Ice Fang',pp:15,priority:0,flags:{bite:1,contact:1,protect:1,mirror:1},secondaries:[{chance:10,status:'frz'},{chance:10,volatileStatus:'flinch'}],target:'normal',type:'Ice',contestType:'Cool'},icehammer:{num:665,accuracy:90,basePower:100,category:'Physical',desc:"Lowers the user's Speed by 1 stage.",shortDesc:"Lowers the user's Speed by 1.",id:'icehammer',isNonstandard:'Past',name:'Ice Hammer',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},self:{boosts:{spe:-1}},secondary:null,target:'normal',type:'Ice',contestType:'Tough'},icepunch:{num:8,accuracy:100,basePower:75,category:'Physical',desc:'Has a 10% chance to freeze the target.',shortDesc:'10% chance to freeze the target.',id:'icepunch',isViable:true,name:'Ice Punch',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},secondary:{chance:10,status:'frz'},target:'normal',type:'Ice',contestType:'Beautiful'},iceshard:{num:420,accuracy:100,basePower:40,category:'Physical',desc:'No additional effect.',shortDesc:'Usually goes first.',id:'iceshard',isViable:true,name:'Ice Shard',pp:30,priority:1,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Ice',contestType:'Beautiful'},iciclecrash:{num:556,accuracy:90,basePower:85,category:'Physical',desc:'Has a 30% chance to flinch the target.',shortDesc:'30% chance to flinch the target.',id:'iciclecrash',isViable:true,name:'Icicle Crash',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Ice',contestType:'Beautiful'},iciclespear:{num:333,accuracy:100,basePower:25,category:'Physical',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.",shortDesc:'Hits 2-5 times in one turn.',id:'iciclespear',isViable:true,name:'Icicle Spear',pp:30,priority:0,flags:{protect:1,mirror:1},multihit:[2,5],secondary:null,target:'normal',type:'Ice',zMovePower:140,gmaxPower:130,contestType:'Beautiful'},icywind:{num:196,accuracy:95,basePower:55,category:'Special',desc:"Has a 100% chance to lower the target's Speed by 1 stage.",shortDesc:'100% chance to lower the foe(s) Speed by 1.',id:'icywind',name:'Icy Wind',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,boosts:{spe:-1}},target:'allAdjacentFoes',type:'Ice',contestType:'Beautiful'},imprison:{num:286,accuracy:true,basePower:0,category:'Status',desc:'The user prevents all opposing Pokemon from using any moves that the user also knows as long as the user remains active.',shortDesc:'No foe can use any move known by the user.',id:'imprison',name:'Imprison',pp:10,priority:0,flags:{snatch:1,authentic:1},volatileStatus:'imprison',effect:{noCopy:true,onStart:function onStart(target){this.add('-start',target,'move: Imprison');},onFoeDisableMove:function onFoeDisableMove(pokemon){var _iteratorNormalCompletion50=true;var _didIteratorError50=false;var _iteratorError50=undefined;try{for(var _iterator50=this.effectData.source.moveSlots[Symbol.iterator](),_step50;!(_iteratorNormalCompletion50=(_step50=_iterator50.next()).done);_iteratorNormalCompletion50=true){var moveSlot=_step50.value;if(moveSlot.id==='struggle')continue;pokemon.disableMove(moveSlot.id,'hidden');}}catch(err){_didIteratorError50=true;_iteratorError50=err;}finally{try{if(!_iteratorNormalCompletion50&&_iterator50.return){_iterator50.return();}}finally{if(_didIteratorError50){throw _iteratorError50;}}}pokemon.maybeDisabled=true;},onFoeBeforeMovePriority:4,onFoeBeforeMove:function onFoeBeforeMove(attacker,defender,move){if(move.id!=='struggle'&&this.effectData.source.hasMove(move.id)&&!move.isZ&&!move.isMax){this.add('cant',attacker,'move: Imprison',move);return false;}}},secondary:null,pressureTarget:'foeSide',target:'self',type:'Psychic',zMoveBoost:{spd:2},contestType:'Clever'},incinerate:{num:510,accuracy:100,basePower:60,category:'Special',desc:'The target loses its held item if it is a Berry or a Gem. This move cannot cause Pokemon with the Sticky Hold Ability to lose their held item. Items lost to this move cannot be regained with Recycle or the Harvest Ability.',shortDesc:'Destroys the foe(s) Berry/Gem.',id:'incinerate',name:'Incinerate',pp:15,priority:0,flags:{protect:1,mirror:1},onHit:function onHit(pokemon,source){var item=pokemon.getItem();if((item.isBerry||item.isGem)&&pokemon.takeItem(source)){this.add('-enditem',pokemon,item.name,'[from] move: Incinerate');}},secondary:null,target:'allAdjacentFoes',type:'Fire',contestType:'Tough'},inferno:{num:517,accuracy:50,basePower:100,category:'Special',desc:'Has a 100% chance to burn the target.',shortDesc:'100% chance to burn the target.',id:'inferno',name:'Inferno',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,status:'brn'},target:'normal',type:'Fire',contestType:'Beautiful'},infernooverdrive:{num:640,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'infernooverdrive',isNonstandard:'Past',name:'Inferno Overdrive',pp:1,priority:0,flags:{},isZ:'firiumz',secondary:null,target:'normal',type:'Fire',contestType:'Cool'},infestation:{num:611,accuracy:100,basePower:20,category:'Special',desc:'Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',shortDesc:'Traps and damages the target for 4-5 turns.',id:'infestation',name:'Infestation',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},volatileStatus:'partiallytrapped',secondary:null,target:'normal',type:'Bug',contestType:'Cute'},ingrain:{num:275,accuracy:true,basePower:0,category:'Status',desc:'The user has 1/16 of its maximum HP restored at the end of each turn, but it is prevented from switching out and other Pokemon cannot force the user to switch out. The user can still switch out if it uses Baton Pass, Parting Shot, U-turn, or Volt Switch. If the user leaves the field using Baton Pass, the replacement will remain trapped and still receive the healing effect. During the effect, the user can be hit normally by Ground-type attacks and be affected by Spikes, Toxic Spikes, and Sticky Web, even if the user is a Flying type or has the Levitate Ability.',shortDesc:'Traps/grounds user; heals 1/16 max HP per turn.',id:'ingrain',name:'Ingrain',pp:20,priority:0,flags:{snatch:1,nonsky:1},volatileStatus:'ingrain',effect:{onStart:function onStart(pokemon){this.add('-start',pokemon,'move: Ingrain');},onResidualOrder:7,onResidual:function onResidual(pokemon){this.heal(pokemon.baseMaxhp/16);},onTrapPokemon:function onTrapPokemon(pokemon){pokemon.tryTrap();},// groundedness implemented in battle.engine.js:BattlePokemon#isGrounded
onDragOut:function onDragOut(pokemon){this.add('-activate',pokemon,'move: Ingrain');return null;}},secondary:null,target:'self',type:'Grass',zMoveBoost:{spd:1},contestType:'Clever'},instruct:{num:689,accuracy:true,basePower:0,category:'Status',desc:"The target immediately uses its last used move. Fails if the target has not made a move, if the move has 0 PP, if the target is preparing to use Beak Blast, Focus Punch, or Shell Trap, or if the move is Assist, Beak Blast, Belch, Bide, Celebrate, Copycat, Focus Punch, Ice Ball, Instruct, King's Shield, Me First, Metronome, Mimic, Mirror Move, Nature Power, Outrage, Petal Dance, Rollout, Shell Trap, Sketch, Sleep Talk, Struggle, Thrash, Transform, Uproar, any two-turn move, any recharge move, or any Z-Move.",shortDesc:'The target immediately uses its last used move.',id:'instruct',name:'Instruct',pp:15,priority:0,flags:{protect:1,authentic:1,mystery:1},onHit:function onHit(target,source){if(!target.lastMove||target.volatiles['dynamax'])return false;var lastMove=target.lastMove;var moveIndex=target.moves.indexOf(lastMove.id);var noInstruct=['assist','beakblast','bide','celebrate','copycat','focuspunch','iceball','instruct','kingsshield','mefirst','metronome','mimic','mirrormove','naturepower','outrage','petaldance','rollout','shelltrap','sketch','sleeptalk','thrash','transform'];if(noInstruct.includes(lastMove.id)||lastMove.isZ||lastMove.isMax||lastMove.flags['charge']||lastMove.flags['recharge']||target.volatiles['beakblast']||target.volatiles['focuspunch']||target.volatiles['shelltrap']||target.moveSlots[moveIndex]&&target.moveSlots[moveIndex].pp<=0){return false;}// Instructed Fake Out etc. should fail
target.activeTurns++;this.add('-singleturn',target,'move: Instruct','[of] '+source);this.runMove(target.lastMove.id,target,/** @type {number} */target.lastMoveTargetLoc);},secondary:null,target:'normal',type:'Psychic',zMoveBoost:{spa:1},contestType:'Clever'},iondeluge:{num:569,accuracy:true,basePower:0,category:'Status',desc:"Causes Normal-type moves to become Electric type this turn. The effect happens after other effects that change a move's type.",shortDesc:'Normal moves become Electric type this turn.',id:'iondeluge',isNonstandard:'Past',name:'Ion Deluge',pp:25,priority:1,flags:{},pseudoWeather:'iondeluge',effect:{duration:1,onStart:function onStart(target){this.add('-fieldactivate','move: Ion Deluge');},onModifyTypePriority:-2,onModifyType:function onModifyType(move){if(move.type==='Normal'){move.type='Electric';this.debug(move.name+"'s type changed to Electric");}}},secondary:null,target:'all',type:'Electric',zMoveBoost:{spa:1},contestType:'Beautiful'},irondefense:{num:334,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Defense by 2 stages.",shortDesc:"Raises the user's Defense by 2.",id:'irondefense',name:'Iron Defense',pp:15,priority:0,flags:{snatch:1},boosts:{def:2},secondary:null,target:'self',type:'Steel',zMoveEffect:'clearnegativeboost',contestType:'Tough'},ironhead:{num:442,accuracy:100,basePower:80,category:'Physical',desc:'Has a 30% chance to flinch the target.',shortDesc:'30% chance to flinch the target.',id:'ironhead',isViable:true,name:'Iron Head',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Steel',contestType:'Tough'},irontail:{num:231,accuracy:75,basePower:100,category:'Physical',desc:"Has a 30% chance to lower the target's Defense by 1 stage.",shortDesc:"30% chance to lower the target's Defense by 1.",id:'irontail',name:'Iron Tail',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:30,boosts:{def:-1}},target:'normal',type:'Steel',contestType:'Cool'},jawlock:{num:746,accuracy:100,basePower:80,category:'Physical',desc:'Prevents the user and the target from switching out. The user and the target can still switch out if either of them is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if either Pokemon faints.',shortDesc:'Prevents the user and the target from switching out.',id:'jawlock',name:'Jaw Lock',pp:15,priority:0,flags:{bite:1,contact:1,protect:1,mirror:1},onHit:function onHit(target,source,move){source.addVolatile('trapped',target,move,'trapper');target.addVolatile('trapped',source,move,'trapper');},secondary:null,target:'normal',type:'Dark'},judgment:{num:449,accuracy:100,basePower:100,category:'Special',desc:"This move's type depends on the user's held Plate.",shortDesc:'Type varies based on the held Plate.',id:'judgment',isNonstandard:'Past',name:'Judgment',pp:10,priority:0,flags:{protect:1,mirror:1},onModifyType:function onModifyType(move,pokemon){if(pokemon.ignoringItem())return;var item=pokemon.getItem();if(item.id&&item.onPlate&&!item.zMove){move.type=item.onPlate;}},secondary:null,target:'normal',type:'Normal',contestType:'Beautiful'},jumpkick:{num:26,accuracy:95,basePower:100,category:'Physical',desc:'If this attack is not successful, the user loses half of its maximum HP, rounded down, as crash damage. Pokemon with the Magic Guard Ability are unaffected by crash damage.',shortDesc:'User is hurt by 50% of its max HP if it misses.',id:'jumpkick',isNonstandard:'Past',isViable:true,name:'Jump Kick',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,gravity:1},hasCustomRecoil:true,onMoveFail:function onMoveFail(target,source,move){this.damage(source.baseMaxhp/2,source,source,this.dex.getEffect('Jump Kick'));},secondary:null,target:'normal',type:'Fighting',contestType:'Cool'},karatechop:{num:2,accuracy:100,basePower:50,category:'Physical',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'karatechop',isNonstandard:'Past',name:'Karate Chop',pp:25,priority:0,flags:{contact:1,protect:1,mirror:1},critRatio:2,secondary:null,target:'normal',type:'Fighting',contestType:'Tough'},kinesis:{num:134,accuracy:80,basePower:0,category:'Status',desc:"Lowers the target's accuracy by 1 stage.",shortDesc:"Lowers the target's accuracy by 1.",id:'kinesis',isNonstandard:'Past',name:'Kinesis',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1},boosts:{accuracy:-1},secondary:null,target:'normal',type:'Psychic',zMoveBoost:{evasion:1},contestType:'Clever'},kingsshield:{num:588,accuracy:true,basePower:0,category:'Status',desc:"The user is protected from most attacks made by other Pokemon during this turn, and Pokemon trying to make contact with the user have their Attack lowered by 1 stage. Non-damaging moves go through this protection. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Detect, Endure, King's Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn.",shortDesc:'Protects from damaging attacks. Contact: -1 Atk.',id:'kingsshield',isViable:true,name:"King's Shield",pp:10,priority:4,flags:{},stallingMove:true,volatileStatus:'kingsshield',onTryHit:function onTryHit(pokemon){return!!this.queue.willAct()&&this.runEvent('StallMove',pokemon);},onHit:function onHit(pokemon){pokemon.addVolatile('stall');},effect:{duration:1,onStart:function onStart(target){this.add('-singleturn',target,'Protect');},onTryHitPriority:3,onTryHit:function onTryHit(target,source,move){if(!move.flags['protect']||move.category==='Status'){if(move.isZ||move.isMax)target.getMoveHitData(move).zBrokeProtect=true;return;}this.add('-activate',target,'move: Protect');var lockedmove=source.getVolatile('lockedmove');if(lockedmove){// Outrage counter is reset
if(source.volatiles['lockedmove'].duration===2){delete source.volatiles['lockedmove'];}}if(move.flags['contact']){this.boost({atk:-1},source,target,this.dex.getActiveMove("King's Shield"));}return this.NOT_FAIL;},onHit:function onHit(target,source,move){if(move.isZPowered&&move.flags['contact']){this.boost({atk:-1},source,target,this.dex.getActiveMove("King's Shield"));}}},secondary:null,target:'self',type:'Steel',zMoveEffect:'clearnegativeboost',contestType:'Cool'},knockoff:{num:282,accuracy:100,basePower:65,category:'Physical',desc:"If the target is holding an item that can be removed from it, ignoring the Sticky Hold Ability, this move's power is multiplied by 1.5. If the user has not fainted, the target loses its held item. This move cannot remove Z-Crystals, cause Pokemon with the Sticky Hold Ability to lose their held item, cause Pokemon that can Mega Evolve to lose the Mega Stone for their species, or cause a Kyogre, a Groudon, a Giratina, an Arceus, a Genesect, or a Silvally to lose their Blue Orb, Red Orb, Griseous Orb, Plate, Drive, or Memory respectively. Items lost to this move cannot be regained with Recycle or the Harvest Ability.",shortDesc:'1.5x damage if foe holds an item. Removes item.',id:'knockoff',isViable:true,name:'Knock Off',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},onBasePower:function onBasePower(basePower,source,target,move){var item=target.getItem();if(!this.singleEvent('TakeItem',item,target.itemData,target,target,move,item))return;if(item.id){return this.chainModify(1.5);}},onAfterHit:function onAfterHit(target,source){if(source.hp){var item=target.takeItem();if(item){this.add('-enditem',target,item.name,'[from] move: Knock Off','[of] '+source);}}},secondary:null,target:'normal',type:'Dark',contestType:'Clever'},landswrath:{num:616,accuracy:100,basePower:90,category:'Physical',desc:'No additional effect.',shortDesc:'No additional effect. Hits adjacent foes.',id:'landswrath',isNonstandard:'Past',name:"Land's Wrath",pp:10,priority:0,flags:{protect:1,mirror:1,nonsky:1},secondary:null,target:'allAdjacentFoes',type:'Ground',zMovePower:185,contestType:'Beautiful'},laserfocus:{num:673,accuracy:true,basePower:0,category:'Status',desc:"Until the end of the next turn, the user's attacks will be critical hits.",shortDesc:"Until the end of the next turn, user's moves crit.",id:'laserfocus',name:'Laser Focus',pp:30,priority:0,flags:{snatch:1},volatileStatus:'laserfocus',effect:{duration:2,onStart:function onStart(pokemon,source,effect){if(effect&&['imposter','psychup','transform'].includes(effect.id)){this.add('-start',pokemon,'move: Laser Focus','[silent]');}else{this.add('-start',pokemon,'move: Laser Focus');}},onRestart:function onRestart(pokemon){this.effectData.duration=2;this.add('-start',pokemon,'move: Laser Focus');},onModifyCritRatio:function onModifyCritRatio(critRatio){return 5;},onEnd:function onEnd(pokemon){this.add('-end',pokemon,'move: Laser Focus','[silent]');}},secondary:null,target:'self',type:'Normal',zMoveBoost:{atk:1},contestType:'Cool'},lastresort:{num:387,accuracy:100,basePower:140,category:'Physical',desc:'This move fails unless the user knows this move and at least one other move, and has used all the other moves it knows at least once each since it became active or Transformed.',shortDesc:'Fails unless each known move has been used.',id:'lastresort',name:'Last Resort',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},onTry:function onTry(pokemon,target){if(pokemon.moveSlots.length<2)return false;// Last Resort fails unless the user knows at least 2 moves
var hasLastResort=false;// User must actually have Last Resort for it to succeed
var _iteratorNormalCompletion51=true;var _didIteratorError51=false;var _iteratorError51=undefined;try{for(var _iterator51=pokemon.moveSlots[Symbol.iterator](),_step51;!(_iteratorNormalCompletion51=(_step51=_iterator51.next()).done);_iteratorNormalCompletion51=true){var moveSlot=_step51.value;if(moveSlot.id==='lastresort'){hasLastResort=true;continue;}if(!moveSlot.used)return false;}}catch(err){_didIteratorError51=true;_iteratorError51=err;}finally{try{if(!_iteratorNormalCompletion51&&_iterator51.return){_iterator51.return();}}finally{if(_didIteratorError51){throw _iteratorError51;}}}return hasLastResort;},secondary:null,target:'normal',type:'Normal',contestType:'Cute'},lavaplume:{num:436,accuracy:100,basePower:80,category:'Special',desc:'Has a 30% chance to burn the target.',shortDesc:'30% chance to burn adjacent Pokemon.',id:'lavaplume',isViable:true,name:'Lava Plume',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:{chance:30,status:'brn'},target:'allAdjacent',type:'Fire',contestType:'Tough'},leafage:{num:670,accuracy:100,basePower:40,category:'Physical',shortDesc:'No additional effect.',id:'leafage',name:'Leafage',pp:40,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Grass',contestType:'Tough'},leafblade:{num:348,accuracy:100,basePower:90,category:'Physical',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'leafblade',isViable:true,name:'Leaf Blade',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},critRatio:2,secondary:null,target:'normal',type:'Grass',contestType:'Cool'},leafstorm:{num:437,accuracy:90,basePower:130,category:'Special',desc:"Lowers the user's Special Attack by 2 stages.",shortDesc:"Lowers the user's Sp. Atk by 2.",id:'leafstorm',isViable:true,name:'Leaf Storm',pp:5,priority:0,flags:{protect:1,mirror:1},self:{boosts:{spa:-2}},secondary:null,target:'normal',type:'Grass',contestType:'Beautiful'},leaftornado:{num:536,accuracy:90,basePower:65,category:'Special',desc:"Has a 50% chance to lower the target's accuracy by 1 stage.",shortDesc:"50% chance to lower the target's accuracy by 1.",id:'leaftornado',name:'Leaf Tornado',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:50,boosts:{accuracy:-1}},target:'normal',type:'Grass',contestType:'Cool'},leechlife:{num:141,accuracy:100,basePower:80,category:'Physical',desc:'The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.',shortDesc:'User recovers 50% of the damage dealt.',id:'leechlife',isViable:true,name:'Leech Life',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,heal:1},drain:[1,2],secondary:null,target:'normal',type:'Bug',contestType:'Clever'},leechseed:{num:73,accuracy:90,basePower:0,category:'Status',desc:"The Pokemon at the user's position steals 1/8 of the target's maximum HP, rounded down, at the end of each turn. If Big Root is held by the recipient, the HP recovered is 1.3x normal, rounded half down. If the target uses Baton Pass, the replacement will continue being leeched. If the target switches out or uses Rapid Spin successfully, the effect ends. Grass-type Pokemon are immune to this move on use, but not its effect.",shortDesc:"1/8 of target's HP is restored to user every turn.",id:'leechseed',isViable:true,name:'Leech Seed',pp:10,priority:0,flags:{protect:1,reflectable:1,mirror:1},volatileStatus:'leechseed',effect:{onStart:function onStart(target){this.add('-start',target,'move: Leech Seed');},onResidualOrder:8,onResidual:function onResidual(pokemon){var target=this.effectData.source.side.active[pokemon.volatiles['leechseed'].sourcePosition];if(!target||target.fainted||target.hp<=0){this.debug('Nothing to leech into');return;}var damage=this.damage(pokemon.baseMaxhp/8,pokemon,target);if(damage){this.heal(damage,target,pokemon);}}},onTryImmunity:function onTryImmunity(target){return!target.hasType('Grass');},secondary:null,target:'normal',type:'Grass',zMoveEffect:'clearnegativeboost',contestType:'Clever'},leer:{num:43,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Defense by 1 stage.",shortDesc:'Lowers the foe(s) Defense by 1.',id:'leer',name:'Leer',pp:30,priority:0,flags:{protect:1,reflectable:1,mirror:1},boosts:{def:-1},secondary:null,target:'allAdjacentFoes',type:'Normal',zMoveBoost:{atk:1},contestType:'Cool'},letssnuggleforever:{num:726,accuracy:true,basePower:190,category:'Physical',shortDesc:'No additional effect.',id:'letssnuggleforever',isNonstandard:'Past',isViable:true,name:"Let's Snuggle Forever",pp:1,priority:0,flags:{contact:1},isZ:'mimikiumz',secondary:null,target:'normal',type:'Fairy',contestType:'Cool'},lick:{num:122,accuracy:100,basePower:30,category:'Physical',desc:'Has a 30% chance to paralyze the target.',shortDesc:'30% chance to paralyze the target.',id:'lick',name:'Lick',pp:30,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:30,status:'par'},target:'normal',type:'Ghost',contestType:'Cute'},lifedew:{num:791,accuracy:true,basePower:0,category:'Status',desc:"The user restores 1/4 of its maximum HP, rounded half up. If there is an adjacent ally, the user restores 1/4 of both its and its ally's maximum HP, rounded up.",shortDesc:'Heals the user (and allies) by 1/4 amount.',id:'lifedew',isViable:true,name:'Life Dew',pp:10,priority:0,flags:{snatch:1,heal:1,authentic:1},heal:[1,4],secondary:null,target:'allies',type:'Water'},lightofruin:{num:617,accuracy:90,basePower:140,category:'Special',desc:'If the target lost HP, the user takes recoil damage equal to 1/2 the HP lost by the target, rounded half up, but not less than 1 HP.',shortDesc:'Has 1/2 recoil.',id:'lightofruin',isNonstandard:'Past',name:'Light of Ruin',pp:5,priority:0,flags:{protect:1,mirror:1},recoil:[1,2],secondary:null,target:'normal',type:'Fairy',contestType:'Beautiful'},lightscreen:{num:113,accuracy:true,basePower:0,category:'Status',desc:"For 5 turns, the user and its party members take 0.5x damage from special attacks, or 0.66x damage if in a Double Battle. Damage is not reduced further with Aurora Veil. Critical hits ignore this effect. It is removed from the user's side if the user or an ally is successfully hit by Brick Break, Psychic Fangs, or Defog. Lasts for 8 turns if the user is holding Light Clay. Fails if the effect is already active on the user's side.",shortDesc:'For 5 turns, special damage to allies is halved.',id:'lightscreen',isViable:true,name:'Light Screen',pp:30,priority:0,flags:{snatch:1},sideCondition:'lightscreen',effect:{duration:5,durationCallback:function durationCallback(target,source,effect){if(source&&source.hasItem('lightclay')){return 8;}return 5;},onAnyModifyDamage:function onAnyModifyDamage(damage,source,target,move){if(target!==source&&target.side===this.effectData.target&&this.getCategory(move)==='Special'){if(!target.getMoveHitData(move).crit&&!move.infiltrates){this.debug('Light Screen weaken');if(target.side.active.length>1)return this.chainModify([0xaac,0x1000]);return this.chainModify(0.5);}}},onStart:function onStart(side){this.add('-sidestart',side,'move: Light Screen');},onResidualOrder:21,onResidualSubOrder:1,onEnd:function onEnd(side){this.add('-sideend',side,'move: Light Screen');}},secondary:null,target:'allySide',type:'Psychic',zMoveBoost:{spd:1},contestType:'Beautiful'},lightthatburnsthesky:{num:723,accuracy:true,basePower:200,category:'Special',desc:"This move becomes a physical attack if the user's Attack is greater than its Special Attack, including stat stage changes. This move and its effects ignore the Abilities of other Pokemon.",shortDesc:"Physical if user's Atk > Sp. Atk. Ignores Abilities.",id:'lightthatburnsthesky',isNonstandard:'Past',name:'Light That Burns the Sky',pp:1,priority:0,flags:{},onModifyMove:function onModifyMove(move,pokemon){if(pokemon.getStat('atk',false,true)>pokemon.getStat('spa',false,true))move.category='Physical';},ignoreAbility:true,isZ:'ultranecroziumz',secondary:null,target:'normal',type:'Psychic',contestType:'Cool'},liquidation:{num:710,accuracy:100,basePower:85,category:'Physical',desc:"Has a 20% chance to lower the target's Defense by 1 stage.",shortDesc:"20% chance to lower the target's Defense by 1.",id:'liquidation',isViable:true,name:'Liquidation',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:20,boosts:{def:-1}},target:'normal',type:'Water',contestType:'Cool'},lockon:{num:199,accuracy:true,basePower:0,category:'Status',desc:"Until the end of the next turn, the target cannot avoid the user's moves, even if the target is in the middle of a two-turn move. The effect ends if either the user or the target leaves the field. Fails if this effect is active for the user.",shortDesc:"User's next move will not miss the target.",id:'lockon',name:'Lock-On',pp:5,priority:0,flags:{protect:1,mirror:1},onTryHit:function onTryHit(target,source){if(source.volatiles['lockon'])return false;},onHit:function onHit(target,source){source.addVolatile('lockon',target);this.add('-activate',source,'move: Lock-On','[of] '+target);},effect:{noCopy:true,// doesn't get copied by Baton Pass
duration:2,onSourceInvulnerabilityPriority:1,onSourceInvulnerability:function onSourceInvulnerability(target,source,move){if(move&&source===this.effectData.target&&target===this.effectData.source)return 0;},onSourceAccuracy:function onSourceAccuracy(accuracy,target,source,move){if(move&&source===this.effectData.target&&target===this.effectData.source)return true;}},secondary:null,target:'normal',type:'Normal',zMoveBoost:{spe:1},contestType:'Clever'},lovelykiss:{num:142,accuracy:75,basePower:0,category:'Status',shortDesc:'Causes the target to fall asleep.',id:'lovelykiss',isNonstandard:'Past',name:'Lovely Kiss',pp:10,priority:0,flags:{protect:1,reflectable:1,mirror:1},status:'slp',secondary:null,target:'normal',type:'Normal',zMoveBoost:{spe:1},contestType:'Beautiful'},lowkick:{num:67,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon,target){var targetWeight=target.getWeight();if(targetWeight>=2000){return 120;}if(targetWeight>=1000){return 100;}if(targetWeight>=500){return 80;}if(targetWeight>=250){return 60;}if(targetWeight>=100){return 40;}return 20;},category:'Physical',desc:"This move's power is 20 if the target weighs less than 10 kg, 40 if less than 25 kg, 60 if less than 50 kg, 80 if less than 100 kg, 100 if less than 200 kg, and 120 if greater than or equal to 200 kg.",shortDesc:'More power the heavier the target.',id:'lowkick',isViable:true,name:'Low Kick',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},onTryHit:function onTryHit(target,pokemon,move){if(target.volatiles['dynamax']){this.add('-fail',pokemon,'Dynamax');this.attrLastMove('[still]');return null;}},secondary:null,target:'normal',type:'Fighting',zMovePower:160,contestType:'Tough'},lowsweep:{num:490,accuracy:100,basePower:65,category:'Physical',desc:"Has a 100% chance to lower the target's Speed by 1 stage.",shortDesc:"100% chance to lower the target's Speed by 1.",id:'lowsweep',name:'Low Sweep',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:100,boosts:{spe:-1}},target:'normal',type:'Fighting',contestType:'Clever'},luckychant:{num:381,accuracy:true,basePower:0,category:'Status',desc:"For 5 turns, the user and its party members cannot be struck by a critical hit. Fails if the effect is already active on the user's side.",shortDesc:"For 5 turns, shields user's party from critical hits.",id:'luckychant',isNonstandard:'Past',name:'Lucky Chant',pp:30,priority:0,flags:{snatch:1},sideCondition:'luckychant',effect:{duration:5,onStart:function onStart(side){this.add('-sidestart',side,'move: Lucky Chant');// "The Lucky Chant shielded [side.name]'s team from critical hits!"
},onCriticalHit:false,onResidualOrder:21,onResidualSubOrder:5,onEnd:function onEnd(side){this.add('-sideend',side,'move: Lucky Chant');// "[side.name]'s team's Lucky Chant wore off!"
}},secondary:null,target:'allySide',type:'Normal',zMoveBoost:{evasion:1},contestType:'Cute'},lunardance:{num:461,accuracy:true,basePower:0,category:'Status',desc:'The user faints and the Pokemon brought out to replace it has its HP and PP fully restored along with having any major status condition cured. The new Pokemon is sent out at the end of the turn, and the healing happens before hazards take effect. Fails if the user is the last unfainted Pokemon in its party.',shortDesc:'User faints. Replacement is fully healed, with PP.',id:'lunardance',isNonstandard:'Past',name:'Lunar Dance',pp:10,priority:0,flags:{snatch:1,heal:1,dance:1},onTryHit:function onTryHit(pokemon,target,move){if(!this.canSwitch(pokemon.side)){delete move.selfdestruct;return false;}},selfdestruct:'ifHit',sideCondition:'lunardance',effect:{duration:2,onStart:function onStart(side,source){this.debug('Lunar Dance started on '+side.name);this.effectData.positions=[];var _iteratorNormalCompletion52=true;var _didIteratorError52=false;var _iteratorError52=undefined;try{for(var _iterator52=side.active.keys()[Symbol.iterator](),_step52;!(_iteratorNormalCompletion52=(_step52=_iterator52.next()).done);_iteratorNormalCompletion52=true){var i=_step52.value;this.effectData.positions[i]=false;}}catch(err){_didIteratorError52=true;_iteratorError52=err;}finally{try{if(!_iteratorNormalCompletion52&&_iterator52.return){_iterator52.return();}}finally{if(_didIteratorError52){throw _iteratorError52;}}}this.effectData.positions[source.position]=true;},onRestart:function onRestart(side,source){this.effectData.positions[source.position]=true;},onSwitchInPriority:1,onSwitchIn:function onSwitchIn(target){var positions=/**@type {boolean[]} */this.effectData.positions;if(target.position!==this.effectData.sourcePosition){return;}if(!target.fainted){target.heal(target.maxhp);target.setStatus('');var _iteratorNormalCompletion53=true;var _didIteratorError53=false;var _iteratorError53=undefined;try{for(var _iterator53=target.moveSlots[Symbol.iterator](),_step53;!(_iteratorNormalCompletion53=(_step53=_iterator53.next()).done);_iteratorNormalCompletion53=true){var moveSlot=_step53.value;moveSlot.pp=moveSlot.maxpp;}}catch(err){_didIteratorError53=true;_iteratorError53=err;}finally{try{if(!_iteratorNormalCompletion53&&_iterator53.return){_iterator53.return();}}finally{if(_didIteratorError53){throw _iteratorError53;}}}this.add('-heal',target,target.getHealth,'[from] move: Lunar Dance');positions[target.position]=false;}if(!positions.some(function(affected){return affected===true;})){target.side.removeSideCondition('lunardance');}}},secondary:null,target:'self',type:'Psychic',contestType:'Beautiful'},lunge:{num:679,accuracy:100,basePower:80,category:'Physical',desc:"Has a 100% chance to lower the target's Attack by 1 stage.",shortDesc:"100% chance to lower the target's Attack by 1.",id:'lunge',isViable:true,name:'Lunge',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:100,boosts:{atk:-1}},target:'normal',type:'Bug',contestType:'Cute'},lusterpurge:{num:295,accuracy:100,basePower:70,category:'Special',desc:"Has a 50% chance to lower the target's Special Defense by 1 stage.",shortDesc:"50% chance to lower the target's Sp. Def by 1.",id:'lusterpurge',isNonstandard:'Past',name:'Luster Purge',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:{chance:50,boosts:{spd:-1}},target:'normal',type:'Psychic',contestType:'Clever'},machpunch:{num:183,accuracy:100,basePower:40,category:'Physical',desc:'No additional effect.',shortDesc:'Usually goes first.',id:'machpunch',isViable:true,name:'Mach Punch',pp:30,priority:1,flags:{contact:1,protect:1,mirror:1,punch:1},secondary:null,target:'normal',type:'Fighting',contestType:'Cool'},magicalleaf:{num:345,accuracy:true,basePower:60,category:'Special',shortDesc:'This move does not check accuracy.',id:'magicalleaf',name:'Magical Leaf',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Grass',contestType:'Beautiful'},magiccoat:{num:277,accuracy:true,basePower:0,category:'Status',desc:"Until the end of the turn, the user is unaffected by certain non-damaging moves directed at it and will instead use such moves against the original user. Moves reflected in this way are unable to be reflected again by this or the Magic Bounce Ability's effect. Spikes, Stealth Rock, Sticky Web, and Toxic Spikes can only be reflected once per side, by the leftmost Pokemon under this or the Magic Bounce Ability's effect. The Lightning Rod and Storm Drain Abilities redirect their respective moves before this move takes effect.",shortDesc:'Bounces back certain non-damaging moves.',id:'magiccoat',isViable:true,name:'Magic Coat',pp:15,priority:4,flags:{},volatileStatus:'magiccoat',effect:{duration:1,onStart:function onStart(target,source,effect){this.add('-singleturn',target,'move: Magic Coat');if(effect&&effect.effectType==='Move'){this.effectData.pranksterBoosted=effect.pranksterBoosted;}},onTryHitPriority:2,onTryHit:function onTryHit(target,source,move){if(target===source||move.hasBounced||!move.flags['reflectable']){return;}var newMove=this.dex.getActiveMove(move.id);newMove.hasBounced=true;newMove.pranksterBoosted=this.effectData.pranksterBoosted;this.useMove(newMove,target,source);return null;},onAllyTryHitSide:function onAllyTryHitSide(target,source,move){if(target.side===source.side||move.hasBounced||!move.flags['reflectable']){return;}var newMove=this.dex.getActiveMove(move.id);newMove.hasBounced=true;newMove.pranksterBoosted=false;this.useMove(newMove,this.effectData.target,source);return null;}},secondary:null,target:'self',type:'Psychic',zMoveBoost:{spd:2},contestType:'Beautiful'},magicpowder:{num:750,accuracy:100,basePower:0,category:'Status',desc:'Causes the target to become a Psychic type. Fails if the target is an Arceus or a Silvally, or if the target is already purely Psychic type.',shortDesc:"Changes the target's type to Psychic.",id:'magicpowder',name:'Magic Powder',pp:20,priority:0,flags:{powder:1,protect:1,reflectable:1,mirror:1,mystery:1},onHit:function onHit(target){if(target.getTypes().join()==='Psychic'||!target.setType('Psychic'))return false;this.add('-start',target,'typechange','Psychic');},secondary:null,target:'normal',type:'Psychic'},magicroom:{num:478,accuracy:true,basePower:0,category:'Status',desc:"For 5 turns, the held items of all active Pokemon have no effect. An item's effect of causing forme changes is unaffected, but any other effects from such items are negated. During the effect, Fling and Natural Gift are prevented from being used by all active Pokemon. If this move is used during the effect, the effect ends.",shortDesc:'For 5 turns, all held items have no effect.',id:'magicroom',name:'Magic Room',pp:10,priority:0,flags:{mirror:1},pseudoWeather:'magicroom',effect:{duration:5,durationCallback:function durationCallback(source,effect){if(source&&source.hasAbility('persistent')){this.add('-activate',source,'ability: Persistent',effect);return 7;}return 5;},onStart:function onStart(target,source){this.add('-fieldstart','move: Magic Room','[of] '+source);},onRestart:function onRestart(target,source){this.field.removePseudoWeather('magicroom');},// Item suppression implemented in Pokemon.ignoringItem() within sim/pokemon.js
onResidualOrder:25,onEnd:function onEnd(){this.add('-fieldend','move: Magic Room','[of] '+this.effectData.source);}},secondary:null,target:'all',type:'Psychic',zMoveBoost:{spd:1},contestType:'Clever'},magikarpsrevenge:{num:0,accuracy:true,basePower:120,category:'Physical',desc:"Has a 100% chance to confuse the target and lower its Defense and Special Attack by 1 stage. The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down. The user steals the foe's boosts. If this move is successful, the weather changes to rain unless it is already in effect, and the user gains the effects of Aqua Ring and Magic Coat.",shortDesc:"Does many things turn 1. Can't move turn 2.",id:'magikarpsrevenge',isNonstandard:'Custom',name:"Magikarp's Revenge",pp:10,priority:0,flags:{contact:1,recharge:1,protect:1,mirror:1,heal:1},noSketch:true,drain:[1,2],onTry:function onTry(pokemon){if(pokemon.template.name!=='Magikarp'){this.add('-fail',pokemon,"move: Magikarp's Revenge");return null;}},self:{onHit:function onHit(source){this.field.setWeather('raindance');source.addVolatile('magiccoat');source.addVolatile('aquaring');},volatileStatus:'mustrecharge'},secondary:{chance:100,volatileStatus:'confusion',boosts:{def:-1,spa:-1}},stealsBoosts:true,target:'normal',type:'Water',contestType:'Cute'},magmastorm:{num:463,accuracy:75,basePower:100,category:'Special',desc:'Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',shortDesc:'Traps and damages the target for 4-5 turns.',id:'magmastorm',isNonstandard:'Past',name:'Magma Storm',pp:5,priority:0,flags:{protect:1,mirror:1},volatileStatus:'partiallytrapped',secondary:null,target:'normal',type:'Fire',contestType:'Tough'},magnetbomb:{num:443,accuracy:true,basePower:60,category:'Physical',shortDesc:'This move does not check accuracy.',id:'magnetbomb',isNonstandard:'Past',name:'Magnet Bomb',pp:20,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Steel',contestType:'Cool'},magneticflux:{num:602,accuracy:true,basePower:0,category:'Status',desc:"Raises the Defense and Special Defense of Pokemon on the user's side with the Plus or Minus Abilities by 1 stage.",shortDesc:'Raises Def, Sp. Def of allies with Plus/Minus by 1.',id:'magneticflux',name:'Magnetic Flux',pp:20,priority:0,flags:{snatch:1,distance:1,authentic:1},onHitSide:function onHitSide(side,source,move){var targets=[];var _iteratorNormalCompletion54=true;var _didIteratorError54=false;var _iteratorError54=undefined;try{for(var _iterator54=side.active[Symbol.iterator](),_step54;!(_iteratorNormalCompletion54=(_step54=_iterator54.next()).done);_iteratorNormalCompletion54=true){var pokemon=_step54.value;if(pokemon.hasAbility(['plus','minus'])){targets.push(pokemon);}}}catch(err){_didIteratorError54=true;_iteratorError54=err;}finally{try{if(!_iteratorNormalCompletion54&&_iterator54.return){_iterator54.return();}}finally{if(_didIteratorError54){throw _iteratorError54;}}}if(!targets.length)return false;var didSomething=false;var _iteratorNormalCompletion55=true;var _didIteratorError55=false;var _iteratorError55=undefined;try{for(var _iterator55=targets[Symbol.iterator](),_step55;!(_iteratorNormalCompletion55=(_step55=_iterator55.next()).done);_iteratorNormalCompletion55=true){var target=_step55.value;didSomething=this.boost({def:1,spd:1},target,source,move,false,true)||didSomething;}}catch(err){_didIteratorError55=true;_iteratorError55=err;}finally{try{if(!_iteratorNormalCompletion55&&_iterator55.return){_iterator55.return();}}finally{if(_didIteratorError55){throw _iteratorError55;}}}return didSomething;},secondary:null,target:'allySide',type:'Electric',zMoveBoost:{spd:1},contestType:'Clever'},magnetrise:{num:393,accuracy:true,basePower:0,category:'Status',desc:'For 5 turns, the user is immune to Ground-type attacks and the effects of Spikes, Toxic Spikes, Sticky Web, and the Arena Trap Ability as long as it remains active. If the user uses Baton Pass, the replacement will gain the effect. Ingrain, Smack Down, Thousand Arrows, and Iron Ball override this move if the user is under any of their effects. Fails if the user is already under this effect or the effects of Ingrain, Smack Down, or Thousand Arrows.',shortDesc:'For 5 turns, the user has immunity to Ground.',id:'magnetrise',name:'Magnet Rise',pp:10,priority:0,flags:{snatch:1,gravity:1},volatileStatus:'magnetrise',effect:{duration:5,onStart:function onStart(target){if(target.volatiles['smackdown']||target.volatiles['ingrain'])return false;this.add('-start',target,'Magnet Rise');},onImmunity:function onImmunity(type){if(type==='Ground')return false;},onResidualOrder:15,onEnd:function onEnd(target){this.add('-end',target,'Magnet Rise');}},secondary:null,target:'self',type:'Electric',zMoveBoost:{evasion:1},contestType:'Clever'},magnitude:{num:222,accuracy:100,basePower:0,category:'Physical',desc:'The power of this move varies; 5% chances for 10 and 150 power, 10% chances for 30 and 110 power, 20% chances for 50 and 90 power, and 30% chance for 70 power. Damage doubles if the target is using Dig.',shortDesc:'Hits adjacent Pokemon. Power varies; 2x on Dig.',id:'magnitude',isNonstandard:'Past',name:'Magnitude',pp:30,priority:0,flags:{protect:1,mirror:1,nonsky:1},onModifyMove:function onModifyMove(move,pokemon){var i=this.random(100);if(i<5){move.magnitude=4;move.basePower=10;}else if(i<15){move.magnitude=5;move.basePower=30;}else if(i<35){move.magnitude=6;move.basePower=50;}else if(i<65){move.magnitude=7;move.basePower=70;}else if(i<85){move.magnitude=8;move.basePower=90;}else if(i<95){move.magnitude=9;move.basePower=110;}else{move.magnitude=10;move.basePower=150;}},onUseMoveMessage:function onUseMoveMessage(pokemon,target,move){this.add('-activate',pokemon,'move: Magnitude',move.magnitude);},secondary:null,target:'allAdjacent',type:'Ground',zMovePower:140,gmaxPower:140,contestType:'Tough'},maliciousmoonsault:{num:696,accuracy:true,basePower:180,category:'Physical',desc:'Damage doubles and no accuracy check is done if the target has used Minimize while active.',shortDesc:'Damage doubles if the target used Minimize.',id:'maliciousmoonsault',isNonstandard:'Past',isViable:true,name:'Malicious Moonsault',pp:1,priority:0,flags:{contact:1},isZ:'inciniumz',secondary:null,target:'normal',type:'Dark',contestType:'Cool'},matblock:{num:561,accuracy:true,basePower:0,category:'Status',desc:"The user and its party members are protected from damaging attacks made by other Pokemon, including allies, during this turn. Fails unless it is the user's first turn on the field, if the user moves last this turn, or if this move is already in effect for the user's side.",shortDesc:'Protects allies from damaging attacks. Turn 1 only.',id:'matblock',name:'Mat Block',pp:10,priority:0,flags:{snatch:1,nonsky:1},stallingMove:true,sideCondition:'matblock',onTryHitSide:function onTryHitSide(side,source){if(source.activeTurns>1){this.hint('Mat Block only works on your first turn out.');return false;}},effect:{duration:1,onStart:function onStart(target,source){this.add('-singleturn',source,'Mat Block');},onTryHitPriority:3,onTryHit:function onTryHit(target,source,move){if(!move.flags['protect']){if(move.isZ||move.isMax)target.getMoveHitData(move).zBrokeProtect=true;return;}if(move&&(move.target==='self'||move.category==='Status'))return;this.add('-activate',target,'move: Mat Block',move.name);var lockedmove=source.getVolatile('lockedmove');if(lockedmove){// Outrage counter is reset
if(source.volatiles['lockedmove'].duration===2){delete source.volatiles['lockedmove'];}}return this.NOT_FAIL;}},secondary:null,target:'allySide',type:'Fighting',zMoveBoost:{def:1},contestType:'Cool'},maxairstream:{num:766,accuracy:true,basePower:10,category:'Physical',desc:"Boosts the user and its allies' Speed by 1 stage. BP scales with the base move's BP.",shortDesc:'User/allies: +1 Spe. BP scales w/ base move.',id:'maxairstream',name:'Max Airstream',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;var _iteratorNormalCompletion56=true;var _didIteratorError56=false;var _iteratorError56=undefined;try{for(var _iterator56=source.side.active[Symbol.iterator](),_step56;!(_iteratorNormalCompletion56=(_step56=_iterator56.next()).done);_iteratorNormalCompletion56=true){var pokemon=_step56.value;this.boost({spe:1},pokemon);}}catch(err){_didIteratorError56=true;_iteratorError56=err;}finally{try{if(!_iteratorNormalCompletion56&&_iterator56.return){_iterator56.return();}}finally{if(_didIteratorError56){throw _iteratorError56;}}}}},target:'adjacentFoe',type:'Flying',contestType:'Cool'},maxdarkness:{num:772,accuracy:true,basePower:10,category:'Physical',desc:"Lowers all the opposing Pokemon's Special Defense by 1 stage. BP scales with the base move's BP.",shortDesc:"Foes: -1 Sp.Def. BP scales with base move's BP.",id:'maxdarkness',name:'Max Darkness',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;var _iteratorNormalCompletion57=true;var _didIteratorError57=false;var _iteratorError57=undefined;try{for(var _iterator57=source.side.foe.active[Symbol.iterator](),_step57;!(_iteratorNormalCompletion57=(_step57=_iterator57.next()).done);_iteratorNormalCompletion57=true){var pokemon=_step57.value;this.boost({spd:-1},pokemon);}}catch(err){_didIteratorError57=true;_iteratorError57=err;}finally{try{if(!_iteratorNormalCompletion57&&_iterator57.return){_iterator57.return();}}finally{if(_didIteratorError57){throw _iteratorError57;}}}}},target:'adjacentFoe',type:'Dark',contestType:'Cool'},maxflare:{num:757,accuracy:true,basePower:100,category:'Physical',desc:"Summons Sunny Day. BP scales with the base move's BP.",shortDesc:"Sets Sun. BP scales with base move's BP.",id:'maxflare',isViable:true,name:'Max Flare',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;this.field.setWeather('sunnyday');}},target:'adjacentFoe',type:'Fire',contestType:'Cool'},maxflutterby:{num:758,accuracy:true,basePower:10,category:'Physical',desc:"Lowers all the opposing Pokemon's Special Attack by 1 stage. BP scales with the base move's BP.",shortDesc:"Foes: -1 Sp.Atk. BP scales with base move's BP.",id:'maxflutterby',name:'Max Flutterby',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;var _iteratorNormalCompletion58=true;var _didIteratorError58=false;var _iteratorError58=undefined;try{for(var _iterator58=source.side.foe.active[Symbol.iterator](),_step58;!(_iteratorNormalCompletion58=(_step58=_iterator58.next()).done);_iteratorNormalCompletion58=true){var pokemon=_step58.value;this.boost({spa:-1},pokemon);}}catch(err){_didIteratorError58=true;_iteratorError58=err;}finally{try{if(!_iteratorNormalCompletion58&&_iterator58.return){_iterator58.return();}}finally{if(_didIteratorError58){throw _iteratorError58;}}}}},target:'adjacentFoe',type:'Bug',contestType:'Cool'},maxgeyser:{num:757,accuracy:true,basePower:10,category:'Physical',desc:"Summons Rain Dance. BP scales with the base move's BP.",shortDesc:"Sets Rain. BP scales with base move's BP.",id:'maxgeyser',name:'Max Geyser',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;this.field.setWeather('raindance');}},target:'adjacentFoe',type:'Water',contestType:'Cool'},maxguard:{num:743,accuracy:true,basePower:0,category:'Status',desc:"The user is protected from nearly all attacks made by other Pokemon during this turn. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Detect, Endure, King's Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn.",shortDesc:'Prevents all moves from affecting the user this turn.',id:'maxguard',isViable:true,name:'Max Guard',pp:5,priority:4,flags:{},isMax:true,stallingMove:true,volatileStatus:'maxguard',onPrepareHit:function onPrepareHit(pokemon){return!!this.queue.willAct()&&this.runEvent('StallMove',pokemon);},onHit:function onHit(pokemon){pokemon.addVolatile('stall');},effect:{duration:1,onStart:function onStart(target){this.add('-singleturn',target,'Max Guard');},onTryHitPriority:3,onTryHit:function onTryHit(target,source,move){/** moves blocked by Max Guard but not Protect */var overrideBypassProtect=['block','flowershield','gearup','magneticflux','phantomforce','psychup','teatime','transform'];var blockedByMaxGuard=move.flags['protect']||move.isZ||move.isMax||overrideBypassProtect.includes(move.id);if(!blockedByMaxGuard){return;}this.add('-activate',target,'move: Max Guard');var lockedmove=source.getVolatile('lockedmove');if(lockedmove){// Outrage counter is reset
if(source.volatiles['lockedmove'].duration===2){delete source.volatiles['lockedmove'];}}return this.NOT_FAIL;}},secondary:null,target:'self',type:'Normal',contestType:'Cool'},maxhailstorm:{num:763,accuracy:true,basePower:10,category:'Physical',desc:"Summons Hail. BP scales with the base move's BP.",shortDesc:"Sets Hail. BP scales with base move's BP.",id:'maxhailstorm',name:'Max Hailstorm',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;this.field.setWeather('hail');}},target:'adjacentFoe',type:'Ice',contestType:'Cool'},maxknuckle:{num:761,accuracy:true,basePower:10,category:'Physical',desc:"Boosts the user and its allies' Attack by 1 stage. BP scales with the base move's BP.",shortDesc:'User/allies: +1 Atk. BP scales w/ base move.',id:'maxknuckle',name:'Max Knuckle',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;var _iteratorNormalCompletion59=true;var _didIteratorError59=false;var _iteratorError59=undefined;try{for(var _iterator59=source.side.active[Symbol.iterator](),_step59;!(_iteratorNormalCompletion59=(_step59=_iterator59.next()).done);_iteratorNormalCompletion59=true){var pokemon=_step59.value;this.boost({atk:1},pokemon);}}catch(err){_didIteratorError59=true;_iteratorError59=err;}finally{try{if(!_iteratorNormalCompletion59&&_iterator59.return){_iterator59.return();}}finally{if(_didIteratorError59){throw _iteratorError59;}}}}},target:'adjacentFoe',type:'Fighting',contestType:'Cool'},maxlightning:{num:759,accuracy:true,basePower:10,category:'Physical',desc:"Summons Electric Terrain. BP scales with the base move's BP.",shortDesc:"Sets Electric Terrain. BP scales with base move's BP.",id:'maxlightning',name:'Max Lightning',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;this.field.setTerrain('electricterrain');}},target:'adjacentFoe',type:'Electric',contestType:'Cool'},maxmindstorm:{num:769,accuracy:true,basePower:10,category:'Physical',desc:"Summons Psychic Terrain. BP scales with the base move's BP.",shortDesc:"Sets Psychic Terrain. BP scales with base move's BP.",id:'maxmindstorm',name:'Max Mindstorm',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;this.field.setTerrain('psychicterrain');}},target:'adjacentFoe',type:'Psychic',contestType:'Cool'},maxooze:{num:764,accuracy:true,basePower:10,category:'Physical',desc:"Boosts the user and its allies' Special Attack by 1 stage. BP scales with the base move's BP.",shortDesc:'User/allies: +1 SpA. BP scales w/ base move.',id:'maxooze',name:'Max Ooze',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;var _iteratorNormalCompletion60=true;var _didIteratorError60=false;var _iteratorError60=undefined;try{for(var _iterator60=source.side.active[Symbol.iterator](),_step60;!(_iteratorNormalCompletion60=(_step60=_iterator60.next()).done);_iteratorNormalCompletion60=true){var pokemon=_step60.value;this.boost({spa:1},pokemon);}}catch(err){_didIteratorError60=true;_iteratorError60=err;}finally{try{if(!_iteratorNormalCompletion60&&_iterator60.return){_iterator60.return();}}finally{if(_didIteratorError60){throw _iteratorError60;}}}}},target:'adjacentFoe',type:'Poison',contestType:'Cool'},maxovergrowth:{num:773,accuracy:true,basePower:10,category:'Physical',desc:"Summons Grassy Terrain. BP scales with the base move's BP.",shortDesc:"Sets Grassy Terrain. BP scales with base move's BP.",id:'maxovergrowth',name:'Max Overgrowth',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;this.field.setTerrain('grassyterrain');}},target:'adjacentFoe',type:'Grass',contestType:'Cool'},maxphantasm:{num:762,accuracy:true,basePower:10,category:'Physical',desc:"Lowers all the opposing Pokemon's Defense by 1 stage. BP scales with the base move's BP.",shortDesc:"Foes: -1 Defense. BP scales with base move's BP.",id:'maxphantasm',name:'Max Phantasm',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;var _iteratorNormalCompletion61=true;var _didIteratorError61=false;var _iteratorError61=undefined;try{for(var _iterator61=source.side.foe.active[Symbol.iterator](),_step61;!(_iteratorNormalCompletion61=(_step61=_iterator61.next()).done);_iteratorNormalCompletion61=true){var pokemon=_step61.value;this.boost({def:-1},pokemon);}}catch(err){_didIteratorError61=true;_iteratorError61=err;}finally{try{if(!_iteratorNormalCompletion61&&_iterator61.return){_iterator61.return();}}finally{if(_didIteratorError61){throw _iteratorError61;}}}}},target:'adjacentFoe',type:'Ghost',contestType:'Cool'},maxquake:{num:771,accuracy:true,basePower:10,category:'Physical',desc:"Boosts the user and its allies' Special Defense by 1 stage. BP scales with the base move's BP.",shortDesc:'User/allies: +1 SpD. BP scales w/ base move.',id:'maxquake',name:'Max Quake',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;var _iteratorNormalCompletion62=true;var _didIteratorError62=false;var _iteratorError62=undefined;try{for(var _iterator62=source.side.active[Symbol.iterator](),_step62;!(_iteratorNormalCompletion62=(_step62=_iterator62.next()).done);_iteratorNormalCompletion62=true){var pokemon=_step62.value;this.boost({spd:1},pokemon);}}catch(err){_didIteratorError62=true;_iteratorError62=err;}finally{try{if(!_iteratorNormalCompletion62&&_iterator62.return){_iterator62.return();}}finally{if(_didIteratorError62){throw _iteratorError62;}}}}},target:'adjacentFoe',type:'Ground',contestType:'Cool'},maxrockfall:{num:770,accuracy:true,basePower:10,category:'Physical',desc:"Summons Sandstorm. BP scales with the base move's BP.",shortDesc:"Sets Sandstorm. BP scales with base move's BP.",id:'maxrockfall',name:'Max Rockfall',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;this.field.setWeather('sandstorm');}},target:'adjacentFoe',type:'Rock',contestType:'Cool'},maxstarfall:{num:767,accuracy:true,basePower:10,category:'Physical',desc:"Summons Misty Terrain. BP scales with the base move's BP.",shortDesc:"Sets Misty Terrain. BP scales with base move's BP.",id:'maxstarfall',name:'Max Starfall',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;this.field.setTerrain('mistyterrain');}},target:'adjacentFoe',type:'Fairy',contestType:'Cool'},maxsteelspike:{num:774,accuracy:true,basePower:10,category:'Physical',desc:"Boosts the user and its allies' Defense by 1 stage. BP scales with the base move's BP.",shortDesc:'User/allies: +1 Def. BP scales w/ base move.',id:'maxsteelspike',name:'Max Steelspike',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;var _iteratorNormalCompletion63=true;var _didIteratorError63=false;var _iteratorError63=undefined;try{for(var _iterator63=source.side.active[Symbol.iterator](),_step63;!(_iteratorNormalCompletion63=(_step63=_iterator63.next()).done);_iteratorNormalCompletion63=true){var pokemon=_step63.value;this.boost({def:1},pokemon);}}catch(err){_didIteratorError63=true;_iteratorError63=err;}finally{try{if(!_iteratorNormalCompletion63&&_iterator63.return){_iterator63.return();}}finally{if(_didIteratorError63){throw _iteratorError63;}}}}},target:'adjacentFoe',type:'Steel',contestType:'Cool'},maxstrike:{num:760,accuracy:true,basePower:10,category:'Physical',desc:"Lowers all the opposing Pokemon's Speed by 1 stage. BP scales with the base move's BP.",shortDesc:"Foes: -1 Speed. BP scales with base move's BP.",id:'maxstrike',name:'Max Strike',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;var _iteratorNormalCompletion64=true;var _didIteratorError64=false;var _iteratorError64=undefined;try{for(var _iterator64=source.side.foe.active[Symbol.iterator](),_step64;!(_iteratorNormalCompletion64=(_step64=_iterator64.next()).done);_iteratorNormalCompletion64=true){var pokemon=_step64.value;this.boost({spe:-1},pokemon);}}catch(err){_didIteratorError64=true;_iteratorError64=err;}finally{try{if(!_iteratorNormalCompletion64&&_iterator64.return){_iterator64.return();}}finally{if(_didIteratorError64){throw _iteratorError64;}}}}},target:'adjacentFoe',type:'Normal',contestType:'Cool'},maxwyrmwind:{num:768,accuracy:true,basePower:10,category:'Physical',desc:"Lowers all the opposing Pokemon's Attack by 1 stage. BP scales with the base move's BP.",shortDesc:"Foes: -1 Attack. BP scales with base move's BP.",id:'maxwyrmwind',name:'Max Wyrmwind',pp:5,priority:0,flags:{},isMax:true,self:{onHit:function onHit(source){if(!source.volatiles['dynamax'])return;var _iteratorNormalCompletion65=true;var _didIteratorError65=false;var _iteratorError65=undefined;try{for(var _iterator65=source.side.foe.active[Symbol.iterator](),_step65;!(_iteratorNormalCompletion65=(_step65=_iterator65.next()).done);_iteratorNormalCompletion65=true){var pokemon=_step65.value;this.boost({atk:-1},pokemon);}}catch(err){_didIteratorError65=true;_iteratorError65=err;}finally{try{if(!_iteratorNormalCompletion65&&_iterator65.return){_iterator65.return();}}finally{if(_didIteratorError65){throw _iteratorError65;}}}}},target:'adjacentFoe',type:'Dragon',contestType:'Cool'},meanlook:{num:212,accuracy:true,basePower:0,category:'Status',desc:'Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.',shortDesc:'Prevents the target from switching out.',id:'meanlook',name:'Mean Look',pp:5,priority:0,flags:{reflectable:1,mirror:1},onHit:function onHit(target,source,move){return target.addVolatile('trapped',source,move,'trapper');},secondary:null,target:'normal',type:'Normal',zMoveBoost:{spd:1},contestType:'Beautiful'},meditate:{num:96,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Attack by 1 stage.",shortDesc:"Raises the user's Attack by 1.",id:'meditate',isNonstandard:'Past',name:'Meditate',pp:40,priority:0,flags:{snatch:1},boosts:{atk:1},secondary:null,target:'self',type:'Psychic',zMoveBoost:{atk:1},contestType:'Beautiful'},mefirst:{num:382,accuracy:true,basePower:0,category:'Status',desc:"The user uses the move the target chose for use this turn against it, if possible, with its power multiplied by 1.5. The move must be a damaging move other than Beak Blast, Chatter, Counter, Covet, Focus Punch, Me First, Metal Burst, Mirror Coat, Shell Trap, Struggle, Thief, or any Z-Move. Fails if the target moves before the user. Ignores the target's substitute for the purpose of copying the move.",shortDesc:'Copies a foe at 1.5x power. User must be faster.',id:'mefirst',isNonstandard:'Past',name:'Me First',pp:20,priority:0,flags:{protect:1,authentic:1},onTryHit:function onTryHit(target,pokemon){var action=this.queue.willMove(target);if(!action)return false;var noMeFirst=['beakblast','chatter','counter','covet','focuspunch','mefirst','metalburst','mirrorcoat','shelltrap','struggle','thief'];var move=this.dex.getActiveMove(action.move.id);if(action.zmove||move.isZ||move.isMax)return false;if(move.category==='Status'||noMeFirst.includes(move.id))return false;pokemon.addVolatile('mefirst');this.useMove(move,pokemon,target);return null;},effect:{duration:1,onBasePowerPriority:4,onBasePower:function onBasePower(basePower){return this.chainModify(1.5);}},secondary:null,target:'adjacentFoe',type:'Normal',zMoveBoost:{spe:2},contestType:'Clever'},megadrain:{num:72,accuracy:100,basePower:40,category:'Special',desc:'The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.',shortDesc:'User recovers 50% of the damage dealt.',id:'megadrain',name:'Mega Drain',pp:15,priority:0,flags:{protect:1,mirror:1,heal:1},drain:[1,2],secondary:null,target:'normal',type:'Grass',zMovePower:120,contestType:'Clever'},megahorn:{num:224,accuracy:85,basePower:120,category:'Physical',shortDesc:'No additional effect.',id:'megahorn',isViable:true,name:'Megahorn',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Bug',contestType:'Cool'},megakick:{num:25,accuracy:75,basePower:120,category:'Physical',shortDesc:'No additional effect.',id:'megakick',name:'Mega Kick',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',contestType:'Cool'},megapunch:{num:5,accuracy:85,basePower:80,category:'Physical',shortDesc:'No additional effect.',id:'megapunch',name:'Mega Punch',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},secondary:null,target:'normal',type:'Normal',contestType:'Tough'},memento:{num:262,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Attack and Special Attack by 2 stages. The user faints unless this move misses or there is no target. Fails entirely if this move hits a substitute, but does not fail if the target's stats cannot be changed.",shortDesc:"Lowers target's Attack, Sp. Atk by 2. User faints.",id:'memento',isViable:true,name:'Memento',pp:10,priority:0,flags:{protect:1,mirror:1},boosts:{atk:-2,spa:-2},selfdestruct:'ifHit',secondary:null,target:'normal',type:'Dark',zMoveEffect:'healreplacement',contestType:'Tough'},menacingmoonrazemaelstrom:{num:725,accuracy:true,basePower:200,category:'Special',desc:'This move and its effects ignore the Abilities of other Pokemon.',shortDesc:'Ignores the Abilities of other Pokemon.',id:'menacingmoonrazemaelstrom',isNonstandard:'Past',isViable:true,name:'Menacing Moonraze Maelstrom',pp:1,priority:0,flags:{},isZ:'lunaliumz',ignoreAbility:true,secondary:null,target:'normal',type:'Ghost',contestType:'Cool'},metalburst:{num:368,accuracy:100,basePower:0,damageCallback:function damageCallback(pokemon){if(!pokemon.volatiles['metalburst'])return 0;return pokemon.volatiles['metalburst'].damage||1;},category:'Physical',desc:"Deals damage to the last opposing Pokemon to hit the user with an attack this turn equal to 1.5 times the HP lost by the user from that attack, rounded down. If the user did not lose HP from the attack, this move deals 1 HP of damage instead. If that opposing Pokemon's position is no longer in use and there is another opposing Pokemon on the field, the damage is done to it instead. Only the last hit of a multi-hit attack is counted. Fails if the user was not hit by an opposing Pokemon's attack this turn.",shortDesc:'If hit by an attack, returns 1.5x damage.',id:'metalburst',name:'Metal Burst',pp:10,priority:0,flags:{protect:1,mirror:1},beforeTurnCallback:function beforeTurnCallback(pokemon){pokemon.addVolatile('metalburst');},onTryHit:function onTryHit(target,source,move){if(!source.volatiles['metalburst'])return false;if(source.volatiles['metalburst'].position===null)return false;},effect:{duration:1,noCopy:true,onStart:function onStart(target,source,move){this.effectData.position=null;this.effectData.damage=0;},onRedirectTargetPriority:-1,onRedirectTarget:function onRedirectTarget(target,source,source2){if(source!==this.effectData.target)return;return source.side.foe.active[this.effectData.position];},onDamagingHit:function onDamagingHit(damage,target,source,effect){if(source.side!==target.side){this.effectData.position=source.position;this.effectData.damage=1.5*damage;}}},secondary:null,target:'scripted',type:'Steel',contestType:'Cool'},metalclaw:{num:232,accuracy:95,basePower:50,category:'Physical',desc:"Has a 10% chance to raise the user's Attack by 1 stage.",shortDesc:"10% chance to raise the user's Attack by 1.",id:'metalclaw',name:'Metal Claw',pp:35,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:10,self:{boosts:{atk:1}}},target:'normal',type:'Steel',contestType:'Cool'},metalsound:{num:319,accuracy:85,basePower:0,category:'Status',desc:"Lowers the target's Special Defense by 2 stages.",shortDesc:"Lowers the target's Sp. Def by 2.",id:'metalsound',name:'Metal Sound',pp:40,priority:0,flags:{protect:1,reflectable:1,mirror:1,sound:1,authentic:1,mystery:1},boosts:{spd:-2},secondary:null,target:'normal',type:'Steel',zMoveBoost:{spa:1},contestType:'Clever'},meteorassault:{num:794,accuracy:100,basePower:150,category:'Physical',desc:'If this move is successful, the user must recharge on the following turn and cannot select a move.',shortDesc:'User cannot move next turn.',id:'meteorassault',name:'Meteor Assault',pp:5,priority:0,flags:{protect:1,recharge:1,mirror:1},self:{volatileStatus:'mustrecharge'},secondary:null,target:'normal',type:'Fighting'},meteormash:{num:309,accuracy:90,basePower:90,category:'Physical',desc:"Has a 20% chance to raise the user's Attack by 1 stage.",shortDesc:"20% chance to raise the user's Attack by 1.",id:'meteormash',isViable:true,name:'Meteor Mash',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},secondary:{chance:20,self:{boosts:{atk:1}}},target:'normal',type:'Steel',contestType:'Cool'},metronome:{num:118,accuracy:true,basePower:0,category:'Status',desc:"A random move is selected for use, other than After You, Assist, Baneful Bunker, Beak Blast, Behemoth Bash, Behemoth Blade, Belch, Bestow, Celebrate, Chatter, Copycat, Counter, Covet, Crafty Shield, Destiny Bond, Detect, Diamond Storm, Dynamax Cannon, Endure, Eternabeam, Feint, Fleur Cannon, Focus Punch, Follow Me, Freeze Shock, Helping Hand, Hold Hands, Hyperspace Fury, Hyperspace Hole, Ice Burn, Instruct, King's Shield, Light of Ruin, Mat Block, Me First, Metronome, Mimic, Mind Blown, Mirror Coat, Mirror Move, Nature Power, Origin Pulse, Photon Geyser, Plasma Fists, Precipice Blades, Protect, Quash, Quick Guard, Rage Powder, Relic Song, Secret Sword, Shell Trap, Sketch, Sleep Talk, Snarl, Snatch, Snore, Spectral Thief, Spiky Shield, Spotlight, Steam Eruption, Struggle, Switcheroo, Techno Blast, Thief, Thousand Arrows, Thousand Waves, Transform, Trick, V-create, or Wide Guard.",shortDesc:'Picks a random move.',id:'metronome',name:'Metronome',pp:10,priority:0,flags:{},noMetronome:['afteryou','assist','banefulbunker','beakblast','behemothbash','behemothblade','belch','bestow','celebrate','chatter','copycat','counter','covet','craftyshield','destinybond','detect','diamondstorm','dragonascent','dynamaxcannon','endure','eternabeam','feint','fleurcannon','focuspunch','followme','freezeshock','helpinghand','holdhands','hyperspacefury','hyperspacehole','iceburn','instruct','kingsshield','lightofruin','matblock','mefirst','metronome','mimic','mindblown','mirrorcoat','mirrormove','naturepower','originpulse','photongeyser','plasmafists','precipiceblades','protect','quash','quickguard','ragepowder','relicsong','secretsword','shelltrap','sketch','sleeptalk','snarl','snatch','snore','spectralthief','spikyshield','spotlight','steameruption','struggle','switcheroo','technoblast','thief','thousandarrows','thousandwaves','transform','trick','vcreate','wideguard'],onHit:function onHit(target,source,effect){var moves=[];for(var id in exports.BattleMovedex){var move=exports.BattleMovedex[id];if(id!==move.id)continue;if(move.isZ||move.isMax||move.isNonstandard)continue;// @ts-ignore
if(effect.noMetronome.includes(move.id))continue;if(this.dex.getMove(id).gen>this.gen)continue;moves.push(move);}var randomMove='';if(moves.length){moves.sort(function(a,b){return a.num-b.num;});randomMove=this.sample(moves).id;}if(!randomMove){return false;}this.useMove(randomMove,target);},secondary:null,target:'self',type:'Normal',contestType:'Cute'},milkdrink:{num:208,accuracy:true,basePower:0,category:'Status',desc:'The user restores 1/2 of its maximum HP, rounded half up.',shortDesc:'Heals the user by 50% of its max HP.',id:'milkdrink',isNonstandard:'Past',name:'Milk Drink',pp:10,priority:0,flags:{snatch:1,heal:1},heal:[1,2],secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Cute'},mimic:{num:102,accuracy:true,basePower:0,category:'Status',desc:'While the user remains active, this move is replaced by the last move used by the target. The copied move has the maximum PP for that move. Fails if the target has not made a move, if the user has Transformed, if the user already knows the move, or if the move is Chatter, Mimic, Sketch, Struggle, Transform, or any Z-Move.',shortDesc:'The last move the target used replaces this one.',id:'mimic',name:'Mimic',pp:10,priority:0,flags:{protect:1,authentic:1,mystery:1},onHit:function onHit(target,source){var disallowedMoves=['chatter','mimic','sketch','struggle','transform'];var move=target.lastMove;if(source.transformed||!move||disallowedMoves.includes(move.id)||source.moves.includes(move.id)){return false;}if(move.isZ||move.isMax)return false;var mimicIndex=source.moves.indexOf('mimic');if(mimicIndex<0)return false;source.moveSlots[mimicIndex]={move:move.name,id:move.id,pp:move.pp,maxpp:move.pp,target:move.target,disabled:false,used:false,virtual:true};this.add('-start',source,'Mimic',move.name);},secondary:null,target:'normal',type:'Normal',zMoveBoost:{accuracy:1},contestType:'Cute'},mindblown:{num:720,accuracy:100,basePower:150,category:'Special',desc:'Whether or not this move is successful and even if it would cause fainting, the user loses 1/2 of its maximum HP, rounded up, unless the user has the Magic Guard Ability. This move is prevented from executing and the user does not lose HP if any active Pokemon has the Damp Ability, or if this move is Fire type and the user is affected by Powder or the weather is Primordial Sea.',shortDesc:'User loses 50% max HP. Hits adjacent Pokemon.',id:'mindblown',isNonstandard:'Past',name:'Mind Blown',pp:5,priority:0,flags:{protect:1,mirror:1},mindBlownRecoil:true,onAfterMove:function onAfterMove(pokemon,target,move){if(move.mindBlownRecoil&&!move.multihit){this.damage(Math.round(pokemon.maxhp/2),pokemon,pokemon,this.dex.getEffect('Mind Blown'),true);}},secondary:null,target:'allAdjacent',type:'Fire',contestType:'Cool'},mindreader:{num:170,accuracy:true,basePower:0,category:'Status',desc:"Until the end of the next turn, the target cannot avoid the user's moves, even if the target is in the middle of a two-turn move. The effect ends if either the user or the target leaves the field. Fails if this effect is active for the user.",shortDesc:"User's next move will not miss the target.",id:'mindreader',name:'Mind Reader',pp:5,priority:0,flags:{protect:1,mirror:1},onTryHit:function onTryHit(target,source){if(source.volatiles['lockon'])return false;},onHit:function onHit(target,source){source.addVolatile('lockon',target);this.add('-activate',source,'move: Mind Reader','[of] '+target);},secondary:null,target:'normal',type:'Normal',zMoveBoost:{spa:1},contestType:'Clever'},minimize:{num:107,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's evasiveness by 2 stages. Whether or not the user's evasiveness was changed, Body Slam, Dragon Rush, Flying Press, Heat Crash, Heavy Slam, Malicious Moonsault, Steamroller, and Stomp will not check accuracy and have their damage doubled if used against the user while it is active.",shortDesc:"Raises the user's evasiveness by 2.",id:'minimize',name:'Minimize',pp:10,priority:0,flags:{snatch:1},volatileStatus:'minimize',effect:{noCopy:true,onSourceModifyDamage:function onSourceModifyDamage(damage,source,target,move){if(['stomp','steamroller','bodyslam','flyingpress','dragonrush','heatcrash','heavyslam','maliciousmoonsault'].includes(move.id)){return this.chainModify(2);}},onAccuracy:function onAccuracy(accuracy,target,source,move){if(['stomp','steamroller','bodyslam','flyingpress','dragonrush','heatcrash','heavyslam','maliciousmoonsault'].includes(move.id)){return true;}return accuracy;}},boosts:{evasion:2},secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Cute'},miracleeye:{num:357,accuracy:true,basePower:0,category:'Status',desc:'As long as the target remains active, its evasiveness stat stage is ignored during accuracy checks against it if it is greater than 0, and Psychic-type attacks can hit the target if it is a Dark type. Fails if the target is already affected, or affected by Foresight or Odor Sleuth.',shortDesc:'Psychic hits Dark. Evasiveness ignored.',id:'miracleeye',isNonstandard:'Past',name:'Miracle Eye',pp:40,priority:0,flags:{protect:1,reflectable:1,mirror:1,authentic:1},volatileStatus:'miracleeye',onTryHit:function onTryHit(target){if(target.volatiles['foresight'])return false;},effect:{noCopy:true,onStart:function onStart(pokemon){this.add('-start',pokemon,'Miracle Eye');},onNegateImmunity:function onNegateImmunity(pokemon,type){if(pokemon.hasType('Dark')&&type==='Psychic')return false;},onModifyBoost:function onModifyBoost(boosts){if(boosts.evasion&&boosts.evasion>0){boosts.evasion=0;}}},secondary:null,target:'normal',type:'Psychic',zMoveBoost:{spa:1},contestType:'Clever'},mirrorcoat:{num:243,accuracy:100,basePower:0,damageCallback:function damageCallback(pokemon){if(!pokemon.volatiles['mirrorcoat'])return 0;return pokemon.volatiles['mirrorcoat'].damage||1;},category:'Special',desc:"Deals damage to the last opposing Pokemon to hit the user with a special attack this turn equal to twice the HP lost by the user from that attack. If the user did not lose HP from the attack, this move deals 1 HP of damage instead. If that opposing Pokemon's position is no longer in use and there is another opposing Pokemon on the field, the damage is done to it instead. Only the last hit of a multi-hit attack is counted. Fails if the user was not hit by an opposing Pokemon's special attack this turn.",shortDesc:'If hit by special attack, returns double damage.',id:'mirrorcoat',name:'Mirror Coat',pp:20,priority:-5,flags:{protect:1},beforeTurnCallback:function beforeTurnCallback(pokemon){pokemon.addVolatile('mirrorcoat');},onTryHit:function onTryHit(target,source,move){if(!source.volatiles['mirrorcoat'])return false;if(source.volatiles['mirrorcoat'].position===null)return false;},effect:{duration:1,noCopy:true,onStart:function onStart(target,source,move){this.effectData.position=null;this.effectData.damage=0;},onRedirectTargetPriority:-1,onRedirectTarget:function onRedirectTarget(target,source,source2){if(source!==this.effectData.target)return;return source.side.foe.active[this.effectData.position];},onDamagingHit:function onDamagingHit(damage,target,source,move){if(source.side!==target.side&&this.getCategory(move)==='Special'){this.effectData.position=source.position;this.effectData.damage=2*damage;}}},secondary:null,target:'scripted',type:'Psychic',contestType:'Beautiful'},mirrormove:{num:119,accuracy:true,basePower:0,category:'Status',desc:'The user uses the last move used by the target. The copied move is used against that target, if possible. Fails if the target has not made a move, or if the last move used cannot be copied by this move.',shortDesc:"User uses the target's last used move against it.",id:'mirrormove',isNonstandard:'Past',name:'Mirror Move',pp:20,priority:0,flags:{},onTryHit:function onTryHit(target,pokemon){var move=target.lastMove;if(!move||!move.flags['mirror']||move.isZ||move.isMax){return false;}this.useMove(move.id,pokemon,target);return null;},secondary:null,target:'normal',type:'Flying',zMoveBoost:{atk:2},contestType:'Clever'},mirrorshot:{num:429,accuracy:85,basePower:65,category:'Special',desc:"Has a 30% chance to lower the target's accuracy by 1 stage.",shortDesc:"30% chance to lower the target's accuracy by 1.",id:'mirrorshot',isNonstandard:'Past',name:'Mirror Shot',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:30,boosts:{accuracy:-1}},target:'normal',type:'Steel',contestType:'Beautiful'},mist:{num:54,accuracy:true,basePower:0,category:'Status',desc:"For 5 turns, the user and its party members are protected from having their stat stages lowered by other Pokemon. Fails if the effect is already active on the user's side.",shortDesc:"For 5 turns, protects user's party from stat drops.",id:'mist',name:'Mist',pp:30,priority:0,flags:{snatch:1},sideCondition:'mist',effect:{duration:5,onBoost:function onBoost(boost,target,source,effect){if(effect.effectType==='Move'&&effect.infiltrates&&target.side!==source.side)return;if(source&&target!==source){var showMsg=false;for(var i in boost){// @ts-ignore
if(boost[i]<0){// @ts-ignore
delete boost[i];showMsg=true;}}if(showMsg&&!/** @type {ActiveMove} */effect.secondaries){this.add('-activate',target,'move: Mist');}}},onStart:function onStart(side){this.add('-sidestart',side,'Mist');},onResidualOrder:21,onResidualSubOrder:3,onEnd:function onEnd(side){this.add('-sideend',side,'Mist');}},secondary:null,target:'allySide',type:'Ice',zMoveEffect:'heal',contestType:'Beautiful'},mistball:{num:296,accuracy:100,basePower:70,category:'Special',desc:"Has a 50% chance to lower the target's Special Attack by 1 stage.",shortDesc:"50% chance to lower the target's Sp. Atk by 1.",id:'mistball',isNonstandard:'Past',name:'Mist Ball',pp:5,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:{chance:50,boosts:{spa:-1}},target:'normal',type:'Psychic',contestType:'Clever'},mistyterrain:{num:581,accuracy:true,basePower:0,category:'Status',desc:'For 5 turns, the terrain becomes Misty Terrain. During the effect, the power of Dragon-type attacks used against grounded Pokemon is multiplied by 0.5 and grounded Pokemon cannot be inflicted with a major status condition nor confusion. Camouflage transforms the user into a Fairy type, Nature Power becomes Moonblast, and Secret Power has a 30% chance to lower Special Attack by 1 stage. Fails if the current terrain is Misty Terrain.',shortDesc:"5 turns. Can't status,-Dragon power vs grounded.",id:'mistyterrain',name:'Misty Terrain',pp:10,priority:0,flags:{nonsky:1},terrain:'mistyterrain',effect:{duration:5,durationCallback:function durationCallback(source,effect){if(source&&source.hasItem('terrainextender')){return 8;}return 5;},onSetStatus:function onSetStatus(status,target,source,effect){if(!target.isGrounded()||target.isSemiInvulnerable())return;if(effect&&effect.status){this.add('-activate',target,'move: Misty Terrain');}return false;},onTryAddVolatile:function onTryAddVolatile(status,target,source,effect){if(!target.isGrounded()||target.isSemiInvulnerable())return;if(status.id==='confusion'){if(effect.effectType==='Move'&&!effect.secondaries)this.add('-activate',target,'move: Misty Terrain');return null;}},onBasePower:function onBasePower(basePower,attacker,defender,move){if(move.type==='Dragon'&&defender.isGrounded()&&!defender.isSemiInvulnerable()){this.debug('misty terrain weaken');return this.chainModify(0.5);}},onStart:function onStart(battle,source,effect){if(effect&&effect.effectType==='Ability'){this.add('-fieldstart','move: Misty Terrain','[from] ability: '+effect,'[of] '+source);}else{this.add('-fieldstart','move: Misty Terrain');}},onResidualOrder:21,onResidualSubOrder:2,onEnd:function onEnd(side){this.add('-fieldend','Misty Terrain');}},secondary:null,target:'all',type:'Fairy',zMoveBoost:{spd:1},contestType:'Beautiful'},moonblast:{num:585,accuracy:100,basePower:95,category:'Special',desc:"Has a 30% chance to lower the target's Special Attack by 1 stage.",shortDesc:"30% chance to lower the target's Sp. Atk by 1.",id:'moonblast',isViable:true,name:'Moonblast',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:{chance:30,boosts:{spa:-1}},target:'normal',type:'Fairy',contestType:'Beautiful'},moongeistbeam:{num:714,accuracy:100,basePower:100,category:'Special',desc:'This move and its effects ignore the Abilities of other Pokemon.',shortDesc:'Ignores the Abilities of other Pokemon.',id:'moongeistbeam',isViable:true,name:'Moongeist Beam',pp:5,priority:0,flags:{protect:1,mirror:1},ignoreAbility:true,secondary:null,target:'normal',type:'Ghost',contestType:'Cool'},moonlight:{num:236,accuracy:true,basePower:0,category:'Status',desc:'The user restores 1/2 of its maximum HP if Delta Stream or no weather conditions are in effect or if the user is holding Utility Umbrella, 2/3 of its maximum HP if the weather is Desolate Land or Sunny Day, and 1/4 of its maximum HP if the weather is Hail, Primordial Sea, Rain Dance, or Sandstorm, all rounded half down.',shortDesc:'Heals the user by a weather-dependent amount.',id:'moonlight',isViable:true,name:'Moonlight',pp:5,priority:0,flags:{snatch:1,heal:1},onHit:function onHit(pokemon){var factor=0.5;switch(pokemon.effectiveWeather()){case'sunnyday':case'desolateland':factor=0.667;break;case'raindance':case'primordialsea':case'sandstorm':case'hail':factor=0.25;break;}return!!this.heal(this.modify(pokemon.maxhp,factor));},secondary:null,target:'self',type:'Fairy',zMoveEffect:'clearnegativeboost',contestType:'Beautiful'},morningsun:{num:234,accuracy:true,basePower:0,category:'Status',desc:'The user restores 1/2 of its maximum HP if Delta Stream or no weather conditions are in effect or if the user is holding Utility Umbrella, 2/3 of its maximum HP if the weather is Desolate Land or Sunny Day, and 1/4 of its maximum HP if the weather is Hail, Primordial Sea, Rain Dance, or Sandstorm, all rounded half down.',shortDesc:'Heals the user by a weather-dependent amount.',id:'morningsun',isViable:true,name:'Morning Sun',pp:5,priority:0,flags:{snatch:1,heal:1},onHit:function onHit(pokemon){var factor=0.5;switch(pokemon.effectiveWeather()){case'sunnyday':case'desolateland':factor=0.667;break;case'raindance':case'primordialsea':case'sandstorm':case'hail':factor=0.25;break;}return!!this.heal(this.modify(pokemon.maxhp,factor));},secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Beautiful'},mudbomb:{num:426,accuracy:85,basePower:65,category:'Special',desc:"Has a 30% chance to lower the target's accuracy by 1 stage.",shortDesc:"30% chance to lower the target's accuracy by 1.",id:'mudbomb',isNonstandard:'Past',name:'Mud Bomb',pp:10,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:{chance:30,boosts:{accuracy:-1}},target:'normal',type:'Ground',contestType:'Cute'},mudshot:{num:341,accuracy:95,basePower:55,category:'Special',desc:"Has a 100% chance to lower the target's Speed by 1 stage.",shortDesc:"100% chance to lower the target's Speed by 1.",id:'mudshot',name:'Mud Shot',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,boosts:{spe:-1}},target:'normal',type:'Ground',contestType:'Tough'},mudslap:{num:189,accuracy:100,basePower:20,category:'Special',desc:"Has a 100% chance to lower the target's accuracy by 1 stage.",shortDesc:"100% chance to lower the target's accuracy by 1.",id:'mudslap',name:'Mud-Slap',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,boosts:{accuracy:-1}},target:'normal',type:'Ground',contestType:'Cute'},mudsport:{num:300,accuracy:true,basePower:0,category:'Status',desc:'For 5 turns, all Electric-type attacks used by any active Pokemon have their power multiplied by 0.33. Fails if this effect is already active.',shortDesc:'For 5 turns, Electric-type attacks have 1/3 power.',id:'mudsport',isNonstandard:'Past',name:'Mud Sport',pp:15,priority:0,flags:{nonsky:1},pseudoWeather:'mudsport',effect:{duration:5,onStart:function onStart(side,source){this.add('-fieldstart','move: Mud Sport','[of] '+source);},onBasePowerPriority:1,onBasePower:function onBasePower(basePower,attacker,defender,move){if(move.type==='Electric'){this.debug('mud sport weaken');return this.chainModify([0x548,0x1000]);}},onResidualOrder:21,onEnd:function onEnd(){this.add('-fieldend','move: Mud Sport');}},secondary:null,target:'all',type:'Ground',zMoveBoost:{spd:1},contestType:'Cute'},muddywater:{num:330,accuracy:85,basePower:90,category:'Special',desc:"Has a 30% chance to lower the target's accuracy by 1 stage.",shortDesc:'30% chance to lower the foe(s) accuracy by 1.',id:'muddywater',name:'Muddy Water',pp:10,priority:0,flags:{protect:1,mirror:1,nonsky:1},secondary:{chance:30,boosts:{accuracy:-1}},target:'allAdjacentFoes',type:'Water',contestType:'Tough'},multiattack:{num:718,accuracy:100,basePower:120,category:'Physical',desc:"This move's type depends on the user's held Memory.",shortDesc:'Type varies based on the held Memory.',id:'multiattack',isViable:true,name:'Multi-Attack',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},onModifyType:function onModifyType(move,pokemon){if(pokemon.ignoringItem())return;move.type=this.runEvent('Memory',pokemon,null,move,'Normal');},secondary:null,target:'normal',type:'Normal',zMovePower:185,contestType:'Tough'},mysticalfire:{num:595,accuracy:100,basePower:75,category:'Special',desc:"Has a 100% chance to lower the target's Special Attack by 1 stage.",shortDesc:"100% chance to lower the target's Sp. Atk by 1.",id:'mysticalfire',name:'Mystical Fire',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,boosts:{spa:-1}},target:'normal',type:'Fire',contestType:'Beautiful'},nastyplot:{num:417,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Special Attack by 2 stages.",shortDesc:"Raises the user's Sp. Atk by 2.",id:'nastyplot',isViable:true,name:'Nasty Plot',pp:20,priority:0,flags:{snatch:1},boosts:{spa:2},secondary:null,target:'self',type:'Dark',zMoveEffect:'clearnegativeboost',contestType:'Clever'},naturalgift:{num:363,accuracy:100,basePower:0,category:'Physical',desc:"The type and power of this move depend on the user's held Berry, and the Berry is lost. Fails if the user is not holding a Berry, if the user has the Klutz Ability, or if Embargo or Magic Room is in effect for the user.",shortDesc:"Power and type depends on the user's Berry.",id:'naturalgift',isNonstandard:'Past',name:'Natural Gift',pp:15,priority:0,flags:{protect:1,mirror:1},onModifyType:function onModifyType(move,pokemon){if(pokemon.ignoringItem())return;var item=pokemon.getItem();if(!item.naturalGift)return;move.type=item.naturalGift.type;},onPrepareHit:function onPrepareHit(target,pokemon,move){if(pokemon.ignoringItem())return false;var item=pokemon.getItem();if(!item.naturalGift)return false;move.basePower=item.naturalGift.basePower;pokemon.setItem('');pokemon.lastItem=item.id;pokemon.usedItemThisTurn=true;this.runEvent('AfterUseItem',pokemon,null,null,item);},secondary:null,target:'normal',type:'Normal',zMovePower:160,gmaxPower:130,contestType:'Clever'},naturepower:{num:267,accuracy:true,basePower:0,category:'Status',desc:'This move calls another move for use based on the battle terrain. Tri Attack on the regular Wi-Fi terrain, Thunderbolt during Electric Terrain, Moonblast during Misty Terrain, Energy Ball during Grassy Terrain, and Psychic during Psychic Terrain.',shortDesc:'Attack depends on terrain (default Tri Attack).',id:'naturepower',isViable:true,name:'Nature Power',pp:20,priority:0,flags:{},onTryHit:function onTryHit(target,pokemon){var move='triattack';if(this.field.isTerrain('electricterrain')){move='thunderbolt';}else if(this.field.isTerrain('grassyterrain')){move='energyball';}else if(this.field.isTerrain('mistyterrain')){move='moonblast';}else if(this.field.isTerrain('psychicterrain')){move='psychic';}this.useMove(move,pokemon,target);return null;},secondary:null,target:'normal',type:'Normal',contestType:'Beautiful'},naturesmadness:{num:717,accuracy:90,basePower:0,damageCallback:function damageCallback(pokemon,target){return this.dex.clampIntRange(Math.floor(target.getUndynamaxedHP()/2),1);},category:'Special',desc:'Deals damage to the target equal to half of its current HP, rounded down, but not less than 1 HP.',shortDesc:"Does damage equal to 1/2 target's current HP.",id:'naturesmadness',isNonstandard:'Past',name:"Nature's Madness",pp:10,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Fairy',contestType:'Tough'},needlearm:{num:302,accuracy:100,basePower:60,category:'Physical',desc:'Has a 30% chance to flinch the target.',shortDesc:'30% chance to flinch the target.',id:'needlearm',isNonstandard:'Past',name:'Needle Arm',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Grass',contestType:'Clever'},neverendingnightmare:{num:636,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'neverendingnightmare',isNonstandard:'Past',name:'Never-Ending Nightmare',pp:1,priority:0,flags:{},isZ:'ghostiumz',secondary:null,target:'normal',type:'Ghost',contestType:'Cool'},nightdaze:{num:539,accuracy:95,basePower:85,category:'Special',desc:"Has a 40% chance to lower the target's accuracy by 1 stage.",shortDesc:"40% chance to lower the target's accuracy by 1.",id:'nightdaze',name:'Night Daze',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:40,boosts:{accuracy:-1}},target:'normal',type:'Dark',contestType:'Cool'},nightmare:{num:171,accuracy:100,basePower:0,category:'Status',desc:'Causes the target to lose 1/4 of its maximum HP, rounded down, at the end of each turn as long as it is asleep. This move does not affect the target unless it is asleep. The effect ends when the target wakes up, even if it falls asleep again in the same turn.',shortDesc:'A sleeping target is hurt by 1/4 max HP per turn.',id:'nightmare',isNonstandard:'Past',name:'Nightmare',pp:15,priority:0,flags:{protect:1,mirror:1},volatileStatus:'nightmare',effect:{noCopy:true,onStart:function onStart(pokemon){if(pokemon.status!=='slp'&&!pokemon.hasAbility('comatose')){return false;}this.add('-start',pokemon,'Nightmare');},onResidualOrder:9,onResidual:function onResidual(pokemon){this.damage(pokemon.baseMaxhp/4);}},secondary:null,target:'normal',type:'Ghost',zMoveBoost:{spa:1},contestType:'Clever'},nightshade:{num:101,accuracy:100,basePower:0,damage:'level',category:'Special',desc:"Deals damage to the target equal to the user's level.",shortDesc:"Does damage equal to the user's level.",id:'nightshade',isViable:true,name:'Night Shade',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Ghost',contestType:'Clever'},nightslash:{num:400,accuracy:100,basePower:70,category:'Physical',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'nightslash',isViable:true,name:'Night Slash',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},critRatio:2,secondary:null,target:'normal',type:'Dark',contestType:'Cool'},nobleroar:{num:568,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Attack and Special Attack by 1 stage.",shortDesc:"Lowers the target's Attack and Sp. Atk by 1.",id:'nobleroar',name:'Noble Roar',pp:30,priority:0,flags:{protect:1,reflectable:1,mirror:1,sound:1,authentic:1},boosts:{atk:-1,spa:-1},secondary:null,target:'normal',type:'Normal',zMoveBoost:{def:1},contestType:'Tough'},noretreat:{num:748,accuracy:true,basePower:0,category:'Status',desc:'The user raises each of its stats by one stage, but it is prevented from switching out. The user can still switch out if it uses Baton Pass, Parting Shot, U-turn, or Volt Switch. If the user leaves the field using Baton Pass, the replacement will remain trapped. Can only be used once while on the field.',shortDesc:'Raises all stats by 1 (not acc/eva). Traps user.',id:'noretreat',isViable:true,name:'No Retreat',pp:5,priority:0,flags:{snatch:1},volatileStatus:'noretreat',onTryHit:function onTryHit(target,source,move){if(target.volatiles['noretreat'])return false;if(target.volatiles['trapped']){delete move.volatileStatus;}},effect:{onStart:function onStart(pokemon){this.add('-start',pokemon,'move: No Retreat');},onTrapPokemon:function onTrapPokemon(pokemon){pokemon.tryTrap();}},boosts:{atk:1,def:1,spa:1,spd:1,spe:1},secondary:null,target:'self',type:'Fighting'},nuzzle:{num:609,accuracy:100,basePower:20,category:'Physical',desc:'Has a 100% chance to paralyze the target.',shortDesc:'100% chance to paralyze the target.',id:'nuzzle',isViable:true,name:'Nuzzle',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:100,status:'par'},target:'normal',type:'Electric',contestType:'Cute'},oblivionwing:{num:613,accuracy:100,basePower:80,category:'Special',desc:'The user recovers 3/4 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.',shortDesc:'User recovers 75% of the damage dealt.',id:'oblivionwing',isNonstandard:'Past',name:'Oblivion Wing',pp:10,priority:0,flags:{protect:1,mirror:1,distance:1,heal:1},drain:[3,4],secondary:null,target:'any',type:'Flying',contestType:'Cool'},obstruct:{num:792,accuracy:true,basePower:0,category:'Status',desc:"The user is protected from most attacks made by other Pokemon during this turn, and Pokemon trying to make contact with the user have their Defense lowered by 2 stages. Non-damaging moves go through this protection. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Detect, Endure, King's Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn.",shortDesc:'Protects from damaging attacks. Contact: -2 Def.',id:'obstruct',isViable:true,name:'Obstruct',pp:10,priority:4,flags:{},stallingMove:true,volatileStatus:'obstruct',onTryHit:function onTryHit(pokemon){return!!this.queue.willAct()&&this.runEvent('StallMove',pokemon);},onHit:function onHit(pokemon){pokemon.addVolatile('stall');},effect:{duration:1,onStart:function onStart(target){this.add('-singleturn',target,'Protect');},onTryHitPriority:3,onTryHit:function onTryHit(target,source,move){if(!move.flags['protect']||move.category==='Status'){if(move.isZ||move.isMax)target.getMoveHitData(move).zBrokeProtect=true;return;}this.add('-activate',target,'move: Protect');var lockedmove=source.getVolatile('lockedmove');if(lockedmove){// Outrage counter is reset
if(source.volatiles['lockedmove'].duration===2){delete source.volatiles['lockedmove'];}}if(move.flags['contact']){this.boost({def:-2},source,target,this.dex.getActiveMove('Obstruct'));}return this.NOT_FAIL;},onHit:function onHit(target,source,move){if(move.isZPowered&&move.flags['contact']){this.boost({def:-2},source,target,this.dex.getActiveMove('Obstruct'));}}},secondary:null,target:'self',type:'Dark'},oceanicoperetta:{num:697,accuracy:true,basePower:195,category:'Special',shortDesc:'No additional effect.',id:'oceanicoperetta',isViable:true,isNonstandard:'Past',name:'Oceanic Operetta',pp:1,priority:0,flags:{},isZ:'primariumz',secondary:null,target:'normal',type:'Water',contestType:'Cool'},octazooka:{num:190,accuracy:85,basePower:65,category:'Special',desc:"Has a 50% chance to lower the target's accuracy by 1 stage.",shortDesc:"50% chance to lower the target's accuracy by 1.",id:'octazooka',name:'Octazooka',pp:10,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:{chance:50,boosts:{accuracy:-1}},target:'normal',type:'Water',contestType:'Tough'},octolock:{num:753,accuracy:100,basePower:0,category:'Status',desc:"Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field. At the end of every turn, the target's Defense and Special defense stats are lowered by 1 stage.",shortDesc:"Foe can't switch. Lowers Def and SpD every turn.",id:'octolock',name:'Octolock',pp:15,priority:0,flags:{protect:1,mirror:1},onTryImmunity:function onTryImmunity(target){return this.dex.getImmunity('trapped',target);},volatileStatus:'octolock',effect:{onStart:function onStart(pokemon,source){this.add('-activate',pokemon,'move: Octolock','[of] '+source);},onResidualOrder:11,onResidual:function onResidual(pokemon){var source=this.effectData.source;if(source&&(!source.isActive||source.hp<=0||!source.activeTurns)){delete pokemon.volatiles['octolock'];this.add('-end',pokemon,'Octolock','[partiallytrapped]','[silent]');return;}this.boost({def:-1,spd:-1},pokemon,source,this.dex.getActiveMove('Octolock'));},onTrapPokemon:function onTrapPokemon(pokemon){if(this.effectData.source&&this.effectData.source.isActive)pokemon.tryTrap();}},secondary:null,target:'normal',type:'Fighting'},odorsleuth:{num:316,accuracy:true,basePower:0,category:'Status',desc:'As long as the target remains active, its evasiveness stat stage is ignored during accuracy checks against it if it is greater than 0, and Normal- and Fighting-type attacks can hit the target if it is a Ghost type. Fails if the target is already affected, or affected by Foresight or Miracle Eye.',shortDesc:'Fighting, Normal hit Ghost. Evasiveness ignored.',id:'odorsleuth',isNonstandard:'Past',name:'Odor Sleuth',pp:40,priority:0,flags:{protect:1,reflectable:1,mirror:1,authentic:1,mystery:1},volatileStatus:'foresight',onTryHit:function onTryHit(target){if(target.volatiles['miracleeye'])return false;},secondary:null,target:'normal',type:'Normal',zMoveBoost:{atk:1},contestType:'Clever'},ominouswind:{num:466,accuracy:100,basePower:60,category:'Special',desc:"Has a 10% chance to raise the user's Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage.",shortDesc:'10% chance to raise all stats by 1 (not acc/eva).',id:'ominouswind',isNonstandard:'Past',name:'Ominous Wind',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,self:{boosts:{atk:1,def:1,spa:1,spd:1,spe:1}}},target:'normal',type:'Ghost',contestType:'Beautiful'},originpulse:{num:618,accuracy:85,basePower:110,category:'Special',desc:'No additional effect.',shortDesc:'No additional effect. Hits adjacent foes.',id:'originpulse',isNonstandard:'Past',isViable:true,name:'Origin Pulse',pp:10,priority:0,flags:{protect:1,pulse:1,mirror:1},target:'allAdjacentFoes',type:'Water',contestType:'Beautiful'},outrage:{num:200,accuracy:100,basePower:120,category:'Physical',desc:'The user spends two or three turns locked into this move and becomes confused immediately after its move on the last turn of the effect if it is not already. This move targets an opposing Pokemon at random on each turn. If the user is prevented from moving, is asleep at the beginning of a turn, or the attack is not successful against the target on the first turn of the effect or the second turn of a three-turn effect, the effect ends without causing confusion. If this move is called by Sleep Talk and the user is asleep, the move is used for one turn and does not confuse the user.',shortDesc:'Lasts 2-3 turns. Confuses the user afterwards.',id:'outrage',isViable:true,name:'Outrage',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},self:{volatileStatus:'lockedmove'},onAfterMove:function onAfterMove(pokemon){if(pokemon.volatiles['lockedmove']&&pokemon.volatiles['lockedmove'].duration===1){pokemon.removeVolatile('lockedmove');}},secondary:null,target:'randomNormal',type:'Dragon',contestType:'Cool'},overdrive:{num:786,accuracy:100,basePower:80,category:'Special',desc:'No additional effect.',shortDesc:'No additional effect.',id:'overdrive',isViable:true,name:'Overdrive',pp:10,priority:0,flags:{protect:1,mirror:1,sound:1,authentic:1},secondary:null,target:'allAdjacentFoes',type:'Electric'},overheat:{num:315,accuracy:90,basePower:130,category:'Special',desc:"Lowers the user's Special Attack by 2 stages.",shortDesc:"Lowers the user's Sp. Atk by 2.",id:'overheat',isViable:true,name:'Overheat',pp:5,priority:0,flags:{protect:1,mirror:1},self:{boosts:{spa:-2}},secondary:null,target:'normal',type:'Fire',contestType:'Beautiful'},painsplit:{num:220,accuracy:true,basePower:0,category:'Status',desc:"The user and the target's HP become the average of their current HP, rounded down, but not more than the maximum HP of either one.",shortDesc:'Shares HP of user and target equally.',id:'painsplit',isViable:true,name:'Pain Split',pp:20,priority:0,flags:{protect:1,mirror:1,mystery:1},onHit:function onHit(target,pokemon){var targetHP=target.getUndynamaxedHP();var averagehp=Math.floor((targetHP+pokemon.hp)/2)||1;var targetChange=targetHP-averagehp;target.sethp(target.hp-targetChange);this.add('-sethp',target,target.getHealth,'[from] move: Pain Split','[silent]');pokemon.sethp(averagehp);this.add('-sethp',pokemon,pokemon.getHealth,'[from] move: Pain Split');},secondary:null,target:'normal',type:'Normal',zMoveBoost:{def:1},contestType:'Clever'},paleowave:{num:0,accuracy:100,basePower:85,category:'Special',desc:"Has a 20% chance to lower the target's Attack by 1 stage.",shortDesc:"20% chance to lower the target's Attack by 1.",id:'paleowave',isNonstandard:'CAP',isViable:true,name:'Paleo Wave',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:{chance:20,boosts:{atk:-1}},target:'normal',type:'Rock',contestType:'Beautiful'},paraboliccharge:{num:570,accuracy:100,basePower:65,category:'Special',desc:'The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.',shortDesc:'User recovers 50% of the damage dealt.',id:'paraboliccharge',name:'Parabolic Charge',pp:20,priority:0,flags:{protect:1,mirror:1,heal:1},drain:[1,2],secondary:null,target:'allAdjacent',type:'Electric',contestType:'Clever'},partingshot:{num:575,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Attack and Special Attack by 1 stage. If this move is successful, the user switches out even if it is trapped and is replaced immediately by a selected party member. The user does not switch out if the target's Attack and Special Attack stat stages were both unchanged, or if there are no unfainted party members.",shortDesc:"Lowers target's Atk, Sp. Atk by 1. User switches.",id:'partingshot',isViable:true,name:'Parting Shot',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1,sound:1,authentic:1},selfSwitch:true,boosts:{atk:-1,spa:-1},secondary:null,target:'normal',type:'Dark',zMoveEffect:'healreplacement',contestType:'Cool'},payback:{num:371,accuracy:100,basePower:50,basePowerCallback:function basePowerCallback(pokemon,target,move){if(target.newlySwitched||this.queue.willMove(target)){this.debug('Payback NOT boosted');return move.basePower;}this.debug('Payback damage boost');return move.basePower*2;},category:'Physical',desc:'Power doubles if the user moves after the target this turn, including actions taken through Instruct or the Dancer Ability. Switching in does not count as an action.',shortDesc:'Power doubles if the user moves after the target.',id:'payback',name:'Payback',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Dark',contestType:'Tough'},payday:{num:6,accuracy:100,basePower:40,category:'Physical',desc:'No additional effect.',shortDesc:'Scatters coins.',id:'payday',name:'Pay Day',pp:20,priority:0,flags:{protect:1,mirror:1},onHit:function onHit(){this.add('-fieldactivate','move: Pay Day');},secondary:null,target:'normal',type:'Normal',contestType:'Clever'},peck:{num:64,accuracy:100,basePower:35,category:'Physical',shortDesc:'No additional effect.',id:'peck',name:'Peck',pp:35,priority:0,flags:{contact:1,protect:1,mirror:1,distance:1},secondary:null,target:'any',type:'Flying',contestType:'Cool'},perishsong:{num:195,accuracy:true,basePower:0,category:'Status',desc:"Each active Pokemon receives a perish count of 4 if it doesn't already have a perish count. At the end of each turn including the turn used, the perish count of all active Pokemon lowers by 1 and Pokemon faint if the number reaches 0. The perish count is removed from Pokemon that switch out. If a Pokemon uses Baton Pass while it has a perish count, the replacement will gain the perish count and continue to count down.",shortDesc:'All active Pokemon will faint in 3 turns.',id:'perishsong',isViable:true,name:'Perish Song',pp:5,priority:0,flags:{sound:1,distance:1,authentic:1},onHitField:function onHitField(target,source,move){var result=false;var message=false;var _iteratorNormalCompletion66=true;var _didIteratorError66=false;var _iteratorError66=undefined;try{for(var _iterator66=this.getAllActive()[Symbol.iterator](),_step66;!(_iteratorNormalCompletion66=(_step66=_iterator66.next()).done);_iteratorNormalCompletion66=true){var pokemon=_step66.value;if(this.runEvent('Invulnerability',pokemon,source,move)===false){this.add('-miss',source,pokemon);result=true;}else if(this.runEvent('TryHit',pokemon,source,move)===null){result=true;}else if(!pokemon.volatiles['perishsong']){pokemon.addVolatile('perishsong');this.add('-start',pokemon,'perish3','[silent]');result=true;message=true;}}}catch(err){_didIteratorError66=true;_iteratorError66=err;}finally{try{if(!_iteratorNormalCompletion66&&_iterator66.return){_iterator66.return();}}finally{if(_didIteratorError66){throw _iteratorError66;}}}if(!result)return false;if(message)this.add('-fieldactivate','move: Perish Song');},effect:{duration:4,onEnd:function onEnd(target){this.add('-start',target,'perish0');target.faint();},onResidualOrder:20,onResidual:function onResidual(pokemon){var duration=pokemon.volatiles['perishsong'].duration;this.add('-start',pokemon,'perish'+duration);}},secondary:null,target:'all',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Beautiful'},petalblizzard:{num:572,accuracy:100,basePower:90,category:'Physical',desc:'No additional effect.',shortDesc:'No additional effect. Hits adjacent Pokemon.',id:'petalblizzard',isViable:true,name:'Petal Blizzard',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'allAdjacent',type:'Grass',contestType:'Beautiful'},petaldance:{num:80,accuracy:100,basePower:120,category:'Special',desc:'The user spends two or three turns locked into this move and becomes confused immediately after its move on the last turn of the effect if it is not already. This move targets an opposing Pokemon at random on each turn. If the user is prevented from moving, is asleep at the beginning of a turn, or the attack is not successful against the target on the first turn of the effect or the second turn of a three-turn effect, the effect ends without causing confusion. If this move is called by Sleep Talk and the user is asleep, the move is used for one turn and does not confuse the user.',shortDesc:'Lasts 2-3 turns. Confuses the user afterwards.',id:'petaldance',name:'Petal Dance',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,dance:1},self:{volatileStatus:'lockedmove'},onAfterMove:function onAfterMove(pokemon){if(pokemon.volatiles['lockedmove']&&pokemon.volatiles['lockedmove'].duration===1){pokemon.removeVolatile('lockedmove');}},secondary:null,target:'randomNormal',type:'Grass',contestType:'Beautiful'},phantomforce:{num:566,accuracy:100,basePower:90,category:'Physical',desc:"If this move is successful, it breaks through the target's Baneful Bunker, Detect, King's Shield, Protect, or Spiky Shield for this turn, allowing other Pokemon to attack the target normally. If the target's side is protected by Crafty Shield, Mat Block, Quick Guard, or Wide Guard, that protection is also broken for this turn and other Pokemon may attack the target's side normally. This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks. If the user is holding a Power Herb, the move completes in one turn.",shortDesc:'Disappears turn 1. Hits turn 2. Breaks protection.',id:'phantomforce',name:'Phantom Force',pp:10,priority:0,flags:{contact:1,charge:1,mirror:1},breaksProtect:true,onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}this.add('-prepare',attacker,move.name,defender);if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},effect:{duration:2,onInvulnerability:false},secondary:null,target:'normal',type:'Ghost',contestType:'Cool'},photongeyser:{num:722,accuracy:100,basePower:100,category:'Special',desc:"This move becomes a physical attack if the user's Attack is greater than its Special Attack, including stat stage changes. This move and its effects ignore the Abilities of other Pokemon.",shortDesc:"Physical if user's Atk > Sp. Atk. Ignores Abilities.",id:'photongeyser',isViable:true,name:'Photon Geyser',pp:5,priority:0,flags:{protect:1,mirror:1},onModifyMove:function onModifyMove(move,pokemon){if(pokemon.getStat('atk',false,true)>pokemon.getStat('spa',false,true))move.category='Physical';},ignoreAbility:true,secondary:null,target:'normal',type:'Psychic',contestType:'Cool'},pikapapow:{num:732,accuracy:true,basePower:0,basePowerCallback:function basePowerCallback(pokemon){return Math.floor(pokemon.happiness*10/25)||1;},category:'Special',desc:"Power is equal to the greater of (user's Happiness * 2/5), rounded down, or 1.",shortDesc:"Max happiness: 102 power. Can't miss.",id:'pikapapow',isNonstandard:'LGPE',isViable:true,name:'Pika Papow',pp:20,priority:0,flags:{protect:1},secondary:null,target:'normal',type:'Electric',contestType:'Cute'},pinmissile:{num:42,accuracy:95,basePower:25,category:'Physical',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.",shortDesc:'Hits 2-5 times in one turn.',id:'pinmissile',name:'Pin Missile',pp:20,priority:0,flags:{protect:1,mirror:1},multihit:[2,5],secondary:null,target:'normal',type:'Bug',zMovePower:140,gmaxPower:130,contestType:'Cool'},plasmafists:{num:721,accuracy:100,basePower:100,category:'Physical',desc:'If this move is successful, causes Normal-type moves to become Electric type this turn.',shortDesc:'Normal moves become Electric type this turn.',id:'plasmafists',isViable:true,name:'Plasma Fists',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},pseudoWeather:'iondeluge',secondary:null,target:'normal',type:'Electric',contestType:'Cool'},playnice:{num:589,accuracy:true,basePower:0,category:'Status',desc:"Lowers the target's Attack by 1 stage.",shortDesc:"Lowers the target's Attack by 1.",id:'playnice',name:'Play Nice',pp:20,priority:0,flags:{reflectable:1,mirror:1,authentic:1},boosts:{atk:-1},secondary:null,target:'normal',type:'Normal',zMoveBoost:{def:1},contestType:'Cute'},playrough:{num:583,accuracy:90,basePower:90,category:'Physical',desc:"Has a 10% chance to lower the target's Attack by 1 stage.",shortDesc:"10% chance to lower the target's Attack by 1.",id:'playrough',isViable:true,name:'Play Rough',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:10,boosts:{atk:-1}},target:'normal',type:'Fairy',contestType:'Cute'},pluck:{num:365,accuracy:100,basePower:60,category:'Physical',desc:"If this move is successful and the user has not fainted, it steals the target's held Berry if it is holding one and eats it immediately, gaining its effects even if the user's item is being ignored. Items lost to this move cannot be regained with Recycle or the Harvest Ability.",shortDesc:"User steals and eats the target's Berry.",id:'pluck',name:'Pluck',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1,distance:1},onHit:function onHit(target,source){var item=target.getItem();if(source.hp&&item.isBerry&&target.takeItem(source)){this.add('-enditem',target,item.name,'[from] stealeat','[move] Pluck','[of] '+source);if(this.singleEvent('Eat',item,null,source,null,null)){this.runEvent('EatItem',source,null,null,item);if(item.id==='leppaberry')target.staleness='external';}if(item.onEat)source.ateBerry=true;}},secondary:null,target:'any',type:'Flying',contestType:'Cute'},poisonfang:{num:305,accuracy:100,basePower:50,category:'Physical',desc:'Has a 50% chance to badly poison the target.',shortDesc:'50% chance to badly poison the target.',id:'poisonfang',name:'Poison Fang',pp:15,priority:0,flags:{bite:1,contact:1,protect:1,mirror:1},secondary:{chance:50,status:'tox'},target:'normal',type:'Poison',contestType:'Clever'},poisongas:{num:139,accuracy:90,basePower:0,category:'Status',desc:'Poisons the target.',shortDesc:'Poisons the foe(s).',id:'poisongas',name:'Poison Gas',pp:40,priority:0,flags:{protect:1,reflectable:1,mirror:1},status:'psn',secondary:null,target:'allAdjacentFoes',type:'Poison',zMoveBoost:{def:1},contestType:'Clever'},poisonjab:{num:398,accuracy:100,basePower:80,category:'Physical',desc:'Has a 30% chance to poison the target.',shortDesc:'30% chance to poison the target.',id:'poisonjab',isViable:true,name:'Poison Jab',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:30,status:'psn'},target:'normal',type:'Poison',contestType:'Tough'},poisonpowder:{num:77,accuracy:75,basePower:0,category:'Status',desc:'Poisons the target.',shortDesc:'Poisons the target.',id:'poisonpowder',name:'Poison Powder',pp:35,priority:0,flags:{powder:1,protect:1,reflectable:1,mirror:1},status:'psn',secondary:null,target:'normal',type:'Poison',zMoveBoost:{def:1},contestType:'Clever'},poisonsting:{num:40,accuracy:100,basePower:15,category:'Physical',desc:'Has a 30% chance to poison the target.',shortDesc:'30% chance to poison the target.',id:'poisonsting',name:'Poison Sting',pp:35,priority:0,flags:{protect:1,mirror:1},secondary:{chance:30,status:'psn'},target:'normal',type:'Poison',contestType:'Clever'},poisontail:{num:342,accuracy:100,basePower:50,category:'Physical',desc:'Has a 10% chance to poison the target and a higher chance for a critical hit.',shortDesc:'High critical hit ratio. 10% chance to poison.',id:'poisontail',name:'Poison Tail',pp:25,priority:0,flags:{contact:1,protect:1,mirror:1},critRatio:2,secondary:{chance:10,status:'psn'},target:'normal',type:'Poison',contestType:'Clever'},pollenpuff:{num:676,accuracy:100,basePower:90,category:'Special',desc:'If the target is an ally, this move restores 1/2 of its maximum HP, rounded down, instead of dealing damage.',shortDesc:'If the target is an ally, heals 50% of its max HP.',id:'pollenpuff',name:'Pollen Puff',pp:15,priority:0,flags:{bullet:1,protect:1,mirror:1},onTryHit:function onTryHit(target,source,move){if(source.side===target.side){move.basePower=0;}},onHit:function onHit(target,source){if(source.side===target.side){this.heal(Math.floor(target.baseMaxhp*0.5));}},secondary:null,target:'normal',type:'Bug',contestType:'Cute'},pound:{num:1,accuracy:100,basePower:40,category:'Physical',shortDesc:'No additional effect.',id:'pound',name:'Pound',pp:35,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',contestType:'Tough'},powder:{num:600,accuracy:100,basePower:0,category:'Status',desc:'If the target uses a Fire-type move this turn, it is prevented from executing and the target loses 1/4 of its maximum HP, rounded half up. This effect does not happen if the Fire-type move is prevented by Primordial Sea.',shortDesc:'If using a Fire move, target loses 1/4 max HP.',id:'powder',isNonstandard:'Past',name:'Powder',pp:20,priority:1,flags:{powder:1,protect:1,reflectable:1,mirror:1,authentic:1},volatileStatus:'powder',effect:{duration:1,onStart:function onStart(target){this.add('-singleturn',target,'Powder');},onTryMovePriority:-1,onTryMove:function onTryMove(pokemon,target,move){if(move.type==='Fire'){this.add('-activate',pokemon,'move: Powder');this.damage(this.dex.clampIntRange(Math.round(pokemon.maxhp/4),1));return false;}}},secondary:null,target:'normal',type:'Bug',zMoveBoost:{spd:2},contestType:'Clever'},powdersnow:{num:181,accuracy:100,basePower:40,category:'Special',desc:'Has a 10% chance to freeze the target.',shortDesc:'10% chance to freeze the foe(s).',id:'powdersnow',name:'Powder Snow',pp:25,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,status:'frz'},target:'allAdjacentFoes',type:'Ice',contestType:'Beautiful'},powergem:{num:408,accuracy:100,basePower:80,category:'Special',shortDesc:'No additional effect.',id:'powergem',isViable:true,name:'Power Gem',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Rock',contestType:'Beautiful'},powersplit:{num:471,accuracy:true,basePower:0,category:'Status',desc:"The user and the target have their Attack and Special Attack stats set to be equal to the average of the user and the target's Attack and Special Attack stats, respectively, rounded down. Stat stage changes are unaffected.",shortDesc:'Averages Attack and Sp. Atk stats with target.',id:'powersplit',name:'Power Split',pp:10,priority:0,flags:{protect:1,mystery:1},onHit:function onHit(target,source){var newatk=Math.floor((target.storedStats.atk+source.storedStats.atk)/2);target.storedStats.atk=newatk;source.storedStats.atk=newatk;var newspa=Math.floor((target.storedStats.spa+source.storedStats.spa)/2);target.storedStats.spa=newspa;source.storedStats.spa=newspa;this.add('-activate',source,'move: Power Split','[of] '+target);},secondary:null,target:'normal',type:'Psychic',zMoveBoost:{spe:1},contestType:'Clever'},powerswap:{num:384,accuracy:true,basePower:0,category:'Status',desc:'The user swaps its Attack and Special Attack stat stage changes with the target.',shortDesc:'Swaps Attack and Sp. Atk stat stages with target.',id:'powerswap',name:'Power Swap',pp:10,priority:0,flags:{protect:1,mirror:1,authentic:1,mystery:1},onHit:function onHit(target,source){var targetBoosts={};var sourceBoosts={};var _arr2=['atk','spa'];for(var _i2=0;_i2<_arr2.length;_i2++){var stat=_arr2[_i2];// @ts-ignore
targetBoosts[stat]=target.boosts[stat];// @ts-ignore
sourceBoosts[stat]=source.boosts[stat];}source.setBoost(targetBoosts);target.setBoost(sourceBoosts);this.add('-swapboost',source,target,'atk, spa','[from] move: Power Swap');},secondary:null,target:'normal',type:'Psychic',zMoveBoost:{spe:1},contestType:'Clever'},powertrick:{num:379,accuracy:true,basePower:0,category:'Status',desc:'The user swaps its Attack and Defense stats, and stat stage changes remain on their respective stats. This move can be used again to swap the stats back. If the user uses Baton Pass, the replacement will have its Attack and Defense stats swapped if the effect is active. If the user has its stats recalculated by changing forme while its stats are swapped, this effect is ignored but is still active for the purposes of Baton Pass.',shortDesc:"Switches user's Attack and Defense stats.",id:'powertrick',name:'Power Trick',pp:10,priority:0,flags:{snatch:1},volatileStatus:'powertrick',effect:{onStart:function onStart(pokemon){this.add('-start',pokemon,'Power Trick');var newatk=pokemon.storedStats.def;var newdef=pokemon.storedStats.atk;pokemon.storedStats.atk=newatk;pokemon.storedStats.def=newdef;},onCopy:function onCopy(pokemon){var newatk=pokemon.storedStats.def;var newdef=pokemon.storedStats.atk;pokemon.storedStats.atk=newatk;pokemon.storedStats.def=newdef;},onEnd:function onEnd(pokemon){this.add('-end',pokemon,'Power Trick');var newatk=pokemon.storedStats.def;var newdef=pokemon.storedStats.atk;pokemon.storedStats.atk=newatk;pokemon.storedStats.def=newdef;},onRestart:function onRestart(pokemon){pokemon.removeVolatile('Power Trick');}},secondary:null,target:'self',type:'Psychic',zMoveBoost:{atk:1},contestType:'Clever'},powertrip:{num:681,accuracy:100,basePower:20,basePowerCallback:function basePowerCallback(pokemon,target,move){return move.basePower+20*pokemon.positiveBoosts();},category:'Physical',desc:"Power is equal to 20+(X*20), where X is the user's total stat stage changes that are greater than 0.",shortDesc:" + 20 power for each of the user's stat boosts.",id:'powertrip',name:'Power Trip',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Dark',zMovePower:160,gmaxPower:130,contestType:'Clever'},poweruppunch:{num:612,accuracy:100,basePower:40,category:'Physical',desc:"Has a 100% chance to raise the user's Attack by 1 stage.",shortDesc:"100% chance to raise the user's Attack by 1.",id:'poweruppunch',isViable:true,name:'Power-Up Punch',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},secondary:{chance:100,self:{boosts:{atk:1}}},target:'normal',type:'Fighting',contestType:'Tough'},powerwhip:{num:438,accuracy:85,basePower:120,category:'Physical',shortDesc:'No additional effect.',id:'powerwhip',isViable:true,name:'Power Whip',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Grass',contestType:'Tough'},precipiceblades:{num:619,accuracy:85,basePower:120,category:'Physical',desc:'No additional effect.',shortDesc:'No additional effect. Hits adjacent foes.',id:'precipiceblades',isNonstandard:'Past',isViable:true,name:'Precipice Blades',pp:10,priority:0,flags:{protect:1,mirror:1,nonsky:1},target:'allAdjacentFoes',type:'Ground',contestType:'Cool'},present:{num:217,accuracy:90,basePower:0,category:'Physical',desc:'If this move is successful, it deals damage or heals the target. 40% chance for 40 power, 30% chance for 80 power, 10% chance for 120 power, and 20% chance to heal the target by 1/4 of its maximum HP, rounded down.',shortDesc:'40, 80, 120 power, or heals target 1/4 max HP.',id:'present',name:'Present',pp:15,priority:0,flags:{protect:1,mirror:1},onModifyMove:function onModifyMove(move,pokemon,target){var rand=this.random(10);if(rand<2){move.heal=[1,4];}else if(rand<6){move.basePower=40;}else if(rand<9){move.basePower=80;}else{move.basePower=120;}},secondary:null,target:'normal',type:'Normal',contestType:'Cute'},prismaticlaser:{num:711,accuracy:100,basePower:160,category:'Special',desc:'If this move is successful, the user must recharge on the following turn and cannot select a move.',shortDesc:'User cannot move next turn.',id:'prismaticlaser',name:'Prismatic Laser',pp:10,priority:0,flags:{recharge:1,protect:1,mirror:1},self:{volatileStatus:'mustrecharge'},secondary:null,target:'normal',type:'Psychic',contestType:'Cool'},protect:{num:182,accuracy:true,basePower:0,category:'Status',desc:"The user is protected from most attacks made by other Pokemon during this turn. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Detect, Endure, King's Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn.",shortDesc:'Prevents moves from affecting the user this turn.',id:'protect',isViable:true,name:'Protect',pp:10,priority:4,flags:{},stallingMove:true,volatileStatus:'protect',onPrepareHit:function onPrepareHit(pokemon){return!!this.queue.willAct()&&this.runEvent('StallMove',pokemon);},onHit:function onHit(pokemon){pokemon.addVolatile('stall');},effect:{duration:1,onStart:function onStart(target){this.add('-singleturn',target,'Protect');},onTryHitPriority:3,onTryHit:function onTryHit(target,source,move){if(!move.flags['protect']){if(move.isZ||move.isMax)target.getMoveHitData(move).zBrokeProtect=true;return;}this.add('-activate',target,'move: Protect');var lockedmove=source.getVolatile('lockedmove');if(lockedmove){// Outrage counter is reset
if(source.volatiles['lockedmove'].duration===2){delete source.volatiles['lockedmove'];}}return this.NOT_FAIL;}},secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Cute'},psybeam:{num:60,accuracy:100,basePower:65,category:'Special',desc:'Has a 10% chance to confuse the target.',shortDesc:'10% chance to confuse the target.',id:'psybeam',name:'Psybeam',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,volatileStatus:'confusion'},target:'normal',type:'Psychic',contestType:'Beautiful'},psychup:{num:244,accuracy:true,basePower:0,category:'Status',desc:"The user copies all of the target's current stat stage changes.",shortDesc:"Copies the target's current stat stages.",id:'psychup',name:'Psych Up',pp:10,priority:0,flags:{authentic:1,mystery:1},onHit:function onHit(target,source){for(var i in target.boosts){// @ts-ignore
source.boosts[i]=target.boosts[i];}var volatilesToCopy=['focusenergy','laserfocus'];var _iteratorNormalCompletion67=true;var _didIteratorError67=false;var _iteratorError67=undefined;try{for(var _iterator67=volatilesToCopy[Symbol.iterator](),_step67;!(_iteratorNormalCompletion67=(_step67=_iterator67.next()).done);_iteratorNormalCompletion67=true){var volatile=_step67.value;if(target.volatiles[volatile]){source.addVolatile(volatile);}else{source.removeVolatile(volatile);}}}catch(err){_didIteratorError67=true;_iteratorError67=err;}finally{try{if(!_iteratorNormalCompletion67&&_iterator67.return){_iterator67.return();}}finally{if(_didIteratorError67){throw _iteratorError67;}}}this.add('-copyboost',source,target,'[from] move: Psych Up');},secondary:null,target:'normal',type:'Normal',zMoveEffect:'heal',contestType:'Clever'},psychic:{num:94,accuracy:100,basePower:90,category:'Special',desc:"Has a 10% chance to lower the target's Special Defense by 1 stage.",shortDesc:"10% chance to lower the target's Sp. Def by 1.",id:'psychic',isViable:true,name:'Psychic',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,boosts:{spd:-1}},target:'normal',type:'Psychic',contestType:'Clever'},psychicfangs:{num:706,accuracy:100,basePower:85,category:'Physical',desc:"If this attack does not miss, the effects of Reflect, Light Screen, and Aurora Veil end for the target's side of the field before damage is calculated.",shortDesc:'Destroys screens, unless the target is immune.',id:'psychicfangs',isViable:true,name:'Psychic Fangs',pp:10,priority:0,flags:{bite:1,contact:1,protect:1,mirror:1},onTryHit:function onTryHit(pokemon){// will shatter screens through sub, before you hit
if(pokemon.runImmunity('Psychic')){pokemon.side.removeSideCondition('reflect');pokemon.side.removeSideCondition('lightscreen');pokemon.side.removeSideCondition('auroraveil');}},secondary:null,target:'normal',type:'Psychic',contestType:'Clever'},psychicterrain:{num:678,accuracy:true,basePower:0,category:'Status',desc:"For 5 turns, the terrain becomes Psychic Terrain. During the effect, the power of Psychic-type attacks made by grounded Pokemon is multiplied by 1.3 and grounded Pokemon cannot be hit by moves with priority greater than 0, unless the target is an ally. Camouflage transforms the user into a Psychic type, Nature Power becomes Psychic, and Secret Power has a 30% chance to lower the target's Speed by 1 stage. Fails if the current terrain is Psychic Terrain.",shortDesc:'5 turns. Grounded: +Psychic power, priority-safe.',id:'psychicterrain',name:'Psychic Terrain',pp:10,priority:0,flags:{nonsky:1},terrain:'psychicterrain',effect:{duration:5,durationCallback:function durationCallback(source,effect){if(source&&source.hasItem('terrainextender')){return 8;}return 5;},onTryHitPriority:4,onTryHit:function onTryHit(target,source,effect){if(effect&&(effect.priority<=0.1||effect.target==='self')){return;}if(target.isSemiInvulnerable()||target.side===source.side)return;if(!target.isGrounded()){var baseMove=this.dex.getMove(effect.id);if(baseMove.priority>0){this.hint("Psychic Terrain doesn't affect Pokémon immune to Ground.");}return;}this.add('-activate',target,'move: Psychic Terrain');return null;},onBasePower:function onBasePower(basePower,attacker,defender,move){if(move.type==='Psychic'&&attacker.isGrounded()&&!attacker.isSemiInvulnerable()){this.debug('psychic terrain boost');return this.chainModify([0x14cd,0x1000]);}},onStart:function onStart(battle,source,effect){if(effect&&effect.effectType==='Ability'){this.add('-fieldstart','move: Psychic Terrain','[from] ability: '+effect,'[of] '+source);}else{this.add('-fieldstart','move: Psychic Terrain');}},onResidualOrder:21,onResidualSubOrder:2,onEnd:function onEnd(){this.add('-fieldend','move: Psychic Terrain');}},secondary:null,target:'all',type:'Psychic',zMoveBoost:{spa:1},contestType:'Clever'},psychoboost:{num:354,accuracy:90,basePower:140,category:'Special',desc:"Lowers the user's Special Attack by 2 stages.",shortDesc:"Lowers the user's Sp. Atk by 2.",id:'psychoboost',isNonstandard:'Past',name:'Psycho Boost',pp:5,priority:0,flags:{protect:1,mirror:1},self:{boosts:{spa:-2}},secondary:null,target:'normal',type:'Psychic',contestType:'Clever'},psychocut:{num:427,accuracy:100,basePower:70,category:'Physical',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'psychocut',isViable:true,name:'Psycho Cut',pp:20,priority:0,flags:{protect:1,mirror:1},critRatio:2,secondary:null,target:'normal',type:'Psychic',contestType:'Cool'},psychoshift:{num:375,accuracy:100,basePower:0,category:'Status',desc:"The user's major status condition is transferred to the target, and the user is then cured. Fails if the user has no major status condition or if the target already has one.",shortDesc:"Transfers the user's status ailment to the target.",id:'psychoshift',name:'Psycho Shift',pp:10,priority:0,flags:{protect:1,mirror:1},onPrepareHit:function onPrepareHit(target,source,move){if(!source.status)return false;move.status=source.status;},self:{onHit:function onHit(pokemon){pokemon.cureStatus();}},secondary:null,target:'normal',type:'Psychic',zMoveBoost:{spa:2},contestType:'Clever'},psyshock:{num:473,accuracy:100,basePower:80,category:'Special',defensiveCategory:'Physical',desc:'Deals damage to the target based on its Defense instead of Special Defense.',shortDesc:'Damages target based on Defense, not Sp. Def.',id:'psyshock',isViable:true,name:'Psyshock',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Psychic',contestType:'Beautiful'},psystrike:{num:540,accuracy:100,basePower:100,category:'Special',defensiveCategory:'Physical',desc:'Deals damage to the target based on its Defense instead of Special Defense.',shortDesc:'Damages target based on Defense, not Sp. Def.',id:'psystrike',isViable:true,name:'Psystrike',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Psychic',contestType:'Cool'},psywave:{num:149,accuracy:100,basePower:0,damageCallback:function damageCallback(pokemon){return this.random(50,151)*pokemon.level/100;},category:'Special',desc:"Deals damage to the target equal to (user's level) * (X + 50) / 100, where X is a random number from 0 to 100, rounded down, but not less than 1 HP.",shortDesc:"Random damage equal to 0.5x-1.5x user's level.",id:'psywave',isNonstandard:'Past',name:'Psywave',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Psychic',contestType:'Clever'},pulverizingpancake:{num:701,accuracy:true,basePower:210,category:'Physical',shortDesc:'No additional effect.',id:'pulverizingpancake',isNonstandard:'Past',isViable:true,name:'Pulverizing Pancake',pp:1,priority:0,flags:{contact:1},isZ:'snorliumz',secondary:null,target:'normal',type:'Normal',contestType:'Cool'},punishment:{num:386,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon,target){var power=60+20*target.positiveBoosts();if(power>200)power=200;return power;},category:'Physical',desc:"Power is equal to 60+(X*20), where X is the target's total stat stage changes that are greater than 0, but not more than 200 power.",shortDesc:"60 power +20 for each of the target's stat boosts.",id:'punishment',isNonstandard:'Past',name:'Punishment',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Dark',zMovePower:160,gmaxPower:130,contestType:'Cool'},purify:{num:685,accuracy:true,basePower:0,category:'Status',desc:'The target is cured if it has a major status condition. If the target was cured, the user restores 1/2 of its maximum HP, rounded half up.',shortDesc:"Cures target's status; heals user 1/2 max HP if so.",id:'purify',name:'Purify',pp:20,priority:0,flags:{protect:1,reflectable:1,heal:1},onHit:function onHit(target,source){if(!target.cureStatus())return false;this.heal(Math.ceil(source.maxhp*0.5),source);},secondary:null,target:'normal',type:'Poison',zMoveBoost:{atk:1,def:1,spa:1,spd:1,spe:1},contestType:'Beautiful'},pursuit:{num:228,accuracy:100,basePower:40,basePowerCallback:function basePowerCallback(pokemon,target,move){// You can't get here unless the pursuit succeeds
if(target.beingCalledBack){this.debug('Pursuit damage boost');return move.basePower*2;}return move.basePower;},category:'Physical',desc:"If an opposing Pokemon switches out this turn, this move hits that Pokemon before it leaves the field, even if it was not the original target. If the user moves after an opponent using Parting Shot, U-turn, or Volt Switch, but not Baton Pass, it will hit that opponent before it leaves the field. Power doubles and no accuracy check is done if the user hits an opponent switching out, and the user's turn is over; if an opponent faints from this, the replacement Pokemon does not become active until the end of the turn.",shortDesc:'Power doubles if a foe is switching out.',id:'pursuit',isNonstandard:'Past',isViable:true,name:'Pursuit',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},beforeTurnCallback:function beforeTurnCallback(pokemon){var _iteratorNormalCompletion68=true;var _didIteratorError68=false;var _iteratorError68=undefined;try{for(var _iterator68=this.sides[Symbol.iterator](),_step68;!(_iteratorNormalCompletion68=(_step68=_iterator68.next()).done);_iteratorNormalCompletion68=true){var side=_step68.value;if(side===pokemon.side)continue;side.addSideCondition('pursuit',pokemon);var data=side.getSideConditionData('pursuit');if(!data.sources){data.sources=[];}data.sources.push(pokemon);}}catch(err){_didIteratorError68=true;_iteratorError68=err;}finally{try{if(!_iteratorNormalCompletion68&&_iterator68.return){_iterator68.return();}}finally{if(_didIteratorError68){throw _iteratorError68;}}}},onModifyMove:function onModifyMove(move,source,target){if(target&&target.beingCalledBack)move.accuracy=true;},onTryHit:function onTryHit(target,pokemon){target.side.removeSideCondition('pursuit');},effect:{duration:1,onBeforeSwitchOut:function onBeforeSwitchOut(pokemon){this.debug('Pursuit start');var alreadyAdded=false;var _iteratorNormalCompletion69=true;var _didIteratorError69=false;var _iteratorError69=undefined;try{for(var _iterator69=this.effectData.sources[Symbol.iterator](),_step69;!(_iteratorNormalCompletion69=(_step69=_iterator69.next()).done);_iteratorNormalCompletion69=true){var source=_step69.value;if(!this.queue.cancelMove(source)||!source.hp)continue;if(!alreadyAdded){this.add('-activate',pokemon,'move: Pursuit');alreadyAdded=true;}// Run through each action in queue to check if the Pursuit user is supposed to Mega Evolve this turn.
// If it is, then Mega Evolve before moving.
if(source.canMegaEvo||source.canUltraBurst){var _iteratorNormalCompletion70=true;var _didIteratorError70=false;var _iteratorError70=undefined;try{for(var _iterator70=this.queue.entries()[Symbol.iterator](),_step70;!(_iteratorNormalCompletion70=(_step70=_iterator70.next()).done);_iteratorNormalCompletion70=true){var _ref2=_step70.value;var _ref3=(0,_slicedToArray3.default)(_ref2,2);var actionIndex=_ref3[0];var action=_ref3[1];if(action.pokemon===source&&action.choice==='megaEvo'){this.runMegaEvo(source);this.queue.splice(actionIndex,1);break;}}}catch(err){_didIteratorError70=true;_iteratorError70=err;}finally{try{if(!_iteratorNormalCompletion70&&_iterator70.return){_iterator70.return();}}finally{if(_didIteratorError70){throw _iteratorError70;}}}}this.runMove('pursuit',source,this.getTargetLoc(pokemon,source));}}catch(err){_didIteratorError69=true;_iteratorError69=err;}finally{try{if(!_iteratorNormalCompletion69&&_iterator69.return){_iterator69.return();}}finally{if(_didIteratorError69){throw _iteratorError69;}}}}},secondary:null,target:'normal',type:'Dark',contestType:'Clever'},pyroball:{num:780,accuracy:90,basePower:120,category:'Physical',desc:'Has a 10% chance to burn the target.',shortDesc:'10% chance to burn the target.',id:'pyroball',isViable:true,name:'Pyro Ball',pp:5,priority:0,flags:{protect:1,mirror:1,defrost:1,bullet:1},secondary:{chance:10,status:'brn'},target:'normal',type:'Fire'},quash:{num:511,accuracy:100,basePower:0,category:'Status',desc:'Causes the target to take its turn after all other Pokemon this turn, no matter the priority of its selected move. Fails if the target already moved this turn.',shortDesc:'Forces the target to move last this turn.',id:'quash',name:'Quash',pp:15,priority:0,flags:{protect:1,mirror:1},onHit:function onHit(target){if(target.side.active.length<2)return false;// fails in singles
var action=this.queue.willMove(target);if(!action)return false;action.order=201;this.add('-activate',target,'move: Quash');},secondary:null,target:'normal',type:'Dark',zMoveBoost:{spe:1},contestType:'Clever'},quickattack:{num:98,accuracy:100,basePower:40,category:'Physical',desc:'No additional effect.',shortDesc:'Usually goes first.',id:'quickattack',isViable:true,name:'Quick Attack',pp:30,priority:1,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',contestType:'Cool'},quickguard:{num:501,accuracy:true,basePower:0,category:'Status',desc:"The user and its party members are protected from attacks with original or altered priority greater than 0 made by other Pokemon, including allies, during this turn. This move modifies the same 1/X chance of being successful used by other protection moves, where X starts at 1 and triples each time this move is successfully used, but does not use the chance to check for failure. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Detect, Endure, King's Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn or if this move is already in effect for the user's side.",shortDesc:'Protects allies from priority attacks this turn.',id:'quickguard',name:'Quick Guard',pp:15,priority:3,flags:{snatch:1},sideCondition:'quickguard',onTryHitSide:function onTryHitSide(side,source){return!!this.queue.willAct();},onHitSide:function onHitSide(side,source){source.addVolatile('stall');},effect:{duration:1,onStart:function onStart(target,source){this.add('-singleturn',source,'Quick Guard');},onTryHitPriority:4,onTryHit:function onTryHit(target,source,move){// Quick Guard blocks moves with positive priority, even those given increased priority by Prankster or Gale Wings.
// (e.g. it blocks 0 priority moves boosted by Prankster or Gale Wings; Quick Claw/Custap Berry do not count)
if(move.priority<=0.1)return;if(!move.flags['protect']){if(move.isZ||move.isMax)target.getMoveHitData(move).zBrokeProtect=true;return;}this.add('-activate',target,'move: Quick Guard');var lockedmove=source.getVolatile('lockedmove');if(lockedmove){// Outrage counter is reset
if(source.volatiles['lockedmove'].duration===2){delete source.volatiles['lockedmove'];}}return this.NOT_FAIL;}},secondary:null,target:'allySide',type:'Fighting',zMoveBoost:{def:1},contestType:'Cool'},quiverdance:{num:483,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Special Attack, Special Defense, and Speed by 1 stage.",shortDesc:"Raises the user's Sp. Atk, Sp. Def, Speed by 1.",id:'quiverdance',isViable:true,name:'Quiver Dance',pp:20,priority:0,flags:{snatch:1,dance:1},boosts:{spa:1,spd:1,spe:1},secondary:null,target:'self',type:'Bug',zMoveEffect:'clearnegativeboost',contestType:'Beautiful'},rage:{num:99,accuracy:100,basePower:20,category:'Physical',desc:"Once this move is successfully used, the user's Attack is raised by 1 stage every time it is hit by another Pokemon's attack as long as this move is chosen for use.",shortDesc:"Raises the user's Attack by 1 if hit during use.",id:'rage',isNonstandard:'Past',name:'Rage',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},self:{volatileStatus:'rage'},effect:{onStart:function onStart(pokemon){this.add('-singlemove',pokemon,'Rage');},onHit:function onHit(target,source,move){if(target!==source&&move.category!=='Status'){this.boost({atk:1});}},onBeforeMovePriority:100,onBeforeMove:function onBeforeMove(pokemon){this.debug('removing Rage before attack');pokemon.removeVolatile('rage');}},secondary:null,target:'normal',type:'Normal',contestType:'Tough'},ragepowder:{num:476,accuracy:true,basePower:0,category:'Status',desc:'Until the end of the turn, all single-target attacks from the opposing side are redirected to the user. Such attacks are redirected to the user before they can be reflected by Magic Coat or the Magic Bounce Ability, or drawn in by the Lightning Rod or Storm Drain Abilities. Fails if it is not a Double Battle or Battle Royal. This effect is ignored while the user is under the effect of Sky Drop.',shortDesc:"The foes' moves target the user on the turn used.",id:'ragepowder',name:'Rage Powder',pp:20,priority:2,flags:{powder:1},volatileStatus:'ragepowder',onTryHit:function onTryHit(target){if(target.side.active.length<2)return false;},effect:{duration:1,onStart:function onStart(pokemon){this.add('-singleturn',pokemon,'move: Rage Powder');},onFoeRedirectTargetPriority:1,onFoeRedirectTarget:function onFoeRedirectTarget(target,source,source2,move){if(!this.effectData.target.isSkyDropped()&&source.runStatusImmunity('powder')&&this.validTarget(this.effectData.target,source,move.target)){if(move.smartTarget)move.smartTarget=false;this.debug('Rage Powder redirected target of move');return this.effectData.target;}}},secondary:null,target:'self',type:'Bug',zMoveEffect:'clearnegativeboost',contestType:'Clever'},raindance:{num:240,accuracy:true,basePower:0,category:'Status',desc:'For 5 turns, the weather becomes Rain Dance. The damage of Water-type attacks is multiplied by 1.5 and the damage of Fire-type attacks is multiplied by 0.5 during the effect. Lasts for 8 turns if the user is holding Damp Rock. Fails if the current weather is Rain Dance.',shortDesc:'For 5 turns, heavy rain powers Water moves.',id:'raindance',name:'Rain Dance',pp:5,priority:0,flags:{},weather:'RainDance',secondary:null,target:'all',type:'Water',zMoveBoost:{spe:1},contestType:'Beautiful'},rapidspin:{num:229,accuracy:100,basePower:50,category:'Physical',desc:"If this move is successful and the user has not fainted, the effects of Leech Seed and binding moves end for the user, and all hazards are removed from the user's side of the field. Has a 100% chance to raise the user's Speed by 1 stage.",shortDesc:'Free user from hazards/bind/Leech Seed; +1 Spe.',id:'rapidspin',isViable:true,name:'Rapid Spin',pp:40,priority:0,flags:{contact:1,protect:1,mirror:1},onAfterHit:function onAfterHit(target,pokemon){if(pokemon.hp&&pokemon.removeVolatile('leechseed')){this.add('-end',pokemon,'Leech Seed','[from] move: Rapid Spin','[of] '+pokemon);}var sideConditions=['spikes','toxicspikes','stealthrock','stickyweb','gmaxsteelsurge'];var _iteratorNormalCompletion71=true;var _didIteratorError71=false;var _iteratorError71=undefined;try{for(var _iterator71=sideConditions[Symbol.iterator](),_step71;!(_iteratorNormalCompletion71=(_step71=_iterator71.next()).done);_iteratorNormalCompletion71=true){var condition=_step71.value;if(pokemon.hp&&pokemon.side.removeSideCondition(condition)){this.add('-sideend',pokemon.side,this.dex.getEffect(condition).name,'[from] move: Rapid Spin','[of] '+pokemon);}}}catch(err){_didIteratorError71=true;_iteratorError71=err;}finally{try{if(!_iteratorNormalCompletion71&&_iterator71.return){_iterator71.return();}}finally{if(_didIteratorError71){throw _iteratorError71;}}}if(pokemon.hp&&pokemon.volatiles['partiallytrapped']){pokemon.removeVolatile('partiallytrapped');}},onAfterSubDamage:function onAfterSubDamage(damage,target,pokemon){if(pokemon.hp&&pokemon.removeVolatile('leechseed')){this.add('-end',pokemon,'Leech Seed','[from] move: Rapid Spin','[of] '+pokemon);}var sideConditions=['spikes','toxicspikes','stealthrock','stickyweb','gmaxsteelsurge'];var _iteratorNormalCompletion72=true;var _didIteratorError72=false;var _iteratorError72=undefined;try{for(var _iterator72=sideConditions[Symbol.iterator](),_step72;!(_iteratorNormalCompletion72=(_step72=_iterator72.next()).done);_iteratorNormalCompletion72=true){var condition=_step72.value;if(pokemon.hp&&pokemon.side.removeSideCondition(condition)){this.add('-sideend',pokemon.side,this.dex.getEffect(condition).name,'[from] move: Rapid Spin','[of] '+pokemon);}}}catch(err){_didIteratorError72=true;_iteratorError72=err;}finally{try{if(!_iteratorNormalCompletion72&&_iterator72.return){_iterator72.return();}}finally{if(_didIteratorError72){throw _iteratorError72;}}}if(pokemon.hp&&pokemon.volatiles['partiallytrapped']){pokemon.removeVolatile('partiallytrapped');}},secondary:{chance:100,self:{boosts:{spe:1}}},target:'normal',type:'Normal',contestType:'Cool'},razorleaf:{num:75,accuracy:95,basePower:55,category:'Physical',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio. Hits adjacent foes.',id:'razorleaf',name:'Razor Leaf',pp:25,priority:0,flags:{protect:1,mirror:1},critRatio:2,secondary:null,target:'allAdjacentFoes',type:'Grass',contestType:'Cool'},razorshell:{num:534,accuracy:95,basePower:75,category:'Physical',desc:"Has a 50% chance to lower the target's Defense by 1 stage.",shortDesc:"50% chance to lower the target's Defense by 1.",id:'razorshell',isViable:true,name:'Razor Shell',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:50,boosts:{def:-1}},target:'normal',type:'Water',contestType:'Cool'},razorwind:{num:13,accuracy:100,basePower:80,category:'Special',desc:'Has a higher chance for a critical hit. This attack charges on the first turn and executes on the second. If the user is holding a Power Herb, the move completes in one turn.',shortDesc:'Charges, then hits foe(s) turn 2. High crit ratio.',id:'razorwind',isNonstandard:'Past',name:'Razor Wind',pp:10,priority:0,flags:{charge:1,protect:1,mirror:1},onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}this.add('-prepare',attacker,move.name,defender);if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},critRatio:2,secondary:null,target:'allAdjacentFoes',type:'Normal',contestType:'Cool'},recover:{num:105,accuracy:true,basePower:0,category:'Status',desc:'The user restores 1/2 of its maximum HP, rounded half up.',shortDesc:'Heals the user by 50% of its max HP.',id:'recover',isViable:true,name:'Recover',pp:10,priority:0,flags:{snatch:1,heal:1},heal:[1,2],secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Clever'},recycle:{num:278,accuracy:true,basePower:0,category:'Status',desc:'The user regains the item it last used. Fails if the user is holding an item, if the user has not held an item, if the item was a popped Air Balloon, if the item was picked up by a Pokemon with the Pickup Ability, or if the item was lost to Bug Bite, Covet, Incinerate, Knock Off, Pluck, or Thief. Items thrown with Fling can be regained.',shortDesc:'Restores the item the user last used.',id:'recycle',name:'Recycle',pp:10,priority:0,flags:{snatch:1},onHit:function onHit(pokemon){if(pokemon.item||!pokemon.lastItem)return false;var item=pokemon.lastItem;pokemon.lastItem='';this.add('-item',pokemon,this.dex.getItem(item),'[from] move: Recycle');pokemon.setItem(item);},secondary:null,target:'self',type:'Normal',zMoveBoost:{spe:2},contestType:'Clever'},reflect:{num:115,accuracy:true,basePower:0,category:'Status',desc:"For 5 turns, the user and its party members take 0.5x damage from physical attacks, or 0.66x damage if in a Double Battle. Damage is not reduced further with Aurora Veil. Critical hits ignore this effect. It is removed from the user's side if the user or an ally is successfully hit by Brick Break, Psychic Fangs, or Defog. Lasts for 8 turns if the user is holding Light Clay. Fails if the effect is already active on the user's side.",shortDesc:'For 5 turns, physical damage to allies is halved.',id:'reflect',isViable:true,name:'Reflect',pp:20,priority:0,flags:{snatch:1},sideCondition:'reflect',effect:{duration:5,durationCallback:function durationCallback(target,source,effect){if(source&&source.hasItem('lightclay')){return 8;}return 5;},onAnyModifyDamage:function onAnyModifyDamage(damage,source,target,move){if(target!==source&&target.side===this.effectData.target&&this.getCategory(move)==='Physical'){if(!target.getMoveHitData(move).crit&&!move.infiltrates){this.debug('Reflect weaken');if(target.side.active.length>1)return this.chainModify([0xaac,0x1000]);return this.chainModify(0.5);}}},onStart:function onStart(side){this.add('-sidestart',side,'Reflect');},onResidualOrder:21,onEnd:function onEnd(side){this.add('-sideend',side,'Reflect');}},secondary:null,target:'allySide',type:'Psychic',zMoveBoost:{def:1},contestType:'Clever'},reflecttype:{num:513,accuracy:true,basePower:0,category:'Status',desc:"Causes the user's types to become the same as the current types of the target. If the target's current types include typeless and a non-added type, typeless is ignored. If the target's current types include typeless and an added type from Forest's Curse or Trick-or-Treat, typeless is copied as the Normal type instead. Fails if the user is an Arceus or a Silvally, or if the target's current type is typeless alone.",shortDesc:'User becomes the same type as the target.',id:'reflecttype',name:'Reflect Type',pp:15,priority:0,flags:{protect:1,authentic:1,mystery:1},onHit:function onHit(target,source){if(source.template&&(source.template.num===493||source.template.num===773))return false;var newBaseTypes=target.getTypes(true).filter(function(type){return type!=='???';});if(!newBaseTypes.length){if(target.addedType){newBaseTypes=['Normal'];}else{return false;}}this.add('-start',source,'typechange','[from] move: Reflect Type','[of] '+target);source.setType(newBaseTypes);source.addedType=target.addedType;source.knownType=target.side===source.side&&target.knownType;},secondary:null,target:'normal',type:'Normal',zMoveBoost:{spa:1},contestType:'Clever'},refresh:{num:287,accuracy:true,basePower:0,category:'Status',desc:'The user cures its burn, poison, or paralysis. Fails if the user is not burned, poisoned, or paralyzed.',shortDesc:'User cures its burn, poison, or paralysis.',id:'refresh',isNonstandard:'Past',isViable:true,name:'Refresh',pp:20,priority:0,flags:{snatch:1},onHit:function onHit(pokemon){if(['','slp','frz'].includes(pokemon.status))return false;pokemon.cureStatus();},secondary:null,target:'self',type:'Normal',zMoveEffect:'heal',contestType:'Cute'},relicsong:{num:547,accuracy:100,basePower:75,category:'Special',desc:'Has a 10% chance to cause the target to fall asleep. If this move is successful on at least one target and the user is a Meloetta, it changes to Pirouette Forme if it is currently in Aria Forme, or changes to Aria Forme if it is currently in Pirouette Forme. This forme change does not happen if the Meloetta has the Sheer Force Ability. The Pirouette Forme reverts to Aria Forme when Meloetta is not active.',shortDesc:'10% chance to sleep foe(s). Meloetta transforms.',id:'relicsong',isNonstandard:'Past',name:'Relic Song',pp:10,priority:0,flags:{protect:1,mirror:1,sound:1,authentic:1},secondary:{chance:10,status:'slp'},onHit:function onHit(target,pokemon,move){if(pokemon.baseTemplate.baseSpecies==='Meloetta'&&!pokemon.transformed){move.willChangeForme=true;}},onAfterMoveSecondarySelf:function onAfterMoveSecondarySelf(pokemon,target,move){if(move.willChangeForme){pokemon.formeChange(pokemon.template.speciesid==='meloettapirouette'?'Meloetta':'Meloetta-Pirouette',this.effect,false,'[msg]');}},target:'allAdjacentFoes',type:'Normal',contestType:'Beautiful'},rest:{num:156,accuracy:true,basePower:0,category:'Status',desc:'The user falls asleep for the next two turns and restores all of its HP, curing itself of any major status condition in the process. Fails if the user has full HP, is already asleep, or if another effect is preventing sleep.',shortDesc:'User sleeps 2 turns and restores HP and status.',id:'rest',isViable:true,name:'Rest',pp:10,priority:0,flags:{snatch:1,heal:1},onTryMove:function onTryMove(pokemon){if(pokemon.hp===pokemon.maxhp){this.add('-fail',pokemon,'heal');return null;}if(pokemon.status==='slp'||pokemon.hasAbility('comatose')){this.add('-fail',pokemon);return null;}},onHit:function onHit(target,source,move){if(!target.setStatus('slp',source,move))return false;target.statusData.time=3;target.statusData.startTime=3;this.heal(target.maxhp);// Aesthetic only as the healing happens after you fall asleep in-game
},secondary:null,target:'self',type:'Psychic',zMoveEffect:'clearnegativeboost',contestType:'Cute'},retaliate:{num:514,accuracy:100,basePower:70,category:'Physical',desc:"Power doubles if one of the user's party members fainted last turn.",shortDesc:'Power doubles if an ally fainted last turn.',id:'retaliate',name:'Retaliate',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},onBasePower:function onBasePower(basePower,pokemon){if(pokemon.side.faintedLastTurn){this.debug('Boosted for a faint last turn');return this.chainModify(2);}},secondary:null,target:'normal',type:'Normal',contestType:'Cool'},return:{num:216,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon){return Math.floor(pokemon.happiness*10/25)||1;},category:'Physical',desc:"Power is equal to the greater of (user's Happiness * 2/5), rounded down, or 1.",shortDesc:'Max 102 power at maximum Happiness.',id:'return',isNonstandard:'Past',isViable:true,name:'Return',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',zMovePower:160,gmaxPower:130,contestType:'Cute'},revelationdance:{num:686,accuracy:100,basePower:90,category:'Special',desc:"This move's type depends on the user's primary type. If the user's primary type is typeless, this move's type is the user's secondary type if it has one, otherwise the added type from Forest's Curse or Trick-or-Treat. This move is typeless if the user's type is typeless alone.",shortDesc:"Type varies based on the user's primary type.",id:'revelationdance',isNonstandard:'Past',name:'Revelation Dance',pp:15,priority:0,flags:{protect:1,mirror:1,dance:1},onModifyType:function onModifyType(move,pokemon){var type=pokemon.types[0];if(type==='Bird')type='???';move.type=type;},secondary:null,target:'normal',type:'Normal',contestType:'Beautiful'},revenge:{num:279,accuracy:100,basePower:60,basePowerCallback:function basePowerCallback(pokemon,target,move){var damagedByTarget=pokemon.attackedBy.some(function(p){return p.source===target&&p.damage>0&&p.thisTurn;});if(damagedByTarget){this.debug('Boosted for getting hit by '+target);return move.basePower*2;}return move.basePower;},category:'Physical',desc:'Power doubles if the user was hit by the target this turn.',shortDesc:'Power doubles if user is damaged by the target.',id:'revenge',name:'Revenge',pp:10,priority:-4,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Fighting',contestType:'Tough'},reversal:{num:179,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon,target){var ratio=pokemon.hp*48/pokemon.maxhp;if(ratio<2){return 200;}if(ratio<5){return 150;}if(ratio<10){return 100;}if(ratio<17){return 80;}if(ratio<33){return 40;}return 20;},category:'Physical',desc:"The power of this move is 20 if X is 33 to 48, 40 if X is 17 to 32, 80 if X is 10 to 16, 100 if X is 5 to 9, 150 if X is 2 to 4, and 200 if X is 0 or 1, where X is equal to (user's current HP * 48 / user's maximum HP), rounded down.",shortDesc:'More power the less HP the user has left.',id:'reversal',name:'Reversal',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Fighting',zMovePower:160,contestType:'Cool'},roar:{num:46,accuracy:true,basePower:0,category:'Status',desc:'The target is forced to switch out and be replaced with a random unfainted ally. Fails if the target is the last unfainted Pokemon in its party, or if the target used Ingrain previously or has the Suction Cups Ability.',shortDesc:'Forces the target to switch to a random ally.',id:'roar',isViable:true,name:'Roar',pp:20,priority:-6,flags:{reflectable:1,mirror:1,sound:1,authentic:1,mystery:1},forceSwitch:true,secondary:null,target:'normal',type:'Normal',zMoveBoost:{def:1},contestType:'Cool'},roaroftime:{num:459,accuracy:90,basePower:150,category:'Special',desc:'If this move is successful, the user must recharge on the following turn and cannot select a move.',shortDesc:'User cannot move next turn.',id:'roaroftime',isNonstandard:'Past',name:'Roar of Time',pp:5,priority:0,flags:{recharge:1,protect:1,mirror:1},self:{volatileStatus:'mustrecharge'},secondary:null,target:'normal',type:'Dragon',contestType:'Beautiful'},rockblast:{num:350,accuracy:90,basePower:25,category:'Physical',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.",shortDesc:'Hits 2-5 times in one turn.',id:'rockblast',isViable:true,name:'Rock Blast',pp:10,priority:0,flags:{bullet:1,protect:1,mirror:1},multihit:[2,5],secondary:null,target:'normal',type:'Rock',zMovePower:140,gmaxPower:130,contestType:'Tough'},rockclimb:{num:431,accuracy:85,basePower:90,category:'Physical',desc:'Has a 20% chance to confuse the target.',shortDesc:'20% chance to confuse the target.',id:'rockclimb',isNonstandard:'Past',name:'Rock Climb',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:20,volatileStatus:'confusion'},target:'normal',type:'Normal',contestType:'Tough'},rockpolish:{num:397,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Speed by 2 stages.",shortDesc:"Raises the user's Speed by 2.",id:'rockpolish',isViable:true,name:'Rock Polish',pp:20,priority:0,flags:{snatch:1},boosts:{spe:2},secondary:null,target:'self',type:'Rock',zMoveEffect:'clearnegativeboost',contestType:'Tough'},rockslide:{num:157,accuracy:90,basePower:75,category:'Physical',desc:'Has a 30% chance to flinch the target.',shortDesc:'30% chance to flinch the foe(s).',id:'rockslide',isViable:true,name:'Rock Slide',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:30,volatileStatus:'flinch'},target:'allAdjacentFoes',type:'Rock',contestType:'Tough'},rocksmash:{num:249,accuracy:100,basePower:40,category:'Physical',desc:"Has a 50% chance to lower the target's Defense by 1 stage.",shortDesc:"50% chance to lower the target's Defense by 1.",id:'rocksmash',name:'Rock Smash',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:50,boosts:{def:-1}},target:'normal',type:'Fighting',contestType:'Tough'},rockthrow:{num:88,accuracy:90,basePower:50,category:'Physical',shortDesc:'No additional effect.',id:'rockthrow',name:'Rock Throw',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Rock',contestType:'Tough'},rocktomb:{num:317,accuracy:95,basePower:60,category:'Physical',desc:"Has a 100% chance to lower the target's Speed by 1 stage.",shortDesc:"100% chance to lower the target's Speed by 1.",id:'rocktomb',name:'Rock Tomb',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,boosts:{spe:-1}},target:'normal',type:'Rock',contestType:'Clever'},rockwrecker:{num:439,accuracy:90,basePower:150,category:'Physical',desc:'If this move is successful, the user must recharge on the following turn and cannot select a move.',shortDesc:'User cannot move next turn.',id:'rockwrecker',name:'Rock Wrecker',pp:5,priority:0,flags:{bullet:1,recharge:1,protect:1,mirror:1},self:{volatileStatus:'mustrecharge'},secondary:null,target:'normal',type:'Rock',contestType:'Tough'},roleplay:{num:272,accuracy:true,basePower:0,category:'Status',desc:"The user's Ability changes to match the target's Ability. Fails if the user's Ability is Battle Bond, Comatose, Disguise, Multitype, Power Construct, RKS System, Schooling, Shields Down, Stance Change, or already matches the target, or if the target's Ability is Battle Bond, Comatose, Disguise, Flower Gift, Forecast, Illusion, Imposter, Multitype, Power Construct, Power of Alchemy, Receiver, RKS System, Schooling, Shields Down, Stance Change, Trace, Wonder Guard, or Zen Mode.",shortDesc:"User replaces its Ability with the target's.",id:'roleplay',name:'Role Play',pp:10,priority:0,flags:{authentic:1,mystery:1},onTryHit:function onTryHit(target,source){var bannedTargetAbilities=['battlebond','comatose','disguise','flowergift','forecast','illusion','imposter','multitype','powerconstruct','powerofalchemy','receiver','rkssystem','schooling','shieldsdown','stancechange','trace','wonderguard','zenmode'];var bannedSourceAbilities=['battlebond','comatose','disguise','multitype','powerconstruct','rkssystem','schooling','shieldsdown','stancechange'];if(bannedTargetAbilities.includes(target.ability)||bannedSourceAbilities.includes(source.ability)||target.ability===source.ability){return false;}},onHit:function onHit(target,source){var oldAbility=source.setAbility(target.ability);if(oldAbility){this.add('-ability',source,source.getAbility().name,'[from] move: Role Play','[of] '+target);return;}return false;},secondary:null,target:'normal',type:'Psychic',zMoveBoost:{spe:1},contestType:'Cute'},rollingkick:{num:27,accuracy:85,basePower:60,category:'Physical',desc:'Has a 30% chance to flinch the target.',shortDesc:'30% chance to flinch the target.',id:'rollingkick',isNonstandard:'Past',name:'Rolling Kick',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Fighting',contestType:'Cool'},rollout:{num:205,accuracy:90,basePower:30,basePowerCallback:function basePowerCallback(pokemon,target,move){var bp=move.basePower;if(pokemon.volatiles.rollout&&pokemon.volatiles.rollout.hitCount){bp*=Math.pow(2,pokemon.volatiles.rollout.hitCount);}if(pokemon.status!=='slp')pokemon.addVolatile('rollout');if(pokemon.volatiles.defensecurl){bp*=2;}this.debug('Rollout bp: '+bp);return bp;},category:'Physical',desc:"If this move is successful, the user is locked into this move and cannot make another move until it misses, 5 turns have passed, or the attack cannot be used. Power doubles with each successful hit of this move and doubles again if Defense Curl was used previously by the user. If this move is called by Sleep Talk, the move is used for one turn. If this move hits an active Disguise during the effect, the power multiplier is paused but the turn counter is not, potentially allowing the multiplier to be used on the user's next move after this effect ends.",shortDesc:'Power doubles with each hit. Repeats for 5 turns.',id:'rollout',name:'Rollout',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},effect:{duration:2,onLockMove:'rollout',onStart:function onStart(){this.effectData.hitCount=1;},onRestart:function onRestart(){this.effectData.hitCount++;if(this.effectData.hitCount<5){this.effectData.duration=2;}},onResidual:function onResidual(target){if(target.lastMove&&target.lastMove.id==='struggle'){// don't lock
delete target.volatiles['rollout'];}}},secondary:null,target:'normal',type:'Rock',contestType:'Cute'},roost:{num:355,accuracy:true,basePower:0,category:'Status',desc:"The user restores 1/2 of its maximum HP, rounded half up. Until the end of the turn, Flying-type users lose their Flying type and pure Flying-type users become Normal type. Does nothing if the user's HP is full.",shortDesc:"Heals 50% HP. Flying-type removed 'til turn ends.",id:'roost',isViable:true,name:'Roost',pp:10,priority:0,flags:{snatch:1,heal:1},heal:[1,2],self:{volatileStatus:'roost'},effect:{duration:1,onResidualOrder:20,onStart:function onStart(target){this.add('-singleturn',target,'move: Roost');},onTypePriority:-1,onType:function onType(types,pokemon){this.effectData.typeWas=types;return types.filter(function(type){return type!=='Flying';});}},secondary:null,target:'self',type:'Flying',zMoveEffect:'clearnegativeboost',contestType:'Clever'},rototiller:{num:563,accuracy:true,basePower:0,category:'Status',desc:'Raises the Attack and Special Attack of all grounded Grass-type Pokemon on the field by 1 stage.',shortDesc:'Raises Atk/Sp. Atk of grounded Grass types by 1.',id:'rototiller',isNonstandard:'Past',name:'Rototiller',pp:10,priority:0,flags:{distance:1,nonsky:1},onHitField:function onHitField(target,source){var targets=[];var anyAirborne=false;var _iteratorNormalCompletion73=true;var _didIteratorError73=false;var _iteratorError73=undefined;try{for(var _iterator73=this.getAllActive()[Symbol.iterator](),_step73;!(_iteratorNormalCompletion73=(_step73=_iterator73.next()).done);_iteratorNormalCompletion73=true){var pokemon=_step73.value;if(!pokemon.runImmunity('Ground')){this.add('-immune',pokemon);anyAirborne=true;continue;}if(pokemon.hasType('Grass')){// This move affects every grounded Grass-type Pokemon in play.
targets.push(pokemon);}}}catch(err){_didIteratorError73=true;_iteratorError73=err;}finally{try{if(!_iteratorNormalCompletion73&&_iterator73.return){_iterator73.return();}}finally{if(_didIteratorError73){throw _iteratorError73;}}}if(!targets.length&&!anyAirborne)return false;// Fails when there are no grounded Grass types or airborne Pokemon
var _iteratorNormalCompletion74=true;var _didIteratorError74=false;var _iteratorError74=undefined;try{for(var _iterator74=targets[Symbol.iterator](),_step74;!(_iteratorNormalCompletion74=(_step74=_iterator74.next()).done);_iteratorNormalCompletion74=true){var _pokemon=_step74.value;this.boost({atk:1,spa:1},_pokemon,source);}}catch(err){_didIteratorError74=true;_iteratorError74=err;}finally{try{if(!_iteratorNormalCompletion74&&_iterator74.return){_iterator74.return();}}finally{if(_didIteratorError74){throw _iteratorError74;}}}},secondary:null,target:'all',type:'Ground',zMoveBoost:{atk:1},contestType:'Tough'},round:{num:496,accuracy:100,basePower:60,basePowerCallback:function basePowerCallback(target,source,move){if(move.sourceEffect==='round'){return move.basePower*2;}return move.basePower;},category:'Special',desc:"If there are other active Pokemon that chose this move for use this turn, those Pokemon take their turn immediately after the user, in Speed order, and this move's power is 120 for each other user.",shortDesc:'Power doubles if others used Round this turn.',id:'round',name:'Round',pp:15,priority:0,flags:{protect:1,mirror:1,sound:1,authentic:1},onTry:function onTry(target,source,move){var _iteratorNormalCompletion75=true;var _didIteratorError75=false;var _iteratorError75=undefined;try{for(var _iterator75=this.queue[Symbol.iterator](),_step75;!(_iteratorNormalCompletion75=(_step75=_iterator75.next()).done);_iteratorNormalCompletion75=true){var action=_step75.value;// @ts-ignore
if(!action.pokemon||!action.move)continue;// @ts-ignore
if(action.move.id==='round'){// @ts-ignore
this.queue.prioritizeAction(action,move);return;}}}catch(err){_didIteratorError75=true;_iteratorError75=err;}finally{try{if(!_iteratorNormalCompletion75&&_iterator75.return){_iterator75.return();}}finally{if(_didIteratorError75){throw _iteratorError75;}}}},secondary:null,target:'normal',type:'Normal',contestType:'Beautiful'},sacredfire:{num:221,accuracy:95,basePower:100,category:'Physical',desc:'Has a 50% chance to burn the target.',shortDesc:'50% chance to burn the target. Thaws user.',id:'sacredfire',isNonstandard:'Past',name:'Sacred Fire',pp:5,priority:0,flags:{protect:1,mirror:1,defrost:1},secondary:{chance:50,status:'brn'},target:'normal',type:'Fire',contestType:'Beautiful'},sacredsword:{num:533,accuracy:100,basePower:90,category:'Physical',desc:"Ignores the target's stat stage changes, including evasiveness.",shortDesc:"Ignores the target's stat stage changes.",id:'sacredsword',isViable:true,name:'Sacred Sword',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},ignoreEvasion:true,ignoreDefensive:true,secondary:null,target:'normal',type:'Fighting',contestType:'Cool'},safeguard:{num:219,accuracy:true,basePower:0,category:'Status',desc:"For 5 turns, the user and its party members cannot have major status conditions or confusion inflicted on them by other Pokemon. It is removed from the user's side if the user or an ally is successfully hit by Defog. Fails if the effect is already active on the user's side.",shortDesc:"For 5 turns, protects user's party from status.",id:'safeguard',name:'Safeguard',pp:25,priority:0,flags:{snatch:1},sideCondition:'safeguard',effect:{duration:5,durationCallback:function durationCallback(target,source,effect){if(source&&source.hasAbility('persistent')){this.add('-activate',source,'ability: Persistent',effect);return 7;}return 5;},onSetStatus:function onSetStatus(status,target,source,effect){if(!effect||!source)return;if(effect.id==='yawn')return;if(effect.effectType==='Move'&&effect.infiltrates&&target.side!==source.side)return;if(target!==source){this.debug('interrupting setStatus');if(effect.id==='synchronize'||effect.effectType==='Move'&&!effect.secondaries){this.add('-activate',target,'move: Safeguard');}return null;}},onTryAddVolatile:function onTryAddVolatile(status,target,source,effect){if(!effect||!source)return;if(effect.effectType==='Move'&&effect.infiltrates&&target.side!==source.side)return;if((status.id==='confusion'||status.id==='yawn')&&target!==source){if(effect.effectType==='Move'&&!effect.secondaries)this.add('-activate',target,'move: Safeguard');return null;}},onStart:function onStart(side){this.add('-sidestart',side,'Safeguard');},onResidualOrder:21,onResidualSubOrder:2,onEnd:function onEnd(side){this.add('-sideend',side,'Safeguard');}},secondary:null,target:'allySide',type:'Normal',zMoveBoost:{spe:1},contestType:'Beautiful'},sandattack:{num:28,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's accuracy by 1 stage.",shortDesc:"Lowers the target's accuracy by 1.",id:'sandattack',name:'Sand Attack',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1},boosts:{accuracy:-1},secondary:null,target:'normal',type:'Ground',zMoveBoost:{evasion:1},contestType:'Cute'},sandstorm:{num:201,accuracy:true,basePower:0,category:'Status',desc:'For 5 turns, the weather becomes Sandstorm. At the end of each turn except the last, all active Pokemon lose 1/16 of their maximum HP, rounded down, unless they are a Ground, Rock, or Steel type, or have the Magic Guard, Overcoat, Sand Force, Sand Rush, or Sand Veil Abilities. During the effect, the Special Defense of Rock-type Pokemon is multiplied by 1.5 when taking damage from a special attack. Lasts for 8 turns if the user is holding Smooth Rock. Fails if the current weather is Sandstorm.',shortDesc:'For 5 turns, a sandstorm rages.',id:'sandstorm',name:'Sandstorm',pp:10,priority:0,flags:{},weather:'Sandstorm',secondary:null,target:'all',type:'Rock',zMoveBoost:{spe:1},contestType:'Tough'},sandtomb:{num:328,accuracy:85,basePower:35,category:'Physical',desc:'Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',shortDesc:'Traps and damages the target for 4-5 turns.',id:'sandtomb',name:'Sand Tomb',pp:15,priority:0,flags:{protect:1,mirror:1},volatileStatus:'partiallytrapped',secondary:null,target:'normal',type:'Ground',contestType:'Clever'},sappyseed:{num:738,accuracy:90,basePower:100,category:'Physical',desc:'This move summons Leech Seed on the foe.',shortDesc:'Summons Leech Seed.',id:'sappyseed',isNonstandard:'LGPE',isViable:true,name:'Sappy Seed',pp:10,priority:0,flags:{protect:1,reflectable:1},onHit:function onHit(target,source){if(target.hasType('Grass'))return null;target.addVolatile('leechseed',source);},secondary:null,target:'normal',type:'Grass',contestType:'Clever'},savagespinout:{num:634,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'savagespinout',isNonstandard:'Past',name:'Savage Spin-Out',pp:1,priority:0,flags:{},isZ:'buginiumz',secondary:null,target:'normal',type:'Bug',contestType:'Cool'},scald:{num:503,accuracy:100,basePower:80,category:'Special',desc:'Has a 30% chance to burn the target. The target thaws out if it is frozen.',shortDesc:'30% chance to burn the target. Thaws target.',id:'scald',isViable:true,name:'Scald',pp:15,priority:0,flags:{protect:1,mirror:1,defrost:1},thawsTarget:true,secondary:{chance:30,status:'brn'},target:'normal',type:'Water',contestType:'Tough'},scaryface:{num:184,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Speed by 2 stages.",shortDesc:"Lowers the target's Speed by 2.",id:'scaryface',name:'Scary Face',pp:10,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},boosts:{spe:-2},secondary:null,target:'normal',type:'Normal',zMoveBoost:{spe:1},contestType:'Tough'},scratch:{num:10,accuracy:100,basePower:40,category:'Physical',shortDesc:'No additional effect.',id:'scratch',name:'Scratch',pp:35,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',contestType:'Tough'},screech:{num:103,accuracy:85,basePower:0,category:'Status',desc:"Lowers the target's Defense by 2 stages.",shortDesc:"Lowers the target's Defense by 2.",id:'screech',name:'Screech',pp:40,priority:0,flags:{protect:1,reflectable:1,mirror:1,sound:1,authentic:1,mystery:1},boosts:{def:-2},secondary:null,target:'normal',type:'Normal',zMoveBoost:{atk:1},contestType:'Clever'},searingshot:{num:545,accuracy:100,basePower:100,category:'Special',desc:'Has a 30% chance to burn the target.',shortDesc:'30% chance to burn adjacent Pokemon.',id:'searingshot',isNonstandard:'Past',name:'Searing Shot',pp:5,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:{chance:30,status:'brn'},target:'allAdjacent',type:'Fire',contestType:'Cool'},searingsunrazesmash:{num:724,accuracy:true,basePower:200,category:'Physical',desc:'This move and its effects ignore the Abilities of other Pokemon.',shortDesc:'Ignores the Abilities of other Pokemon.',id:'searingsunrazesmash',isNonstandard:'Past',isViable:true,name:'Searing Sunraze Smash',pp:1,priority:0,flags:{contact:1},isZ:'solganiumz',ignoreAbility:true,secondary:null,target:'normal',type:'Steel',contestType:'Cool'},secretpower:{num:290,accuracy:100,basePower:70,category:'Physical',desc:'Has a 30% chance to cause a secondary effect on the target based on the battle terrain. Causes paralysis on the regular Wi-Fi terrain, causes paralysis during Electric Terrain, lowers Special Attack by 1 stage during Misty Terrain, causes sleep during Grassy Terrain and lowers Speed by 1 stage during Psychic Terrain.',shortDesc:'Effect varies with terrain. (30% paralysis chance)',id:'secretpower',isNonstandard:'Past',name:'Secret Power',pp:20,priority:0,flags:{protect:1,mirror:1},onModifyMove:function onModifyMove(move,pokemon){if(this.field.isTerrain(''))return;move.secondaries=[];if(this.field.isTerrain('electricterrain')){move.secondaries.push({chance:30,status:'par'});}else if(this.field.isTerrain('grassyterrain')){move.secondaries.push({chance:30,status:'slp'});}else if(this.field.isTerrain('mistyterrain')){move.secondaries.push({chance:30,boosts:{spa:-1}});}else if(this.field.isTerrain('psychicterrain')){move.secondaries.push({chance:30,boosts:{spe:-1}});}},secondary:{chance:30,status:'par'},target:'normal',type:'Normal',contestType:'Clever'},secretsword:{num:548,accuracy:100,basePower:85,category:'Special',defensiveCategory:'Physical',desc:'Deals damage to the target based on its Defense instead of Special Defense.',shortDesc:'Damages target based on Defense, not Sp. Def.',id:'secretsword',isViable:true,name:'Secret Sword',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Fighting',contestType:'Beautiful'},seedbomb:{num:402,accuracy:100,basePower:80,category:'Physical',shortDesc:'No additional effect.',id:'seedbomb',isViable:true,name:'Seed Bomb',pp:15,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Grass',contestType:'Tough'},seedflare:{num:465,accuracy:85,basePower:120,category:'Special',desc:"Has a 40% chance to lower the target's Special Defense by 2 stages.",shortDesc:"40% chance to lower the target's Sp. Def by 2.",id:'seedflare',isNonstandard:'Past',name:'Seed Flare',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:{chance:40,boosts:{spd:-2}},target:'normal',type:'Grass',contestType:'Beautiful'},seismictoss:{num:69,accuracy:100,basePower:0,damage:'level',category:'Physical',desc:"Deals damage to the target equal to the user's level.",shortDesc:"Does damage equal to the user's level.",id:'seismictoss',isViable:true,name:'Seismic Toss',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1,nonsky:1},secondary:null,target:'normal',type:'Fighting',gmaxPower:75,contestType:'Tough'},selfdestruct:{num:120,accuracy:100,basePower:200,category:'Physical',desc:'The user faints after using this move, even if this move fails for having no target. This move is prevented from executing if any active Pokemon has the Damp Ability.',shortDesc:'Hits adjacent Pokemon. The user faints.',id:'selfdestruct',name:'Self-Destruct',pp:5,priority:0,flags:{protect:1,mirror:1},selfdestruct:'always',secondary:null,target:'allAdjacent',type:'Normal',contestType:'Beautiful'},shadowball:{num:247,accuracy:100,basePower:80,category:'Special',desc:"Has a 20% chance to lower the target's Special Defense by 1 stage.",shortDesc:"20% chance to lower the target's Sp. Def by 1.",id:'shadowball',isViable:true,name:'Shadow Ball',pp:15,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:{chance:20,boosts:{spd:-1}},target:'normal',type:'Ghost',contestType:'Clever'},shadowbone:{num:708,accuracy:100,basePower:85,category:'Physical',desc:"Has a 20% chance to lower the target's Defense by 1 stage.",shortDesc:"20% chance to lower the target's Defense by 1.",id:'shadowbone',isNonstandard:'Past',name:'Shadow Bone',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:20,boosts:{def:-1}},target:'normal',type:'Ghost',contestType:'Cool'},shadowclaw:{num:421,accuracy:100,basePower:70,category:'Physical',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'shadowclaw',isViable:true,name:'Shadow Claw',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},critRatio:2,secondary:null,target:'normal',type:'Ghost',contestType:'Cool'},shadowforce:{num:467,accuracy:100,basePower:120,category:'Physical',desc:"If this move is successful, it breaks through the target's Baneful Bunker, Detect, King's Shield, Protect, or Spiky Shield for this turn, allowing other Pokemon to attack the target normally. If the target's side is protected by Crafty Shield, Mat Block, Quick Guard, or Wide Guard, that protection is also broken for this turn and other Pokemon may attack the target's side normally. This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks. If the user is holding a Power Herb, the move completes in one turn.",shortDesc:'Disappears turn 1. Hits turn 2. Breaks protection.',id:'shadowforce',isNonstandard:'Past',name:'Shadow Force',pp:5,priority:0,flags:{contact:1,charge:1,mirror:1},breaksProtect:true,onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}this.add('-prepare',attacker,move.name,defender);if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},effect:{duration:2,onInvulnerability:false},secondary:null,target:'normal',type:'Ghost',contestType:'Cool'},shadowpunch:{num:325,accuracy:true,basePower:60,category:'Physical',shortDesc:'This move does not check accuracy.',id:'shadowpunch',isViable:true,name:'Shadow Punch',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},secondary:null,target:'normal',type:'Ghost',contestType:'Clever'},shadowsneak:{num:425,accuracy:100,basePower:40,category:'Physical',desc:'No additional effect.',shortDesc:'Usually goes first.',id:'shadowsneak',isViable:true,name:'Shadow Sneak',pp:30,priority:1,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Ghost',contestType:'Clever'},shadowstrike:{num:0,accuracy:95,basePower:80,category:'Physical',desc:"Has a 50% chance to lower the target's Defense by 1 stage.",shortDesc:"50% chance to lower the target's Defense by 1.",id:'shadowstrike',isNonstandard:'CAP',isViable:true,name:'Shadow Strike',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:50,boosts:{def:-1}},target:'normal',type:'Ghost',contestType:'Clever'},sharpen:{num:159,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Attack by 1 stage.",shortDesc:"Raises the user's Attack by 1.",id:'sharpen',isNonstandard:'Past',name:'Sharpen',pp:30,priority:0,flags:{snatch:1},boosts:{atk:1},secondary:null,target:'self',type:'Normal',zMoveBoost:{atk:1},contestType:'Cute'},shatteredpsyche:{num:648,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'shatteredpsyche',isNonstandard:'Past',name:'Shattered Psyche',pp:1,priority:0,flags:{},isZ:'psychiumz',secondary:null,target:'normal',type:'Psychic',contestType:'Cool'},sheercold:{num:329,accuracy:30,basePower:0,category:'Special',desc:"Deals damage to the target equal to the target's maximum HP. Ignores accuracy and evasiveness modifiers. This attack's accuracy is equal to (user's level - target's level + X)%, where X is 30 if the user is an Ice type and 20 otherwise, and fails if the target is at a higher level. Ice-type Pokemon and Pokemon with the Sturdy Ability are immune.",shortDesc:"OHKOs non-Ice targets. Fails if user's lower level.",id:'sheercold',name:'Sheer Cold',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:null,ohko:'Ice',target:'normal',type:'Ice',zMovePower:180,gmaxPower:130,contestType:'Beautiful'},shellsmash:{num:504,accuracy:true,basePower:0,category:'Status',desc:"Lowers the user's Defense and Special Defense by 1 stage. Raises the user's Attack, Special Attack, and Speed by 2 stages.",shortDesc:'Lowers Def, SpD by 1; raises Atk, SpA, Spe by 2.',id:'shellsmash',isViable:true,name:'Shell Smash',pp:15,priority:0,flags:{snatch:1},boosts:{def:-1,spd:-1,atk:2,spa:2,spe:2},secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Tough'},shelltrap:{num:704,accuracy:100,basePower:150,category:'Special',desc:"Fails unless the user is hit by a physical attack from an opponent this turn before it can execute the move. If the user was hit and has not fainted, it attacks immediately after being hit, and the effect ends. If the opponent's physical attack had a secondary effect removed by the Sheer Force Ability, it does not count for the purposes of this effect.",shortDesc:'User must take physical damage before moving.',id:'shelltrap',name:'Shell Trap',pp:5,priority:-3,flags:{protect:1},beforeTurnCallback:function beforeTurnCallback(pokemon){pokemon.addVolatile('shelltrap');},onTryMove:function onTryMove(pokemon){if(!pokemon.volatiles['shelltrap']||!pokemon.volatiles['shelltrap'].gotHit){this.attrLastMove('[still]');this.add('cant',pokemon,'Shell Trap','Shell Trap');return null;}},effect:{duration:1,onStart:function onStart(pokemon){this.add('-singleturn',pokemon,'move: Shell Trap');},onHit:function onHit(pokemon,source,move){if(pokemon.side!==source.side&&move.category==='Physical'){pokemon.volatiles['shelltrap'].gotHit=true;var action=this.queue.willMove(pokemon);if(action){this.queue.prioritizeAction(action,move);}}}},secondary:null,target:'allAdjacentFoes',type:'Fire',contestType:'Tough'},shiftgear:{num:508,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Speed by 2 stages and its Attack by 1 stage.",shortDesc:"Raises the user's Speed by 2 and Attack by 1.",id:'shiftgear',isViable:true,name:'Shift Gear',pp:10,priority:0,flags:{snatch:1},boosts:{spe:2,atk:1},secondary:null,target:'self',type:'Steel',zMoveEffect:'clearnegativeboost',contestType:'Clever'},shockwave:{num:351,accuracy:true,basePower:60,category:'Special',shortDesc:'This move does not check accuracy.',id:'shockwave',name:'Shock Wave',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Electric',contestType:'Cool'},shoreup:{num:659,accuracy:true,basePower:0,category:'Status',desc:'The user restores 1/2 of its maximum HP, rounded half down. If the weather is Sandstorm, the user instead restores 2/3 of its maximum HP, rounded half down.',shortDesc:'User restores 1/2 its max HP; 2/3 in Sandstorm.',id:'shoreup',isNonstandard:'Past',name:'Shore Up',pp:10,priority:0,flags:{snatch:1,heal:1},onHit:function onHit(pokemon){var factor=0.5;if(this.field.isWeather('sandstorm')){factor=0.667;}return!!this.heal(this.modify(pokemon.maxhp,factor));},secondary:null,target:'self',type:'Ground',zMoveEffect:'clearnegativeboost',contestType:'Beautiful'},signalbeam:{num:324,accuracy:100,basePower:75,category:'Special',desc:'Has a 10% chance to confuse the target.',shortDesc:'10% chance to confuse the target.',id:'signalbeam',isNonstandard:'Past',isViable:true,name:'Signal Beam',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,volatileStatus:'confusion'},target:'normal',type:'Bug',contestType:'Beautiful'},silverwind:{num:318,accuracy:100,basePower:60,category:'Special',desc:"Has a 10% chance to raise the user's Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage.",shortDesc:'10% chance to raise all stats by 1 (not acc/eva).',id:'silverwind',isNonstandard:'Past',name:'Silver Wind',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,self:{boosts:{atk:1,def:1,spa:1,spd:1,spe:1}}},target:'normal',type:'Bug',contestType:'Beautiful'},simplebeam:{num:493,accuracy:100,basePower:0,category:'Status',desc:"Causes the target's Ability to become Simple. Fails if the target's Ability is Battle Bond, Comatose, Disguise, Multitype, Power Construct, RKS System, Schooling, Shields Down, Simple, Stance Change, Truant, or Zen Mode.",shortDesc:"The target's Ability becomes Simple.",id:'simplebeam',name:'Simple Beam',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},onTryHit:function onTryHit(pokemon){var bannedAbilities=['battlebond','comatose','disguise','multitype','powerconstruct','rkssystem','schooling','shieldsdown','simple','stancechange','truant','zenmode'];if(bannedAbilities.includes(pokemon.ability)){return false;}},onHit:function onHit(pokemon){var oldAbility=pokemon.setAbility('simple');if(oldAbility){this.add('-ability',pokemon,'Simple','[from] move: Simple Beam');return;}return false;},secondary:null,target:'normal',type:'Normal',zMoveBoost:{spa:1},contestType:'Cute'},sing:{num:47,accuracy:55,basePower:0,category:'Status',shortDesc:'Causes the target to fall asleep.',id:'sing',name:'Sing',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1,sound:1,authentic:1},status:'slp',secondary:null,target:'normal',type:'Normal',zMoveBoost:{spe:1},contestType:'Cute'},sinisterarrowraid:{num:695,accuracy:true,basePower:180,category:'Physical',shortDesc:'No additional effect.',id:'sinisterarrowraid',isNonstandard:'Past',isViable:true,name:'Sinister Arrow Raid',pp:1,priority:0,flags:{},isZ:'decidiumz',secondary:null,target:'normal',type:'Ghost',contestType:'Cool'},sizzlyslide:{num:735,accuracy:100,basePower:60,category:'Physical',desc:'Has a 100% chance to burn the foe.',shortDesc:'100% chance to burn the foe.',id:'sizzlyslide',isNonstandard:'LGPE',isViable:true,name:'Sizzly Slide',pp:20,priority:0,flags:{contact:1,protect:1,defrost:1},secondary:{chance:100,status:'brn'},target:'normal',type:'Fire',contestType:'Clever'},sketch:{num:166,accuracy:true,basePower:0,category:'Status',desc:'This move is permanently replaced by the last move used by the target. The copied move has the maximum PP for that move. Fails if the target has not made a move, if the user has Transformed, or if the move is Chatter, Sketch, Struggle, or any move the user knows.',shortDesc:'Permanently copies the last move target used.',id:'sketch',isNonstandard:'Past',name:'Sketch',pp:1,noPPBoosts:true,priority:0,flags:{authentic:1,mystery:1},onHit:function onHit(target,source){var disallowedMoves=['chatter','sketch','struggle'];var move=target.lastMove;if(source.transformed||!move||source.moves.includes(move.id))return false;if(disallowedMoves.includes(move.id)||move.isZ||move.isMax)return false;var sketchIndex=source.moves.indexOf('sketch');if(sketchIndex<0)return false;var sketchedMove={move:move.name,id:move.id,pp:move.pp,maxpp:move.pp,target:move.target,disabled:false,used:false};source.moveSlots[sketchIndex]=sketchedMove;source.baseMoveSlots[sketchIndex]=sketchedMove;this.add('-activate',source,'move: Sketch',move.name);},secondary:null,target:'normal',type:'Normal',zMoveBoost:{atk:1,def:1,spa:1,spd:1,spe:1},contestType:'Clever'},skillswap:{num:285,accuracy:true,basePower:0,category:'Status',desc:"The user swaps its Ability with the target's Ability. Fails if either the user or the target's Ability is Battle Bond, Comatose, Disguise, Gulp Missile, Hunger Switch, Ice Face, Illusion, Multitype, Power Construct, RKS System, Schooling, Shields Down, Stance Change, Wonder Guard, or Zen Mode.",shortDesc:'The user and the target trade Abilities.',id:'skillswap',name:'Skill Swap',pp:10,priority:0,flags:{protect:1,mirror:1,authentic:1,mystery:1},onTryHit:function onTryHit(target,source){var bannedAbilities=['battlebond','comatose','disguise','gulpmissile','hungerswitch','iceface','illusion','multitype','powerconstruct','rkssystem','schooling','shieldsdown','stancechange','wonderguard','zenmode'];if(target.volatiles['dynamax']||bannedAbilities.includes(target.ability)||bannedAbilities.includes(source.ability)){return false;}},onHit:function onHit(target,source,move){var targetAbility=target.getAbility();var sourceAbility=source.getAbility();if(target.side===source.side){this.add('-activate',source,'move: Skill Swap','','','[of] '+target);}else{this.add('-activate',source,'move: Skill Swap',targetAbility,sourceAbility,'[of] '+target);}this.singleEvent('End',sourceAbility,source.abilityData,source);this.singleEvent('End',targetAbility,target.abilityData,target);if(targetAbility.id!==sourceAbility.id){source.ability=targetAbility.id;target.ability=sourceAbility.id;source.abilityData={id:toID(source.ability),target:source};target.abilityData={id:toID(target.ability),target:target};}this.singleEvent('Start',targetAbility,source.abilityData,source);this.singleEvent('Start',sourceAbility,target.abilityData,target);},secondary:null,target:'normal',type:'Psychic',zMoveBoost:{spe:1},contestType:'Clever'},skullbash:{num:130,accuracy:100,basePower:130,category:'Physical',desc:"This attack charges on the first turn and executes on the second. Raises the user's Defense by 1 stage on the first turn. If the user is holding a Power Herb, the move completes in one turn.",shortDesc:"Raises user's Defense by 1 on turn 1. Hits turn 2.",id:'skullbash',name:'Skull Bash',pp:10,priority:0,flags:{contact:1,charge:1,protect:1,mirror:1},onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}this.add('-prepare',attacker,move.name,defender);this.boost({def:1},attacker,attacker,move);if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},secondary:null,target:'normal',type:'Normal',contestType:'Tough'},skyattack:{num:143,accuracy:90,basePower:140,category:'Physical',desc:'Has a 30% chance to flinch the target and a higher chance for a critical hit. This attack charges on the first turn and executes on the second. If the user is holding a Power Herb, the move completes in one turn.',shortDesc:'Charges, then hits turn 2. 30% flinch. High crit.',id:'skyattack',name:'Sky Attack',pp:5,priority:0,flags:{charge:1,protect:1,mirror:1,distance:1},critRatio:2,onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}this.add('-prepare',attacker,move.name,defender);if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},secondary:{chance:30,volatileStatus:'flinch'},target:'any',type:'Flying',contestType:'Cool'},skydrop:{num:507,accuracy:100,basePower:60,category:'Physical',desc:'This attack takes the target into the air with the user on the first turn and executes on the second. Pokemon weighing 200 kg or more cannot be lifted. On the first turn, the user and the target avoid all attacks other than Gust, Hurricane, Sky Uppercut, Smack Down, Thousand Arrows, Thunder, and Twister. The user and the target cannot make a move between turns, but the target can select a move to use. This move cannot damage Flying-type Pokemon. Fails on the first turn if the target is an ally, if the target has a substitute, or if the target is using Bounce, Dig, Dive, Fly, Phantom Force, Shadow Force, or Sky Drop.',shortDesc:'User and foe fly up turn 1. Damages on turn 2.',id:'skydrop',isNonstandard:'Past',name:'Sky Drop',pp:10,priority:0,flags:{contact:1,charge:1,protect:1,mirror:1,gravity:1,distance:1},onModifyMove:function onModifyMove(move,source){if(!source.volatiles['skydrop']){move.accuracy=true;move.flags.contact=0;}},onMoveFail:function onMoveFail(target,source){if(source.volatiles['twoturnmove']&&source.volatiles['twoturnmove'].duration===1){source.removeVolatile('skydrop');source.removeVolatile('twoturnmove');this.add('-end',target,'Sky Drop','[interrupt]');}},onTryHit:function onTryHit(target,source,move){if(target.fainted)return false;if(source.removeVolatile(move.id)){if(target!==source.volatiles['twoturnmove'].source)return false;if(target.hasType('Flying')){this.add('-immune',target);return null;}}else{if(target.volatiles['substitute']||target.side===source.side){return false;}if(target.getWeight()>=2000){this.add('-fail',target,'move: Sky Drop','[heavy]');return null;}this.add('-prepare',source,move.name,target);source.addVolatile('twoturnmove',target);return null;}},onHit:function onHit(target,source){this.add('-end',target,'Sky Drop');},effect:{duration:2,onAnyDragOut:function onAnyDragOut(pokemon){if(pokemon===this.effectData.target||pokemon===this.effectData.source)return false;},onFoeTrapPokemonPriority:-15,onFoeTrapPokemon:function onFoeTrapPokemon(defender){if(defender!==this.effectData.source)return;defender.trapped=true;},onFoeBeforeMovePriority:12,onFoeBeforeMove:function onFoeBeforeMove(attacker,defender,move){if(attacker===this.effectData.source){this.effectData.source.activeTurns--;this.debug('Sky drop nullifying.');return null;}},onRedirectTargetPriority:99,onRedirectTarget:function onRedirectTarget(target,source,source2){if(source!==this.effectData.target)return;if(this.effectData.source.fainted)return;return this.effectData.source;},onAnyInvulnerability:function onAnyInvulnerability(target,source,move){if(target!==this.effectData.target&&target!==this.effectData.source){return;}if(source===this.effectData.target&&target===this.effectData.source){return;}if(['gust','twister','skyuppercut','thunder','hurricane','smackdown','thousandarrows'].includes(move.id)){return;}return false;},onAnyBasePower:function onAnyBasePower(basePower,target,source,move){if(target!==this.effectData.target&&target!==this.effectData.source){return;}if(source===this.effectData.target&&target===this.effectData.source){return;}if(move.id==='gust'||move.id==='twister'){return this.chainModify(2);}},onFaint:function onFaint(target){if(target.volatiles['skydrop']&&target.volatiles['twoturnmove'].source){this.add('-end',target.volatiles['twoturnmove'].source,'Sky Drop','[interrupt]');}}},secondary:null,target:'any',type:'Flying',contestType:'Tough'},skyuppercut:{num:327,accuracy:90,basePower:85,category:'Physical',desc:'This move can hit a target using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop.',shortDesc:'Can hit Pokemon using Bounce, Fly, or Sky Drop.',id:'skyuppercut',isNonstandard:'Past',name:'Sky Uppercut',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},secondary:null,target:'normal',type:'Fighting',contestType:'Cool'},slackoff:{num:303,accuracy:true,basePower:0,category:'Status',desc:'The user restores 1/2 of its maximum HP, rounded half up.',shortDesc:'Heals the user by 50% of its max HP.',id:'slackoff',isViable:true,name:'Slack Off',pp:10,priority:0,flags:{snatch:1,heal:1},heal:[1,2],secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Cute'},slam:{num:21,accuracy:75,basePower:80,category:'Physical',shortDesc:'No additional effect.',id:'slam',name:'Slam',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1,nonsky:1},secondary:null,target:'normal',type:'Normal',contestType:'Tough'},slash:{num:163,accuracy:100,basePower:70,category:'Physical',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'slash',name:'Slash',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},critRatio:2,secondary:null,target:'normal',type:'Normal',contestType:'Cool'},sleeppowder:{num:79,accuracy:75,basePower:0,category:'Status',shortDesc:'Causes the target to fall asleep.',id:'sleeppowder',isViable:true,name:'Sleep Powder',pp:15,priority:0,flags:{powder:1,protect:1,reflectable:1,mirror:1},status:'slp',secondary:null,target:'normal',type:'Grass',zMoveBoost:{spe:1},contestType:'Clever'},sleeptalk:{num:214,accuracy:true,basePower:0,category:'Status',desc:"One of the user's known moves, besides this move, is selected for use at random. Fails if the user is not asleep. The selected move does not have PP deducted from it, and can currently have 0 PP. This move cannot select Assist, Beak Blast, Belch, Bide, Celebrate, Chatter, Copycat, Focus Punch, Hold Hands, Me First, Metronome, Mimic, Mirror Move, Nature Power, Shell Trap, Sketch, Sleep Talk, Struggle, Uproar, any two-turn move, or any Z-Move.",shortDesc:'User must be asleep. Uses another known move.',id:'sleeptalk',isViable:true,name:'Sleep Talk',pp:10,priority:0,flags:{},sleepUsable:true,onTryHit:function onTryHit(pokemon){if(pokemon.status!=='slp'&&!pokemon.hasAbility('comatose'))return false;},onHit:function onHit(pokemon){var noSleepTalk=['assist','beakblast','belch','bide','celebrate','chatter','copycat','focuspunch','mefirst','metronome','mimic','mirrormove','naturepower','shelltrap','sketch','sleeptalk','uproar'];var moves=[];var _iteratorNormalCompletion76=true;var _didIteratorError76=false;var _iteratorError76=undefined;try{for(var _iterator76=pokemon.moveSlots[Symbol.iterator](),_step76;!(_iteratorNormalCompletion76=(_step76=_iterator76.next()).done);_iteratorNormalCompletion76=true){var moveSlot=_step76.value;var moveid=moveSlot.id;if(!moveid)continue;var move=this.dex.getMove(moveid);if(noSleepTalk.includes(moveid)||move.flags['charge']||move.isZ&&move.basePower!==1){continue;}moves.push(moveid);}}catch(err){_didIteratorError76=true;_iteratorError76=err;}finally{try{if(!_iteratorNormalCompletion76&&_iterator76.return){_iterator76.return();}}finally{if(_didIteratorError76){throw _iteratorError76;}}}var randomMove='';if(moves.length)randomMove=this.sample(moves);if(!randomMove){return false;}this.useMove(randomMove,pokemon);},secondary:null,target:'self',type:'Normal',zMoveEffect:'crit2',contestType:'Cute'},sludge:{num:124,accuracy:100,basePower:65,category:'Special',desc:'Has a 30% chance to poison the target.',shortDesc:'30% chance to poison the target.',id:'sludge',name:'Sludge',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:{chance:30,status:'psn'},target:'normal',type:'Poison',contestType:'Tough'},sludgebomb:{num:188,accuracy:100,basePower:90,category:'Special',desc:'Has a 30% chance to poison the target.',shortDesc:'30% chance to poison the target.',id:'sludgebomb',isViable:true,name:'Sludge Bomb',pp:10,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:{chance:30,status:'psn'},target:'normal',type:'Poison',contestType:'Tough'},sludgewave:{num:482,accuracy:100,basePower:95,category:'Special',desc:'Has a 10% chance to poison the target.',shortDesc:'10% chance to poison adjacent Pokemon.',id:'sludgewave',isViable:true,name:'Sludge Wave',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,status:'psn'},target:'allAdjacent',type:'Poison',contestType:'Tough'},smackdown:{num:479,accuracy:100,basePower:50,category:'Physical',desc:'This move can hit a target using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop. If this move hits a target under the effect of Bounce, Fly, Magnet Rise, or Telekinesis, the effect ends. If the target is a Flying type that has not used Roost this turn or a Pokemon with the Levitate Ability, it loses its immunity to Ground-type attacks and the Arena Trap Ability as long as it remains active. During the effect, Magnet Rise fails for the target and Telekinesis fails against the target.',shortDesc:"Removes the target's Ground immunity.",id:'smackdown',name:'Smack Down',pp:15,priority:0,flags:{protect:1,mirror:1,nonsky:1},volatileStatus:'smackdown',effect:{noCopy:true,onStart:function onStart(pokemon){var applies=false;if(pokemon.hasType('Flying')||pokemon.hasAbility('levitate'))applies=true;if(pokemon.hasItem('ironball')||pokemon.volatiles['ingrain']||this.field.getPseudoWeather('gravity'))applies=false;if(pokemon.removeVolatile('fly')||pokemon.removeVolatile('bounce')){applies=true;this.queue.cancelMove(pokemon);pokemon.removeVolatile('twoturnmove');}if(pokemon.volatiles['magnetrise']){applies=true;delete pokemon.volatiles['magnetrise'];}if(pokemon.volatiles['telekinesis']){applies=true;delete pokemon.volatiles['telekinesis'];}if(!applies)return false;this.add('-start',pokemon,'Smack Down');},onRestart:function onRestart(pokemon){if(pokemon.removeVolatile('fly')||pokemon.removeVolatile('bounce')){this.queue.cancelMove(pokemon);this.add('-start',pokemon,'Smack Down');}}},secondary:null,target:'normal',type:'Rock',contestType:'Tough'},smartstrike:{num:684,accuracy:true,basePower:70,category:'Physical',shortDesc:'This move does not check accuracy.',id:'smartstrike',name:'Smart Strike',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Steel',contestType:'Cool'},smellingsalts:{num:265,accuracy:100,basePower:70,basePowerCallback:function basePowerCallback(pokemon,target,move){if(target.status==='par')return move.basePower*2;return move.basePower;},category:'Physical',desc:'Power doubles if the target is paralyzed. If the user has not fainted, the target is cured of paralysis.',shortDesc:'Power doubles if target is paralyzed, and cures it.',id:'smellingsalts',isNonstandard:'Past',name:'Smelling Salts',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},onHit:function onHit(target){if(target.status==='par')target.cureStatus();},secondary:null,target:'normal',type:'Normal',contestType:'Tough'},smog:{num:123,accuracy:70,basePower:30,category:'Special',desc:'Has a 40% chance to poison the target.',shortDesc:'40% chance to poison the target.',id:'smog',name:'Smog',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:{chance:40,status:'psn'},target:'normal',type:'Poison',contestType:'Tough'},smokescreen:{num:108,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's accuracy by 1 stage.",shortDesc:"Lowers the target's accuracy by 1.",id:'smokescreen',name:'Smokescreen',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1},boosts:{accuracy:-1},secondary:null,target:'normal',type:'Normal',zMoveBoost:{evasion:1},contestType:'Clever'},snaptrap:{num:779,accuracy:100,basePower:35,category:'Physical',desc:'Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',shortDesc:'Traps and damages the target for 4-5 turns.',id:'snaptrap',name:'Snap Trap',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},volatileStatus:'partiallytrapped',secondary:null,target:'normal',type:'Grass'},snarl:{num:555,accuracy:95,basePower:55,category:'Special',desc:"Has a 100% chance to lower the target's Special Attack by 1 stage.",shortDesc:'100% chance to lower the foe(s) Sp. Atk by 1.',id:'snarl',name:'Snarl',pp:15,priority:0,flags:{protect:1,mirror:1,sound:1,authentic:1},secondary:{chance:100,boosts:{spa:-1}},target:'allAdjacentFoes',type:'Dark',contestType:'Tough'},snatch:{num:289,accuracy:true,basePower:0,category:'Status',desc:'If another Pokemon uses certain non-damaging moves this turn, the user steals that move to use itself. If multiple Pokemon use one of those moves this turn, the applicable moves are all stolen by the first Pokemon in turn order that used this move this turn. This effect is ignored while the user is under the effect of Sky Drop.',shortDesc:'User steals certain support moves to use itself.',id:'snatch',isNonstandard:'Past',name:'Snatch',pp:10,priority:4,flags:{authentic:1},volatileStatus:'snatch',effect:{duration:1,onStart:function onStart(pokemon){this.add('-singleturn',pokemon,'Snatch');},onAnyTryMove:function onAnyTryMove(source,target,move){var snatchUser=this.effectData.source;if(snatchUser.isSkyDropped())return;if(!move||move.isZ||move.isMax||!move.flags['snatch']||move.sourceEffect==='snatch'){return;}snatchUser.removeVolatile('snatch');this.add('-activate',snatchUser,'move: Snatch','[of] '+source);this.useMove(move.id,snatchUser);return null;}},secondary:null,pressureTarget:'foeSide',target:'self',type:'Dark',zMoveBoost:{spe:2},contestType:'Clever'},snipeshot:{num:745,accuracy:100,basePower:80,category:'Special',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'snipeshot',name:'Snipe Shot',pp:15,priority:0,flags:{protect:1,mirror:1},critRatio:2,tracksTarget:true,secondary:null,target:'normal',type:'Water'},snore:{num:173,accuracy:100,basePower:50,category:'Special',desc:'Has a 30% chance to flinch the target. Fails if the user is not asleep.',shortDesc:'User must be asleep. 30% chance to flinch target.',id:'snore',name:'Snore',pp:15,priority:0,flags:{protect:1,mirror:1,sound:1,authentic:1},sleepUsable:true,onTryHit:function onTryHit(target,source){if(source.status!=='slp'&&!source.hasAbility('comatose'))return false;},secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Normal',contestType:'Cute'},soak:{num:487,accuracy:100,basePower:0,category:'Status',desc:'Causes the target to become a Water type. Fails if the target is an Arceus or a Silvally, or if the target is already purely Water type.',shortDesc:"Changes the target's type to Water.",id:'soak',name:'Soak',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},onHit:function onHit(target){if(target.getTypes().join()==='Water'||!target.setType('Water')){// Soak should animate even when it fails.
// Returning false would suppress the animation.
this.add('-fail',target);return null;}this.add('-start',target,'typechange','Water');},secondary:null,target:'normal',type:'Water',zMoveBoost:{spa:1},contestType:'Cute'},softboiled:{num:135,accuracy:true,basePower:0,category:'Status',desc:'The user restores 1/2 of its maximum HP, rounded half up.',shortDesc:'Heals the user by 50% of its max HP.',id:'softboiled',isViable:true,name:'Soft-Boiled',pp:10,priority:0,flags:{snatch:1,heal:1},heal:[1,2],secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Cute'},solarbeam:{num:76,accuracy:100,basePower:120,category:'Special',desc:'This attack charges on the first turn and executes on the second. Power is halved if the weather is Hail, Primordial Sea, Rain Dance, or Sandstorm and the user is not holding Utility Umbrella. If the user is holding a Power Herb or the weather is Desolate Land or Sunny Day, the move completes in one turn. If the user is holding Utility Umbrella and the weather is Desolate Land or Sunny Day, the move still requires a turn to charge.',shortDesc:'Charges turn 1. Hits turn 2. No charge in sunlight.',id:'solarbeam',name:'Solar Beam',pp:10,priority:0,flags:{charge:1,protect:1,mirror:1},onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}this.add('-prepare',attacker,move.name,defender);if(['sunnyday','desolateland'].includes(attacker.effectiveWeather())){this.attrLastMove('[still]');this.addMove('-anim',attacker,move.name,defender);return;}if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},onBasePower:function onBasePower(basePower,pokemon,target){if(['raindance','primordialsea','sandstorm','hail'].includes(pokemon.effectiveWeather())){this.debug('weakened by weather');return this.chainModify(0.5);}},secondary:null,target:'normal',type:'Grass',contestType:'Cool'},solarblade:{num:669,accuracy:100,basePower:125,category:'Physical',desc:'This attack charges on the first turn and executes on the second. Power is halved if the weather is Hail, Primordial Sea, Rain Dance, or Sandstorm and the user is not holding Utility Umbrella. If the user is holding a Power Herb or the weather is Desolate Land or Sunny Day, the move completes in one turn. If the user is holding Utility Umbrella and the weather is Desolate Land or Sunny Day, the move still requires a turn to charge.',shortDesc:'Charges turn 1. Hits turn 2. No charge in sunlight.',id:'solarblade',name:'Solar Blade',pp:10,priority:0,flags:{contact:1,charge:1,protect:1,mirror:1},onTryMove:function onTryMove(attacker,defender,move){if(attacker.removeVolatile(move.id)){return;}this.add('-prepare',attacker,move.name,defender);if(['sunnyday','desolateland'].includes(attacker.effectiveWeather())){this.attrLastMove('[still]');this.addMove('-anim',attacker,move.name,defender);return;}if(!this.runEvent('ChargeMove',attacker,defender,move)){return;}attacker.addVolatile('twoturnmove',defender);return null;},onBasePower:function onBasePower(basePower,pokemon,target){if(['raindance','primordialsea','sandstorm','hail'].includes(pokemon.effectiveWeather())){this.debug('weakened by weather');return this.chainModify(0.5);}},secondary:null,target:'normal',type:'Grass',contestType:'Cool'},sonicboom:{num:49,accuracy:90,basePower:0,damage:20,category:'Special',desc:'Deals 20 HP of damage to the target.',shortDesc:'Always does 20 HP of damage.',id:'sonicboom',isNonstandard:'Past',name:'Sonic Boom',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',contestType:'Cool'},soulstealing7starstrike:{num:699,accuracy:true,basePower:195,category:'Physical',shortDesc:'No additional effect.',id:'soulstealing7starstrike',isNonstandard:'Past',isViable:true,name:'Soul-Stealing 7-Star Strike',pp:1,priority:0,flags:{contact:1},isZ:'marshadiumz',secondary:null,target:'normal',type:'Ghost',contestType:'Cool'},spacialrend:{num:460,accuracy:95,basePower:100,category:'Special',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'spacialrend',isNonstandard:'Past',name:'Spacial Rend',pp:5,priority:0,flags:{protect:1,mirror:1},critRatio:2,secondary:null,target:'normal',type:'Dragon',contestType:'Beautiful'},spark:{num:209,accuracy:100,basePower:65,category:'Physical',desc:'Has a 30% chance to paralyze the target.',shortDesc:'30% chance to paralyze the target.',id:'spark',name:'Spark',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:30,status:'par'},target:'normal',type:'Electric',contestType:'Cool'},sparklingaria:{num:664,accuracy:100,basePower:90,category:'Special',desc:'If the user has not fainted, the target is cured of its burn.',shortDesc:'The target is cured of its burn.',id:'sparklingaria',name:'Sparkling Aria',pp:10,priority:0,flags:{protect:1,mirror:1,sound:1,authentic:1},secondary:{dustproof:true,chance:100,onHit:function onHit(target){if(target.status==='brn')target.cureStatus();}},target:'allAdjacent',type:'Water',contestType:'Tough'},sparklyswirl:{num:740,accuracy:85,basePower:120,category:'Special',desc:"Every Pokemon in the user's party is cured of its major status condition.",shortDesc:"Cures the user's party of all status conditions.",id:'sparklyswirl',isNonstandard:'LGPE',isViable:true,name:'Sparkly Swirl',pp:5,priority:0,flags:{protect:1},self:{onHit:function onHit(pokemon,source,move){this.add('-activate',source,'move: Aromatherapy');var _iteratorNormalCompletion77=true;var _didIteratorError77=false;var _iteratorError77=undefined;try{for(var _iterator77=source.side.pokemon[Symbol.iterator](),_step77;!(_iteratorNormalCompletion77=(_step77=_iterator77.next()).done);_iteratorNormalCompletion77=true){var ally=_step77.value;if(ally!==source&&ally.volatiles['substitute']&&!move.infiltrates){continue;}ally.cureStatus();}}catch(err){_didIteratorError77=true;_iteratorError77=err;}finally{try{if(!_iteratorNormalCompletion77&&_iterator77.return){_iterator77.return();}}finally{if(_didIteratorError77){throw _iteratorError77;}}}}},secondary:null,target:'normal',type:'Fairy',contestType:'Clever'},spectralthief:{num:712,accuracy:100,basePower:90,category:'Physical',desc:"The target's stat stages greater than 0 are stolen from it and applied to the user before dealing damage.",shortDesc:"Steals target's boosts before dealing damage.",id:'spectralthief',isViable:true,name:'Spectral Thief',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1,authentic:1},stealsBoosts:true,// Boost stealing implemented in scripts.js
secondary:null,target:'normal',type:'Ghost',contestType:'Cool'},speedswap:{num:683,accuracy:true,basePower:0,category:'Status',desc:'The user swaps its Speed stat with the target. Stat stage changes are unaffected.',shortDesc:'Swaps Speed stat with target.',id:'speedswap',name:'Speed Swap',pp:10,priority:0,flags:{protect:1,mirror:1,authentic:1,mystery:1},onHit:function onHit(target,source){var targetSpe=target.storedStats.spe;target.storedStats.spe=source.storedStats.spe;source.storedStats.spe=targetSpe;this.add('-activate',source,'move: Speed Swap','[of] '+target);},secondary:null,target:'normal',type:'Psychic',zMoveBoost:{spe:1},contestType:'Clever'},spiderweb:{num:169,accuracy:true,basePower:0,category:'Status',desc:'Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.',shortDesc:'Prevents the target from switching out.',id:'spiderweb',isNonstandard:'Past',name:'Spider Web',pp:10,priority:0,flags:{protect:1,reflectable:1,mirror:1},onHit:function onHit(target,source,move){return target.addVolatile('trapped',source,move,'trapper');},secondary:null,target:'normal',type:'Bug',zMoveBoost:{def:1},contestType:'Clever'},spikecannon:{num:131,accuracy:100,basePower:20,category:'Physical',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.",shortDesc:'Hits 2-5 times in one turn.',id:'spikecannon',isNonstandard:'Past',name:'Spike Cannon',pp:15,priority:0,flags:{protect:1,mirror:1},multihit:[2,5],secondary:null,target:'normal',type:'Normal',gmaxPower:120,contestType:'Cool'},spikes:{num:191,accuracy:true,basePower:0,category:'Status',desc:'Sets up a hazard on the opposing side of the field, damaging each opposing Pokemon that switches in, unless it is a Flying-type Pokemon or has the Levitate Ability. Can be used up to three times before failing. Opponents lose 1/8 of their maximum HP with one layer, 1/6 of their maximum HP with two layers, and 1/4 of their maximum HP with three layers, all rounded down. Can be removed from the opposing side if any opposing Pokemon uses Rapid Spin or Defog successfully, or is hit by Defog.',shortDesc:'Hurts grounded foes on switch-in. Max 3 layers.',id:'spikes',isViable:true,name:'Spikes',pp:20,priority:0,flags:{reflectable:1,nonsky:1},sideCondition:'spikes',effect:{// this is a side condition
onStart:function onStart(side){this.add('-sidestart',side,'Spikes');this.effectData.layers=1;},onRestart:function onRestart(side){if(this.effectData.layers>=3)return false;this.add('-sidestart',side,'Spikes');this.effectData.layers++;},onSwitchIn:function onSwitchIn(pokemon){if(!pokemon.isGrounded())return;if(pokemon.hasItem('heavydutyboots'))return;var damageAmounts=[0,3,4,6];// 1/8, 1/6, 1/4
this.damage(damageAmounts[this.effectData.layers]*pokemon.maxhp/24);}},secondary:null,target:'foeSide',type:'Ground',zMoveBoost:{def:1},contestType:'Clever'},spikyshield:{num:596,accuracy:true,basePower:0,category:'Status',desc:"The user is protected from most attacks made by other Pokemon during this turn, and Pokemon making contact with the user lose 1/8 of their maximum HP, rounded down. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Detect, Endure, King's Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn.",shortDesc:'Protects from moves. Contact: loses 1/8 max HP.',id:'spikyshield',isViable:true,name:'Spiky Shield',pp:10,priority:4,flags:{},stallingMove:true,volatileStatus:'spikyshield',onTryHit:function onTryHit(target,source,move){return!!this.queue.willAct()&&this.runEvent('StallMove',target);},onHit:function onHit(pokemon){pokemon.addVolatile('stall');},effect:{duration:1,onStart:function onStart(target){this.add('-singleturn',target,'move: Protect');},onTryHitPriority:3,onTryHit:function onTryHit(target,source,move){if(!move.flags['protect']){if(move.isZ||move.isMax)target.getMoveHitData(move).zBrokeProtect=true;return;}this.add('-activate',target,'move: Protect');var lockedmove=source.getVolatile('lockedmove');if(lockedmove){// Outrage counter is reset
if(source.volatiles['lockedmove'].duration===2){delete source.volatiles['lockedmove'];}}if(move.flags['contact']){this.damage(source.baseMaxhp/8,source,target);}return this.NOT_FAIL;},onHit:function onHit(target,source,move){if(move.isZPowered&&move.flags['contact']){this.damage(source.baseMaxhp/8,source,target);}}},secondary:null,target:'self',type:'Grass',zMoveBoost:{def:1},contestType:'Tough'},spiritbreak:{num:789,accuracy:100,basePower:75,category:'Physical',desc:"Has a 100% chance to lower the target's Special Attack by 1 stage.",shortDesc:"100% chance to lower the target's Sp. Atk by 1.",id:'spiritbreak',isViable:true,name:'Spirit Break',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,boosts:{spa:-1}},target:'normal',type:'Fairy'},spiritshackle:{num:662,accuracy:100,basePower:80,category:'Physical',desc:'Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.',shortDesc:'Prevents the target from switching out.',id:'spiritshackle',isViable:true,name:'Spirit Shackle',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,onHit:function onHit(target,source,move){if(source.isActive)target.addVolatile('trapped',source,move,'trapper');}},target:'normal',type:'Ghost',contestType:'Tough'},spitup:{num:255,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon){if(!pokemon.volatiles['stockpile']||!pokemon.volatiles['stockpile'].layers)return false;return pokemon.volatiles['stockpile'].layers*100;},category:'Special',desc:"Power is equal to 100 times the user's Stockpile count. Fails if the user's Stockpile count is 0. Whether or not this move is successful, the user's Defense and Special Defense decrease by as many stages as Stockpile had increased them, and the user's Stockpile count resets to 0.",shortDesc:'More power with more uses of Stockpile.',id:'spitup',name:'Spit Up',pp:10,priority:0,flags:{protect:1},onTry:function onTry(pokemon){if(!pokemon.volatiles['stockpile']){return false;}},onAfterMove:function onAfterMove(pokemon){pokemon.removeVolatile('stockpile');},secondary:null,target:'normal',type:'Normal',contestType:'Tough'},spite:{num:180,accuracy:100,basePower:0,category:'Status',desc:"Causes the target's last move used to lose 4 PP. Fails if the target has not made a move, if the move has 0 PP, or if it no longer knows the move.",shortDesc:"Lowers the PP of the target's last move by 4.",id:'spite',name:'Spite',pp:10,priority:0,flags:{protect:1,reflectable:1,mirror:1,authentic:1},onHit:function onHit(target){var move=target.lastMove;if(!move||move.isZ||move.isMax)return false;var ppDeducted=target.deductPP(move.id,4);if(!ppDeducted)return false;this.add('-activate',target,'move: Spite',move.name,ppDeducted);},secondary:null,target:'normal',type:'Ghost',zMoveEffect:'heal',contestType:'Tough'},splash:{num:150,accuracy:true,basePower:0,category:'Status',shortDesc:'No competitive use.',id:'splash',name:'Splash',pp:40,priority:0,flags:{gravity:1},onTryHit:function onTryHit(target,source){this.add('-nothing');},secondary:null,target:'self',type:'Normal',zMoveBoost:{atk:3},contestType:'Cute'},splinteredstormshards:{num:727,accuracy:true,basePower:190,category:'Physical',desc:'Ends the effects of Electric Terrain, Grassy Terrain, Misty Terrain, and Psychic Terrain.',shortDesc:'Ends the effects of Terrain.',id:'splinteredstormshards',isNonstandard:'Past',isViable:true,name:'Splintered Stormshards',pp:1,priority:0,flags:{},onHit:function onHit(){this.field.clearTerrain();},isZ:'lycaniumz',secondary:null,target:'normal',type:'Rock',contestType:'Cool'},splishysplash:{num:730,accuracy:100,basePower:90,category:'Special',desc:'Has a 30% chance to paralyze the target.',shortDesc:'30% chance to paralyze the target.',id:'splishysplash',isNonstandard:'LGPE',isViable:true,name:'Splishy Splash',pp:15,priority:0,flags:{protect:1},secondary:{chance:30,status:'par'},target:'allAdjacentFoes',type:'Water',contestType:'Cool'},spore:{num:147,accuracy:100,basePower:0,category:'Status',shortDesc:'Causes the target to fall asleep.',id:'spore',isViable:true,name:'Spore',pp:15,priority:0,flags:{powder:1,protect:1,reflectable:1,mirror:1},status:'slp',secondary:null,target:'normal',type:'Grass',zMoveEffect:'clearnegativeboost',contestType:'Beautiful'},spotlight:{num:671,accuracy:true,basePower:0,category:'Status',desc:'Until the end of the turn, all single-target attacks from opponents of the target are redirected to the target. Such attacks are redirected to the target before they can be reflected by Magic Coat or the Magic Bounce Ability, or drawn in by the Lightning Rod or Storm Drain Abilities. Fails if it is not a Double Battle or Battle Royal.',shortDesc:"Target's foes' moves are redirected to it this turn.",id:'spotlight',name:'Spotlight',pp:15,priority:3,flags:{protect:1,reflectable:1,mystery:1},volatileStatus:'spotlight',onTryHit:function onTryHit(target){if(target.side.active.length<2)return false;},effect:{duration:1,onStart:function onStart(pokemon){this.add('-singleturn',pokemon,'move: Spotlight');},onFoeRedirectTargetPriority:2,onFoeRedirectTarget:function onFoeRedirectTarget(target,source,source2,move){if(this.validTarget(this.effectData.target,source,move.target)){this.debug('Spotlight redirected target of move');return this.effectData.target;}}},secondary:null,target:'normal',type:'Normal',zMoveBoost:{spd:1},contestType:'Cute'},stealthrock:{num:446,accuracy:true,basePower:0,category:'Status',desc:'Sets up a hazard on the opposing side of the field, damaging each opposing Pokemon that switches in. Fails if the effect is already active on the opposing side. Foes lose 1/32, 1/16, 1/8, 1/4, or 1/2 of their maximum HP, rounded down, based on their weakness to the Rock type; 0.25x, 0.5x, neutral, 2x, or 4x, respectively. Can be removed from the opposing side if any opposing Pokemon uses Rapid Spin or Defog successfully, or is hit by Defog.',shortDesc:'Hurts foes on switch-in. Factors Rock weakness.',id:'stealthrock',isViable:true,name:'Stealth Rock',pp:20,priority:0,flags:{reflectable:1},sideCondition:'stealthrock',effect:{// this is a side condition
onStart:function onStart(side){this.add('-sidestart',side,'move: Stealth Rock');},onSwitchIn:function onSwitchIn(pokemon){if(pokemon.hasItem('heavydutyboots'))return;var typeMod=this.dex.clampIntRange(pokemon.runEffectiveness(this.dex.getActiveMove('stealthrock')),-6,6);this.damage(pokemon.maxhp*Math.pow(2,typeMod)/8);}},secondary:null,target:'foeSide',type:'Rock',zMoveBoost:{def:1},contestType:'Cool'},steameruption:{num:592,accuracy:95,basePower:110,category:'Special',desc:'Has a 30% chance to burn the target. The target thaws out if it is frozen.',shortDesc:'30% chance to burn the target.',id:'steameruption',isNonstandard:'Past',name:'Steam Eruption',pp:5,priority:0,flags:{protect:1,mirror:1,defrost:1},thawsTarget:true,secondary:{chance:30,status:'brn'},target:'normal',type:'Water',contestType:'Beautiful'},steamroller:{num:537,accuracy:100,basePower:65,category:'Physical',desc:'Has a 30% chance to flinch the target. Damage doubles and no accuracy check is done if the target has used Minimize while active.',shortDesc:'30% chance to flinch the target.',id:'steamroller',isNonstandard:'Past',name:'Steamroller',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Bug',contestType:'Tough'},steelbeam:{num:796,accuracy:95,basePower:140,category:'Special',desc:'If this move is successful, the user loses 1/2 of its maximum HP, rounded up, unless the user has the Magic Guard Ability.',shortDesc:'User loses 50% max HP.',id:'steelbeam',isViable:true,name:'Steel Beam',pp:5,priority:0,flags:{protect:1,mirror:1},mindBlownRecoil:true,onAfterMove:function onAfterMove(pokemon,target,move){if(move.mindBlownRecoil&&!move.multihit){this.damage(Math.round(pokemon.maxhp/2),pokemon,pokemon,this.dex.getEffect('Steel Beam'),true);}},secondary:null,target:'normal',type:'Steel'},steelwing:{num:211,accuracy:90,basePower:70,category:'Physical',desc:"Has a 10% chance to raise the user's Defense by 1 stage.",shortDesc:"10% chance to raise the user's Defense by 1.",id:'steelwing',name:'Steel Wing',pp:25,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:10,self:{boosts:{def:1}}},target:'normal',type:'Steel',contestType:'Cool'},stickyweb:{num:564,accuracy:true,basePower:0,category:'Status',desc:'Sets up a hazard on the opposing side of the field, lowering the Speed by 1 stage of each opposing Pokemon that switches in, unless it is a Flying-type Pokemon or has the Levitate Ability. Fails if the effect is already active on the opposing side. Can be removed from the opposing side if any opposing Pokemon uses Rapid Spin or Defog successfully, or is hit by Defog.',shortDesc:'Lowers Speed of grounded foes by 1 on switch-in.',id:'stickyweb',isViable:true,name:'Sticky Web',pp:20,priority:0,flags:{reflectable:1},sideCondition:'stickyweb',effect:{onStart:function onStart(side){this.add('-sidestart',side,'move: Sticky Web');},onSwitchIn:function onSwitchIn(pokemon){if(!pokemon.isGrounded())return;if(pokemon.hasItem('heavydutyboots'))return;this.add('-activate',pokemon,'move: Sticky Web');this.boost({spe:-1},pokemon,this.effectData.source,this.dex.getActiveMove('stickyweb'));}},secondary:null,target:'foeSide',type:'Bug',zMoveBoost:{spe:1},contestType:'Tough'},stockpile:{num:254,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Defense and Special Defense by 1 stage. The user's Stockpile count increases by 1. Fails if the user's Stockpile count is 3. The user's Stockpile count is reset to 0 when it is no longer active.",shortDesc:"Raises user's Defense, Sp. Def by 1. Max 3 uses.",id:'stockpile',name:'Stockpile',pp:20,priority:0,flags:{snatch:1},onTryHit:function onTryHit(pokemon){if(pokemon.volatiles['stockpile']&&pokemon.volatiles['stockpile'].layers>=3)return false;},volatileStatus:'stockpile',effect:{noCopy:true,onStart:function onStart(target){this.effectData.layers=1;this.effectData.def=0;this.effectData.spd=0;this.add('-start',target,'stockpile'+this.effectData.layers);var _ref4=[target.boosts.def,target.boosts.spd],curDef=_ref4[0],curSpD=_ref4[1];this.boost({def:1,spd:1},target,target);if(curDef!==target.boosts.def)this.effectData.def--;if(curSpD!==target.boosts.spd)this.effectData.spd--;},onRestart:function onRestart(target){if(this.effectData.layers>=3)return false;this.effectData.layers++;this.add('-start',target,'stockpile'+this.effectData.layers);var curDef=target.boosts.def;var curSpD=target.boosts.spd;this.boost({def:1,spd:1},target,target);if(curDef!==target.boosts.def)this.effectData.def--;if(curSpD!==target.boosts.spd)this.effectData.spd--;},onEnd:function onEnd(target){if(this.effectData.def||this.effectData.spd){/** @type {SparseBoostsTable} */var boosts={};if(this.effectData.def)boosts.def=this.effectData.def;if(this.effectData.spd)boosts.spd=this.effectData.spd;this.boost(boosts,target,target);}this.add('-end',target,'Stockpile');if(this.effectData.def!==this.effectData.layers*-1||this.effectData.spd!==this.effectData.layers*-1){this.hint('In Gen 7, Stockpile keeps track of how many times it successfully altered each stat individually.');}}},secondary:null,target:'self',type:'Normal',zMoveEffect:'heal',contestType:'Tough'},stokedsparksurfer:{num:700,accuracy:true,basePower:175,category:'Special',desc:'Has a 100% chance to paralyze the target.',shortDesc:'100% chance to paralyze the target.',id:'stokedsparksurfer',isNonstandard:'Past',isViable:true,name:'Stoked Sparksurfer',pp:1,priority:0,flags:{},isZ:'aloraichiumz',secondary:{chance:100,status:'par'},target:'normal',type:'Electric',contestType:'Cool'},stomp:{num:23,accuracy:100,basePower:65,category:'Physical',desc:'Has a 30% chance to flinch the target. Damage doubles and no accuracy check is done if the target has used Minimize while active.',shortDesc:'30% chance to flinch the target.',id:'stomp',name:'Stomp',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1,nonsky:1},secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Normal',contestType:'Tough'},stompingtantrum:{num:707,accuracy:100,basePower:75,basePowerCallback:function basePowerCallback(pokemon,target,move){if(pokemon.moveLastTurnResult===false)return move.basePower*2;return move.basePower;},category:'Physical',desc:"Power doubles if the user's last move on the previous turn, including moves called by other moves or those used through Instruct, Magic Coat, Snatch, or the Dancer or Magic Bounce Abilities, failed to do any of its normal effects, not including damage from an unsuccessful High Jump Kick, Jump Kick, or Mind Blown, or if the user was prevented from moving by any effect other than recharging or Sky Drop. A move that was blocked by Baneful Bunker, Detect, King's Shield, Protect, Spiky Shield, Crafty Shield, Mat Block, Quick Guard, or Wide Guard will not double this move's power, nor will Bounce or Fly ending early due to the effect of Gravity, Smack Down, or Thousand Arrows.",shortDesc:"Power doubles if the user's last move failed.",id:'stompingtantrum',name:'Stomping Tantrum',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Ground',contestType:'Tough'},stoneedge:{num:444,accuracy:80,basePower:100,category:'Physical',desc:'Has a higher chance for a critical hit.',shortDesc:'High critical hit ratio.',id:'stoneedge',isViable:true,name:'Stone Edge',pp:5,priority:0,flags:{protect:1,mirror:1},critRatio:2,secondary:null,target:'normal',type:'Rock',contestType:'Tough'},storedpower:{num:500,accuracy:100,basePower:20,basePowerCallback:function basePowerCallback(pokemon,target,move){return move.basePower+20*pokemon.positiveBoosts();},category:'Special',desc:"Power is equal to 20+(X*20), where X is the user's total stat stage changes that are greater than 0.",shortDesc:" + 20 power for each of the user's stat boosts.",id:'storedpower',name:'Stored Power',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Psychic',zMovePower:160,gmaxPower:130,contestType:'Clever'},stormthrow:{num:480,accuracy:100,basePower:60,category:'Physical',desc:'This move is always a critical hit unless the target is under the effect of Lucky Chant or has the Battle Armor or Shell Armor Abilities.',shortDesc:'Always results in a critical hit.',id:'stormthrow',isViable:true,name:'Storm Throw',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},willCrit:true,secondary:null,target:'normal',type:'Fighting',contestType:'Cool'},strangesteam:{num:790,accuracy:95,basePower:90,category:'Special',desc:'Has a 20% chance to confuse the target.',shortDesc:'20% chance to confuse the target.',id:'strangesteam',isViable:true,name:'Strange Steam',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:20,volatileStatus:'confusion'},target:'normal',type:'Fairy'},strength:{num:70,accuracy:100,basePower:80,category:'Physical',shortDesc:'No additional effect.',id:'strength',name:'Strength',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',contestType:'Tough'},strengthsap:{num:668,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Attack by 1 stage. The user restores its HP equal to the target's Attack stat calculated with its stat stage before this move was used. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down. Fails if the target's Attack stat stage is -6.",shortDesc:"User heals HP=target's Atk stat. Lowers Atk by 1.",id:'strengthsap',isViable:true,name:'Strength Sap',pp:10,priority:0,flags:{protect:1,reflectable:1,mirror:1,heal:1},onHit:function onHit(target,source){if(target.boosts.atk===-6)return false;var atk=target.getStat('atk',false,true);var success=this.boost({atk:-1},target,source,null,false,true);return!!(this.heal(atk,source,target)||success);},secondary:null,target:'normal',type:'Grass',zMoveBoost:{def:1},contestType:'Cute'},stringshot:{num:81,accuracy:95,basePower:0,category:'Status',desc:"Lowers the target's Speed by 2 stages.",shortDesc:'Lowers the foe(s) Speed by 2.',id:'stringshot',name:'String Shot',pp:40,priority:0,flags:{protect:1,reflectable:1,mirror:1},boosts:{spe:-2},secondary:null,target:'allAdjacentFoes',type:'Bug',zMoveBoost:{spe:1},contestType:'Clever'},struggle:{num:165,accuracy:true,basePower:50,category:'Physical',desc:"Deals typeless damage to a random opposing Pokemon. If this move was successful, the user loses 1/4 of its maximum HP, rounded half up, and the Rock Head Ability does not prevent this. This move is automatically used if none of the user's known moves can be selected.",shortDesc:'User loses 1/4 of its max HP.',id:'struggle',name:'Struggle',pp:1,noPPBoosts:true,priority:0,flags:{contact:1,protect:1},noSketch:true,onModifyMove:function onModifyMove(move,pokemon,target){move.type='???';this.add('-activate',pokemon,'move: Struggle');},struggleRecoil:true,secondary:null,target:'randomNormal',type:'Normal',zMovePower:1,contestType:'Tough'},strugglebug:{num:522,accuracy:100,basePower:50,category:'Special',desc:"Has a 100% chance to lower the target's Special Attack by 1 stage.",shortDesc:'100% chance to lower the foe(s) Sp. Atk by 1.',id:'strugglebug',name:'Struggle Bug',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:{chance:100,boosts:{spa:-1}},target:'allAdjacentFoes',type:'Bug',contestType:'Cute'},stuffcheeks:{num:747,accuracy:true,basePower:0,category:'Status',desc:"Consumes berry and raises the user's Defense by 2 stages.",shortDesc:"Consumes berry and raises the user's Def. by 2.",id:'stuffcheeks',name:'Stuff Cheeks',pp:10,priority:0,flags:{snatch:1},onTryHit:function onTryHit(target,source,move){var item=source.getItem();if(item.isBerry&&source.eatItem(true)){this.boost({def:2},source,null,null,false,true);}else{return false;}},secondary:null,target:'self',type:'Normal'},stunspore:{num:78,accuracy:75,basePower:0,category:'Status',desc:'Paralyzes the target.',shortDesc:'Paralyzes the target.',id:'stunspore',name:'Stun Spore',pp:30,priority:0,flags:{powder:1,protect:1,reflectable:1,mirror:1},status:'par',secondary:null,target:'normal',type:'Grass',zMoveBoost:{spd:1},contestType:'Clever'},submission:{num:66,accuracy:80,basePower:80,category:'Physical',desc:'If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded half up, but not less than 1 HP.',shortDesc:'Has 1/4 recoil.',id:'submission',name:'Submission',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},recoil:[1,4],secondary:null,target:'normal',type:'Fighting',contestType:'Cool'},substitute:{num:164,accuracy:true,basePower:0,category:'Status',desc:'The user takes 1/4 of its maximum HP, rounded down, and puts it into a substitute to take its place in battle. The substitute is removed once enough damage is inflicted on it, or if the user switches out or faints. Baton Pass can be used to transfer the substitute to an ally, and the substitute will keep its remaining HP. Until the substitute is broken, it receives damage from all attacks made by other Pokemon and shields the user from status effects and stat stage changes caused by other Pokemon. Sound-based moves and Pokemon with the Infiltrator Ability ignore substitutes. The user still takes normal damage from weather and status effects while behind its substitute. If the substitute breaks during a multi-hit attack, the user will take damage from any remaining hits. If a substitute is created while the user is trapped by a binding move, the binding effect ends immediately. Fails if the user does not have enough HP remaining to create a substitute without fainting, or if it already has a substitute.',shortDesc:'User takes 1/4 its max HP to put in a substitute.',id:'substitute',isViable:true,name:'Substitute',pp:10,priority:0,flags:{snatch:1,nonsky:1},volatileStatus:'substitute',onTryHit:function onTryHit(target){if(target.volatiles['substitute']){this.add('-fail',target,'move: Substitute');return null;}if(target.hp<=target.maxhp/4||target.maxhp===1){// Shedinja clause
this.add('-fail',target,'move: Substitute','[weak]');return null;}},onHit:function onHit(target){this.directDamage(target.maxhp/4);},effect:{onStart:function onStart(target){this.add('-start',target,'Substitute');this.effectData.hp=Math.floor(target.maxhp/4);delete target.volatiles['partiallytrapped'];},onTryPrimaryHitPriority:-1,onTryPrimaryHit:function onTryPrimaryHit(target,source,move){if(target===source||move.flags['authentic']||move.infiltrates){return;}var damage=this.getDamage(source,target,move);if(!damage&&damage!==0){this.add('-fail',source);this.attrLastMove('[still]');return null;}damage=this.runEvent('SubDamage',target,source,move,damage);if(!damage){return damage;}if(damage>target.volatiles['substitute'].hp){damage=/** @type {number} */target.volatiles['substitute'].hp;}target.volatiles['substitute'].hp-=damage;source.lastDamage=damage;if(target.volatiles['substitute'].hp<=0){target.removeVolatile('substitute');}else{this.add('-activate',target,'move: Substitute','[damage]');}if(move.recoil){this.damage(this.calcRecoilDamage(damage,move),source,target,'recoil');}if(move.drain){this.heal(Math.ceil(damage*move.drain[0]/move.drain[1]),source,target,'drain');}this.singleEvent('AfterSubDamage',move,null,target,source,move,damage);this.runEvent('AfterSubDamage',target,source,move,damage);return 0;// hit
},onEnd:function onEnd(target){this.add('-end',target,'Substitute');}},secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Cute'},subzeroslammer:{num:650,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'subzeroslammer',isNonstandard:'Past',name:'Subzero Slammer',pp:1,priority:0,flags:{},isZ:'iciumz',secondary:null,target:'normal',type:'Ice',contestType:'Cool'},suckerpunch:{num:389,accuracy:100,basePower:70,category:'Physical',desc:'Fails if the target did not select a physical attack, special attack, or Me First for use this turn, or if the target moves before the user.',shortDesc:'Usually goes first. Fails if target is not attacking.',id:'suckerpunch',isViable:true,name:'Sucker Punch',pp:5,priority:1,flags:{contact:1,protect:1,mirror:1},onTry:function onTry(source,target){var action=this.queue.willMove(target);if(!action||action.choice!=='move'||action.move.category==='Status'&&action.move.id!=='mefirst'||target.volatiles.mustrecharge){this.add('-fail',source);this.attrLastMove('[still]');return null;}},secondary:null,target:'normal',type:'Dark',contestType:'Clever'},sunnyday:{num:241,accuracy:true,basePower:0,category:'Status',desc:'For 5 turns, the weather becomes Sunny Day. The damage of Fire-type attacks is multiplied by 1.5 and the damage of Water-type attacks is multiplied by 0.5 during the effect. Lasts for 8 turns if the user is holding Heat Rock. Fails if the current weather is Sunny Day.',shortDesc:'For 5 turns, intense sunlight powers Fire moves.',id:'sunnyday',name:'Sunny Day',pp:5,priority:0,flags:{},weather:'sunnyday',secondary:null,target:'all',type:'Fire',zMoveBoost:{spe:1},contestType:'Beautiful'},sunsteelstrike:{num:713,accuracy:100,basePower:100,category:'Physical',desc:'This move and its effects ignore the Abilities of other Pokemon.',shortDesc:'Ignores the Abilities of other Pokemon.',id:'sunsteelstrike',isViable:true,name:'Sunsteel Strike',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},ignoreAbility:true,secondary:null,target:'normal',type:'Steel',contestType:'Cool'},superfang:{num:162,accuracy:90,basePower:0,damageCallback:function damageCallback(pokemon,target){return this.dex.clampIntRange(target.getUndynamaxedHP()/2,1);},category:'Physical',desc:'Deals damage to the target equal to half of its current HP, rounded down, but not less than 1 HP.',shortDesc:"Does damage equal to 1/2 target's current HP.",id:'superfang',name:'Super Fang',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',contestType:'Tough'},superpower:{num:276,accuracy:100,basePower:120,category:'Physical',desc:"Lowers the user's Attack and Defense by 1 stage.",shortDesc:"Lowers the user's Attack and Defense by 1.",id:'superpower',isViable:true,name:'Superpower',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},self:{boosts:{atk:-1,def:-1}},secondary:null,target:'normal',type:'Fighting',contestType:'Tough'},supersonic:{num:48,accuracy:55,basePower:0,category:'Status',shortDesc:'Causes the target to become confused.',id:'supersonic',name:'Supersonic',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1,sound:1,authentic:1},volatileStatus:'confusion',secondary:null,target:'normal',type:'Normal',zMoveBoost:{spe:1},contestType:'Clever'},supersonicskystrike:{num:626,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'supersonicskystrike',isNonstandard:'Past',name:'Supersonic Skystrike',pp:1,priority:0,flags:{},isZ:'flyiniumz',secondary:null,target:'normal',type:'Flying',contestType:'Cool'},surf:{num:57,accuracy:100,basePower:90,category:'Special',desc:'Damage doubles if the target is using Dive.',shortDesc:'Hits adjacent Pokemon. Double damage on Dive.',id:'surf',isViable:true,name:'Surf',pp:15,priority:0,flags:{protect:1,mirror:1,nonsky:1},secondary:null,target:'allAdjacent',type:'Water',contestType:'Beautiful'},swagger:{num:207,accuracy:85,basePower:0,category:'Status',desc:"Raises the target's Attack by 2 stages and confuses it.",shortDesc:"Raises the target's Attack by 2 and confuses it.",id:'swagger',name:'Swagger',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},volatileStatus:'confusion',boosts:{atk:2},secondary:null,target:'normal',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Cute'},swallow:{num:256,accuracy:true,basePower:0,category:'Status',desc:"The user restores its HP based on its Stockpile count. Restores 1/4 of its maximum HP if it's 1, 1/2 of its maximum HP if it's 2, both rounded half down, and all of its HP if it's 3. Fails if the user's Stockpile count is 0. The user's Defense and Special Defense decrease by as many stages as Stockpile had increased them, and the user's Stockpile count resets to 0.",shortDesc:'Heals the user based on uses of Stockpile.',id:'swallow',name:'Swallow',pp:10,priority:0,flags:{snatch:1,heal:1},onTryHit:function onTryHit(pokemon){if(!pokemon.volatiles['stockpile']||!pokemon.volatiles['stockpile'].layers)return false;},onHit:function onHit(pokemon){var healAmount=[0.25,0.5,1];var healedBy=this.heal(this.modify(pokemon.maxhp,healAmount[pokemon.volatiles['stockpile'].layers-1]));pokemon.removeVolatile('stockpile');return!!healedBy;},secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Tough'},sweetkiss:{num:186,accuracy:75,basePower:0,category:'Status',shortDesc:'Causes the target to become confused.',id:'sweetkiss',name:'Sweet Kiss',pp:10,priority:0,flags:{protect:1,reflectable:1,mirror:1},volatileStatus:'confusion',secondary:null,target:'normal',type:'Fairy',zMoveBoost:{spa:1},contestType:'Cute'},sweetscent:{num:230,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's evasiveness by 2 stages.",shortDesc:'Lowers the foe(s) evasiveness by 2.',id:'sweetscent',name:'Sweet Scent',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1},boosts:{evasion:-2},secondary:null,target:'allAdjacentFoes',type:'Normal',zMoveBoost:{accuracy:1},contestType:'Cute'},swift:{num:129,accuracy:true,basePower:60,category:'Special',desc:'This move does not check accuracy.',shortDesc:'This move does not check accuracy. Hits foes.',id:'swift',name:'Swift',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'allAdjacentFoes',type:'Normal',contestType:'Cool'},switcheroo:{num:415,accuracy:100,basePower:0,category:'Status',desc:"The user swaps its held item with the target's held item. Fails if either the user or the target is holding a Mail or Z-Crystal, if neither is holding an item, if the user is trying to give or take a Mega Stone to or from the species that can Mega Evolve with it, or if the user is trying to give or take a Blue Orb, a Red Orb, a Griseous Orb, a Plate, a Drive, or a Memory to or from a Kyogre, a Groudon, a Giratina, an Arceus, a Genesect, or a Silvally, respectively. The target is immune to this move if it has the Sticky Hold Ability.",shortDesc:"User switches its held item with the target's.",id:'switcheroo',isViable:true,name:'Switcheroo',pp:10,priority:0,flags:{protect:1,mirror:1,mystery:1},onTryImmunity:function onTryImmunity(target){return!target.hasAbility('stickyhold');},onHit:function onHit(target,source,move){var yourItem=target.takeItem(source);var myItem=source.takeItem();if(target.item||source.item||!yourItem&&!myItem){if(yourItem)target.item=yourItem.id;if(myItem)source.item=myItem.id;return false;}if(myItem&&!this.singleEvent('TakeItem',myItem,source.itemData,target,source,move,myItem)||yourItem&&!this.singleEvent('TakeItem',yourItem,target.itemData,source,target,move,yourItem)){if(yourItem)target.item=yourItem.id;if(myItem)source.item=myItem.id;return false;}this.add('-activate',source,'move: Trick','[of] '+target);if(myItem){target.setItem(myItem);this.add('-item',target,myItem,'[from] move: Switcheroo');}else{this.add('-enditem',target,yourItem,'[silent]','[from] move: Switcheroo');}if(yourItem){source.setItem(yourItem);this.add('-item',source,yourItem,'[from] move: Switcheroo');}else{this.add('-enditem',source,myItem,'[silent]','[from] move: Switcheroo');}},secondary:null,target:'normal',type:'Dark',zMoveBoost:{spe:2},contestType:'Clever'},swordsdance:{num:14,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Attack by 2 stages.",shortDesc:"Raises the user's Attack by 2.",id:'swordsdance',isViable:true,name:'Swords Dance',pp:20,priority:0,flags:{snatch:1,dance:1},boosts:{atk:2},secondary:null,target:'self',type:'Normal',zMoveEffect:'clearnegativeboost',contestType:'Beautiful'},synchronoise:{num:485,accuracy:100,basePower:120,category:'Special',desc:'The target is immune if it does not share a type with the user.',shortDesc:"Hits adjacent Pokemon sharing the user's type.",id:'synchronoise',isNonstandard:'Past',name:'Synchronoise',pp:10,priority:0,flags:{protect:1,mirror:1},onTryImmunity:function onTryImmunity(target,source){return target.hasType(source.getTypes());},secondary:null,target:'allAdjacent',type:'Psychic',contestType:'Clever'},synthesis:{num:235,accuracy:true,basePower:0,category:'Status',desc:'The user restores 1/2 of its maximum HP if Delta Stream or no weather conditions are in effect or if the user is holding Utility Umbrella, 2/3 of its maximum HP if the weather is Desolate Land or Sunny Day, and 1/4 of its maximum HP if the weather is Hail, Primordial Sea, Rain Dance, or Sandstorm, all rounded half down.',shortDesc:'Heals the user by a weather-dependent amount.',id:'synthesis',isViable:true,name:'Synthesis',pp:5,priority:0,flags:{snatch:1,heal:1},onHit:function onHit(pokemon){var factor=0.5;switch(pokemon.effectiveWeather()){case'sunnyday':case'desolateland':factor=0.667;break;case'raindance':case'primordialsea':case'sandstorm':case'hail':factor=0.25;break;}return!!this.heal(this.modify(pokemon.maxhp,factor));},secondary:null,target:'self',type:'Grass',zMoveEffect:'clearnegativeboost',contestType:'Clever'},tackle:{num:33,accuracy:100,basePower:40,category:'Physical',shortDesc:'No additional effect.',id:'tackle',name:'Tackle',pp:35,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',contestType:'Tough'},tailglow:{num:294,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Special Attack by 3 stages.",shortDesc:"Raises the user's Sp. Atk by 3.",id:'tailglow',isNonstandard:'Past',name:'Tail Glow',pp:20,priority:0,flags:{snatch:1},boosts:{spa:3},secondary:null,target:'self',type:'Bug',zMoveEffect:'clearnegativeboost',contestType:'Beautiful'},tailslap:{num:541,accuracy:85,basePower:25,category:'Physical',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.",shortDesc:'Hits 2-5 times in one turn.',id:'tailslap',isViable:true,name:'Tail Slap',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},multihit:[2,5],secondary:null,target:'normal',type:'Normal',zMovePower:140,gmaxPower:130,contestType:'Cute'},tailwhip:{num:39,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Defense by 1 stage.",shortDesc:'Lowers the foe(s) Defense by 1.',id:'tailwhip',name:'Tail Whip',pp:30,priority:0,flags:{protect:1,reflectable:1,mirror:1},boosts:{def:-1},secondary:null,target:'allAdjacentFoes',type:'Normal',zMoveBoost:{atk:1},contestType:'Cute'},tailwind:{num:366,accuracy:true,basePower:0,category:'Status',desc:"For 4 turns, the user and its party members have their Speed doubled. Fails if this move is already in effect for the user's side.",shortDesc:"For 4 turns, allies' Speed is doubled.",id:'tailwind',isViable:true,name:'Tailwind',pp:15,priority:0,flags:{snatch:1},sideCondition:'tailwind',effect:{duration:4,durationCallback:function durationCallback(target,source,effect){if(source&&source.hasAbility('persistent')){this.add('-activate',source,'ability: Persistent',effect);return 6;}return 4;},onStart:function onStart(side){this.add('-sidestart',side,'move: Tailwind');},onModifySpe:function onModifySpe(spe,pokemon){return this.chainModify(2);},onResidualOrder:21,onResidualSubOrder:4,onEnd:function onEnd(side){this.add('-sideend',side,'move: Tailwind');}},secondary:null,target:'allySide',type:'Flying',zMoveEffect:'crit2',contestType:'Cool'},takedown:{num:36,accuracy:85,basePower:90,category:'Physical',desc:'If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded half up, but not less than 1 HP.',shortDesc:'Has 1/4 recoil.',id:'takedown',name:'Take Down',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},recoil:[1,4],secondary:null,target:'normal',type:'Normal',contestType:'Tough'},tarshot:{num:749,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Speed by 1 stage. Until the target switches out, its effectiveness against Fire type moves is changed.",shortDesc:'Target gets -1 Spe and becomes weaker to Fire.',id:'tarshot',name:'Tar Shot',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1},volatileStatus:'tarshot',effect:{onStart:function onStart(pokemon){this.add('-start',pokemon,'Tar Shot');},onEffectiveness:function onEffectiveness(typeMod,target,type,move){if(!target)return;if(move.type==='Fire'){return this.dex.getEffectiveness('Fire',target)+1;}}},boosts:{spe:-1},secondary:null,target:'normal',type:'Rock'},taunt:{num:269,accuracy:100,basePower:0,category:'Status',desc:'Prevents the target from using non-damaging moves for its next three turns. Pokemon with the Oblivious Ability or protected by the Aroma Veil Ability are immune.',shortDesc:"Target can't use status moves its next 3 turns.",id:'taunt',isViable:true,name:'Taunt',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1,authentic:1},volatileStatus:'taunt',effect:{duration:3,onStart:function onStart(target){if(target.activeTurns&&!this.queue.willMove(target)){this.effectData.duration++;}this.add('-start',target,'move: Taunt');},onResidualOrder:12,onEnd:function onEnd(target){this.add('-end',target,'move: Taunt');},onDisableMove:function onDisableMove(pokemon){var _iteratorNormalCompletion78=true;var _didIteratorError78=false;var _iteratorError78=undefined;try{for(var _iterator78=pokemon.moveSlots[Symbol.iterator](),_step78;!(_iteratorNormalCompletion78=(_step78=_iterator78.next()).done);_iteratorNormalCompletion78=true){var moveSlot=_step78.value;if(this.dex.getMove(moveSlot.id).category==='Status'){pokemon.disableMove(moveSlot.id);}}}catch(err){_didIteratorError78=true;_iteratorError78=err;}finally{try{if(!_iteratorNormalCompletion78&&_iterator78.return){_iterator78.return();}}finally{if(_didIteratorError78){throw _iteratorError78;}}}},onBeforeMovePriority:5,onBeforeMove:function onBeforeMove(attacker,defender,move){if(!move.isZ&&!move.isMax&&move.category==='Status'){this.add('cant',attacker,'move: Taunt',move);return false;}}},secondary:null,target:'normal',type:'Dark',zMoveBoost:{atk:1},contestType:'Clever'},tearfullook:{num:715,accuracy:true,basePower:0,category:'Status',desc:"Lowers the target's Attack and Special Attack by 1 stage.",shortDesc:"Lowers the target's Attack and Sp. Atk by 1.",id:'tearfullook',name:'Tearful Look',pp:20,priority:0,flags:{reflectable:1,mirror:1},boosts:{atk:-1,spa:-1},secondary:null,target:'normal',type:'Normal',zMoveBoost:{def:1},contestType:'Cute'},teatime:{num:752,accuracy:true,basePower:0,category:'Status',desc:'Forces all active Pokemon to consume their held berries. This move bypasses Substitutes and Unnerve.',shortDesc:'All active Pokemon consume held Berries.',id:'teatime',name:'Teatime',pp:10,priority:0,flags:{authentic:1},onHitField:function onHitField(target,source,move){var result=false;var _iteratorNormalCompletion79=true;var _didIteratorError79=false;var _iteratorError79=undefined;try{for(var _iterator79=this.getAllActive()[Symbol.iterator](),_step79;!(_iteratorNormalCompletion79=(_step79=_iterator79.next()).done);_iteratorNormalCompletion79=true){var active=_step79.value;if(this.runEvent('Invulnerability',active,source,move)===false){this.add('-miss',source,active);result=true;}else{var item=active.getItem();if(active.hp&&item.isBerry){// bypasses Unnerve
active.eatItem(true);result=true;}}}}catch(err){_didIteratorError79=true;_iteratorError79=err;}finally{try{if(!_iteratorNormalCompletion79&&_iterator79.return){_iterator79.return();}}finally{if(_didIteratorError79){throw _iteratorError79;}}}return result;},secondary:null,target:'all',type:'Normal'},technoblast:{num:546,accuracy:100,basePower:120,category:'Special',desc:"This move's type depends on the user's held Drive.",shortDesc:'Type varies based on the held Drive.',id:'technoblast',isNonstandard:'Past',name:'Techno Blast',pp:5,priority:0,flags:{protect:1,mirror:1},onModifyType:function onModifyType(move,pokemon){if(pokemon.ignoringItem())return;move.type=this.runEvent('Drive',pokemon,null,move,'Normal');},secondary:null,target:'normal',type:'Normal',contestType:'Cool'},tectonicrage:{num:630,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'tectonicrage',isNonstandard:'Past',name:'Tectonic Rage',pp:1,priority:0,flags:{},isZ:'groundiumz',secondary:null,target:'normal',type:'Ground',contestType:'Cool'},teeterdance:{num:298,accuracy:100,basePower:0,category:'Status',desc:'Causes the target to become confused.',shortDesc:'Confuses adjacent Pokemon.',id:'teeterdance',name:'Teeter Dance',pp:20,priority:0,flags:{protect:1,mirror:1,dance:1},volatileStatus:'confusion',secondary:null,target:'allAdjacent',type:'Normal',zMoveBoost:{spa:1},contestType:'Cute'},telekinesis:{num:477,accuracy:true,basePower:0,category:'Status',desc:'For 3 turns, the target cannot avoid any attacks made against it, other than OHKO moves, as long as it remains active. During the effect, the target is immune to Ground-type attacks and the effects of Spikes, Toxic Spikes, Sticky Web, and the Arena Trap Ability as long as it remains active. If the target uses Baton Pass, the replacement will gain the effect. Ingrain, Smack Down, Thousand Arrows, and Iron Ball override this move if the target is under any of their effects. Fails if the target is already under this effect or the effects of Ingrain, Smack Down, or Thousand Arrows. The target is immune to this move on use if its species is Diglett, Dugtrio, Alolan Diglett, Alolan Dugtrio, Sandygast, Palossand, or Gengar while Mega-Evolved. Mega Gengar cannot be under this effect by any means.',shortDesc:"For 3 turns, target floats but moves can't miss it.",id:'telekinesis',isNonstandard:'Past',name:'Telekinesis',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1,gravity:1,mystery:1},volatileStatus:'telekinesis',effect:{duration:3,onStart:function onStart(target){if(['Diglett','Dugtrio','Palossand','Sandygast'].includes(target.baseTemplate.baseSpecies)||target.baseTemplate.species==='Gengar-Mega'){this.add('-immune',target);return null;}if(target.volatiles['smackdown']||target.volatiles['ingrain'])return false;this.add('-start',target,'Telekinesis');},onAccuracyPriority:-1,onAccuracy:function onAccuracy(accuracy,target,source,move){if(move&&!move.ohko)return true;},onImmunity:function onImmunity(type){if(type==='Ground')return false;},onUpdate:function onUpdate(pokemon){if(pokemon.baseTemplate.species==='Gengar-Mega'){delete pokemon.volatiles['telekinesis'];this.add('-end',pokemon,'Telekinesis','[silent]');}},onResidualOrder:16,onEnd:function onEnd(target){this.add('-end',target,'Telekinesis');}},secondary:null,target:'normal',type:'Psychic',zMoveBoost:{spa:1},contestType:'Clever'},teleport:{num:100,accuracy:true,basePower:0,category:'Status',desc:'If this move is successful and the user has not fainted, the user switches out even if it is trapped and is replaced immediately by a selected party member. The user does not switch out if there are no unfainted party members.',shortDesc:'User switches out.',id:'teleport',name:'Teleport',pp:20,priority:-6,flags:{},selfSwitch:true,onTryHit:true,secondary:null,target:'self',type:'Psychic',zMoveEffect:'heal',contestType:'Cool'},thief:{num:168,accuracy:100,basePower:60,category:'Physical',desc:"If this attack was successful and the user has not fainted, it steals the target's held item if the user is not holding one. The target's item is not stolen if it is a Mail or Z-Crystal, or if the target is a Kyogre holding a Blue Orb, a Groudon holding a Red Orb, a Giratina holding a Griseous Orb, an Arceus holding a Plate, a Genesect holding a Drive, a Silvally holding a Memory, or a Pokemon that can Mega Evolve holding the Mega Stone for its species. Items lost to this move cannot be regained with Recycle or the Harvest Ability.",shortDesc:"If the user has no item, it steals the target's.",id:'thief',name:'Thief',pp:25,priority:0,flags:{contact:1,protect:1,mirror:1},onAfterHit:function onAfterHit(target,source,move){if(source.item||source.volatiles['gem']){return;}var yourItem=target.takeItem(source);if(!yourItem){return;}if(!this.singleEvent('TakeItem',yourItem,target.itemData,source,target,move,yourItem)||!source.setItem(yourItem)){target.item=yourItem.id;// bypass setItem so we don't break choicelock or anything
return;}this.add('-enditem',target,yourItem,'[silent]','[from] move: Thief','[of] '+source);this.add('-item',source,yourItem,'[from] move: Thief','[of] '+target);},secondary:null,target:'normal',type:'Dark',contestType:'Tough'},thousandarrows:{num:614,accuracy:100,basePower:90,category:'Physical',desc:'This move can hit airborne Pokemon, which includes Flying-type Pokemon, Pokemon with the Levitate Ability, Pokemon holding an Air Balloon, and Pokemon under the effect of Magnet Rise or Telekinesis. If the target is a Flying type and is not already grounded, this move deals neutral damage regardless of its other type(s). This move can hit a target using Bounce, Fly, or Sky Drop. If this move hits a target under the effect of Bounce, Fly, Magnet Rise, or Telekinesis, the effect ends. If the target is a Flying type that has not used Roost this turn or a Pokemon with the Levitate Ability, it loses its immunity to Ground-type attacks and the Arena Trap Ability as long as it remains active. During the effect, Magnet Rise fails for the target and Telekinesis fails against the target.',shortDesc:'Grounds adjacent foes. First hit neutral on Flying.',id:'thousandarrows',isNonstandard:'Past',isViable:true,name:'Thousand Arrows',pp:10,priority:0,flags:{protect:1,mirror:1,nonsky:1},onEffectiveness:function onEffectiveness(typeMod,target,type,move){if(move.type!=='Ground')return;if(!target)return;// avoid crashing when called from a chat plugin
// ignore effectiveness if the target is Flying type and immune to Ground
if(!target.runImmunity('Ground')){if(target.hasType('Flying'))return 0;}},volatileStatus:'smackdown',ignoreImmunity:{Ground:true},secondary:null,target:'allAdjacentFoes',type:'Ground',zMovePower:180,contestType:'Beautiful'},thousandwaves:{num:615,accuracy:100,basePower:90,category:'Physical',desc:'Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.',shortDesc:'Hits adjacent foes. Prevents them from switching.',id:'thousandwaves',isNonstandard:'Past',isViable:true,name:'Thousand Waves',pp:10,priority:0,flags:{protect:1,mirror:1,nonsky:1},onHit:function onHit(target,source,move){if(source.isActive)target.addVolatile('trapped',source,move,'trapper');},secondary:null,target:'allAdjacentFoes',type:'Ground',contestType:'Tough'},thrash:{num:37,accuracy:100,basePower:120,category:'Physical',desc:'The user spends two or three turns locked into this move and becomes confused immediately after its move on the last turn of the effect if it is not already. This move targets an opposing Pokemon at random on each turn. If the user is prevented from moving, is asleep at the beginning of a turn, or the attack is not successful against the target on the first turn of the effect or the second turn of a three-turn effect, the effect ends without causing confusion. If this move is called by Sleep Talk and the user is asleep, the move is used for one turn and does not confuse the user.',shortDesc:'Lasts 2-3 turns. Confuses the user afterwards.',id:'thrash',name:'Thrash',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},self:{volatileStatus:'lockedmove'},onAfterMove:function onAfterMove(pokemon){if(pokemon.volatiles['lockedmove']&&pokemon.volatiles['lockedmove'].duration===1){pokemon.removeVolatile('lockedmove');}},secondary:null,target:'randomNormal',type:'Normal',contestType:'Tough'},throatchop:{num:675,accuracy:100,basePower:80,category:'Physical',desc:'For 2 turns, the target cannot use sound-based moves.',shortDesc:'For 2 turns, the target cannot use sound moves.',id:'throatchop',isViable:true,name:'Throat Chop',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},effect:{duration:2,onStart:function onStart(target){this.add('-start',target,'Throat Chop','[silent]');},onDisableMove:function onDisableMove(pokemon){var _iteratorNormalCompletion80=true;var _didIteratorError80=false;var _iteratorError80=undefined;try{for(var _iterator80=pokemon.moveSlots[Symbol.iterator](),_step80;!(_iteratorNormalCompletion80=(_step80=_iterator80.next()).done);_iteratorNormalCompletion80=true){var moveSlot=_step80.value;if(this.dex.getMove(moveSlot.id).flags['sound']){pokemon.disableMove(moveSlot.id);}}}catch(err){_didIteratorError80=true;_iteratorError80=err;}finally{try{if(!_iteratorNormalCompletion80&&_iterator80.return){_iterator80.return();}}finally{if(_didIteratorError80){throw _iteratorError80;}}}},onBeforeMovePriority:6,onBeforeMove:function onBeforeMove(pokemon,target,move){if(!move.isZ&&!move.isMax&&move.flags['sound']){this.add('cant',pokemon,'move: Throat Chop');return false;}},onResidualOrder:22,onEnd:function onEnd(target){this.add('-end',target,'Throat Chop','[silent]');}},secondary:{chance:100,onHit:function onHit(target){target.addVolatile('throatchop');}},target:'normal',type:'Dark',contestType:'Clever'},thunder:{num:87,accuracy:70,basePower:110,category:'Special',desc:"Has a 30% chance to paralyze the target. This move can hit a target using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop. If the weather is Primordial Sea or Rain Dance, this move does not check accuracy. If the weather is Desolate Land or Sunny Day, this move's accuracy is 50%. If this move is used against a Pokemon holding Utility Umbrella, this move's accuracy remains at 70%.",shortDesc:"30% chance to paralyze. Can't miss in rain.",id:'thunder',isViable:true,name:'Thunder',pp:10,priority:0,flags:{protect:1,mirror:1},onModifyMove:function onModifyMove(move,pokemon,target){switch(pokemon.effectiveWeather()){case'raindance':case'primordialsea':move.accuracy=true;break;case'sunnyday':case'desolateland':move.accuracy=50;break;}},secondary:{chance:30,status:'par'},target:'normal',type:'Electric',contestType:'Cool'},thunderbolt:{num:85,accuracy:100,basePower:90,category:'Special',desc:'Has a 10% chance to paralyze the target.',shortDesc:'10% chance to paralyze the target.',id:'thunderbolt',isViable:true,name:'Thunderbolt',pp:15,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,status:'par'},target:'normal',type:'Electric',contestType:'Cool'},thunderfang:{num:422,accuracy:95,basePower:65,category:'Physical',desc:'Has a 10% chance to paralyze the target and a 10% chance to flinch it.',shortDesc:'10% chance to paralyze. 10% chance to flinch.',id:'thunderfang',name:'Thunder Fang',pp:15,priority:0,flags:{bite:1,contact:1,protect:1,mirror:1},secondaries:[{chance:10,status:'par'},{chance:10,volatileStatus:'flinch'}],target:'normal',type:'Electric',contestType:'Cool'},thunderpunch:{num:9,accuracy:100,basePower:75,category:'Physical',desc:'Has a 10% chance to paralyze the target.',shortDesc:'10% chance to paralyze the target.',id:'thunderpunch',isViable:true,name:'Thunder Punch',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1,punch:1},secondary:{chance:10,status:'par'},target:'normal',type:'Electric',contestType:'Cool'},thundershock:{num:84,accuracy:100,basePower:40,category:'Special',desc:'Has a 10% chance to paralyze the target.',shortDesc:'10% chance to paralyze the target.',id:'thundershock',name:'Thunder Shock',pp:30,priority:0,flags:{protect:1,mirror:1},secondary:{chance:10,status:'par'},target:'normal',type:'Electric',contestType:'Cool'},thunderwave:{num:86,accuracy:90,basePower:0,category:'Status',desc:'Paralyzes the target. This move does not ignore type immunity.',shortDesc:'Paralyzes the target.',id:'thunderwave',isViable:true,name:'Thunder Wave',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1},status:'par',ignoreImmunity:false,secondary:null,target:'normal',type:'Electric',zMoveBoost:{spd:1},contestType:'Cool'},tickle:{num:321,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Attack and Defense by 1 stage.",shortDesc:"Lowers the target's Attack and Defense by 1.",id:'tickle',name:'Tickle',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},boosts:{atk:-1,def:-1},secondary:null,target:'normal',type:'Normal',zMoveBoost:{def:1},contestType:'Cute'},topsyturvy:{num:576,accuracy:true,basePower:0,category:'Status',desc:"The target's positive stat stages become negative and vice versa. Fails if all of the target's stat stages are 0.",shortDesc:"Inverts the target's stat stages.",id:'topsyturvy',name:'Topsy-Turvy',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},onHit:function onHit(target){var success=false;for(var i in target.boosts){// @ts-ignore
if(target.boosts[i]===0)continue;// @ts-ignore
target.boosts[i]=-target.boosts[i];success=true;}if(!success)return false;this.add('-invertboost',target,'[from] move: Topsy-Turvy');},secondary:null,target:'normal',type:'Dark',zMoveBoost:{atk:1},contestType:'Clever'},torment:{num:259,accuracy:100,basePower:0,category:'Status',desc:'Prevents the target from selecting the same move for use two turns in a row. This effect ends when the target is no longer active.',shortDesc:"Target can't select the same move twice in a row.",id:'torment',name:'Torment',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1,authentic:1},volatileStatus:'torment',effect:{noCopy:true,onStart:function onStart(pokemon){if(pokemon.volatiles['dynamax']){delete pokemon.volatiles['torment'];return false;}this.add('-start',pokemon,'Torment');},onEnd:function onEnd(pokemon){this.add('-end',pokemon,'Torment');},onDisableMove:function onDisableMove(pokemon){if(pokemon.lastMove&&pokemon.lastMove.id!=='struggle')pokemon.disableMove(pokemon.lastMove.id);}},secondary:null,target:'normal',type:'Dark',zMoveBoost:{def:1},contestType:'Tough'},toxic:{num:92,accuracy:90,basePower:0,category:'Status',desc:'Badly poisons the target. If a Poison-type Pokemon uses this move, the target cannot avoid the attack, even if the target is in the middle of a two-turn move.',shortDesc:"Badly poisons the target. Poison types can't miss.",id:'toxic',isViable:true,name:'Toxic',pp:10,priority:0,flags:{protect:1,reflectable:1,mirror:1},// No Guard-like effect for Poison-type users implemented in BattleScripts#tryMoveHit
status:'tox',secondary:null,target:'normal',type:'Poison',zMoveBoost:{def:1},contestType:'Clever'},toxicspikes:{num:390,accuracy:true,basePower:0,category:'Status',desc:'Sets up a hazard on the opposing side of the field, poisoning each opposing Pokemon that switches in, unless it is a Flying-type Pokemon or has the Levitate Ability. Can be used up to two times before failing. Opposing Pokemon become poisoned with one layer and badly poisoned with two layers. Can be removed from the opposing side if any opposing Pokemon uses Rapid Spin or Defog successfully, is hit by Defog, or a grounded Poison-type Pokemon switches in. Safeguard prevents the opposing party from being poisoned on switch-in, but a substitute does not.',shortDesc:'Poisons grounded foes on switch-in. Max 2 layers.',id:'toxicspikes',isViable:true,name:'Toxic Spikes',pp:20,priority:0,flags:{reflectable:1,nonsky:1},sideCondition:'toxicspikes',effect:{// this is a side condition
onStart:function onStart(side){this.add('-sidestart',side,'move: Toxic Spikes');this.effectData.layers=1;},onRestart:function onRestart(side){if(this.effectData.layers>=2)return false;this.add('-sidestart',side,'move: Toxic Spikes');this.effectData.layers++;},onSwitchIn:function onSwitchIn(pokemon){if(!pokemon.isGrounded())return;if(pokemon.hasType('Poison')){this.add('-sideend',pokemon.side,'move: Toxic Spikes','[of] '+pokemon);pokemon.side.removeSideCondition('toxicspikes');}else if(pokemon.hasType('Steel')||pokemon.hasItem('heavydutyboots')){return;}else if(this.effectData.layers>=2){pokemon.trySetStatus('tox',pokemon.side.foe.active[0]);}else{pokemon.trySetStatus('psn',pokemon.side.foe.active[0]);}}},secondary:null,target:'foeSide',type:'Poison',zMoveBoost:{def:1},contestType:'Clever'},toxicthread:{num:672,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Speed by 1 stage and poisons it.",shortDesc:"Lowers the target's Speed by 1 and poisons it.",id:'toxicthread',isNonstandard:'Past',name:'Toxic Thread',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1},status:'psn',boosts:{spe:-1},secondary:null,target:'normal',type:'Poison',zMoveBoost:{spe:1},contestType:'Tough'},transform:{num:144,accuracy:true,basePower:0,category:'Status',desc:"The user transforms into the target. The target's current stats, stat stages, types, moves, Ability, weight, gender, and sprite are copied. The user's level and HP remain the same and each copied move receives only 5 PP, with a maximum of 5 PP each. The user can no longer change formes if it would have the ability to do so. This move fails if it hits a substitute, if either the user or the target is already transformed, or if either is behind an Illusion.",shortDesc:"Copies target's stats, moves, types, and Ability.",id:'transform',name:'Transform',pp:10,priority:0,flags:{mystery:1},onHit:function onHit(target,pokemon){if(!pokemon.transformInto(target)){return false;}},secondary:null,target:'normal',type:'Normal',zMoveEffect:'heal',contestType:'Clever'},triattack:{num:161,accuracy:100,basePower:80,category:'Special',desc:'Has a 20% chance to either burn, freeze, or paralyze the target.',shortDesc:'20% chance to paralyze or burn or freeze target.',id:'triattack',isViable:true,name:'Tri Attack',pp:10,priority:0,flags:{protect:1,mirror:1},secondary:{chance:20,onHit:function onHit(target,source){var result=this.random(3);if(result===0){target.trySetStatus('brn',source);}else if(result===1){target.trySetStatus('par',source);}else{target.trySetStatus('frz',source);}}},target:'normal',type:'Normal',contestType:'Beautiful'},trick:{num:271,accuracy:100,basePower:0,category:'Status',desc:"The user swaps its held item with the target's held item. Fails if either the user or the target is holding a Mail or Z-Crystal, if neither is holding an item, if the user is trying to give or take a Mega Stone to or from the species that can Mega Evolve with it, or if the user is trying to give or take a Blue Orb, a Red Orb, a Griseous Orb, a Plate, a Drive, or a Memory to or from a Kyogre, a Groudon, a Giratina, an Arceus, a Genesect, or a Silvally, respectively. The target is immune to this move if it has the Sticky Hold Ability.",shortDesc:"User switches its held item with the target's.",id:'trick',isViable:true,name:'Trick',pp:10,priority:0,flags:{protect:1,mirror:1,mystery:1},onTryImmunity:function onTryImmunity(target){return!target.hasAbility('stickyhold');},onHit:function onHit(target,source,move){var yourItem=target.takeItem(source);var myItem=source.takeItem();if(target.item||source.item||!yourItem&&!myItem){if(yourItem)target.item=yourItem.id;if(myItem)source.item=myItem.id;return false;}if(myItem&&!this.singleEvent('TakeItem',myItem,source.itemData,target,source,move,myItem)||yourItem&&!this.singleEvent('TakeItem',yourItem,target.itemData,source,target,move,yourItem)){if(yourItem)target.item=yourItem.id;if(myItem)source.item=myItem.id;return false;}this.add('-activate',source,'move: Trick','[of] '+target);if(myItem){target.setItem(myItem);this.add('-item',target,myItem,'[from] move: Trick');}else{this.add('-enditem',target,yourItem,'[silent]','[from] move: Trick');}if(yourItem){source.setItem(yourItem);this.add('-item',source,yourItem,'[from] move: Trick');}else{this.add('-enditem',source,myItem,'[silent]','[from] move: Trick');}},secondary:null,target:'normal',type:'Psychic',zMoveBoost:{spe:2},contestType:'Clever'},trickortreat:{num:567,accuracy:100,basePower:0,category:'Status',desc:"Causes the Ghost type to be added to the target, effectively making it have two or three types. Fails if the target is already a Ghost type. If Forest's Curse adds a type to the target, it replaces the type added by this move and vice versa.",shortDesc:"Adds Ghost to the target's type(s).",id:'trickortreat',name:'Trick-or-Treat',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},onHit:function onHit(target){if(target.hasType('Ghost'))return false;if(!target.addType('Ghost'))return false;this.add('-start',target,'typeadd','Ghost','[from] move: Trick-or-Treat');if(target.side.active.length===2&&target.position===1){// Curse Glitch
var action=this.queue.willMove(target);if(action&&action.move.id==='curse'){action.targetLoc=-1;}}},secondary:null,target:'normal',type:'Ghost',zMoveBoost:{atk:1,def:1,spa:1,spd:1,spe:1},contestType:'Cute'},trickroom:{num:433,accuracy:true,basePower:0,category:'Status',desc:"For 5 turns, the Speed of every Pokemon is recalculated for the purposes of determining turn order. During the effect, each Pokemon's Speed is considered to be (10000 - its normal Speed), and if this value is greater than 8191, 8192 is subtracted from it. If this move is used during the effect, the effect ends.",shortDesc:'Goes last. For 5 turns, turn order is reversed.',id:'trickroom',name:'Trick Room',pp:5,priority:-7,flags:{mirror:1},pseudoWeather:'trickroom',effect:{duration:5,durationCallback:function durationCallback(source,effect){if(source&&source.hasAbility('persistent')){this.add('-activate',source,'ability: Persistent',effect);return 7;}return 5;},onStart:function onStart(target,source){this.add('-fieldstart','move: Trick Room','[of] '+source);},onRestart:function onRestart(target,source){this.field.removePseudoWeather('trickroom');},// Speed modification is changed in Pokemon.getActionSpeed() in sim/pokemon.js
onResidualOrder:23,onEnd:function onEnd(){this.add('-fieldend','move: Trick Room');}},secondary:null,target:'all',type:'Psychic',zMoveBoost:{accuracy:1},contestType:'Clever'},triplekick:{num:167,accuracy:90,basePower:10,basePowerCallback:function basePowerCallback(pokemon,target,move){return 10*move.hit;},category:'Physical',desc:"Hits three times. Power increases to 20 for the second hit and 30 for the third. This move checks accuracy for each hit, and the attack ends if the target avoids a hit. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit three times.",shortDesc:'Hits 3 times. Each hit can miss, but power rises.',id:'triplekick',name:'Triple Kick',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},multihit:3,multiaccuracy:true,secondary:null,target:'normal',type:'Fighting',zMovePower:120,gmaxPower:80,contestType:'Cool'},tropkick:{num:688,accuracy:100,basePower:70,category:'Physical',desc:"Has a 100% chance to lower the target's Attack by 1 stage.",shortDesc:"100% chance to lower the target's Attack by 1.",id:'tropkick',name:'Trop Kick',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:100,boosts:{atk:-1}},target:'normal',type:'Grass',contestType:'Cute'},trumpcard:{num:376,accuracy:true,basePower:0,basePowerCallback:function basePowerCallback(source,target,move){var callerMoveId=move.sourceEffect||move.id;var moveSlot=callerMoveId==='instruct'?source.getMoveData(move.id):source.getMoveData(callerMoveId);if(!moveSlot)return 40;switch(moveSlot.pp){case 0:return 200;case 1:return 80;case 2:return 60;case 3:return 50;default:return 40;}},category:'Special',desc:'The power of this move is based on the amount of PP remaining after normal PP reduction and the Pressure Ability resolve. 200 power for 0 PP, 80 power for 1 PP, 60 power for 2 PP, 50 power for 3 PP, and 40 power for 4 or more PP.',shortDesc:'More power the fewer PP this move has left.',id:'trumpcard',isNonstandard:'Past',name:'Trump Card',pp:5,noPPBoosts:true,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',zMovePower:160,gmaxPower:130,contestType:'Cool'},twineedle:{num:41,accuracy:100,basePower:25,category:'Physical',desc:"Hits twice, with each hit having a 20% chance to poison the target. If the first hit breaks the target's substitute, it will take damage for the second hit.",shortDesc:'Hits 2 times. Each hit has 20% chance to poison.',id:'twineedle',isNonstandard:'Past',name:'Twineedle',pp:20,priority:0,flags:{protect:1,mirror:1},multihit:2,secondary:{chance:20,status:'psn'},target:'normal',type:'Bug',gmaxPower:100,contestType:'Cool'},twinkletackle:{num:656,accuracy:true,basePower:1,category:'Physical',shortDesc:"Power is equal to the base move's Z-Power.",id:'twinkletackle',isNonstandard:'Past',name:'Twinkle Tackle',pp:1,priority:0,flags:{},isZ:'fairiumz',secondary:null,target:'normal',type:'Fairy',contestType:'Cool'},twister:{num:239,accuracy:100,basePower:40,category:'Special',desc:'Has a 20% chance to flinch the target. Power doubles if the target is using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop.',shortDesc:'20% chance to flinch the foe(s).',id:'twister',name:'Twister',pp:20,priority:0,flags:{protect:1,mirror:1},secondary:{chance:20,volatileStatus:'flinch'},target:'allAdjacentFoes',type:'Dragon',contestType:'Cool'},uturn:{num:369,accuracy:100,basePower:70,category:'Physical',desc:'If this move is successful and the user has not fainted, the user switches out even if it is trapped and is replaced immediately by a selected party member. The user does not switch out if there are no unfainted party members, or if the target switched out using an Eject Button or through the effect of the Emergency Exit or Wimp Out Abilities.',shortDesc:'User switches out after damaging the target.',id:'uturn',isViable:true,name:'U-turn',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},selfSwitch:true,secondary:null,target:'normal',type:'Bug',contestType:'Cute'},uproar:{num:253,accuracy:100,basePower:90,category:'Special',desc:'The user spends three turns locked into this move. This move targets an opponent at random on each turn. On the first of the three turns, all sleeping active Pokemon wake up. During the three turns, no active Pokemon can fall asleep by any means, and Pokemon switched in during the effect do not wake up. If the user is prevented from moving or the attack is not successful against the target during one of the turns, the effect ends.',shortDesc:'Lasts 3 turns. Active Pokemon cannot fall asleep.',id:'uproar',name:'Uproar',pp:10,priority:0,flags:{protect:1,mirror:1,sound:1,authentic:1},self:{volatileStatus:'uproar'},onTryHit:function onTryHit(target){var _iteratorNormalCompletion81=true;var _didIteratorError81=false;var _iteratorError81=undefined;try{for(var _iterator81=target.side.active.entries()[Symbol.iterator](),_step81;!(_iteratorNormalCompletion81=(_step81=_iterator81.next()).done);_iteratorNormalCompletion81=true){var _ref5=_step81.value;var _ref6=(0,_slicedToArray3.default)(_ref5,2);var i=_ref6[0];var allyActive=_ref6[1];if(allyActive&&allyActive.status==='slp')allyActive.cureStatus();var foeActive=target.side.foe.active[i];if(foeActive&&foeActive.status==='slp')foeActive.cureStatus();}}catch(err){_didIteratorError81=true;_iteratorError81=err;}finally{try{if(!_iteratorNormalCompletion81&&_iterator81.return){_iterator81.return();}}finally{if(_didIteratorError81){throw _iteratorError81;}}}},effect:{duration:3,onStart:function onStart(target){this.add('-start',target,'Uproar');},onResidual:function onResidual(target){if(target.lastMove&&target.lastMove.id==='struggle'){// don't lock
delete target.volatiles['uproar'];}this.add('-start',target,'Uproar','[upkeep]');},onEnd:function onEnd(target){this.add('-end',target,'Uproar');},onLockMove:'uproar',onAnySetStatus:function onAnySetStatus(status,pokemon){if(status.id==='slp'){if(pokemon===this.effectData.target){this.add('-fail',pokemon,'slp','[from] Uproar','[msg]');}else{this.add('-fail',pokemon,'slp','[from] Uproar');}return null;}}},secondary:null,target:'randomNormal',type:'Normal',contestType:'Cute'},vacuumwave:{num:410,accuracy:100,basePower:40,category:'Special',desc:'No additional effect.',shortDesc:'Usually goes first.',id:'vacuumwave',name:'Vacuum Wave',pp:30,priority:1,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Fighting',contestType:'Cool'},vcreate:{num:557,accuracy:95,basePower:180,category:'Physical',desc:"Lowers the user's Speed, Defense, and Special Defense by 1 stage.",shortDesc:"Lowers the user's Defense, Sp. Def, Speed by 1.",id:'vcreate',isViable:true,name:'V-create',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},self:{boosts:{spe:-1,def:-1,spd:-1}},secondary:null,target:'normal',type:'Fire',zMovePower:220,contestType:'Cool'},veeveevolley:{num:741,accuracy:true,basePower:0,basePowerCallback:function basePowerCallback(pokemon){return Math.floor(pokemon.happiness*10/25)||1;},category:'Physical',desc:"Power is equal to the greater of (user's Happiness * 2/5), rounded down, or 1.",shortDesc:"Max happiness: 102 power. Can't miss.",id:'veeveevolley',isNonstandard:'LGPE',isViable:true,name:'Veevee Volley',pp:20,priority:0,flags:{contact:1,protect:1},secondary:null,target:'normal',type:'Normal',contestType:'Cute'},venomdrench:{num:599,accuracy:100,basePower:0,category:'Status',desc:"Lowers the target's Attack, Special Attack, and Speed by 1 stage if the target is poisoned. Fails if the target is not poisoned.",shortDesc:'Lowers Atk/Sp. Atk/Speed of poisoned foes by 1.',id:'venomdrench',name:'Venom Drench',pp:20,priority:0,flags:{protect:1,reflectable:1,mirror:1},onHit:function onHit(target,source,move){if(target.status==='psn'||target.status==='tox'){return!!this.boost({atk:-1,spa:-1,spe:-1},target,source,move);}return false;},secondary:null,target:'allAdjacentFoes',type:'Poison',zMoveBoost:{def:1},contestType:'Clever'},venoshock:{num:474,accuracy:100,basePower:65,category:'Special',desc:'Power doubles if the target is poisoned.',shortDesc:'Power doubles if the target is poisoned.',id:'venoshock',name:'Venoshock',pp:10,priority:0,flags:{protect:1,mirror:1},onBasePower:function onBasePower(basePower,pokemon,target){if(target.status==='psn'||target.status==='tox'){return this.chainModify(2);}},secondary:null,target:'normal',type:'Poison',contestType:'Beautiful'},vinewhip:{num:22,accuracy:100,basePower:45,category:'Physical',shortDesc:'No additional effect.',id:'vinewhip',name:'Vine Whip',pp:25,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Grass',contestType:'Cool'},visegrip:{num:11,accuracy:100,basePower:55,category:'Physical',shortDesc:'No additional effect.',id:'visegrip',name:'Vise Grip',pp:30,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',contestType:'Tough'},vitalthrow:{num:233,accuracy:true,basePower:70,category:'Physical',desc:'This move does not check accuracy.',shortDesc:'This move does not check accuracy. Goes last.',id:'vitalthrow',name:'Vital Throw',pp:10,priority:-1,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Fighting',contestType:'Cool'},voltswitch:{num:521,accuracy:100,basePower:70,category:'Special',desc:'If this move is successful and the user has not fainted, the user switches out even if it is trapped and is replaced immediately by a selected party member. The user does not switch out if there are no unfainted party members, or if the target switched out using an Eject Button or through the effect of the Emergency Exit or Wimp Out Abilities.',shortDesc:'User switches out after damaging the target.',id:'voltswitch',isViable:true,name:'Volt Switch',pp:20,priority:0,flags:{protect:1,mirror:1},selfSwitch:true,secondary:null,target:'normal',type:'Electric',contestType:'Cool'},volttackle:{num:344,accuracy:100,basePower:120,category:'Physical',desc:'Has a 10% chance to paralyze the target. If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.',shortDesc:'Has 33% recoil. 10% chance to paralyze target.',id:'volttackle',isViable:true,name:'Volt Tackle',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},recoil:[33,100],secondary:{chance:10,status:'par'},target:'normal',type:'Electric',contestType:'Cool'},wakeupslap:{num:358,accuracy:100,basePower:70,basePowerCallback:function basePowerCallback(pokemon,target,move){if(target.status==='slp'||target.hasAbility('comatose'))return move.basePower*2;return move.basePower;},category:'Physical',desc:'Power doubles if the target is asleep. If the user has not fainted, the target wakes up.',shortDesc:'Power doubles if target is asleep, and wakes it.',id:'wakeupslap',isNonstandard:'Past',name:'Wake-Up Slap',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},onHit:function onHit(target){if(target.status==='slp')target.cureStatus();},secondary:null,target:'normal',type:'Fighting',contestType:'Tough'},waterfall:{num:127,accuracy:100,basePower:80,category:'Physical',desc:'Has a 20% chance to flinch the target.',shortDesc:'20% chance to flinch the target.',id:'waterfall',isViable:true,name:'Waterfall',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:20,volatileStatus:'flinch'},target:'normal',type:'Water',contestType:'Tough'},watergun:{num:55,accuracy:100,basePower:40,category:'Special',shortDesc:'No additional effect.',id:'watergun',name:'Water Gun',pp:25,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'normal',type:'Water',contestType:'Cute'},waterpledge:{num:518,accuracy:100,basePower:80,basePowerCallback:function basePowerCallback(target,source,move){if(['firepledge','grasspledge'].includes(move.sourceEffect)){this.add('-combine');return 150;}return 80;},category:'Special',desc:"If one of the user's allies chose to use Fire Pledge or Grass Pledge this turn and has not moved yet, it takes its turn immediately after the user and the user's move does nothing. If combined with Fire Pledge, the ally uses Water Pledge with 150 power and a rainbow appears on the user's side for 4 turns, which doubles secondary effect chances but does not stack with the Serene Grace Ability. If combined with Grass Pledge, the ally uses Grass Pledge with 150 power and a swamp appears on the target's side for 4 turns, which quarters the Speed of each Pokemon on that side. When used as a combined move, this move gains STAB no matter what the user's type is. This move does not consume the user's Water Gem, and cannot be redirected by the Storm Drain Ability.",shortDesc:'Use with Grass or Fire Pledge for added effect.',id:'waterpledge',name:'Water Pledge',pp:10,priority:0,flags:{protect:1,mirror:1,nonsky:1},onPrepareHit:function onPrepareHit(target,source,move){var _iteratorNormalCompletion82=true;var _didIteratorError82=false;var _iteratorError82=undefined;try{for(var _iterator82=this.queue[Symbol.iterator](),_step82;!(_iteratorNormalCompletion82=(_step82=_iterator82.next()).done);_iteratorNormalCompletion82=true){var action=_step82.value;// @ts-ignore
if(!action.move||!action.pokemon||!action.pokemon.isActive||action.pokemon.fainted)continue;// @ts-ignore
if(action.pokemon.side===source.side&&['firepledge','grasspledge'].includes(action.move.id)){// @ts-ignore
this.queue.prioritizeAction(action,move);this.add('-waiting',source,action.pokemon);return null;}}}catch(err){_didIteratorError82=true;_iteratorError82=err;}finally{try{if(!_iteratorNormalCompletion82&&_iterator82.return){_iterator82.return();}}finally{if(_didIteratorError82){throw _iteratorError82;}}}},onModifyMove:function onModifyMove(move){if(move.sourceEffect==='grasspledge'){move.type='Grass';move.forceSTAB=true;move.sideCondition='grasspledge';}if(move.sourceEffect==='firepledge'){move.type='Water';move.forceSTAB=true;move.self={sideCondition:'waterpledge'};}},effect:{duration:4,onStart:function onStart(targetSide){this.add('-sidestart',targetSide,'Water Pledge');},onEnd:function onEnd(targetSide){this.add('-sideend',targetSide,'Water Pledge');},onModifyMove:function onModifyMove(move){if(move.secondaries&&move.id!=='secretpower'){this.debug('doubling secondary chance');var _iteratorNormalCompletion83=true;var _didIteratorError83=false;var _iteratorError83=undefined;try{for(var _iterator83=move.secondaries[Symbol.iterator](),_step83;!(_iteratorNormalCompletion83=(_step83=_iterator83.next()).done);_iteratorNormalCompletion83=true){var secondary=_step83.value;if(secondary.chance)secondary.chance*=2;}}catch(err){_didIteratorError83=true;_iteratorError83=err;}finally{try{if(!_iteratorNormalCompletion83&&_iterator83.return){_iterator83.return();}}finally{if(_didIteratorError83){throw _iteratorError83;}}}}}},secondary:null,target:'normal',type:'Water',contestType:'Beautiful'},waterpulse:{num:352,accuracy:100,basePower:60,category:'Special',desc:'Has a 20% chance to confuse the target.',shortDesc:'20% chance to confuse the target.',id:'waterpulse',name:'Water Pulse',pp:20,priority:0,flags:{protect:1,pulse:1,mirror:1,distance:1},secondary:{chance:20,volatileStatus:'confusion'},target:'any',type:'Water',contestType:'Beautiful'},watershuriken:{num:594,accuracy:100,basePower:15,basePowerCallback:function basePowerCallback(pokemon,target,move){if(pokemon.template.species==='Greninja-Ash'&&pokemon.hasAbility('battlebond')){return move.basePower+5;}return move.basePower;},category:'Special',desc:"Hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times. If the user is an Ash-Greninja with the Battle Bond Ability, this move has a power of 20 and always hits three times.",shortDesc:'Usually goes first. Hits 2-5 times in one turn.',id:'watershuriken',isViable:true,name:'Water Shuriken',pp:20,priority:1,flags:{protect:1,mirror:1},multihit:[2,5],secondary:null,target:'normal',type:'Water',contestType:'Cool'},watersport:{num:346,accuracy:true,basePower:0,category:'Status',desc:'For 5 turns, all Fire-type attacks used by any active Pokemon have their power multiplied by 0.33. Fails if this effect is already active.',shortDesc:'For 5 turns, Fire-type attacks have 1/3 power.',id:'watersport',isNonstandard:'Past',name:'Water Sport',pp:15,priority:0,flags:{nonsky:1},pseudoWeather:'watersport',effect:{duration:5,onStart:function onStart(side,source){this.add('-fieldstart','move: Water Sport','[of] '+source);},onBasePowerPriority:1,onBasePower:function onBasePower(basePower,attacker,defender,move){if(move.type==='Fire'){this.debug('water sport weaken');return this.chainModify([0x548,0x1000]);}},onResidualOrder:21,onEnd:function onEnd(){this.add('-fieldend','move: Water Sport');}},secondary:null,target:'all',type:'Water',zMoveBoost:{spd:1},contestType:'Cute'},waterspout:{num:323,accuracy:100,basePower:150,basePowerCallback:function basePowerCallback(pokemon,target,move){return move.basePower*pokemon.hp/pokemon.maxhp;},category:'Special',desc:"Power is equal to (user's current HP * 150 / user's maximum HP), rounded down, but not less than 1.",shortDesc:"Less power as user's HP decreases. Hits foe(s).",id:'waterspout',isViable:true,name:'Water Spout',pp:5,priority:0,flags:{protect:1,mirror:1},secondary:null,target:'allAdjacentFoes',type:'Water',contestType:'Beautiful'},weatherball:{num:311,accuracy:100,basePower:50,category:'Special',desc:"Power doubles if a weather condition other than Delta Stream is active, and this move's type changes to match. Ice type during Hail, Water type during Primordial Sea or Rain Dance, Rock type during Sandstorm, and Fire type during Desolate Land or Sunny Day. If the user is holding Utility Umbrella and uses Weather Ball during Primordial Sea, Rain Dance, Desolate Land, or Sunny Day, the move is still Normal-type and does not have a base power boost.",shortDesc:'Power doubles and type varies in each weather.',id:'weatherball',name:'Weather Ball',pp:10,priority:0,flags:{bullet:1,protect:1,mirror:1},onModifyType:function onModifyType(move,pokemon){switch(pokemon.effectiveWeather()){case'sunnyday':case'desolateland':move.type='Fire';break;case'raindance':case'primordialsea':move.type='Water';break;case'sandstorm':move.type='Rock';break;case'hail':move.type='Ice';break;}},onModifyMove:function onModifyMove(move,pokemon){switch(pokemon.effectiveWeather()){case'sunnyday':case'desolateland':move.basePower*=2;break;case'raindance':case'primordialsea':move.basePower*=2;break;case'sandstorm':move.basePower*=2;break;case'hail':move.basePower*=2;break;}},secondary:null,target:'normal',type:'Normal',zMovePower:160,gmaxPower:130,contestType:'Beautiful'},whirlpool:{num:250,accuracy:85,basePower:35,category:'Special',desc:'Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',shortDesc:'Traps and damages the target for 4-5 turns.',id:'whirlpool',name:'Whirlpool',pp:15,priority:0,flags:{protect:1,mirror:1},volatileStatus:'partiallytrapped',secondary:null,target:'normal',type:'Water',contestType:'Beautiful'},whirlwind:{num:18,accuracy:true,basePower:0,category:'Status',desc:'The target is forced to switch out and be replaced with a random unfainted ally. Fails if the target is the last unfainted Pokemon in its party, or if the target used Ingrain previously or has the Suction Cups Ability.',shortDesc:'Forces the target to switch to a random ally.',id:'whirlwind',isViable:true,name:'Whirlwind',pp:20,priority:-6,flags:{reflectable:1,mirror:1,authentic:1,mystery:1},forceSwitch:true,secondary:null,target:'normal',type:'Normal',zMoveBoost:{spd:1},contestType:'Clever'},wideguard:{num:469,accuracy:true,basePower:0,category:'Status',desc:"The user and its party members are protected from moves made by other Pokemon, including allies, during this turn that target all adjacent foes or all adjacent Pokemon. This move modifies the same 1/X chance of being successful used by other protection moves, where X starts at 1 and triples each time this move is successfully used, but does not use the chance to check for failure. X resets to 1 if this move fails, if the user's last move used is not Baneful Bunker, Detect, Endure, King's Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user's protection was broken. Fails if the user moves last this turn or if this move is already in effect for the user's side.",shortDesc:'Protects allies from multi-target moves this turn.',id:'wideguard',name:'Wide Guard',pp:10,priority:3,flags:{snatch:1},sideCondition:'wideguard',onTryHitSide:function onTryHitSide(side,source){return!!this.queue.willAct();},onHitSide:function onHitSide(side,source){source.addVolatile('stall');},effect:{duration:1,onStart:function onStart(target,source){this.add('-singleturn',source,'Wide Guard');},onTryHitPriority:4,onTryHit:function onTryHit(target,source,move){// Wide Guard blocks all spread moves
if(move&&move.target!=='allAdjacent'&&move.target!=='allAdjacentFoes'){return;}if(move.isZ||move.isMax){target.getMoveHitData(move).zBrokeProtect=true;return;}this.add('-activate',target,'move: Wide Guard');var lockedmove=source.getVolatile('lockedmove');if(lockedmove){// Outrage counter is reset
if(source.volatiles['lockedmove'].duration===2){delete source.volatiles['lockedmove'];}}return this.NOT_FAIL;}},secondary:null,target:'allySide',type:'Rock',zMoveBoost:{def:1},contestType:'Tough'},wildcharge:{num:528,accuracy:100,basePower:90,category:'Physical',desc:'If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded half up, but not less than 1 HP.',shortDesc:'Has 1/4 recoil.',id:'wildcharge',isViable:true,name:'Wild Charge',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},recoil:[1,4],secondary:null,target:'normal',type:'Electric',contestType:'Tough'},willowisp:{num:261,accuracy:85,basePower:0,category:'Status',desc:'Burns the target.',shortDesc:'Burns the target.',id:'willowisp',isViable:true,name:'Will-O-Wisp',pp:15,priority:0,flags:{protect:1,reflectable:1,mirror:1},status:'brn',secondary:null,target:'normal',type:'Fire',zMoveBoost:{atk:1},contestType:'Beautiful'},wingattack:{num:17,accuracy:100,basePower:60,category:'Physical',shortDesc:'No additional effect.',id:'wingattack',name:'Wing Attack',pp:35,priority:0,flags:{contact:1,protect:1,mirror:1,distance:1},secondary:null,target:'any',type:'Flying',contestType:'Cool'},wish:{num:273,accuracy:true,basePower:0,category:'Status',desc:"At the end of the next turn, the Pokemon at the user's position has 1/2 of the user's maximum HP restored to it, rounded half up. Fails if this move is already in effect for the user's position.",shortDesc:"Next turn, 50% of the user's max HP is restored.",id:'wish',isViable:true,name:'Wish',pp:10,priority:0,flags:{snatch:1,heal:1},slotCondition:'Wish',effect:{duration:2,onStart:function onStart(pokemon,source){this.effectData.hp=source.maxhp/2;},onResidualOrder:4,onEnd:function onEnd(target){if(target&&!target.fainted){var damage=this.heal(this.effectData.hp,target,target);if(damage)this.add('-heal',target,target.getHealth,'[from] move: Wish','[wisher] '+this.effectData.source.name);}}},secondary:null,target:'self',type:'Normal',zMoveBoost:{spd:1},contestType:'Cute'},withdraw:{num:110,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Defense by 1 stage.",shortDesc:"Raises the user's Defense by 1.",id:'withdraw',name:'Withdraw',pp:40,priority:0,flags:{snatch:1},boosts:{def:1},secondary:null,target:'self',type:'Water',zMoveBoost:{def:1},contestType:'Cute'},wonderroom:{num:472,accuracy:true,basePower:0,category:'Status',desc:'For 5 turns, all active Pokemon have their Defense and Special Defense stats swapped. Stat stage changes are unaffected. If this move is used during the effect, the effect ends.',shortDesc:'For 5 turns, all Defense and Sp. Def stats switch.',id:'wonderroom',name:'Wonder Room',pp:10,priority:0,flags:{mirror:1},pseudoWeather:'wonderroom',effect:{duration:5,durationCallback:function durationCallback(source,effect){if(source&&source.hasAbility('persistent')){this.add('-activate',source,'ability: Persistent',effect);return 7;}return 5;},onStart:function onStart(side,source){this.add('-fieldstart','move: Wonder Room','[of] '+source);},onRestart:function onRestart(target,source){this.field.removePseudoWeather('wonderroom');},// Swapping defenses implemented in sim/pokemon.js:Pokemon#calculateStat and Pokemon#getStat
onResidualOrder:24,onEnd:function onEnd(){this.add('-fieldend','move: Wonder Room');}},secondary:null,target:'all',type:'Psychic',zMoveBoost:{spd:1},contestType:'Clever'},woodhammer:{num:452,accuracy:100,basePower:120,category:'Physical',desc:'If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.',shortDesc:'Has 33% recoil.',id:'woodhammer',isViable:true,name:'Wood Hammer',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},recoil:[33,100],secondary:null,target:'normal',type:'Grass',contestType:'Tough'},workup:{num:526,accuracy:true,basePower:0,category:'Status',desc:"Raises the user's Attack and Special Attack by 1 stage.",shortDesc:"Raises the user's Attack and Sp. Atk by 1.",id:'workup',name:'Work Up',pp:30,priority:0,flags:{snatch:1},boosts:{atk:1,spa:1},secondary:null,target:'self',type:'Normal',zMoveBoost:{atk:1},contestType:'Tough'},worryseed:{num:388,accuracy:100,basePower:0,category:'Status',desc:"Causes the target's Ability to become Insomnia. Fails if the target's Ability is Battle Bond, Comatose, Disguise, Insomnia, Multitype, Power Construct, RKS System, Schooling, Shields Down, Stance Change, Truant, or Zen Mode.",shortDesc:"The target's Ability becomes Insomnia.",id:'worryseed',name:'Worry Seed',pp:10,priority:0,flags:{protect:1,reflectable:1,mirror:1,mystery:1},onTryHit:function onTryHit(pokemon){var bannedAbilities=['battlebond','comatose','disguise','insomnia','multitype','powerconstruct','rkssystem','schooling','shieldsdown','stancechange','truant','zenmode'];if(bannedAbilities.includes(pokemon.ability)){return false;}},onHit:function onHit(pokemon){var oldAbility=pokemon.setAbility('insomnia');if(oldAbility){this.add('-ability',pokemon,'Insomnia','[from] move: Worry Seed');if(pokemon.status==='slp'){pokemon.cureStatus();}return;}return false;},secondary:null,target:'normal',type:'Grass',zMoveBoost:{spe:1},contestType:'Clever'},wrap:{num:35,accuracy:90,basePower:15,category:'Physical',desc:'Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Parting Shot, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',shortDesc:'Traps and damages the target for 4-5 turns.',id:'wrap',name:'Wrap',pp:20,priority:0,flags:{contact:1,protect:1,mirror:1},volatileStatus:'partiallytrapped',secondary:null,target:'normal',type:'Normal',contestType:'Tough'},wringout:{num:378,accuracy:100,basePower:0,basePowerCallback:function basePowerCallback(pokemon,target){return Math.floor(Math.floor((120*(100*Math.floor(target.hp*4096/target.maxhp))+2048-1)/4096)/100)||1;},category:'Special',desc:"Power is equal to 120 * (target's current HP / target's maximum HP), rounded half down, but not less than 1.",shortDesc:'More power the more HP the target has left.',id:'wringout',isNonstandard:'Past',name:'Wring Out',pp:5,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Normal',zMovePower:190,gmaxPower:140,contestType:'Tough'},xscissor:{num:404,accuracy:100,basePower:80,category:'Physical',shortDesc:'No additional effect.',id:'xscissor',isViable:true,name:'X-Scissor',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:null,target:'normal',type:'Bug',contestType:'Cool'},yawn:{num:281,accuracy:true,basePower:0,category:'Status',desc:'Causes the target to fall asleep at the end of the next turn. Fails when used if the target cannot fall asleep or if it already has a major status condition. At the end of the next turn, if the target is still active, does not have a major status condition, and can fall asleep, it falls asleep. If the target becomes affected, this effect cannot be prevented by Safeguard or a substitute, or by falling asleep and waking up during the effect.',shortDesc:'Puts the target to sleep after 1 turn.',id:'yawn',name:'Yawn',pp:10,priority:0,flags:{protect:1,reflectable:1,mirror:1},volatileStatus:'yawn',onTryHit:function onTryHit(target){if(target.status||!target.runStatusImmunity('slp')){return false;}},effect:{noCopy:true,// doesn't get copied by Baton Pass
duration:2,onStart:function onStart(target,source){this.add('-start',target,'move: Yawn','[of] '+source);},onResidualOrder:19,onEnd:function onEnd(target){this.add('-end',target,'move: Yawn','[silent]');target.trySetStatus('slp',this.effectData.source);}},secondary:null,target:'normal',type:'Normal',zMoveBoost:{spe:1},contestType:'Cute'},zapcannon:{num:192,accuracy:50,basePower:120,category:'Special',desc:'Has a 100% chance to paralyze the target.',shortDesc:'100% chance to paralyze the target.',id:'zapcannon',name:'Zap Cannon',pp:5,priority:0,flags:{bullet:1,protect:1,mirror:1},secondary:{chance:100,status:'par'},target:'normal',type:'Electric',contestType:'Cool'},zenheadbutt:{num:428,accuracy:90,basePower:80,category:'Physical',desc:'Has a 20% chance to flinch the target.',shortDesc:'20% chance to flinch the target.',id:'zenheadbutt',isViable:true,name:'Zen Headbutt',pp:15,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:20,volatileStatus:'flinch'},target:'normal',type:'Psychic',contestType:'Clever'},zingzap:{num:716,accuracy:100,basePower:80,category:'Physical',desc:'Has a 30% chance to flinch the target.',shortDesc:'30% chance to flinch the target.',id:'zingzap',isViable:true,name:'Zing Zap',pp:10,priority:0,flags:{contact:1,protect:1,mirror:1},secondary:{chance:30,volatileStatus:'flinch'},target:'normal',type:'Electric',contestType:'Cool'},zippyzap:{num:729,accuracy:100,basePower:80,category:'Physical',desc:"Has a 100% chance to raise the user's evasion by 1 stage.",shortDesc:"Goes first. Raises user's evasion by 1.",id:'zippyzap',isNonstandard:'LGPE',isViable:true,name:'Zippy Zap',pp:10,priority:2,flags:{contact:1,protect:1},secondary:{chance:100,self:{boosts:{evasion:1}}},target:'normal',type:'Electric',contestType:'Cool'}};exports.BattleMovedex=BattleMovedex;

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(9);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(11);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(10);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AnniversaryCountdown = function (_React$Component) {
    (0, _inherits3.default)(AnniversaryCountdown, _React$Component);

    function AnniversaryCountdown(props) {
        (0, _classCallCheck3.default)(this, AnniversaryCountdown);

        var _this = (0, _possibleConstructorReturn3.default)(this, (AnniversaryCountdown.__proto__ || Object.getPrototypeOf(AnniversaryCountdown)).call(this, props));

        setTimeout(function () {
            window.open('https://www.youtube.com/watch?v=PWgvGjAhvIw', '_blank');
        }, 1000);
        return _this;
    }

    (0, _createClass3.default)(AnniversaryCountdown, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'p',
                null,
                'Opening a new tab in 1 seconds.'
            );
        }
    }]);
    return AnniversaryCountdown;
}(_react2.default.Component);

exports.default = AnniversaryCountdown;

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _regenerator = __webpack_require__(24);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(23);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(9);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(11);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(10);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _axios = __webpack_require__(22);

var _axios2 = _interopRequireDefault(_axios);

var _loading = __webpack_require__(58);

var _loading2 = _interopRequireDefault(_loading);

var _styles = __webpack_require__(389);

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Check Contentful for image manipulation references
// https://www.contentful.com/developers/docs/references/images-api/#/reference

var thumbnailParams = '?fm=jpg&q=80&fit=fill&w=500&h=500&f=faces';

var WeddingPhotos = function (_React$Component) {
    (0, _inherits3.default)(WeddingPhotos, _React$Component);

    function WeddingPhotos(props) {
        (0, _classCallCheck3.default)(this, WeddingPhotos);

        var _this = (0, _possibleConstructorReturn3.default)(this, (WeddingPhotos.__proto__ || Object.getPrototypeOf(WeddingPhotos)).call(this, props));

        _this.state = {
            loaded: false,
            photos: []
        };
        return _this;
    }

    (0, _createClass3.default)(WeddingPhotos, [{
        key: 'componentDidMount',
        value: function () {
            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
                var res, photos;
                return _regenerator2.default.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                this.setState({
                                    loaded: false
                                });
                                _context.next = 3;
                                return _axios2.default.get('/api/wedding_photos');

                            case 3:
                                res = _context.sent;
                                photos = res.data;

                                this.setState({
                                    loaded: true,
                                    photos: photos
                                });

                            case 6:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function componentDidMount() {
                return _ref.apply(this, arguments);
            }

            return componentDidMount;
        }()
    }, {
        key: 'render',
        value: function render() {
            var _state = this.state,
                loaded = _state.loaded,
                photos = _state.photos;

            return _react2.default.createElement(
                'div',
                { className: _styles2.default.container },
                _react2.default.createElement(
                    'h2',
                    null,
                    'Wedding Photos'
                ),
                loaded ? _react2.default.createElement(
                    'div',
                    { className: _styles2.default.thumbnailGrid },
                    photos.map(function (photo) {
                        var url = photo.file.url;
                        var description = photo.description;
                        return _react2.default.createElement(
                            'a',
                            { key: 'a-' + url, href: url },
                            _react2.default.createElement('img', {
                                key: 'img-' + url,
                                src: '' + url + thumbnailParams,
                                alt: description
                            })
                        );
                    })
                ) : _react2.default.createElement(_loading2.default, null)
            );
        }
    }]);
    return WeddingPhotos;
}(_react2.default.Component);

exports.default = WeddingPhotos;

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(149);

var _reactDom2 = _interopRequireDefault(_reactDom);

__webpack_require__(148);

var _routes = __webpack_require__(147);

var _routes2 = _interopRequireDefault(_routes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_reactDom2.default.render(_react2.default.createElement(_routes2.default, null), document.getElementById('root'));

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var EARTH_RADIUS = 6371000;

var toRadians = function toRadians(deg) {
    return deg * (Math.PI / 180);
};
var sin = Math.sin;
var cos = Math.cos;
var atan2 = Math.atan2;
var sqrt = Math.sqrt;

var haversine = function haversine(coords1, coords2) {
    var latr1 = toRadians(coords1.lat);
    var latr2 = toRadians(coords2.lat);
    var latrd = latr2 - latr1;
    var lonrd = toRadians(coords2.lon - coords1.lon);

    var a = Math.pow(sin(latrd / 2), 2) + cos(latr1) * cos(latr2) * sin(lonrd / 2) * sin(lonrd / 2);

    var c = 2 * atan2(sqrt(a), sqrt(1 - a));

    return EARTH_RADIUS * c;
};

module.exports = haversine;

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var objectWithoutProperties = function objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }

    return target;
};

module.exports = objectWithoutProperties;

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(199), __esModule: true };

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(200), __esModule: true };

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(201), __esModule: true };

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(202), __esModule: true };

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(203), __esModule: true };

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(205), __esModule: true };

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(206), __esModule: true };

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(207), __esModule: true };

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(208), __esModule: true };

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__(191);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _isIterable2 = __webpack_require__(190);

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = __webpack_require__(189);

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(33);
__webpack_require__(233);
module.exports = __webpack_require__(2).Array.from;


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(46);
__webpack_require__(33);
module.exports = __webpack_require__(231);


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(46);
__webpack_require__(33);
module.exports = __webpack_require__(232);


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(235);
module.exports = __webpack_require__(2).Object.assign;


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(236);
var $Object = __webpack_require__(2).Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(237);
var $Object = __webpack_require__(2).Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(238);
module.exports = __webpack_require__(2).Object.setPrototypeOf;


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(122);
__webpack_require__(33);
__webpack_require__(46);
__webpack_require__(239);
__webpack_require__(241);
__webpack_require__(242);
module.exports = __webpack_require__(2).Promise;


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(240);
__webpack_require__(122);
__webpack_require__(243);
__webpack_require__(244);
module.exports = __webpack_require__(2).Symbol;


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(33);
__webpack_require__(46);
module.exports = __webpack_require__(74).f('iterator');


/***/ }),
/* 209 */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),
/* 210 */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(28);
var toLength = __webpack_require__(71);
var toAbsoluteIndex = __webpack_require__(229);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__(15);
var createDesc = __webpack_require__(32);

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(41);
var gOPS = __webpack_require__(67);
var pIE = __webpack_require__(42);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(26);
var call = __webpack_require__(111);
var isArrayIter = __webpack_require__(110);
var anObject = __webpack_require__(12);
var toLength = __webpack_require__(71);
var getIterFn = __webpack_require__(75);
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),
/* 215 */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(29);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(66);
var descriptor = __webpack_require__(32);
var setToStringTag = __webpack_require__(43);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(20)(IteratorPrototype, __webpack_require__(4)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 218 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(45)('meta');
var isObject = __webpack_require__(18);
var has = __webpack_require__(19);
var setDesc = __webpack_require__(15).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(30)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(3);
var macrotask = __webpack_require__(121).set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(29)(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = __webpack_require__(14);
var getKeys = __webpack_require__(41);
var gOPS = __webpack_require__(67);
var pIE = __webpack_require__(42);
var toObject = __webpack_require__(44);
var IObject = __webpack_require__(109);
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(30)(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(15);
var anObject = __webpack_require__(12);
var getKeys = __webpack_require__(41);

module.exports = __webpack_require__(14) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(28);
var gOPN = __webpack_require__(115).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(19);
var toObject = __webpack_require__(44);
var IE_PROTO = __webpack_require__(68)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

var hide = __webpack_require__(20);
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(18);
var anObject = __webpack_require__(12);
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(26)(Function.call, __webpack_require__(114).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(3);
var core = __webpack_require__(2);
var dP = __webpack_require__(15);
var DESCRIPTORS = __webpack_require__(14);
var SPECIES = __webpack_require__(4)('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(70);
var defined = __webpack_require__(62);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(70);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(3);
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(12);
var get = __webpack_require__(75);
module.exports = __webpack_require__(2).getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(61);
var ITERATOR = __webpack_require__(4)('iterator');
var Iterators = __webpack_require__(27);
module.exports = __webpack_require__(2).isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__(26);
var $export = __webpack_require__(13);
var toObject = __webpack_require__(44);
var call = __webpack_require__(111);
var isArrayIter = __webpack_require__(110);
var toLength = __webpack_require__(71);
var createProperty = __webpack_require__(212);
var getIterFn = __webpack_require__(75);

$export($export.S + $export.F * !__webpack_require__(113)(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(209);
var step = __webpack_require__(218);
var Iterators = __webpack_require__(27);
var toIObject = __webpack_require__(28);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(112)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(13);

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(221) });


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(13);
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(66) });


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(13);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(14), 'Object', { defineProperty: __webpack_require__(15).f });


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(13);
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(226).set });


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(31);
var global = __webpack_require__(3);
var ctx = __webpack_require__(26);
var classof = __webpack_require__(61);
var $export = __webpack_require__(13);
var isObject = __webpack_require__(18);
var aFunction = __webpack_require__(40);
var anInstance = __webpack_require__(210);
var forOf = __webpack_require__(214);
var speciesConstructor = __webpack_require__(120);
var task = __webpack_require__(121).set;
var microtask = __webpack_require__(220)();
var newPromiseCapabilityModule = __webpack_require__(65);
var perform = __webpack_require__(117);
var userAgent = __webpack_require__(230);
var promiseResolve = __webpack_require__(118);
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(4)('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(225)($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(43)($Promise, PROMISE);
__webpack_require__(227)(PROMISE);
Wrapper = __webpack_require__(2)[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(113)(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(3);
var has = __webpack_require__(19);
var DESCRIPTORS = __webpack_require__(14);
var $export = __webpack_require__(13);
var redefine = __webpack_require__(119);
var META = __webpack_require__(219).KEY;
var $fails = __webpack_require__(30);
var shared = __webpack_require__(69);
var setToStringTag = __webpack_require__(43);
var uid = __webpack_require__(45);
var wks = __webpack_require__(4);
var wksExt = __webpack_require__(74);
var wksDefine = __webpack_require__(73);
var enumKeys = __webpack_require__(213);
var isArray = __webpack_require__(216);
var anObject = __webpack_require__(12);
var isObject = __webpack_require__(18);
var toObject = __webpack_require__(44);
var toIObject = __webpack_require__(28);
var toPrimitive = __webpack_require__(72);
var createDesc = __webpack_require__(32);
var _create = __webpack_require__(66);
var gOPNExt = __webpack_require__(223);
var $GOPD = __webpack_require__(114);
var $GOPS = __webpack_require__(67);
var $DP = __webpack_require__(15);
var $keys = __webpack_require__(41);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(115).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(42).f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(31)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(20)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__(13);
var core = __webpack_require__(2);
var global = __webpack_require__(3);
var speciesConstructor = __webpack_require__(120);
var promiseResolve = __webpack_require__(118);

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-promise-try
var $export = __webpack_require__(13);
var newPromiseCapability = __webpack_require__(65);
var perform = __webpack_require__(117);

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(73)('asyncIterator');


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(73)('observable');


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(6)();
// imports


// module
exports.push([module.i, ".fgdY8FW6sx6_cabKCUT8r {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n}", ""]);

// exports
exports.locals = {
	"container": "fgdY8FW6sx6_cabKCUT8r"
};

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(6)();
// imports


// module
exports.push([module.i, "@keyframes _1bzEto3qw8xFBz43FSINPI {\n    0% {\n        opacity: 0;\n    }\n    100% {\n        opacity: 1;\n    }\n}\n\n._1bzEto3qw8xFBz43FSINPI {\n    animation-duration: 1s;\n    animation-iteration-count: 1;\n    animation-name: _1bzEto3qw8xFBz43FSINPI;\n}\n\n._1xY9-qrUgkWsXrcRujko9v {\n    display: flex;\n    flex-direction: row;\n    align-items: stretch;\n}\n\n._1xY9-qrUgkWsXrcRujko9v > * {\n    margin-right: 3px;\n}\n\n._2YaoHqBD3Yld-3duCQ0gLb {\n    display: flex;\n    flex-direction: column;\n}\n\n._1Mnw9RwV4pZrmc8DU-YkHc {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin-bottom: 3px;\n}\n\n._1Mnw9RwV4pZrmc8DU-YkHc > a {\n    display: flex;\n    align-items: center;\n    justify-content: start;\n    padding: 0 5px;\n    border: 1px solid grey;\n    border-radius: 2px;\n    margin-right: 5px;\n    height: 30px;\n}\n\n._1Mnw9RwV4pZrmc8DU-YkHc > form {\n    margin-left: 5px;\n}\n", ""]);

// exports
exports.locals = {
	"fadeIn": "_1bzEto3qw8xFBz43FSINPI",
	"controls": "_1xY9-qrUgkWsXrcRujko9v",
	"bookmarks": "_2YaoHqBD3Yld-3duCQ0gLb",
	"bookmarkRow": "_1Mnw9RwV4pZrmc8DU-YkHc"
};

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(6)();
// imports


// module
exports.push([module.i, "@keyframes _1TYdAnxxchx3tDObHHI_UE {\n    0% {\n        opacity: 0;\n    }\n    100% {\n        opacity: 1;\n    }\n}\n\n._1TYdAnxxchx3tDObHHI_UE {\n    animation-duration: 1s;\n    animation-iteration-count: 1;\n    animation-name: _1TYdAnxxchx3tDObHHI_UE;\n}\n\n._22CV1cWCel4rNifFXeIVID {\n    display: flex;\n    flex-direction: row;\n    align-items: stretch;\n}\n\n._22CV1cWCel4rNifFXeIVID > * {\n    margin-right: 3px;\n}\n\n._23tETqy80vPCPEcKTkXIv7 {\n    display: flex;\n    flex-direction: column;\n}\n\n._1K50njG0EK2sB5bxF-RKZ7 {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 10px;\n    border-bottom: 2px solid grey;\n}\n\n._1K50njG0EK2sB5bxF-RKZ7:first-child {\n    margin-top: 0;\n}\n\n._1K50njG0EK2sB5bxF-RKZ7:last-child {\n    border-bottom: none;\n}\n\n._1K50njG0EK2sB5bxF-RKZ7 ._3zSEYKJ0nVTOnu89-NpFVh {\n    text-align: text-bottom;\n}\n\n._1K50njG0EK2sB5bxF-RKZ7 ._3zSEYKJ0nVTOnu89-NpFVh span {\n    font-family: monospace;\n}\n\n._3zSEYKJ0nVTOnu89-NpFVh._1FKNXWZ0iBmJHrQdGsrRX1,\n._104KVzJWHhX1v1TFeL39kg > label._1FKNXWZ0iBmJHrQdGsrRX1 {\n    color: red;\n}\n\n._104KVzJWHhX1v1TFeL39kg {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin-bottom: 3px;\n}\n\n._104KVzJWHhX1v1TFeL39kg > label {\n    display: flex;\n    align-items: center;\n    justify-content: start;\n    margin-right: 5px;\n    height: 32px;\n}\n\n._104KVzJWHhX1v1TFeL39kg > form {\n    margin-left: 5px;\n}\n", ""]);

// exports
exports.locals = {
	"fadeIn": "_1TYdAnxxchx3tDObHHI_UE",
	"controls": "_22CV1cWCel4rNifFXeIVID",
	"countdowns": "_23tETqy80vPCPEcKTkXIv7",
	"countdownColumn": "_1K50njG0EK2sB5bxF-RKZ7",
	"countdownTimer": "_3zSEYKJ0nVTOnu89-NpFVh",
	"overdue": "_1FKNXWZ0iBmJHrQdGsrRX1",
	"countdownRow": "_104KVzJWHhX1v1TFeL39kg"
};

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(6)();
// imports


// module
exports.push([module.i, "._3FtjzsfV98VDzqmRrdQimM {\n    font-weight: bold;\n}\n\n._1LyBabt9XsHJ-JKGSihwN4 {\n    border: 1px solid grey;\n    padding: 5px;\n}\n\n._1LyBabt9XsHJ-JKGSihwN4 h4,\n._1LyBabt9XsHJ-JKGSihwN4 p {\n    margin: 0 0 3px;\n}\n._1LyBabt9XsHJ-JKGSihwN4 ul {\n    margin: 5px 0 0;\n}\n\n._1LyBabt9XsHJ-JKGSihwN4 ._2DZa4vT44EWhTt5ERTiSq8 {\n    font-size: 0.8em;\n}\n\n._1LyBabt9XsHJ-JKGSihwN4 ._2vh0OT2wkovgBr53h5Hdz5 > *:last-child {\n    margin-bottom: 0;\n}\n\n._1x5ucV5o5je-5a2whGGw-j {\n    border-collapse: collapse;\n}\n\n.zIT-hLcmxso_joT9BaryS {\n    display: grid;\n    grid-template-columns: auto auto;\n    justify-content: start;\n    grid-column-gap: 10px;\n    margin-bottom: 5px;\n}\n\n.WYMiZRBhzBP39VQPXAVl0 {\n    display: grid;\n    grid-template-columns: 1fr 2fr 9fr;\n    grid-gap: 2px;\n}\n\n.WYMiZRBhzBP39VQPXAVl0 ._1XMWI45a7NmrCme4ttx2T2,\n.WYMiZRBhzBP39VQPXAVl0 ._1be4Qaw5jHfo-gTQT2gtgQ {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-auto-rows: 64px;\n    grid-gap: 2px;\n}\n\n.WYMiZRBhzBP39VQPXAVl0 button {\n    padding: 5px;\n    width: 100%;\n    background-color: white;\n    color: black;\n    border: 1px solid grey;\n}\n\n.WYMiZRBhzBP39VQPXAVl0 button._3gm6SzeWyTOdxpbHHbMmxe {\n    font-weight: bold;\n    background-color: darkslategrey;\n    color: white;\n    border: 1px solid darkslategrey;\n}\n", ""]);

// exports
exports.locals = {
	"bold": "_3FtjzsfV98VDzqmRrdQimM",
	"spellCard": "_1LyBabt9XsHJ-JKGSihwN4",
	"spellLevel": "_2DZa4vT44EWhTt5ERTiSq8",
	"spellDescription": "_2vh0OT2wkovgBr53h5Hdz5",
	"spellInfoTable": "_1x5ucV5o5je-5a2whGGw-j",
	"spellInfoGrid": "zIT-hLcmxso_joT9BaryS",
	"spellBook": "WYMiZRBhzBP39VQPXAVl0",
	"spellLevels": "_1XMWI45a7NmrCme4ttx2T2",
	"spellNames": "_1be4Qaw5jHfo-gTQT2gtgQ",
	"selected": "_3gm6SzeWyTOdxpbHHbMmxe"
};

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(6)();
// imports


// module
exports.push([module.i, "._239-S6AywtcumuaNPii4Cd {\n    font-weight: bold;\n    font-size: 18px;\n    margin-bottom: 10px;\n}\n\n/* Phone */\n@media screen and (max-device-width: 750px) {\n    ._239-S6AywtcumuaNPii4Cd {\n        width: 35px;\n        font-weight: normal;\n        font-size: 12px;\n    }\n}\n", ""]);

// exports
exports.locals = {
	"container": "_239-S6AywtcumuaNPii4Cd"
};

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(6)();
// imports


// module
exports.push([module.i, "@keyframes _154k_P3exiFyWVfwx87bws {\n    0% {\n        opacity: 1;\n    }\n    100% {\n        opacity: 0.1;\n    }\n}\n\n._154k_P3exiFyWVfwx87bws {\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n    animation-direction: alternate;\n    animation-name: _154k_P3exiFyWVfwx87bws;\n}\n", ""]);

// exports
exports.locals = {
	"fadeInOut": "_154k_P3exiFyWVfwx87bws"
};

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(6)();
// imports


// module
exports.push([module.i, ".eMrA2H7XbyG39ZOo_iKH {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 10px;\n    background: rgb(187, 187, 187);\n    background: linear-gradient(\n        0deg,\n        rgba(255, 255, 255, 1) 0%,\n        rgba(255, 255, 255, 1) 10%,\n        rgba(187, 187, 187, 1) 100%\n    );\n    height: 90vh;\n}\n\n.aOUlrXqwwDiV02Zo6UE1i {\n    margin-bottom: 8px;\n    text-decoration: none;\n    color: black;\n}\n\n._3uXJYM9Ivj_ZXQu06gmqjh {\n    font-weight: bold;\n}\n\n._1cHG4zV2f_glULJpW1OCY_ {\n    display: inline;\n    margin-right: 5px;\n}\n\n/* Phone */\n@media screen and (max-device-width: 750px) {\n    ._1cHG4zV2f_glULJpW1OCY_ {\n        font-size: 28px;\n        margin-right: 0;\n    }\n    ._1hPSw281HJgYYuX91TipP8 {\n        display: none;\n    }\n}\n", ""]);

// exports
exports.locals = {
	"navContainer": "eMrA2H7XbyG39ZOo_iKH",
	"navLink": "aOUlrXqwwDiV02Zo6UE1i",
	"activeNavLink": "_3uXJYM9Ivj_ZXQu06gmqjh",
	"navIcon": "_1cHG4zV2f_glULJpW1OCY_",
	"navText": "_1hPSw281HJgYYuX91TipP8"
};

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(6)();
// imports


// module
exports.push([module.i, "._2s5-FrjhFXN2GxZbvcMxIL {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n._3_XPnCjp4eGP888H0DZ75v {\n    width: 100%;\n    display: grid;\n    grid-gap: 1px;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n}\n\n._3hPPhimEp5SW7Xl55-8NQj {\n    width: 100%;\n}\n", ""]);

// exports
exports.locals = {
	"container": "_2s5-FrjhFXN2GxZbvcMxIL",
	"imageContainer": "_3_XPnCjp4eGP888H0DZ75v",
	"picture": "_3hPPhimEp5SW7Xl55-8NQj"
};

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(6)();
// imports


// module
exports.push([module.i, "._3Q9vB8Er3vZRtJhabwA6Uc {\n    display: flex;\n    flex-direction: row;\n}\n\n._ldEnbXbh0vlBevjkKkcd {\n    padding: 5px;\n    border: 1px solid grey;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    font-size: 0.8em;\n}\n\n.N_B5kXbm4BbmgeAzLdxDT {\n    display: grid;\n    grid-template-columns: 3fr 1fr;\n    grid-column-gap: 5px;\n}\n\n._2gtbVi22ldIpMLkn7ygV8c {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n}\n\n._2gtbVi22ldIpMLkn7ygV8c._3Dd0tWTLI3ZGS44e4Pm7ZN {\n    min-height: 90vh;\n    height: auto;\n}\n\n._2gtbVi22ldIpMLkn7ygV8c p {\n    font-size: 0.8em;\n}\n\n._37bra7i7XrM5qe1iAr8MnE {\n    display: flex;\n    flex-direction: row;\n    justify-content: stretch;\n}\n\n._37bra7i7XrM5qe1iAr8MnE button {\n    flex-grow: 1;\n}\n\ntable._3qi3tKJqxUKV0_Ic9SfVkT {\n    border-collapse: collapse;\n    font-size: 0.9em;\n}\n\n._3qi3tKJqxUKV0_Ic9SfVkT th,\n._3qi3tKJqxUKV0_Ic9SfVkT td {\n    text-align: right;\n    border: 1px solid grey;\n    padding: 1px 5px;\n}\n\nth._2NmP1diC-IsPuWa9qFxa21,\ntd._2NmP1diC-IsPuWa9qFxa21 {\n    text-align: left;\n}\n\n.qpURTTIZUmnZJII6Tt6Mt {\n    flex-basis: 300px;\n}\n\n._1AH61R598ROmKDfWw0mTFF {\n    flex-grow: 1;\n}\n\n.a-QTqDYUAFh28H9fVuwpt {\n    border: 1px solid grey;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(170px, 1fr));\n    grid-gap: 5px;\n}\n\n.a-QTqDYUAFh28H9fVuwpt .Do_CI0tlX4Tkx20ayxVfU {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n", ""]);

// exports
exports.locals = {
	"cardContainer": "_3Q9vB8Er3vZRtJhabwA6Uc",
	"pokemonCard": "_ldEnbXbh0vlBevjkKkcd",
	"evSpreadContainer": "N_B5kXbm4BbmgeAzLdxDT",
	"evSpreadColumn": "_2gtbVi22ldIpMLkn7ygV8c",
	"fullHeight": "_3Dd0tWTLI3ZGS44e4Pm7ZN",
	"buttonRow": "_37bra7i7XrM5qe1iAr8MnE",
	"damageResult": "_3qi3tKJqxUKV0_Ic9SfVkT",
	"left": "_2NmP1diC-IsPuWa9qFxa21",
	"yourInput": "qpURTTIZUmnZJII6Tt6Mt",
	"opponentInput": "_1AH61R598ROmKDfWw0mTFF",
	"sortControls": "a-QTqDYUAFh28H9fVuwpt",
	"sortControl": "Do_CI0tlX4Tkx20ayxVfU"
};

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(6)();
// imports


// module
exports.push([module.i, "._3flwRTDyGlUv93ppkuL9Oh {\n    background-color: #a8a878;\n}\n\n._3qXWKGVWCWz9Kvulc8gA-3 {\n    background-color: #c03028;\n}\n\n._2mHL2vpYebcD5eLF_E_jN7 {\n    background-color: #a890f0;\n}\n\n.gOoulNfMwszi2NNtGwOAG {\n    background-color: #a040a0;\n}\n\n._1oGPhJ9EvABPcNhy0isRQ5 {\n    background-color: #e0c068;\n}\n\n.aMIdZl4Vn9CfjFhK91Ju_ {\n    background-color: #b8a038;\n}\n\n._2CQITGibeZGTk5j0pyrNYV {\n    background-color: #a8b820;\n}\n\n._1PGvJUhgeU9jvi9EfrvCJ0 {\n    background-color: #705898;\n}\n\n.Xq5AEysFIzhAwjPbS8eyh {\n    background-color: #b8b8d0;\n}\n\n._2iDfIf-jYK7gU8-0cfcWKt {\n    background-color: #f08030;\n}\n\n._2k8BWquRgCbyiVaoyQRbuS {\n    background-color: #6890f0;\n}\n\n._6Qxjn4cTNdqhA6TRRpfcP {\n    background-color: #78c850;\n}\n\n._2rvnAs-ZRTbu3m27ttz5tW {\n    background-color: #f8d030;\n}\n\n._3W2eFYTRX4bMg58C-2KU-o {\n    background-color: #f85888;\n}\n\n._1oNUkqidJQIQp0V1ube3wd {\n    background-color: #98d8d8;\n}\n\n._2fhyVkUq24eAOLxY0MA001 {\n    background-color: #7038f8;\n}\n\n.AflA0aa7oRkkLA5iujcRT {\n    background-color: #705848;\n}\n\n._2l7tqedxDriwumf9ZyTKVv {\n    background-color: #ee99ac;\n}\n", ""]);

// exports
exports.locals = {
	"normal": "_3flwRTDyGlUv93ppkuL9Oh",
	"fighting": "_3qXWKGVWCWz9Kvulc8gA-3",
	"flying": "_2mHL2vpYebcD5eLF_E_jN7",
	"poison": "gOoulNfMwszi2NNtGwOAG",
	"ground": "_1oGPhJ9EvABPcNhy0isRQ5",
	"rock": "aMIdZl4Vn9CfjFhK91Ju_",
	"bug": "_2CQITGibeZGTk5j0pyrNYV",
	"ghost": "_1PGvJUhgeU9jvi9EfrvCJ0",
	"steel": "Xq5AEysFIzhAwjPbS8eyh",
	"fire": "_2iDfIf-jYK7gU8-0cfcWKt",
	"water": "_2k8BWquRgCbyiVaoyQRbuS",
	"grass": "_6Qxjn4cTNdqhA6TRRpfcP",
	"electric": "_2rvnAs-ZRTbu3m27ttz5tW",
	"psychic": "_3W2eFYTRX4bMg58C-2KU-o",
	"ice": "_1oNUkqidJQIQp0V1ube3wd",
	"dragon": "_2fhyVkUq24eAOLxY0MA001",
	"dark": "AflA0aa7oRkkLA5iujcRT",
	"fairy": "_2l7tqedxDriwumf9ZyTKVv"
};

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(6)();
// imports


// module
exports.push([module.i, "._1BIU2qNCRBVqGCTBZ199CU {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n._2la_yoKzOF3h0nWDHiVv4E {\n    width: 100%;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    justify-content: center;\n    grid-gap: 5px 5px;\n}\n\n._2la_yoKzOF3h0nWDHiVv4E img {\n    display: block;\n    width: 100%;\n}", ""]);

// exports
exports.locals = {
	"container": "_1BIU2qNCRBVqGCTBZ199CU",
	"thumbnailGrid": "_2la_yoKzOF3h0nWDHiVv4E"
};

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(6)();
// imports


// module
exports.push([module.i, "body {\n    background-color: white;\n    font-family: sans-serif;\n    margin: 0;\n}\n\n._2pRR5Vjeeycao853Vdz92Z {\n    display: grid;\n    grid-template-columns: 200px 1fr;\n}\n\n@media screen and (max-device-width: 750px) {\n    ._2pRR5Vjeeycao853Vdz92Z {\n        grid-template-columns: max-content 1fr;\n    }\n}\n\n._1oYGmtbdjQwiCio__eTJeM {\n    display: flex;\n    flex-direction: column;\n    padding: 0 10px;\n}\n", ""]);

// exports
exports.locals = {
	"container": "_2pRR5Vjeeycao853Vdz92Z",
	"pageContent": "_1oYGmtbdjQwiCio__eTJeM"
};

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {// @flow


var key = '__global_unique_id__';

module.exports = function() {
  return global[key] = (global[key] || 0) + 1;
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(145)))

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var reactIs = __webpack_require__(54);

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),
/* 259 */
/***/ (function(module, exports) {

module.exports = [{"species":"excadrill","ivs":{"hp":31,"atk":31,"def":31,"spa":31,"spd":31,"spe":31},"evSpreads":[{"name":"Jolly","evs":{"nature":"jolly","hp":4,"atk":252,"def":0,"spa":0,"spd":0,"spe":252}},{"name":"Adamant","evs":{"nature":"adamant","hp":4,"atk":252,"def":0,"spa":0,"spd":0,"spe":252}}],"items":["focussash","lifeorb","choiceband"],"dynamax":false,"moves":["ironhead","rockslide","highhorsepower","earthquake"],"level":50},{"species":"togekiss","ivs":{"hp":31,"atk":31,"def":31,"spa":31,"spd":31,"spe":31},"evSpreads":[{"name":"Timid","evs":{"nature":"timid","hp":4,"atk":0,"def":0,"spa":252,"spd":0,"spe":252}},{"name":"Bold","evs":{"nature":"bold","hp":236,"atk":0,"def":196,"spa":12,"spd":12,"spe":52}}],"items":["pinchberry"],"dynamax":false,"moves":["dazzlinggleam","airslash","heatwave","flamethrower"],"level":50},{"species":"arcanine","ivs":{"hp":31,"atk":31,"def":31,"spa":31,"spd":31,"spe":31},"evSpreads":[{"name":"Timid","evs":{"nature":"timid","hp":196,"atk":0,"def":44,"spa":44,"spd":4,"spe":220}},{"name":"Jolly","evs":{"nature":"jolly","hp":0,"atk":252,"def":0,"spa":0,"spd":4,"spe":252}}],"items":["pinchberry"],"dynamax":false,"moves":["flamethrower","flareblitz"],"level":50},{"species":"duraludon","ivs":{"hp":31,"atk":31,"def":31,"spa":31,"spd":31,"spe":31},"evSpreads":[{"name":"Timid","evs":{"nature":"timid","hp":0,"atk":0,"def":0,"spa":252,"spd":4,"spe":252}},{"name":"Modest","evs":{"nature":"modest","hp":196,"atk":0,"def":4,"spa":140,"spd":108,"spe":60}}],"items":["assaultvest","lifeorb"],"dynamax":false,"moves":["flashcannon","dracometeor","thunderbolt","darkpulse","dragonpulse"],"level":50},{"species":"barraskewda","ivs":{"hp":31,"atk":31,"def":31,"spa":31,"spd":31,"spe":31},"evSpreads":[{"name":"Jolly","evs":{"nature":"jolly","hp":4,"atk":252,"def":0,"spa":0,"spd":0,"spe":252}}],"items":["lifeorb","choiceband"],"dynamax":false,"moves":["Liquidation","Close Combat","Crunch","Poison Jab",{"name":"Liquidation","display":"Liquidation (Rain)","weather":1.5}],"level":50}]

/***/ }),
/* 260 */
/***/ (function(module, exports) {

module.exports = {"species":"Togekiss","ivs":{"hp":31,"atk":31,"def":31,"spa":31,"spd":31,"spe":31},"evs":{"nature":"bold","hp":236,"atk":0,"def":196,"spa":12,"spd":12,"spe":52},"item":"scopelens","ability":"superluck","moves":["dazzlinggleam","airslash","heatwave","protect"],"level":50}

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(21),
    root = __webpack_require__(16);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(313),
    hashDelete = __webpack_require__(314),
    hashGet = __webpack_require__(315),
    hashHas = __webpack_require__(316),
    hashSet = __webpack_require__(317);

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(21),
    root = __webpack_require__(16);

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(21),
    root = __webpack_require__(16);

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(78),
    setCacheAdd = __webpack_require__(339),
    setCacheHas = __webpack_require__(340);

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(16);

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(21),
    root = __webpack_require__(16);

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),
/* 268 */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;


/***/ }),
/* 269 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(295),
    isArguments = __webpack_require__(82),
    isArray = __webpack_require__(17),
    isBuffer = __webpack_require__(137),
    isIndex = __webpack_require__(79),
    isTypedArray = __webpack_require__(139);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),
/* 271 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

var baseForOwn = __webpack_require__(275),
    createBaseEach = __webpack_require__(301);

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(126),
    isFlattenable = __webpack_require__(318);

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(302);

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

var baseFor = __webpack_require__(274),
    keys = __webpack_require__(84);

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(126),
    isArray = __webpack_require__(17);

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),
/* 277 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(35),
    isObjectLike = __webpack_require__(37);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(124),
    equalArrays = __webpack_require__(131),
    equalByTag = __webpack_require__(304),
    equalObjects = __webpack_require__(305),
    getTag = __webpack_require__(310),
    isArray = __webpack_require__(17),
    isBuffer = __webpack_require__(137),
    isTypedArray = __webpack_require__(139);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(124),
    baseIsEqual = __webpack_require__(128);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(138),
    isMasked = __webpack_require__(320),
    isObject = __webpack_require__(36),
    toSource = __webpack_require__(136);

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(35),
    isLength = __webpack_require__(83),
    isObjectLike = __webpack_require__(37);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

var baseMatches = __webpack_require__(286),
    baseMatchesProperty = __webpack_require__(287),
    identity = __webpack_require__(52),
    isArray = __webpack_require__(17),
    property = __webpack_require__(355);

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(321),
    nativeKeys = __webpack_require__(334);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(272),
    isArrayLike = __webpack_require__(53);

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike(collection) ? Array(collection.length) : [];

  baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

module.exports = baseMap;


/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMatch = __webpack_require__(280),
    getMatchData = __webpack_require__(307),
    matchesStrictComparable = __webpack_require__(135);

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;


/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(128),
    get = __webpack_require__(352),
    hasIn = __webpack_require__(353),
    isKey = __webpack_require__(80),
    isStrictComparable = __webpack_require__(134),
    matchesStrictComparable = __webpack_require__(135),
    toKey = __webpack_require__(51);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;


/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(125),
    baseIteratee = __webpack_require__(283),
    baseMap = __webpack_require__(285),
    baseSortBy = __webpack_require__(294),
    baseUnary = __webpack_require__(129),
    compareMultiple = __webpack_require__(299),
    identity = __webpack_require__(52);

/**
 * The base implementation of `_.orderBy` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
 * @param {string[]} orders The sort orders of `iteratees`.
 * @returns {Array} Returns the new sorted array.
 */
function baseOrderBy(collection, iteratees, orders) {
  var index = -1;
  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));

  var result = baseMap(collection, function(value, key, collection) {
    var criteria = arrayMap(iteratees, function(iteratee) {
      return iteratee(value);
    });
    return { 'criteria': criteria, 'index': ++index, 'value': value };
  });

  return baseSortBy(result, function(object, other) {
    return compareMultiple(object, other, orders);
  });
}

module.exports = baseOrderBy;


/***/ }),
/* 289 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;


/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(127);

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(52),
    overRest = __webpack_require__(338),
    setToString = __webpack_require__(342);

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;


/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(351),
    defineProperty = __webpack_require__(303),
    identity = __webpack_require__(52);

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;


/***/ }),
/* 293 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

module.exports = baseSlice;


/***/ }),
/* 294 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.sortBy` which uses `comparer` to define the
 * sort order of `array` and replaces criteria objects with their corresponding
 * values.
 *
 * @private
 * @param {Array} array The array to sort.
 * @param {Function} comparer The function to define sort order.
 * @returns {Array} Returns `array`.
 */
function baseSortBy(array, comparer) {
  var length = array.length;

  array.sort(comparer);
  while (length--) {
    array[length] = array[length].value;
  }
  return array;
}

module.exports = baseSortBy;


/***/ }),
/* 295 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(34),
    arrayMap = __webpack_require__(125),
    isArray = __webpack_require__(17),
    isSymbol = __webpack_require__(38);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;


/***/ }),
/* 297 */
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;


/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(38);

/**
 * Compares values to sort them in ascending order.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {number} Returns the sort order indicator for `value`.
 */
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== undefined,
        valIsNull = value === null,
        valIsReflexive = value === value,
        valIsSymbol = isSymbol(value);

    var othIsDefined = other !== undefined,
        othIsNull = other === null,
        othIsReflexive = other === other,
        othIsSymbol = isSymbol(other);

    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
        (valIsNull && othIsDefined && othIsReflexive) ||
        (!valIsDefined && othIsReflexive) ||
        !valIsReflexive) {
      return 1;
    }
    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
        (othIsNull && valIsDefined && valIsReflexive) ||
        (!othIsDefined && valIsReflexive) ||
        !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}

module.exports = compareAscending;


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

var compareAscending = __webpack_require__(298);

/**
 * Used by `_.orderBy` to compare multiple properties of a value to another
 * and stable sort them.
 *
 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
 * specify an order of "desc" for descending or "asc" for ascending sort order
 * of corresponding values.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {boolean[]|string[]} orders The order to sort by for each property.
 * @returns {number} Returns the sort order indicator for `object`.
 */
function compareMultiple(object, other, orders) {
  var index = -1,
      objCriteria = object.criteria,
      othCriteria = other.criteria,
      length = objCriteria.length,
      ordersLength = orders.length;

  while (++index < length) {
    var result = compareAscending(objCriteria[index], othCriteria[index]);
    if (result) {
      if (index >= ordersLength) {
        return result;
      }
      var order = orders[index];
      return result * (order == 'desc' ? -1 : 1);
    }
  }
  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
  // that causes it, under certain circumstances, to provide the same value for
  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
  // for more details.
  //
  // This also ensures a stable sort in V8 and other engines.
  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
  return object.index - other.index;
}

module.exports = compareMultiple;


/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(16);

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(53);

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;


/***/ }),
/* 302 */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(21);

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(34),
    Uint8Array = __webpack_require__(266),
    eq = __webpack_require__(81),
    equalArrays = __webpack_require__(131),
    mapToArray = __webpack_require__(332),
    setToArray = __webpack_require__(341);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;


/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__(306);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(276),
    getSymbols = __webpack_require__(309),
    keys = __webpack_require__(84);

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

var isStrictComparable = __webpack_require__(134),
    keys = __webpack_require__(84);

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(34);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(269),
    stubArray = __webpack_require__(358);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(261),
    Map = __webpack_require__(77),
    Promise = __webpack_require__(263),
    Set = __webpack_require__(264),
    WeakMap = __webpack_require__(267),
    baseGetTag = __webpack_require__(35),
    toSource = __webpack_require__(136);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),
/* 311 */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(130),
    isArguments = __webpack_require__(82),
    isArray = __webpack_require__(17),
    isIndex = __webpack_require__(79),
    isLength = __webpack_require__(83),
    toKey = __webpack_require__(51);

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(50);

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),
/* 314 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(50);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(50);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(50);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(34),
    isArguments = __webpack_require__(82),
    isArray = __webpack_require__(17);

/** Built-in value references. */
var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;


/***/ }),
/* 319 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(300);

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),
/* 321 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),
/* 322 */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(48);

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(48);

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(48);

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(48);

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(262),
    ListCache = __webpack_require__(47),
    Map = __webpack_require__(77);

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(49);

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(49);

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(49);

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(49);

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),
/* 332 */
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;


/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

var memoize = __webpack_require__(354);

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;


/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(337);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(132);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(146)(module)))

/***/ }),
/* 336 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),
/* 337 */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(268);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;


/***/ }),
/* 339 */
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;


/***/ }),
/* 340 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;


/***/ }),
/* 341 */
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;


/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(292),
    shortOut = __webpack_require__(343);

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;


/***/ }),
/* 343 */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;


/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(47);

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),
/* 345 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),
/* 346 */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),
/* 347 */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(47),
    Map = __webpack_require__(77),
    MapCache = __webpack_require__(78);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__(333);

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;


/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

var baseSlice = __webpack_require__(293),
    isIterateeCall = __webpack_require__(133),
    toInteger = __webpack_require__(361);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil,
    nativeMax = Math.max;

/**
 * Creates an array of elements split into groups the length of `size`.
 * If `array` can't be split evenly, the final chunk will be the remaining
 * elements.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to process.
 * @param {number} [size=1] The length of each chunk
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the new array of chunks.
 * @example
 *
 * _.chunk(['a', 'b', 'c', 'd'], 2);
 * // => [['a', 'b'], ['c', 'd']]
 *
 * _.chunk(['a', 'b', 'c', 'd'], 3);
 * // => [['a', 'b', 'c'], ['d']]
 */
function chunk(array, size, guard) {
  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
    size = 1;
  } else {
    size = nativeMax(toInteger(size), 0);
  }
  var length = array == null ? 0 : array.length;
  if (!length || size < 1) {
    return [];
  }
  var index = 0,
      resIndex = 0,
      result = Array(nativeCeil(length / size));

  while (index < length) {
    result[resIndex++] = baseSlice(array, index, (index += size));
  }
  return result;
}

module.exports = chunk;


/***/ }),
/* 351 */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;


/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(127);

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

var baseHasIn = __webpack_require__(277),
    hasPath = __webpack_require__(312);

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;


/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(78);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;


/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(289),
    basePropertyDeep = __webpack_require__(290),
    isKey = __webpack_require__(80),
    toKey = __webpack_require__(51);

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;


/***/ }),
/* 356 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeReverse = arrayProto.reverse;

/**
 * Reverses `array` so that the first element becomes the last, the second
 * element becomes the second to last, and so on.
 *
 * **Note:** This method mutates `array` and is based on
 * [`Array#reverse`](https://mdn.io/Array/reverse).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = [1, 2, 3];
 *
 * _.reverse(array);
 * // => [3, 2, 1]
 *
 * console.log(array);
 * // => [3, 2, 1]
 */
function reverse(array) {
  return array == null ? array : nativeReverse.call(array);
}

module.exports = reverse;


/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(273),
    baseOrderBy = __webpack_require__(288),
    baseRest = __webpack_require__(291),
    isIterateeCall = __webpack_require__(133);

/**
 * Creates an array of elements, sorted in ascending order by the results of
 * running each element in a collection thru each iteratee. This method
 * performs a stable sort, that is, it preserves the original sort order of
 * equal elements. The iteratees are invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 40 },
 *   { 'user': 'barney', 'age': 34 }
 * ];
 *
 * _.sortBy(users, [function(o) { return o.user; }]);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
 *
 * _.sortBy(users, ['user', 'age']);
 * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
 */
var sortBy = baseRest(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
});

module.exports = sortBy;


/***/ }),
/* 358 */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),
/* 359 */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

var toNumber = __webpack_require__(362);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

module.exports = toFinite;


/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

var toFinite = __webpack_require__(360);

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

module.exports = toInteger;


/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(36),
    isSymbol = __webpack_require__(38);

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;


/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(296);

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;


/***/ }),
/* 364 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_inheritsLoose__ = __webpack_require__(150);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_inheritsLoose___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_inheritsLoose__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_gud__ = __webpack_require__(257);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_gud___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_gud__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_tiny_warning__ = __webpack_require__(56);






var MAX_SIGNED_31_BIT_INT = 1073741823;

function objectIs(x, y) {
  if (x === y) {
    return x !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function createEventEmitter(value) {
  var handlers = [];
  return {
    on: function on(handler) {
      handlers.push(handler);
    },
    off: function off(handler) {
      handlers = handlers.filter(function (h) {
        return h !== handler;
      });
    },
    get: function get() {
      return value;
    },
    set: function set(newValue, changedBits) {
      value = newValue;
      handlers.forEach(function (handler) {
        return handler(value, changedBits);
      });
    }
  };
}

function onlyChild(children) {
  return Array.isArray(children) ? children[0] : children;
}

function createReactContext(defaultValue, calculateChangedBits) {
  var _Provider$childContex, _Consumer$contextType;

  var contextProp = '__create-react-context-' + __WEBPACK_IMPORTED_MODULE_3_gud___default()() + '__';

  var Provider =
  /*#__PURE__*/
  function (_Component) {
    __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_inheritsLoose___default()(Provider, _Component);

    function Provider() {
      var _this;

      _this = _Component.apply(this, arguments) || this;
      _this.emitter = createEventEmitter(_this.props.value);
      return _this;
    }

    var _proto = Provider.prototype;

    _proto.getChildContext = function getChildContext() {
      var _ref;

      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
    };

    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (this.props.value !== nextProps.value) {
        var oldValue = this.props.value;
        var newValue = nextProps.value;
        var changedBits;

        if (objectIs(oldValue, newValue)) {
          changedBits = 0;
        } else {
          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;

          if (process.env.NODE_ENV !== 'production') {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);
          }

          changedBits |= 0;

          if (changedBits !== 0) {
            this.emitter.set(nextProps.value, changedBits);
          }
        }
      }
    };

    _proto.render = function render() {
      return this.props.children;
    };

    return Provider;
  }(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object.isRequired, _Provider$childContex);

  var Consumer =
  /*#__PURE__*/
  function (_Component2) {
    __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_inheritsLoose___default()(Consumer, _Component2);

    function Consumer() {
      var _this2;

      _this2 = _Component2.apply(this, arguments) || this;
      _this2.state = {
        value: _this2.getValue()
      };

      _this2.onUpdate = function (newValue, changedBits) {
        var observedBits = _this2.observedBits | 0;

        if ((observedBits & changedBits) !== 0) {
          _this2.setState({
            value: _this2.getValue()
          });
        }
      };

      return _this2;
    }

    var _proto2 = Consumer.prototype;

    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var observedBits = nextProps.observedBits;
      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };

    _proto2.componentDidMount = function componentDidMount() {
      if (this.context[contextProp]) {
        this.context[contextProp].on(this.onUpdate);
      }

      var observedBits = this.props.observedBits;
      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };

    _proto2.componentWillUnmount = function componentWillUnmount() {
      if (this.context[contextProp]) {
        this.context[contextProp].off(this.onUpdate);
      }
    };

    _proto2.getValue = function getValue() {
      if (this.context[contextProp]) {
        return this.context[contextProp].get();
      } else {
        return defaultValue;
      }
    };

    _proto2.render = function render() {
      return onlyChild(this.props.children)(this.state.value);
    };

    return Consumer;
  }(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object, _Consumer$contextType);
  return {
    Provider: Provider,
    Consumer: Consumer
  };
}

var index = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createContext || createReactContext;

/* harmony default export */ __webpack_exports__["a"] = (index);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)))

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(87);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(54);
var assign = __webpack_require__(39);

var ReactPropTypesSecret = __webpack_require__(87);
var checkPropTypes = __webpack_require__(85);

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.12.0
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var React = __webpack_require__(0);
var _assign = __webpack_require__(39);
var Scheduler = __webpack_require__(142);
var checkPropTypes = __webpack_require__(85);
var tracing = __webpack_require__(382);

// Do not require this module directly! Use normal `invariant` calls with
// template literal strings. The messages will be replaced with error codes
// during build.

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

if (!React) {
  {
    throw Error("ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.");
  }
}

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;
/**
 * Injectable mapping from names to event plugin modules.
 */

var namesToPlugins = {};
/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */

function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }

  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);

    if (!(pluginIndex > -1)) {
      {
        throw Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`.");
      }
    }

    if (plugins[pluginIndex]) {
      continue;
    }

    if (!pluginModule.extractEvents) {
      {
        throw Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not.");
      }
    }

    plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;

    for (var eventName in publishedEvents) {
      if (!publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName)) {
        {
          throw Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`.");
        }
      }
    }
  }
}
/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */


function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  if (!!eventNameDispatchConfigs.hasOwnProperty(eventName)) {
    {
      throw Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName + "`.");
    }
  }

  eventNameDispatchConfigs[eventName] = dispatchConfig;
  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }

    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }

  return false;
}
/**
 * Publishes a registration name that is used to identify dispatched events.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */


function publishRegistrationName(registrationName, pluginModule, eventName) {
  if (!!registrationNameModules[registrationName]) {
    {
      throw Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`.");
    }
  }

  registrationNameModules[registrationName] = pluginModule;
  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  {
    var lowerCasedName = registrationName.toLowerCase();
    possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}
/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */

/**
 * Ordered list of injected plugins.
 */


var plugins = [];
/**
 * Mapping from event name to dispatch config
 */

var eventNameDispatchConfigs = {};
/**
 * Mapping from registration name to plugin module
 */

var registrationNameModules = {};
/**
 * Mapping from registration name to event name
 */

var registrationNameDependencies = {};
/**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */

var possibleRegistrationNames = {}; // Trust the developer to only use possibleRegistrationNames in true

/**
 * Injects an ordering of plugins (by plugin name). This allows the ordering
 * to be decoupled from injection of the actual plugins so that ordering is
 * always deterministic regardless of packaging, on-the-fly injection, etc.
 *
 * @param {array} InjectedEventPluginOrder
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginOrder}
 */

function injectEventPluginOrder(injectedEventPluginOrder) {
  if (!!eventPluginOrder) {
    {
      throw Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.");
    }
  } // Clone the ordering so it cannot be dynamically mutated.


  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
  recomputePluginOrdering();
}
/**
 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
 * in the ordering injected by `injectEventPluginOrder`.
 *
 * Plugins can be injected as part of page initialization or on-the-fly.
 *
 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginsByName}
 */

function injectEventPluginsByName(injectedNamesToPlugins) {
  var isOrderingDirty = false;

  for (var pluginName in injectedNamesToPlugins) {
    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
      continue;
    }

    var pluginModule = injectedNamesToPlugins[pluginName];

    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
      if (!!namesToPlugins[pluginName]) {
        {
          throw Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`.");
        }
      }

      namesToPlugins[pluginName] = pluginModule;
      isOrderingDirty = true;
    }
  }

  if (isOrderingDirty) {
    recomputePluginOrdering();
  }
}

var invokeGuardedCallbackImpl = function (name, func, context, a, b, c, d, e, f) {
  var funcArgs = Array.prototype.slice.call(arguments, 3);

  try {
    func.apply(context, funcArgs);
  } catch (error) {
    this.onError(error);
  }
};

{
  // In DEV mode, we swap out invokeGuardedCallback for a special version
  // that plays more nicely with the browser's DevTools. The idea is to preserve
  // "Pause on exceptions" behavior. Because React wraps all user-provided
  // functions in invokeGuardedCallback, and the production version of
  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
  // like caught exceptions, and the DevTools won't pause unless the developer
  // takes the extra step of enabling pause on caught exceptions. This is
  // unintuitive, though, because even though React has caught the error, from
  // the developer's perspective, the error is uncaught.
  //
  // To preserve the expected "Pause on exceptions" behavior, we don't use a
  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
  // DOM node, and call the user-provided callback from inside an event handler
  // for that fake event. If the callback throws, the error is "captured" using
  // a global event handler. But because the error happens in a different
  // event loop context, it does not interrupt the normal program flow.
  // Effectively, this gives us try-catch behavior without actually using
  // try-catch. Neat!
  // Check that the browser supports the APIs we need to implement our special
  // DEV version of invokeGuardedCallback
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');

    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
      // If document doesn't exist we know for sure we will crash in this method
      // when we call document.createEvent(). However this can cause confusing
      // errors: https://github.com/facebookincubator/create-react-app/issues/3482
      // So we preemptively throw with a better message instead.
      if (!(typeof document !== 'undefined')) {
        {
          throw Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
        }
      }

      var evt = document.createEvent('Event'); // Keeps track of whether the user-provided callback threw an error. We
      // set this to true at the beginning, then set it to false right after
      // calling the function. If the function errors, `didError` will never be
      // set to false. This strategy works even if the browser is flaky and
      // fails to call our global error handler, because it doesn't rely on
      // the error event at all.

      var didError = true; // Keeps track of the value of window.event so that we can reset it
      // during the callback to let user code access window.event in the
      // browsers that support it.

      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
      // dispatching: https://github.com/facebook/react/issues/13688

      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event'); // Create an event handler for our fake event. We will synchronously
      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
      // call the user-provided callback.

      var funcArgs = Array.prototype.slice.call(arguments, 3);

      function callCallback() {
        // We immediately remove the callback from event listeners so that
        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
        // nested call would trigger the fake event handlers of any call higher
        // in the stack.
        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
        // window.event assignment in both IE <= 10 as they throw an error
        // "Member not found" in strict mode, and in Firefox which does not
        // support window.event.

        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
          window.event = windowEvent;
        }

        func.apply(context, funcArgs);
        didError = false;
      } // Create a global error event handler. We use this to capture the value
      // that was thrown. It's possible that this error handler will fire more
      // than once; for example, if non-React code also calls `dispatchEvent`
      // and a handler for that event throws. We should be resilient to most of
      // those cases. Even if our error event handler fires more than once, the
      // last error event is always used. If the callback actually does error,
      // we know that the last error event is the correct one, because it's not
      // possible for anything else to have happened in between our callback
      // erroring and the code that follows the `dispatchEvent` call below. If
      // the callback doesn't error, but the error event was fired, we know to
      // ignore it because `didError` will be false, as described above.


      var error; // Use this to track whether the error event is ever called.

      var didSetError = false;
      var isCrossOriginError = false;

      function handleWindowError(event) {
        error = event.error;
        didSetError = true;

        if (error === null && event.colno === 0 && event.lineno === 0) {
          isCrossOriginError = true;
        }

        if (event.defaultPrevented) {
          // Some other error handler has prevented default.
          // Browsers silence the error report if this happens.
          // We'll remember this to later decide whether to log it or not.
          if (error != null && typeof error === 'object') {
            try {
              error._suppressLogging = true;
            } catch (inner) {// Ignore.
            }
          }
        }
      } // Create a fake event type.


      var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers

      window.addEventListener('error', handleWindowError);
      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
      // errors, it will trigger our global error handler.

      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);

      if (windowEventDescriptor) {
        Object.defineProperty(window, 'event', windowEventDescriptor);
      }

      if (didError) {
        if (!didSetError) {
          // The callback errored, but the error event never fired.
          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
        } else if (isCrossOriginError) {
          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
        }

        this.onError(error);
      } // Remove our event listeners


      window.removeEventListener('error', handleWindowError);
    };

    invokeGuardedCallbackImpl = invokeGuardedCallbackDev;
  }
}

var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;

var hasError = false;
var caughtError = null; // Used by event system to capture/rethrow the first error.

var hasRethrowError = false;
var rethrowError = null;
var reporter = {
  onError: function (error) {
    hasError = true;
    caughtError = error;
  }
};
/**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */

function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
  hasError = false;
  caughtError = null;
  invokeGuardedCallbackImpl$1.apply(reporter, arguments);
}
/**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */

function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
  invokeGuardedCallback.apply(this, arguments);

  if (hasError) {
    var error = clearCaughtError();

    if (!hasRethrowError) {
      hasRethrowError = true;
      rethrowError = error;
    }
  }
}
/**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */

function rethrowCaughtError() {
  if (hasRethrowError) {
    var error = rethrowError;
    hasRethrowError = false;
    rethrowError = null;
    throw error;
  }
}
function hasCaughtError() {
  return hasError;
}
function clearCaughtError() {
  if (hasError) {
    var error = caughtError;
    hasError = false;
    caughtError = null;
    return error;
  } else {
    {
      {
        throw Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  }
}

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
var warningWithoutStack = function () {};

{
  warningWithoutStack = function (condition, format) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (format === undefined) {
      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (args.length > 8) {
      // Check before the condition to catch violations early.
      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
    }

    if (condition) {
      return;
    }

    if (typeof console !== 'undefined') {
      var argsWithFormat = args.map(function (item) {
        return '' + item;
      });
      argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
      // breaks IE9: https://github.com/facebook/react/issues/13610

      Function.prototype.apply.call(console.error, console, argsWithFormat);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      throw new Error(message);
    } catch (x) {}
  };
}

var warningWithoutStack$1 = warningWithoutStack;

var getFiberCurrentPropsFromNode = null;
var getInstanceFromNode = null;
var getNodeFromInstance = null;
function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {
  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;
  getInstanceFromNode = getInstanceFromNodeImpl;
  getNodeFromInstance = getNodeFromInstanceImpl;

  {
    !(getNodeFromInstance && getInstanceFromNode) ? warningWithoutStack$1(false, 'EventPluginUtils.setComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
  }
}
var validateEventDispatches;

{
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;
    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
    !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warningWithoutStack$1(false, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}
/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */


function executeDispatch(event, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = getNodeFromInstance(inst);
  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}
/**
 * Standard/simple iteration through an event's collected dispatches.
 */

function executeDispatchesInOrder(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;

  {
    validateEventDispatches(event);
  }

  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      } // Listeners and Instances are two parallel arrays that are always in sync.


      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, dispatchListeners, dispatchInstances);
  }

  event._dispatchListeners = null;
  event._dispatchInstances = null;
}
/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */



/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */


/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  if (!(next != null)) {
    {
      throw Error("accumulateInto(...): Accumulated items must not be null or undefined.");
    }
  }

  if (current == null) {
    return next;
  } // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).


  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }

    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 * @param {function} cb Callback invoked with each element or a collection.
 * @param {?} [scope] Scope used as `this` in a callback.
 */
function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */

var eventQueue = null;
/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @private
 */

var executeDispatchesAndRelease = function (event) {
  if (event) {
    executeDispatchesInOrder(event);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};

var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e);
};

function runEventsInBatch(events) {
  if (events !== null) {
    eventQueue = accumulateInto(eventQueue, events);
  } // Set `eventQueue` to null before processing it so that we can tell if more
  // events get enqueued while processing.


  var processingEventQueue = eventQueue;
  eventQueue = null;

  if (!processingEventQueue) {
    return;
  }

  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);

  if (!!eventQueue) {
    {
      throw Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.");
    }
  } // This would be a good time to rethrow if any of the event handlers threw.


  rethrowCaughtError();
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));

    default:
      return false;
  }
}
/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */

/**
 * Methods for injecting dependencies.
 */


var injection = {
  /**
   * @param {array} InjectedEventPluginOrder
   * @public
   */
  injectEventPluginOrder: injectEventPluginOrder,

  /**
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   */
  injectEventPluginsByName: injectEventPluginsByName
};
/**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */

function getListener(inst, registrationName) {
  var listener; // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
  // live here; needs to be moved to a better place soon

  var stateNode = inst.stateNode;

  if (!stateNode) {
    // Work in progress (ex: onload events in incremental mode).
    return null;
  }

  var props = getFiberCurrentPropsFromNode(stateNode);

  if (!props) {
    // Work in progress.
    return null;
  }

  listener = props[registrationName];

  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
    return null;
  }

  if (!(!listener || typeof listener === 'function')) {
    {
      throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
    }
  }

  return listener;
}
/**
 * Allows registered plugins an opportunity to extract events from top-level
 * native browser events.
 *
 * @return {*} An accumulation of synthetic events.
 * @internal
 */

function extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
  var events = null;

  for (var i = 0; i < plugins.length; i++) {
    // Not every plugin in the ordering may be loaded at runtime.
    var possiblePlugin = plugins[i];

    if (possiblePlugin) {
      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);

      if (extractedEvents) {
        events = accumulateInto(events, extractedEvents);
      }
    }
  }

  return events;
}

function runExtractedPluginEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
  var events = extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
  runEventsInBatch(events);
}

var FunctionComponent = 0;
var ClassComponent = 1;
var IndeterminateComponent = 2; // Before we know whether it is function or class

var HostRoot = 3; // Root of a host tree. Could be nested inside another node.

var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.

var HostComponent = 5;
var HostText = 6;
var Fragment = 7;
var Mode = 8;
var ContextConsumer = 9;
var ContextProvider = 10;
var ForwardRef = 11;
var Profiler = 12;
var SuspenseComponent = 13;
var MemoComponent = 14;
var SimpleMemoComponent = 15;
var LazyComponent = 16;
var IncompleteClassComponent = 17;
var DehydratedFragment = 18;
var SuspenseListComponent = 19;
var FundamentalComponent = 20;
var ScopeComponent = 21;

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED; // Prevent newer renderers from RTE when used with older react package versions.
// Current owner and dispatcher used to share the same ref,
// but PR #14548 split them out to better support the react-debug-tools package.

if (!ReactSharedInternals.hasOwnProperty('ReactCurrentDispatcher')) {
  ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  };
}

if (!ReactSharedInternals.hasOwnProperty('ReactCurrentBatchConfig')) {
  ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  };
}

var BEFORE_SLASH_RE = /^(.*)[\\\/]/;
var describeComponentFrame = function (name, source, ownerName) {
  var sourceInfo = '';

  if (source) {
    var path = source.fileName;
    var fileName = path.replace(BEFORE_SLASH_RE, '');

    {
      // In DEV, include code for a common special case:
      // prefer "folder/index.js" instead of just "index.js".
      if (/^index\./.test(fileName)) {
        var match = path.match(BEFORE_SLASH_RE);

        if (match) {
          var pathBeforeSlash = match[1];

          if (pathBeforeSlash) {
            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
            fileName = folderName + '/' + fileName;
          }
        }
      }
    }

    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
  } else if (ownerName) {
    sourceInfo = ' (created by ' + ownerName + ')';
  }

  return '\n    in ' + (name || 'Unknown') + sourceInfo;
};

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?


var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = warningWithoutStack$1;

{
  warning = function (condition, format) {
    if (condition) {
      return;
    }

    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum(); // eslint-disable-next-line react-internal/warning-and-invariant-args

    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    warningWithoutStack$1.apply(void 0, [false, format + '%s'].concat(args, [stack]));
  };
}

var warning$1 = warning;

var Uninitialized = -1;
var Pending = 0;
var Resolved = 1;
var Rejected = 2;
function refineResolvedLazyComponent(lazyComponent) {
  return lazyComponent._status === Resolved ? lazyComponent._result : null;
}
function initializeLazyComponentType(lazyComponent) {
  if (lazyComponent._status === Uninitialized) {
    lazyComponent._status = Pending;
    var ctor = lazyComponent._ctor;
    var thenable = ctor();
    lazyComponent._result = thenable;
    thenable.then(function (moduleObject) {
      if (lazyComponent._status === Pending) {
        var defaultExport = moduleObject.default;

        {
          if (defaultExport === undefined) {
            warning$1(false, 'lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + "const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
          }
        }

        lazyComponent._status = Resolved;
        lazyComponent._result = defaultExport;
      }
    }, function (error) {
      if (lazyComponent._status === Pending) {
        lazyComponent._status = Rejected;
        lazyComponent._result = error;
      }
    });
  }
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return "Profiler";

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return 'Context.Consumer';

      case REACT_PROVIDER_TYPE:
        return 'Context.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        {
          var thenable = type;
          var resolvedThenable = refineResolvedLazyComponent(thenable);

          if (resolvedThenable) {
            return getComponentName(resolvedThenable);
          }

          break;
        }
    }
  }

  return null;
}

var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

function describeFiber(fiber) {
  switch (fiber.tag) {
    case HostRoot:
    case HostPortal:
    case HostText:
    case Fragment:
    case ContextProvider:
    case ContextConsumer:
      return '';

    default:
      var owner = fiber._debugOwner;
      var source = fiber._debugSource;
      var name = getComponentName(fiber.type);
      var ownerName = null;

      if (owner) {
        ownerName = getComponentName(owner.type);
      }

      return describeComponentFrame(name, source, ownerName);
  }
}

function getStackByFiberInDevAndProd(workInProgress) {
  var info = '';
  var node = workInProgress;

  do {
    info += describeFiber(node);
    node = node.return;
  } while (node);

  return info;
}
var current = null;
var phase = null;
function getCurrentFiberOwnerNameInDevOrNull() {
  {
    if (current === null) {
      return null;
    }

    var owner = current._debugOwner;

    if (owner !== null && typeof owner !== 'undefined') {
      return getComponentName(owner.type);
    }
  }

  return null;
}
function getCurrentFiberStackInDev() {
  {
    if (current === null) {
      return '';
    } // Safe because if current fiber exists, we are reconciling,
    // and it is guaranteed to be the work-in-progress version.


    return getStackByFiberInDevAndProd(current);
  }

  return '';
}
function resetCurrentFiber() {
  {
    ReactDebugCurrentFrame.getCurrentStack = null;
    current = null;
    phase = null;
  }
}
function setCurrentFiber(fiber) {
  {
    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
    current = fiber;
    phase = null;
  }
}
function setCurrentPhase(lifeCyclePhase) {
  {
    phase = lifeCyclePhase;
  }
}

var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');

function endsWith(subject, search) {
  var length = subject.length;
  return subject.substring(length - search.length, length) === search;
}

var PLUGIN_EVENT_SYSTEM = 1;
var RESPONDER_EVENT_SYSTEM = 1 << 1;
var IS_PASSIVE = 1 << 2;
var IS_ACTIVE = 1 << 3;
var PASSIVE_NOT_SUPPORTED = 1 << 4;
var IS_REPLAYED = 1 << 5;

var restoreImpl = null;
var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  // We perform this translation at the end of the event loop so that we
  // always receive the correct fiber here
  var internalInstance = getInstanceFromNode(target);

  if (!internalInstance) {
    // Unmounted
    return;
  }

  if (!(typeof restoreImpl === 'function')) {
    {
      throw Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
    }
  }

  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
  restoreImpl(internalInstance.stateNode, internalInstance.type, props);
}

function setRestoreImplementation(impl) {
  restoreImpl = impl;
}
function enqueueStateRestore(target) {
  if (restoreTarget) {
    if (restoreQueue) {
      restoreQueue.push(target);
    } else {
      restoreQueue = [target];
    }
  } else {
    restoreTarget = target;
  }
}
function needsStateRestore() {
  return restoreTarget !== null || restoreQueue !== null;
}
function restoreStateIfNeeded() {
  if (!restoreTarget) {
    return;
  }

  var target = restoreTarget;
  var queuedTargets = restoreQueue;
  restoreTarget = null;
  restoreQueue = null;
  restoreStateOfTarget(target);

  if (queuedTargets) {
    for (var i = 0; i < queuedTargets.length; i++) {
      restoreStateOfTarget(queuedTargets[i]);
    }
  }
}

var enableUserTimingAPI = true; // Helps identify side effects in render-phase lifecycle hooks and setState
// reducers by double invoking them in Strict Mode.

var debugRenderPhaseSideEffectsForStrictMode = true; // To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.

var replayFailedUnitOfWorkWithInvokeGuardedCallback = true; // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:

var warnAboutDeprecatedLifecycles = true; // Gather advanced timing metrics for Profiler subtrees.

var enableProfilerTimer = true; // Trace which interactions trigger each commit.

var enableSchedulerTracing = true; // SSR experiments

var enableSuspenseServerRenderer = false;
var enableSelectiveHydration = false; // Only used in www builds.

 // Only used in www builds.

 // Disable javascript: URL strings in href for XSS protection.

var disableJavaScriptURLs = false; // React Fire: prevent the value and checked attributes from syncing
// with their related DOM properties

var disableInputAttributeSyncing = false; // These APIs will no longer be "unstable" in the upcoming 16.7 release,
// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.

var exposeConcurrentModeAPIs = false;
var warnAboutShorthandPropertyCollision = false; // Experimental React Flare event system and event components support.

var enableFlareAPI = false; // Experimental Host Component support.

var enableFundamentalAPI = false; // Experimental Scope support.

var enableScopeAPI = false; // New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107

 // We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)
// Till then, we warn about the missing mock, but still fallback to a legacy mode compatible version

var warnAboutUnmockedScheduler = false; // For tests, we flush suspense fallbacks in an act scope;
// *except* in some of our own tests, where we test incremental loading states.

var flushSuspenseFallbacksInTests = true; // Add a callback property to suspense to notify which promises are currently
// in the update queue. This allows reporting and tracing of what is causing
// the user to see a loading state.
// Also allows hydration callbacks to fire when a dehydrated boundary gets
// hydrated or deleted.

var enableSuspenseCallback = false; // Part of the simplification of React.createElement so we can eventually move
// from React.createElement to React.jsx
// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md

var warnAboutDefaultPropsOnFunctionComponents = false;
var warnAboutStringRefs = false;
var disableLegacyContext = false;
var disableSchedulerTimeoutBasedOnReactExpirationTime = false;
var enableTrustedTypesIntegration = false; // Flag to turn event.target and event.currentTarget in ReactNative from a reactTag to a component instance

// the renderer. Such as when we're dispatching events or if third party
// libraries need to call batchedUpdates. Eventually, this API will go away when
// everything is batched by default. We'll then have a similar API to opt-out of
// scheduled work and instead do synchronous work.
// Defaults

var batchedUpdatesImpl = function (fn, bookkeeping) {
  return fn(bookkeeping);
};

var discreteUpdatesImpl = function (fn, a, b, c) {
  return fn(a, b, c);
};

var flushDiscreteUpdatesImpl = function () {};

var batchedEventUpdatesImpl = batchedUpdatesImpl;
var isInsideEventHandler = false;
var isBatchingEventUpdates = false;

function finishEventHandler() {
  // Here we wait until all updates have propagated, which is important
  // when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  // Then we restore state of any controlled component.
  var controlledComponentsHavePendingUpdates = needsStateRestore();

  if (controlledComponentsHavePendingUpdates) {
    // If a controlled event was fired, we may need to restore the state of
    // the DOM node back to the controlled value. This is necessary when React
    // bails out of the update without touching the DOM.
    flushDiscreteUpdatesImpl();
    restoreStateIfNeeded();
  }
}

function batchedUpdates(fn, bookkeeping) {
  if (isInsideEventHandler) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(bookkeeping);
  }

  isInsideEventHandler = true;

  try {
    return batchedUpdatesImpl(fn, bookkeeping);
  } finally {
    isInsideEventHandler = false;
    finishEventHandler();
  }
}
function batchedEventUpdates(fn, a, b) {
  if (isBatchingEventUpdates) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(a, b);
  }

  isBatchingEventUpdates = true;

  try {
    return batchedEventUpdatesImpl(fn, a, b);
  } finally {
    isBatchingEventUpdates = false;
    finishEventHandler();
  }
} // This is for the React Flare event system

function executeUserEventHandler(fn, value) {
  var previouslyInEventHandler = isInsideEventHandler;

  try {
    isInsideEventHandler = true;
    var type = typeof value === 'object' && value !== null ? value.type : '';
    invokeGuardedCallbackAndCatchFirstError(type, fn, undefined, value);
  } finally {
    isInsideEventHandler = previouslyInEventHandler;
  }
}
function discreteUpdates(fn, a, b, c) {
  var prevIsInsideEventHandler = isInsideEventHandler;
  isInsideEventHandler = true;

  try {
    return discreteUpdatesImpl(fn, a, b, c);
  } finally {
    isInsideEventHandler = prevIsInsideEventHandler;

    if (!isInsideEventHandler) {
      finishEventHandler();
    }
  }
}
var lastFlushedEventTimeStamp = 0;
function flushDiscreteUpdatesIfNeeded(timeStamp) {
  // event.timeStamp isn't overly reliable due to inconsistencies in
  // how different browsers have historically provided the time stamp.
  // Some browsers provide high-resolution time stamps for all events,
  // some provide low-resolution time stamps for all events. FF < 52
  // even mixes both time stamps together. Some browsers even report
  // negative time stamps or time stamps that are 0 (iOS9) in some cases.
  // Given we are only comparing two time stamps with equality (!==),
  // we are safe from the resolution differences. If the time stamp is 0
  // we bail-out of preventing the flush, which can affect semantics,
  // such as if an earlier flush removes or adds event listeners that
  // are fired in the subsequent flush. However, this is the same
  // behaviour as we had before this change, so the risks are low.
  if (!isInsideEventHandler && (!enableFlareAPI || timeStamp === 0 || lastFlushedEventTimeStamp !== timeStamp)) {
    lastFlushedEventTimeStamp = timeStamp;
    flushDiscreteUpdatesImpl();
  }
}
function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {
  batchedUpdatesImpl = _batchedUpdatesImpl;
  discreteUpdatesImpl = _discreteUpdatesImpl;
  flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;
  batchedEventUpdatesImpl = _batchedEventUpdatesImpl;
}

var DiscreteEvent = 0;
var UserBlockingEvent = 1;
var ContinuousEvent = 2;

// CommonJS interop named imports.

var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
var runWithPriority = Scheduler.unstable_runWithPriority;
var listenToResponderEventTypesImpl;
function setListenToResponderEventTypes(_listenToResponderEventTypesImpl) {
  listenToResponderEventTypesImpl = _listenToResponderEventTypesImpl;
}
var rootEventTypesToEventResponderInstances = new Map();
var DoNotPropagateToNextResponder = 0;
var PropagateToNextResponder = 1;
var currentTimeStamp = 0;
var currentInstance = null;
var currentDocument = null;
var currentPropagationBehavior = DoNotPropagateToNextResponder;
var eventResponderContext = {
  dispatchEvent: function (eventValue, eventListener, eventPriority) {
    validateResponderContext();
    validateEventValue(eventValue);

    switch (eventPriority) {
      case DiscreteEvent:
        {
          flushDiscreteUpdatesIfNeeded(currentTimeStamp);
          discreteUpdates(function () {
            return executeUserEventHandler(eventListener, eventValue);
          });
          break;
        }

      case UserBlockingEvent:
        {
          runWithPriority(UserBlockingPriority, function () {
            return executeUserEventHandler(eventListener, eventValue);
          });
          break;
        }

      case ContinuousEvent:
        {
          executeUserEventHandler(eventListener, eventValue);
          break;
        }
    }
  },
  isTargetWithinResponder: function (target) {
    validateResponderContext();

    if (target != null) {
      var fiber = getClosestInstanceFromNode(target);
      var responderFiber = currentInstance.fiber;

      while (fiber !== null) {
        if (fiber === responderFiber || fiber.alternate === responderFiber) {
          return true;
        }

        fiber = fiber.return;
      }
    }

    return false;
  },
  isTargetWithinResponderScope: function (target) {
    validateResponderContext();
    var componentInstance = currentInstance;
    var responder = componentInstance.responder;

    if (target != null) {
      var fiber = getClosestInstanceFromNode(target);
      var responderFiber = currentInstance.fiber;

      while (fiber !== null) {
        if (fiber === responderFiber || fiber.alternate === responderFiber) {
          return true;
        }

        if (doesFiberHaveResponder(fiber, responder)) {
          return false;
        }

        fiber = fiber.return;
      }
    }

    return false;
  },
  isTargetWithinNode: function (childTarget, parentTarget) {
    validateResponderContext();
    var childFiber = getClosestInstanceFromNode(childTarget);
    var parentFiber = getClosestInstanceFromNode(parentTarget);

    if (childFiber != null && parentFiber != null) {
      var parentAlternateFiber = parentFiber.alternate;
      var node = childFiber;

      while (node !== null) {
        if (node === parentFiber || node === parentAlternateFiber) {
          return true;
        }

        node = node.return;
      }

      return false;
    } // Fallback to DOM APIs


    return parentTarget.contains(childTarget);
  },
  addRootEventTypes: function (rootEventTypes) {
    validateResponderContext();
    listenToResponderEventTypesImpl(rootEventTypes, currentDocument);

    for (var i = 0; i < rootEventTypes.length; i++) {
      var rootEventType = rootEventTypes[i];
      var eventResponderInstance = currentInstance;
      registerRootEventType(rootEventType, eventResponderInstance);
    }
  },
  removeRootEventTypes: function (rootEventTypes) {
    validateResponderContext();

    for (var i = 0; i < rootEventTypes.length; i++) {
      var rootEventType = rootEventTypes[i];
      var rootEventResponders = rootEventTypesToEventResponderInstances.get(rootEventType);
      var rootEventTypesSet = currentInstance.rootEventTypes;

      if (rootEventTypesSet !== null) {
        rootEventTypesSet.delete(rootEventType);
      }

      if (rootEventResponders !== undefined) {
        rootEventResponders.delete(currentInstance);
      }
    }
  },
  getActiveDocument: getActiveDocument,
  objectAssign: _assign,
  getTimeStamp: function () {
    validateResponderContext();
    return currentTimeStamp;
  },
  isTargetWithinHostComponent: function (target, elementType) {
    validateResponderContext();
    var fiber = getClosestInstanceFromNode(target);

    while (fiber !== null) {
      if (fiber.tag === HostComponent && fiber.type === elementType) {
        return true;
      }

      fiber = fiber.return;
    }

    return false;
  },
  continuePropagation: function () {
    currentPropagationBehavior = PropagateToNextResponder;
  },
  enqueueStateRestore: enqueueStateRestore,
  getResponderNode: function () {
    validateResponderContext();
    var responderFiber = currentInstance.fiber;

    if (responderFiber.tag === ScopeComponent) {
      return null;
    }

    return responderFiber.stateNode;
  }
};

function validateEventValue(eventValue) {
  if (typeof eventValue === 'object' && eventValue !== null) {
    var target = eventValue.target,
        type = eventValue.type,
        timeStamp = eventValue.timeStamp;

    if (target == null || type == null || timeStamp == null) {
      throw new Error('context.dispatchEvent: "target", "timeStamp", and "type" fields on event object are required.');
    }

    var showWarning = function (name) {
      {
        warning$1(false, '%s is not available on event objects created from event responder modules (React Flare). ' + 'Try wrapping in a conditional, i.e. `if (event.type !== "press") { event.%s }`', name, name);
      }
    };

    eventValue.isDefaultPrevented = function () {
      {
        showWarning('isDefaultPrevented()');
      }
    };

    eventValue.isPropagationStopped = function () {
      {
        showWarning('isPropagationStopped()');
      }
    }; // $FlowFixMe: we don't need value, Flow thinks we do


    Object.defineProperty(eventValue, 'nativeEvent', {
      get: function () {
        {
          showWarning('nativeEvent');
        }
      }
    });
  }
}

function doesFiberHaveResponder(fiber, responder) {
  var tag = fiber.tag;

  if (tag === HostComponent || tag === ScopeComponent) {
    var dependencies = fiber.dependencies;

    if (dependencies !== null) {
      var respondersMap = dependencies.responders;

      if (respondersMap !== null && respondersMap.has(responder)) {
        return true;
      }
    }
  }

  return false;
}

function getActiveDocument() {
  return currentDocument;
}

function createDOMResponderEvent(topLevelType, nativeEvent, nativeEventTarget, passive, passiveSupported) {
  var _ref = nativeEvent,
      buttons = _ref.buttons,
      pointerType = _ref.pointerType;
  var eventPointerType = '';

  if (pointerType !== undefined) {
    eventPointerType = pointerType;
  } else if (nativeEvent.key !== undefined) {
    eventPointerType = 'keyboard';
  } else if (buttons !== undefined) {
    eventPointerType = 'mouse';
  } else if (nativeEvent.changedTouches !== undefined) {
    eventPointerType = 'touch';
  }

  return {
    nativeEvent: nativeEvent,
    passive: passive,
    passiveSupported: passiveSupported,
    pointerType: eventPointerType,
    target: nativeEventTarget,
    type: topLevelType
  };
}

function responderEventTypesContainType(eventTypes, type) {
  for (var i = 0, len = eventTypes.length; i < len; i++) {
    if (eventTypes[i] === type) {
      return true;
    }
  }

  return false;
}

function validateResponderTargetEventTypes(eventType, responder) {
  var targetEventTypes = responder.targetEventTypes; // Validate the target event type exists on the responder

  if (targetEventTypes !== null) {
    return responderEventTypesContainType(targetEventTypes, eventType);
  }

  return false;
}

function traverseAndHandleEventResponderInstances(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags) {
  var isPassiveEvent = (eventSystemFlags & IS_PASSIVE) !== 0;
  var isPassiveSupported = (eventSystemFlags & PASSIVE_NOT_SUPPORTED) === 0;
  var isPassive = isPassiveEvent || !isPassiveSupported;
  var eventType = isPassive ? topLevelType : topLevelType + '_active'; // Trigger event responders in this order:
  // - Bubble target responder phase
  // - Root responder phase

  var visitedResponders = new Set();
  var responderEvent = createDOMResponderEvent(topLevelType, nativeEvent, nativeEventTarget, isPassiveEvent, isPassiveSupported);
  var node = targetFiber;
  var insidePortal = false;

  while (node !== null) {
    var _node = node,
        dependencies = _node.dependencies,
        tag = _node.tag;

    if (tag === HostPortal) {
      insidePortal = true;
    } else if ((tag === HostComponent || tag === ScopeComponent) && dependencies !== null) {
      var respondersMap = dependencies.responders;

      if (respondersMap !== null) {
        var responderInstances = Array.from(respondersMap.values());

        for (var i = 0, length = responderInstances.length; i < length; i++) {
          var responderInstance = responderInstances[i];
          var props = responderInstance.props,
              responder = responderInstance.responder,
              state = responderInstance.state;

          if (!visitedResponders.has(responder) && validateResponderTargetEventTypes(eventType, responder) && (!insidePortal || responder.targetPortalPropagation)) {
            visitedResponders.add(responder);
            var onEvent = responder.onEvent;

            if (onEvent !== null) {
              currentInstance = responderInstance;
              onEvent(responderEvent, eventResponderContext, props, state);

              if (currentPropagationBehavior === PropagateToNextResponder) {
                visitedResponders.delete(responder);
                currentPropagationBehavior = DoNotPropagateToNextResponder;
              }
            }
          }
        }
      }
    }

    node = node.return;
  } // Root phase


  var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(eventType);

  if (rootEventResponderInstances !== undefined) {
    var _responderInstances = Array.from(rootEventResponderInstances);

    for (var _i = 0; _i < _responderInstances.length; _i++) {
      var _responderInstance = _responderInstances[_i];
      var props = _responderInstance.props,
          responder = _responderInstance.responder,
          state = _responderInstance.state;
      var onRootEvent = responder.onRootEvent;

      if (onRootEvent !== null) {
        currentInstance = _responderInstance;
        onRootEvent(responderEvent, eventResponderContext, props, state);
      }
    }
  }
}

function mountEventResponder(responder, responderInstance, props, state) {
  var onMount = responder.onMount;

  if (onMount !== null) {
    var previousInstance = currentInstance;
    currentInstance = responderInstance;

    try {
      batchedEventUpdates(function () {
        onMount(eventResponderContext, props, state);
      });
    } finally {
      currentInstance = previousInstance;
    }
  }
}
function unmountEventResponder(responderInstance) {
  var responder = responderInstance.responder;
  var onUnmount = responder.onUnmount;

  if (onUnmount !== null) {
    var props = responderInstance.props,
        state = responderInstance.state;
    var previousInstance = currentInstance;
    currentInstance = responderInstance;

    try {
      batchedEventUpdates(function () {
        onUnmount(eventResponderContext, props, state);
      });
    } finally {
      currentInstance = previousInstance;
    }
  }

  var rootEventTypesSet = responderInstance.rootEventTypes;

  if (rootEventTypesSet !== null) {
    var rootEventTypes = Array.from(rootEventTypesSet);

    for (var i = 0; i < rootEventTypes.length; i++) {
      var topLevelEventType = rootEventTypes[i];
      var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(topLevelEventType);

      if (rootEventResponderInstances !== undefined) {
        rootEventResponderInstances.delete(responderInstance);
      }
    }
  }
}

function validateResponderContext() {
  if (!(currentInstance !== null)) {
    {
      throw Error("An event responder context was used outside of an event cycle.");
    }
  }
}

function dispatchEventForResponderEventSystem(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags) {
  if (enableFlareAPI) {
    var previousInstance = currentInstance;
    var previousTimeStamp = currentTimeStamp;
    var previousDocument = currentDocument;
    var previousPropagationBehavior = currentPropagationBehavior;
    currentPropagationBehavior = DoNotPropagateToNextResponder; // nodeType 9 is DOCUMENT_NODE

    currentDocument = nativeEventTarget.nodeType === 9 ? nativeEventTarget : nativeEventTarget.ownerDocument; // We might want to control timeStamp another way here

    currentTimeStamp = nativeEvent.timeStamp;

    try {
      batchedEventUpdates(function () {
        traverseAndHandleEventResponderInstances(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags);
      });
    } finally {
      currentInstance = previousInstance;
      currentTimeStamp = previousTimeStamp;
      currentDocument = previousDocument;
      currentPropagationBehavior = previousPropagationBehavior;
    }
  }
}
function addRootEventTypesForResponderInstance(responderInstance, rootEventTypes) {
  for (var i = 0; i < rootEventTypes.length; i++) {
    var rootEventType = rootEventTypes[i];
    registerRootEventType(rootEventType, responderInstance);
  }
}

function registerRootEventType(rootEventType, eventResponderInstance) {
  var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(rootEventType);

  if (rootEventResponderInstances === undefined) {
    rootEventResponderInstances = new Set();
    rootEventTypesToEventResponderInstances.set(rootEventType, rootEventResponderInstances);
  }

  var rootEventTypesSet = eventResponderInstance.rootEventTypes;

  if (rootEventTypesSet === null) {
    rootEventTypesSet = eventResponderInstance.rootEventTypes = new Set();
  }

  if (!!rootEventTypesSet.has(rootEventType)) {
    {
      throw Error("addRootEventTypes() found a duplicate root event type of \"" + rootEventType + "\". This might be because the event type exists in the event responder \"rootEventTypes\" array or because of a previous addRootEventTypes() using this root event type.");
    }
  }

  rootEventTypesSet.add(rootEventType);
  rootEventResponderInstances.add(eventResponderInstance);
}

// A reserved attribute.
// It is handled by React separately and shouldn't be written to the DOM.
var RESERVED = 0; // A simple string attribute.
// Attributes that aren't in the whitelist are presumed to have this type.

var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
// "enumerated" attributes with "true" and "false" as possible values.
// When true, it should be set to a "true" string.
// When false, it should be set to a "false" string.

var BOOLEANISH_STRING = 2; // A real boolean attribute.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.

var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
// For any other value, should be present with that value.

var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
// When falsy, it should be removed.

var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
// When falsy, it should be removed.

var POSITIVE_NUMERIC = 6;

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
/* eslint-enable max-len */

var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";

var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
var hasOwnProperty = Object.prototype.hasOwnProperty;
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};
function isAttributeNameSafe(attributeName) {
  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
    return true;
  }

  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
    return false;
  }

  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }

  illegalAttributeNameCache[attributeName] = true;

  {
    warning$1(false, 'Invalid attribute name: `%s`', attributeName);
  }

  return false;
}
function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null) {
    return propertyInfo.type === RESERVED;
  }

  if (isCustomComponentTag) {
    return false;
  }

  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return true;
  }

  return false;
}
function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
    return false;
  }

  switch (typeof value) {
    case 'function': // $FlowIssue symbol is perfectly valid here

    case 'symbol':
      // eslint-disable-line
      return true;

    case 'boolean':
      {
        if (isCustomComponentTag) {
          return false;
        }

        if (propertyInfo !== null) {
          return !propertyInfo.acceptsBooleans;
        } else {
          var prefix = name.toLowerCase().slice(0, 5);
          return prefix !== 'data-' && prefix !== 'aria-';
        }
      }

    default:
      return false;
  }
}
function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
  if (value === null || typeof value === 'undefined') {
    return true;
  }

  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
    return true;
  }

  if (isCustomComponentTag) {
    return false;
  }

  if (propertyInfo !== null) {
    switch (propertyInfo.type) {
      case BOOLEAN:
        return !value;

      case OVERLOADED_BOOLEAN:
        return value === false;

      case NUMERIC:
        return isNaN(value);

      case POSITIVE_NUMERIC:
        return isNaN(value) || value < 1;
    }
  }

  return false;
}
function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
  this.sanitizeURL = sanitizeURL;
} // When adding attributes to this list, be sure to also add them to
// the `possibleStandardNames` module to ensure casing and incorrect
// name warnings.


var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.

['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular
// elements (not just inputs). Now that ReactDOMInput assigns to the
// defaultValue property -- do we need this?
'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
}); // A few React string attributes have a different name.
// This is a mapping from React prop names to the attribute names.

[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
  var name = _ref[0],
      attributeName = _ref[1];
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, // attributeName
  null, // attributeNamespace
  false);
}); // These are "enumerated" HTML attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).

['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false);
}); // These are "enumerated" SVG attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
// Since these are SVG attributes, their attribute names are case-sensitive.

['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
}); // These are HTML boolean attributes.

['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM
// on the client side because the browsers are inconsistent. Instead we call focus().
'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata
'itemScope'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false);
}); // These are the few React props that we set as DOM properties
// rather than attributes. These are all booleans.

['checked', // Note: `option.selected` is not updated if `select.multiple` is
// disabled with `removeAttribute`. We have special logic for handling this.
'multiple', 'muted', 'selected'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
}); // These are HTML attributes that are "overloaded booleans": they behave like
// booleans, but can also accept a string value.

['capture', 'download'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
}); // These are HTML attributes that must be positive numbers.

['cols', 'rows', 'size', 'span'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
}); // These are HTML attributes that must be numbers.

['rowSpan', 'start'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false);
});
var CAMELIZE = /[\-\:]([a-z])/g;

var capitalize = function (token) {
  return token[1].toUpperCase();
}; // This is a list of all SVG attributes that need special casing, namespacing,
// or boolean value assignment. Regular attributes that just accept strings
// and have the same names are omitted, just like in the HTML whitelist.
// Some of these attributes can be hard to find. This list was created by
// scrapping the MDN documentation.


['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, null, // attributeNamespace
  false);
}); // String SVG attributes with the xlink namespace.

['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/1999/xlink', false);
}); // String SVG attributes with the xml namespace.

['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/XML/1998/namespace', false);
}); // These attribute exists both in HTML and SVG.
// The attribute name is case-sensitive in SVG so we can't just use
// the React name like we do for attributes that exist only in HTML.

['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  false);
}); // These attributes accept URLs. These must not allow javascript: URLS.
// These will also need to accept Trusted Types object in the future.

var xlinkHref = 'xlinkHref';
properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty
'xlink:href', 'http://www.w3.org/1999/xlink', true);
['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  true);
});

var ReactDebugCurrentFrame$1 = null;

{
  ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
} // A javascript: URL can contain leading C0 control or \u0020 SPACE,
// and any newline or tab are filtered out as if they're not part of the URL.
// https://url.spec.whatwg.org/#url-parsing
// Tab or newline are defined as \r\n\t:
// https://infra.spec.whatwg.org/#ascii-tab-or-newline
// A C0 control is a code point in the range \u0000 NULL to \u001F
// INFORMATION SEPARATOR ONE, inclusive:
// https://infra.spec.whatwg.org/#c0-control-or-space

/* eslint-disable max-len */


var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
var didWarn = false;

function sanitizeURL(url) {
  if (disableJavaScriptURLs) {
    if (!!isJavaScriptProtocol.test(url)) {
      {
        throw Error("React has blocked a javascript: URL as a security precaution." + (ReactDebugCurrentFrame$1.getStackAddendum()));
      }
    }
  } else if (true && !didWarn && isJavaScriptProtocol.test(url)) {
    didWarn = true;
    warning$1(false, 'A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));
  }
}

// Flow does not allow string concatenation of most non-string types. To work
// around this limitation, we use an opaque type that can only be obtained by
// passing the value through getToStringValue first.
function toString(value) {
  return '' + value;
}
function getToStringValue(value) {
  switch (typeof value) {
    case 'boolean':
    case 'number':
    case 'object':
    case 'string':
    case 'undefined':
      return value;

    default:
      // function, symbol are assigned as empty strings
      return '';
  }
}
/** Trusted value is a wrapper for "safe" values which can be assigned to DOM execution sinks. */

/**
 * We allow passing objects with toString method as element attributes or in dangerouslySetInnerHTML
 * and we do validations that the value is safe. Once we do validation we want to use the validated
 * value instead of the object (because object.toString may return something else on next call).
 *
 * If application uses Trusted Types we don't stringify trusted values, but preserve them as objects.
 */
var toStringOrTrustedType = toString;

if (enableTrustedTypesIntegration && typeof trustedTypes !== 'undefined') {
  toStringOrTrustedType = function (value) {
    if (typeof value === 'object' && (trustedTypes.isHTML(value) || trustedTypes.isScript(value) || trustedTypes.isScriptURL(value) ||
    /* TrustedURLs are deprecated and will be removed soon: https://github.com/WICG/trusted-types/pull/204 */
    trustedTypes.isURL && trustedTypes.isURL(value))) {
      // Pass Trusted Types through.
      return value;
    }

    return toString(value);
  };
}

/**
 * Set attribute for a node. The attribute value can be either string or
 * Trusted value (if application uses Trusted Types).
 */
function setAttribute(node, attributeName, attributeValue) {
  node.setAttribute(attributeName, attributeValue);
}
/**
 * Set attribute with namespace for a node. The attribute value can be either string or
 * Trusted value (if application uses Trusted Types).
 */

function setAttributeNS(node, attributeNamespace, attributeName, attributeValue) {
  node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
}

/**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */
function getValueForProperty(node, name, expected, propertyInfo) {
  {
    if (propertyInfo.mustUseProperty) {
      var propertyName = propertyInfo.propertyName;
      return node[propertyName];
    } else {
      if (!disableJavaScriptURLs && propertyInfo.sanitizeURL) {
        // If we haven't fully disabled javascript: URLs, and if
        // the hydration is successful of a javascript: URL, we
        // still want to warn on the client.
        sanitizeURL('' + expected);
      }

      var attributeName = propertyInfo.attributeName;
      var stringValue = null;

      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
        if (node.hasAttribute(attributeName)) {
          var value = node.getAttribute(attributeName);

          if (value === '') {
            return true;
          }

          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return value;
          }

          if (value === '' + expected) {
            return expected;
          }

          return value;
        }
      } else if (node.hasAttribute(attributeName)) {
        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
          // We had an attribute but shouldn't have had one, so read it
          // for the error message.
          return node.getAttribute(attributeName);
        }

        if (propertyInfo.type === BOOLEAN) {
          // If this was a boolean, it doesn't matter what the value is
          // the fact that we have it is the same as the expected.
          return expected;
        } // Even if this property uses a namespace we use getAttribute
        // because we assume its namespaced name is the same as our config.
        // To use getAttributeNS we need the local name which we don't have
        // in our config atm.


        stringValue = node.getAttribute(attributeName);
      }

      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
        return stringValue === null ? expected : stringValue;
      } else if (stringValue === '' + expected) {
        return expected;
      } else {
        return stringValue;
      }
    }
  }
}
/**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */

function getValueForAttribute(node, name, expected) {
  {
    if (!isAttributeNameSafe(name)) {
      return;
    }

    if (!node.hasAttribute(name)) {
      return expected === undefined ? undefined : null;
    }

    var value = node.getAttribute(name);

    if (value === '' + expected) {
      return expected;
    }

    return value;
  }
}
/**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */

function setValueForProperty(node, name, value, isCustomComponentTag) {
  var propertyInfo = getPropertyInfo(name);

  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
    return;
  }

  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
    value = null;
  } // If the prop isn't in the special list, treat it as a simple attribute.


  if (isCustomComponentTag || propertyInfo === null) {
    if (isAttributeNameSafe(name)) {
      var _attributeName = name;

      if (value === null) {
        node.removeAttribute(_attributeName);
      } else {
        setAttribute(node, _attributeName, toStringOrTrustedType(value));
      }
    }

    return;
  }

  var mustUseProperty = propertyInfo.mustUseProperty;

  if (mustUseProperty) {
    var propertyName = propertyInfo.propertyName;

    if (value === null) {
      var type = propertyInfo.type;
      node[propertyName] = type === BOOLEAN ? false : '';
    } else {
      // Contrary to `setAttribute`, object properties are properly
      // `toString`ed by IE8/9.
      node[propertyName] = value;
    }

    return;
  } // The rest are treated as attributes with special cases.


  var attributeName = propertyInfo.attributeName,
      attributeNamespace = propertyInfo.attributeNamespace;

  if (value === null) {
    node.removeAttribute(attributeName);
  } else {
    var _type = propertyInfo.type;
    var attributeValue;

    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
      // If attribute type is boolean, we know for sure it won't be an execution sink
      // and we won't require Trusted Type here.
      attributeValue = '';
    } else {
      // `setAttribute` with objects becomes only `[object]` in IE8/9,
      // ('' + value) makes it output the correct toString()-value.
      attributeValue = toStringOrTrustedType(value);

      if (propertyInfo.sanitizeURL) {
        sanitizeURL(attributeValue.toString());
      }
    }

    if (attributeNamespace) {
      setAttributeNS(node, attributeNamespace, attributeName, attributeValue);
    } else {
      setAttribute(node, attributeName, attributeValue);
    }
  }
}

var ReactDebugCurrentFrame$2 = null;
var ReactControlledValuePropTypes = {
  checkPropTypes: null
};

{
  ReactDebugCurrentFrame$2 = ReactSharedInternals.ReactDebugCurrentFrame;
  var hasReadOnlyValue = {
    button: true,
    checkbox: true,
    image: true,
    hidden: true,
    radio: true,
    reset: true,
    submit: true
  };
  var propTypes = {
    value: function (props, propName, componentName) {
      if (hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled || props[propName] == null || enableFlareAPI && props.listeners) {
        return null;
      }

      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    },
    checked: function (props, propName, componentName) {
      if (props.onChange || props.readOnly || props.disabled || props[propName] == null || enableFlareAPI && props.listeners) {
        return null;
      }

      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  };
  /**
   * Provide a linked `value` attribute for controlled forms. You should not use
   * this outside of the ReactDOM controlled form components.
   */

  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props) {
    checkPropTypes(propTypes, props, 'prop', tagName, ReactDebugCurrentFrame$2.getStackAddendum);
  };
}

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(node) {
  return node._valueTracker;
}

function detachTracker(node) {
  node._valueTracker = null;
}

function getValueFromNode(node) {
  var value = '';

  if (!node) {
    return value;
  }

  if (isCheckable(node)) {
    value = node.checked ? 'true' : 'false';
  } else {
    value = node.value;
  }

  return value;
}

function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? 'checked' : 'value';
  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
  var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
  // and don't track value will cause over reporting of changes,
  // but it's better then a hard failure
  // (needed for certain tests that spyOn input values and Safari)

  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
    return;
  }

  var get = descriptor.get,
      set = descriptor.set;
  Object.defineProperty(node, valueField, {
    configurable: true,
    get: function () {
      return get.call(this);
    },
    set: function (value) {
      currentValue = '' + value;
      set.call(this, value);
    }
  }); // We could've passed this the first time
  // but it triggers a bug in IE11 and Edge 14/15.
  // Calling defineProperty() again should be equivalent.
  // https://github.com/facebook/react/issues/11768

  Object.defineProperty(node, valueField, {
    enumerable: descriptor.enumerable
  });
  var tracker = {
    getValue: function () {
      return currentValue;
    },
    setValue: function (value) {
      currentValue = '' + value;
    },
    stopTracking: function () {
      detachTracker(node);
      delete node[valueField];
    }
  };
  return tracker;
}

function track(node) {
  if (getTracker(node)) {
    return;
  } // TODO: Once it's just Fiber we can move this to node._wrapperState


  node._valueTracker = trackValueOnNode(node);
}
function updateValueIfChanged(node) {
  if (!node) {
    return false;
  }

  var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
  // that trying again will succeed

  if (!tracker) {
    return true;
  }

  var lastValue = tracker.getValue();
  var nextValue = getValueFromNode(node);

  if (nextValue !== lastValue) {
    tracker.setValue(nextValue);
    return true;
  }

  return false;
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}
/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */


function getHostProps(element, props) {
  var node = element;
  var checked = props.checked;

  var hostProps = _assign({}, props, {
    defaultChecked: undefined,
    defaultValue: undefined,
    value: undefined,
    checked: checked != null ? checked : node._wrapperState.initialChecked
  });

  return hostProps;
}
function initWrapperState(element, props) {
  {
    ReactControlledValuePropTypes.checkPropTypes('input', props);

    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
      warning$1(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
      didWarnCheckedDefaultChecked = true;
    }

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      warning$1(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
      didWarnValueDefaultValue = true;
    }
  }

  var node = element;
  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
  node._wrapperState = {
    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
    initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
    controlled: isControlled(props)
  };
}
function updateChecked(element, props) {
  var node = element;
  var checked = props.checked;

  if (checked != null) {
    setValueForProperty(node, 'checked', checked, false);
  }
}
function updateWrapper(element, props) {
  var node = element;

  {
    var controlled = isControlled(props);

    if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
      warning$1(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
      didWarnUncontrolledToControlled = true;
    }

    if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
      warning$1(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
      didWarnControlledToUncontrolled = true;
    }
  }

  updateChecked(element, props);
  var value = getToStringValue(props.value);
  var type = props.type;

  if (value != null) {
    if (type === 'number') {
      if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.
      // eslint-disable-next-line
      node.value != value) {
        node.value = toString(value);
      }
    } else if (node.value !== toString(value)) {
      node.value = toString(value);
    }
  } else if (type === 'submit' || type === 'reset') {
    // Submit/reset inputs need the attribute removed completely to avoid
    // blank-text buttons.
    node.removeAttribute('value');
    return;
  }

  if (disableInputAttributeSyncing) {
    // When not syncing the value attribute, React only assigns a new value
    // whenever the defaultValue React prop has changed. When not present,
    // React does nothing
    if (props.hasOwnProperty('defaultValue')) {
      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
    }
  } else {
    // When syncing the value attribute, the value comes from a cascade of
    // properties:
    //  1. The value React property
    //  2. The defaultValue React property
    //  3. Otherwise there should be no change
    if (props.hasOwnProperty('value')) {
      setDefaultValue(node, props.type, value);
    } else if (props.hasOwnProperty('defaultValue')) {
      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
    }
  }

  if (disableInputAttributeSyncing) {
    // When not syncing the checked attribute, the attribute is directly
    // controllable from the defaultValue React property. It needs to be
    // updated as new props come in.
    if (props.defaultChecked == null) {
      node.removeAttribute('checked');
    } else {
      node.defaultChecked = !!props.defaultChecked;
    }
  } else {
    // When syncing the checked attribute, it only changes when it needs
    // to be removed, such as transitioning from a checkbox into a text input
    if (props.checked == null && props.defaultChecked != null) {
      node.defaultChecked = !!props.defaultChecked;
    }
  }
}
function postMountWrapper(element, props, isHydrating) {
  var node = element; // Do not assign value if it is already set. This prevents user text input
  // from being lost during SSR hydration.

  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
    var type = props.type;
    var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
    // default value provided by the browser. See: #12872

    if (isButton && (props.value === undefined || props.value === null)) {
      return;
    }

    var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
    // from being lost during SSR hydration.

    if (!isHydrating) {
      if (disableInputAttributeSyncing) {
        var value = getToStringValue(props.value); // When not syncing the value attribute, the value property points
        // directly to the React prop. Only assign it if it exists.

        if (value != null) {
          // Always assign on buttons so that it is possible to assign an
          // empty string to clear button text.
          //
          // Otherwise, do not re-assign the value property if is empty. This
          // potentially avoids a DOM write and prevents Firefox (~60.0.1) from
          // prematurely marking required inputs as invalid. Equality is compared
          // to the current value in case the browser provided value is not an
          // empty string.
          if (isButton || value !== node.value) {
            node.value = toString(value);
          }
        }
      } else {
        // When syncing the value attribute, the value property should use
        // the wrapperState._initialValue property. This uses:
        //
        //   1. The value React property when present
        //   2. The defaultValue React property when present
        //   3. An empty string
        if (initialValue !== node.value) {
          node.value = initialValue;
        }
      }
    }

    if (disableInputAttributeSyncing) {
      // When not syncing the value attribute, assign the value attribute
      // directly from the defaultValue React property (when present)
      var defaultValue = getToStringValue(props.defaultValue);

      if (defaultValue != null) {
        node.defaultValue = toString(defaultValue);
      }
    } else {
      // Otherwise, the value attribute is synchronized to the property,
      // so we assign defaultValue to the same thing as the value property
      // assignment step above.
      node.defaultValue = initialValue;
    }
  } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
  // this is needed to work around a chrome bug where setting defaultChecked
  // will sometimes influence the value of checked (even after detachment).
  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
  // We need to temporarily unset name to avoid disrupting radio button groups.


  var name = node.name;

  if (name !== '') {
    node.name = '';
  }

  if (disableInputAttributeSyncing) {
    // When not syncing the checked attribute, the checked property
    // never gets assigned. It must be manually set. We don't want
    // to do this when hydrating so that existing user input isn't
    // modified
    if (!isHydrating) {
      updateChecked(element, props);
    } // Only assign the checked attribute if it is defined. This saves
    // a DOM write when controlling the checked attribute isn't needed
    // (text inputs, submit/reset)


    if (props.hasOwnProperty('defaultChecked')) {
      node.defaultChecked = !node.defaultChecked;
      node.defaultChecked = !!props.defaultChecked;
    }
  } else {
    // When syncing the checked attribute, both the checked property and
    // attribute are assigned at the same time using defaultChecked. This uses:
    //
    //   1. The checked React property when present
    //   2. The defaultChecked React property when present
    //   3. Otherwise, false
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !!node._wrapperState.initialChecked;
  }

  if (name !== '') {
    node.name = name;
  }
}
function restoreControlledState$1(element, props) {
  var node = element;
  updateWrapper(node, props);
  updateNamedCousins(node, props);
}

function updateNamedCousins(rootNode, props) {
  var name = props.name;

  if (props.type === 'radio' && name != null) {
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    } // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form. It might not even be in the
    // document. Let's just use the local `querySelectorAll` to ensure we don't
    // miss anything.


    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];

      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      } // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.


      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);

      if (!otherProps) {
        {
          throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
        }
      } // We need update the tracked value on the named cousin since the value
      // was changed but the input saw no event or value set


      updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.

      updateWrapper(otherNode, otherProps);
    }
  }
} // In Chrome, assigning defaultValue to certain input types triggers input validation.
// For number inputs, the display value loses trailing decimal points. For email inputs,
// Chrome raises "The specified value <x> is not a valid email address".
//
// Here we check to see if the defaultValue has actually changed, avoiding these problems
// when the user is inputting text
//
// https://github.com/facebook/react/issues/7253


function setDefaultValue(node, type, value) {
  if ( // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
  type !== 'number' || node.ownerDocument.activeElement !== node) {
    if (value == null) {
      node.defaultValue = toString(node._wrapperState.initialValue);
    } else if (node.defaultValue !== toString(value)) {
      node.defaultValue = toString(value);
    }
  }
}

var didWarnSelectedSetOnOption = false;
var didWarnInvalidChild = false;

function flattenChildren(children) {
  var content = ''; // Flatten children. We'll warn if they are invalid
  // during validateProps() which runs for hydration too.
  // Note that this would throw on non-element objects.
  // Elements are stringified (which is normally irrelevant
  // but matters for <fbt>).

  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }

    content += child; // Note: we don't warn about invalid children here.
    // Instead, this is done separately below so that
    // it happens during the hydration codepath too.
  });
  return content;
}
/**
 * Implements an <option> host component that warns when `selected` is set.
 */


function validateProps(element, props) {
  {
    // This mirrors the codepath above, but runs for hydration too.
    // Warn about invalid children here so that client and hydration are consistent.
    // TODO: this seems like it could cause a DEV-only throw for hydration
    // if children contains a non-element object. We should try to avoid that.
    if (typeof props.children === 'object' && props.children !== null) {
      React.Children.forEach(props.children, function (child) {
        if (child == null) {
          return;
        }

        if (typeof child === 'string' || typeof child === 'number') {
          return;
        }

        if (typeof child.type !== 'string') {
          return;
        }

        if (!didWarnInvalidChild) {
          didWarnInvalidChild = true;
          warning$1(false, 'Only strings and numbers are supported as <option> children.');
        }
      });
    } // TODO: Remove support for `selected` in <option>.


    if (props.selected != null && !didWarnSelectedSetOnOption) {
      warning$1(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
      didWarnSelectedSetOnOption = true;
    }
  }
}
function postMountWrapper$1(element, props) {
  // value="" should make a value attribute (#6219)
  if (props.value != null) {
    element.setAttribute('value', toString(getToStringValue(props.value)));
  }
}
function getHostProps$1(element, props) {
  var hostProps = _assign({
    children: undefined
  }, props);

  var content = flattenChildren(props.children);

  if (content) {
    hostProps.children = content;
  }

  return hostProps;
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var didWarnValueDefaultValue$1;

{
  didWarnValueDefaultValue$1 = false;
}

function getDeclarationErrorAddendum() {
  var ownerName = getCurrentFiberOwnerNameInDevOrNull();

  if (ownerName) {
    return '\n\nCheck the render method of `' + ownerName + '`.';
  }

  return '';
}

var valuePropNames = ['value', 'defaultValue'];
/**
 * Validation function for `value` and `defaultValue`.
 */

function checkSelectPropTypes(props) {
  ReactControlledValuePropTypes.checkPropTypes('select', props);

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];

    if (props[propName] == null) {
      continue;
    }

    var isArray = Array.isArray(props[propName]);

    if (props.multiple && !isArray) {
      warning$1(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
    } else if (!props.multiple && isArray) {
      warning$1(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
    }
  }
}

function updateOptions(node, multiple, propValue, setDefaultSelected) {
  var options = node.options;

  if (multiple) {
    var selectedValues = propValue;
    var selectedValue = {};

    for (var i = 0; i < selectedValues.length; i++) {
      // Prefix to avoid chaos with special keys.
      selectedValue['$' + selectedValues[i]] = true;
    }

    for (var _i = 0; _i < options.length; _i++) {
      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);

      if (options[_i].selected !== selected) {
        options[_i].selected = selected;
      }

      if (selected && setDefaultSelected) {
        options[_i].defaultSelected = true;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    var _selectedValue = toString(getToStringValue(propValue));

    var defaultSelected = null;

    for (var _i2 = 0; _i2 < options.length; _i2++) {
      if (options[_i2].value === _selectedValue) {
        options[_i2].selected = true;

        if (setDefaultSelected) {
          options[_i2].defaultSelected = true;
        }

        return;
      }

      if (defaultSelected === null && !options[_i2].disabled) {
        defaultSelected = options[_i2];
      }
    }

    if (defaultSelected !== null) {
      defaultSelected.selected = true;
    }
  }
}
/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */


function getHostProps$2(element, props) {
  return _assign({}, props, {
    value: undefined
  });
}
function initWrapperState$1(element, props) {
  var node = element;

  {
    checkSelectPropTypes(props);
  }

  node._wrapperState = {
    wasMultiple: !!props.multiple
  };

  {
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
      warning$1(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValueDefaultValue$1 = true;
    }
  }
}
function postMountWrapper$2(element, props) {
  var node = element;
  node.multiple = !!props.multiple;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (props.defaultValue != null) {
    updateOptions(node, !!props.multiple, props.defaultValue, true);
  }
}
function postUpdateWrapper(element, props) {
  var node = element;
  var wasMultiple = node._wrapperState.wasMultiple;
  node._wrapperState.wasMultiple = !!props.multiple;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (wasMultiple !== !!props.multiple) {
    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
    if (props.defaultValue != null) {
      updateOptions(node, !!props.multiple, props.defaultValue, true);
    } else {
      // Revert the select back to its default unselected state.
      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
    }
  }
}
function restoreControlledState$2(element, props) {
  var node = element;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  }
}

var didWarnValDefaultVal = false;

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
function getHostProps$3(element, props) {
  var node = element;

  if (!(props.dangerouslySetInnerHTML == null)) {
    {
      throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
    }
  } // Always set children to the same thing. In IE9, the selection range will
  // get reset if `textContent` is mutated.  We could add a check in setTextContent
  // to only set the value if/when the value differs from the node value (which would
  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
  // solution. The value can be a boolean or object so that's why it's forced
  // to be a string.


  var hostProps = _assign({}, props, {
    value: undefined,
    defaultValue: undefined,
    children: toString(node._wrapperState.initialValue)
  });

  return hostProps;
}
function initWrapperState$2(element, props) {
  var node = element;

  {
    ReactControlledValuePropTypes.checkPropTypes('textarea', props);

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
      warning$1(false, '%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
      didWarnValDefaultVal = true;
    }
  }

  var initialValue = props.value; // Only bother fetching default value if we're going to use it

  if (initialValue == null) {
    var defaultValue = props.defaultValue; // TODO (yungsters): Remove support for children content in <textarea>.

    var children = props.children;

    if (children != null) {
      {
        warning$1(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
      }

      if (!(defaultValue == null)) {
        {
          throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
        }
      }

      if (Array.isArray(children)) {
        if (!(children.length <= 1)) {
          {
            throw Error("<textarea> can only have at most one child.");
          }
        }

        children = children[0];
      }

      defaultValue = children;
    }

    if (defaultValue == null) {
      defaultValue = '';
    }

    initialValue = defaultValue;
  }

  node._wrapperState = {
    initialValue: getToStringValue(initialValue)
  };
}
function updateWrapper$1(element, props) {
  var node = element;
  var value = getToStringValue(props.value);
  var defaultValue = getToStringValue(props.defaultValue);

  if (value != null) {
    // Cast `value` to a string to ensure the value is set correctly. While
    // browsers typically do this as necessary, jsdom doesn't.
    var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed

    if (newValue !== node.value) {
      node.value = newValue;
    }

    if (props.defaultValue == null && node.defaultValue !== newValue) {
      node.defaultValue = newValue;
    }
  }

  if (defaultValue != null) {
    node.defaultValue = toString(defaultValue);
  }
}
function postMountWrapper$3(element, props) {
  var node = element; // This is in postMount because we need access to the DOM node, which is not
  // available until after the component has mounted.

  var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
  // will populate textContent as well.
  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/

  if (textContent === node._wrapperState.initialValue) {
    if (textContent !== '' && textContent !== null) {
      node.value = textContent;
    }
  }
}
function restoreControlledState$3(element, props) {
  // DOM component is still mounted; update
  updateWrapper$1(element, props);
}

var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
var Namespaces = {
  html: HTML_NAMESPACE$1,
  mathml: MATH_NAMESPACE,
  svg: SVG_NAMESPACE
}; // Assumes there is no parent namespace.

function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;

    case 'math':
      return MATH_NAMESPACE;

    default:
      return HTML_NAMESPACE$1;
  }
}
function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }

  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE$1;
  } // By default, pass namespace below.


  return parentNamespace;
}

/* globals MSApp */

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

var reusableSVGContainer;
/**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */

var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  if (node.namespaceURI === Namespaces.svg) {
    {
      if (enableTrustedTypesIntegration) {
        // TODO: reconsider the text of this warning and when it should show
        // before enabling the feature flag.
        !(typeof trustedTypes === 'undefined') ? warning$1(false, "Using 'dangerouslySetInnerHTML' in an svg element with " + 'Trusted Types enabled in an Internet Explorer will cause ' + 'the trusted value to be converted to string. Assigning string ' + "to 'innerHTML' will throw an error if Trusted Types are enforced. " + "You can try to wrap your svg element inside a div and use 'dangerouslySetInnerHTML' " + 'on the enclosing div instead.') : void 0;
      }
    }

    if (!('innerHTML' in node)) {
      // IE does not have innerHTML for SVG nodes, so instead we inject the
      // new markup in a temp node and then move the child nodes across into
      // the target node
      reusableSVGContainer = reusableSVGContainer || document.createElement('div');
      reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
      var svgNode = reusableSVGContainer.firstChild;

      while (node.firstChild) {
        node.removeChild(node.firstChild);
      }

      while (svgNode.firstChild) {
        node.appendChild(svgNode.firstChild);
      }

      return;
    }
  }

  node.innerHTML = html;
});

/**
 * HTML nodeType values that represent the type of the node
 */
var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_FRAGMENT_NODE = 11;

/**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */

var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
      firstChild.nodeValue = text;
      return;
    }
  }

  node.textContent = text;
};

// Do not use the below two methods directly!
// Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
// (It is the only module that is allowed to access these methods.)
function unsafeCastStringToDOMTopLevelType(topLevelType) {
  return topLevelType;
}
function unsafeCastDOMTopLevelTypeToString(topLevelType) {
  return topLevelType;
}

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */

function makePrefixMap(styleProp, eventName) {
  var prefixes = {};
  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  return prefixes;
}
/**
 * A list of event names to a configurable list of vendor prefixes.
 */


var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};
/**
 * Event names that have already been detected and prefixed (if applicable).
 */

var prefixedEventNames = {};
/**
 * Element to check for prefixes on.
 */

var style = {};
/**
 * Bootstrap if a DOM exists.
 */

if (canUseDOM) {
  style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.

  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  } // Same as above


  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}
/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */


function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return eventName;
}

/**
 * To identify top level events in ReactDOM, we use constants defined by this
 * module. This is the only module that uses the unsafe* methods to express
 * that the constants actually correspond to the browser event names. This lets
 * us save some bundle size by avoiding a top level type -> event name map.
 * The rest of ReactDOM code should import top level types from this file.
 */

var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
var TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');
var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');


var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel'); // List of events that need to be individually attached to media elements.
// Note that events in this list will *not* be listened to at the top level
// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.

var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];
function getRawEventName(topLevelType) {
  return unsafeCastDOMTopLevelTypeToString(topLevelType);
}

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */

/**
 * This API should be called `delete` but we'd have to make sure to always
 * transform these to strings for IE support. When this transform is fully
 * supported we can rename it.
 */

function get(key) {
  return key._reactInternalFiber;
}
function has(key) {
  return key._reactInternalFiber !== undefined;
}
function set(key, value) {
  key._reactInternalFiber = value;
}

// Don't change these two values. They're used by React Dev Tools.
var NoEffect =
/*              */
0;
var PerformedWork =
/*         */
1; // You can change the rest (and add more).

var Placement =
/*             */
2;
var Update =
/*                */
4;
var PlacementAndUpdate =
/*    */
6;
var Deletion =
/*              */
8;
var ContentReset =
/*          */
16;
var Callback =
/*              */
32;
var DidCapture =
/*            */
64;
var Ref =
/*                   */
128;
var Snapshot =
/*              */
256;
var Passive =
/*               */
512;
var Hydrating =
/*             */
1024;
var HydratingAndUpdate =
/*    */
1028; // Passive & Update & Callback & Ref & Snapshot

var LifecycleEffectMask =
/*   */
932; // Union of all host effects

var HostEffectMask =
/*        */
2047;
var Incomplete =
/*            */
2048;
var ShouldCapture =
/*         */
4096;

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
function getNearestMountedFiber(fiber) {
  var node = fiber;
  var nearestMounted = fiber;

  if (!fiber.alternate) {
    // If there is no alternate, this might be a new tree that isn't inserted
    // yet. If it is, then it will have a pending insertion effect on it.
    var nextNode = node;

    do {
      node = nextNode;

      if ((node.effectTag & (Placement | Hydrating)) !== NoEffect) {
        // This is an insertion or in-progress hydration. The nearest possible
        // mounted fiber is the parent but we need to continue to figure out
        // if that one is still mounted.
        nearestMounted = node.return;
      }

      nextNode = node.return;
    } while (nextNode);
  } else {
    while (node.return) {
      node = node.return;
    }
  }

  if (node.tag === HostRoot) {
    // TODO: Check if this was a nested HostRoot when used with
    // renderContainerIntoSubtree.
    return nearestMounted;
  } // If we didn't hit the root, that means that we're in an disconnected tree
  // that has been unmounted.


  return null;
}
function getSuspenseInstanceFromFiber(fiber) {
  if (fiber.tag === SuspenseComponent) {
    var suspenseState = fiber.memoizedState;

    if (suspenseState === null) {
      var current = fiber.alternate;

      if (current !== null) {
        suspenseState = current.memoizedState;
      }
    }

    if (suspenseState !== null) {
      return suspenseState.dehydrated;
    }
  }

  return null;
}
function getContainerFromFiber(fiber) {
  return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
}
function isFiberMounted(fiber) {
  return getNearestMountedFiber(fiber) === fiber;
}
function isMounted(component) {
  {
    var owner = ReactCurrentOwner.current;

    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;
      !instance._warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component') : void 0;
      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = get(component);

  if (!fiber) {
    return false;
  }

  return getNearestMountedFiber(fiber) === fiber;
}

function assertIsMounted(fiber) {
  if (!(getNearestMountedFiber(fiber) === fiber)) {
    {
      throw Error("Unable to find node on an unmounted component.");
    }
  }
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;

  if (!alternate) {
    // If there is no alternate, then we only need to check if it is mounted.
    var nearestMounted = getNearestMountedFiber(fiber);

    if (!(nearestMounted !== null)) {
      {
        throw Error("Unable to find node on an unmounted component.");
      }
    }

    if (nearestMounted !== fiber) {
      return null;
    }

    return fiber;
  } // If we have two possible branches, we'll walk backwards up to the root
  // to see what path the root points to. On the way we may hit one of the
  // special cases and we'll deal with them.


  var a = fiber;
  var b = alternate;

  while (true) {
    var parentA = a.return;

    if (parentA === null) {
      // We're at the root.
      break;
    }

    var parentB = parentA.alternate;

    if (parentB === null) {
      // There is no alternate. This is an unusual case. Currently, it only
      // happens when a Suspense component is hidden. An extra fragment fiber
      // is inserted in between the Suspense fiber and its children. Skip
      // over this extra fragment fiber and proceed to the next parent.
      var nextParent = parentA.return;

      if (nextParent !== null) {
        a = b = nextParent;
        continue;
      } // If there's no parent, we're at the root.


      break;
    } // If both copies of the parent fiber point to the same child, we can
    // assume that the child is current. This happens when we bailout on low
    // priority: the bailed out fiber's child reuses the current child.


    if (parentA.child === parentB.child) {
      var child = parentA.child;

      while (child) {
        if (child === a) {
          // We've determined that A is the current branch.
          assertIsMounted(parentA);
          return fiber;
        }

        if (child === b) {
          // We've determined that B is the current branch.
          assertIsMounted(parentA);
          return alternate;
        }

        child = child.sibling;
      } // We should never have an alternate for any mounting node. So the only
      // way this could possibly happen is if this was unmounted, if at all.


      {
        {
          throw Error("Unable to find node on an unmounted component.");
        }
      }
    }

    if (a.return !== b.return) {
      // The return pointer of A and the return pointer of B point to different
      // fibers. We assume that return pointers never criss-cross, so A must
      // belong to the child set of A.return, and B must belong to the child
      // set of B.return.
      a = parentA;
      b = parentB;
    } else {
      // The return pointers point to the same fiber. We'll have to use the
      // default, slow path: scan the child sets of each parent alternate to see
      // which child belongs to which set.
      //
      // Search parent A's child set
      var didFindChild = false;
      var _child = parentA.child;

      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }

        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }

        _child = _child.sibling;
      }

      if (!didFindChild) {
        // Search parent B's child set
        _child = parentB.child;

        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          {
            throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
          }
        }
      }
    }

    if (!(a.alternate === b)) {
      {
        throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  } // If the root is not a host container, we're in a disconnected tree. I.e.
  // unmounted.


  if (!(a.tag === HostRoot)) {
    {
      throw Error("Unable to find node on an unmounted component.");
    }
  }

  if (a.stateNode.current === a) {
    // We've determined that A is the current branch.
    return fiber;
  } // Otherwise B has to be current branch.


  return alternate;
}
function findCurrentHostFiber(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);

  if (!currentParent) {
    return null;
  } // Next we'll drill down this component to find the first HostComponent/Text.


  var node = currentParent;

  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === currentParent) {
      return null;
    }

    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  } // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable


  return null;
}
function findCurrentHostFiberWithNoPortals(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);

  if (!currentParent) {
    return null;
  } // Next we'll drill down this component to find the first HostComponent/Text.


  var node = currentParent;

  while (true) {
    if (node.tag === HostComponent || node.tag === HostText || enableFundamentalAPI && node.tag === FundamentalComponent) {
      return node;
    } else if (node.child && node.tag !== HostPortal) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === currentParent) {
      return null;
    }

    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  } // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable


  return null;
}

var attemptSynchronousHydration;
function setAttemptSynchronousHydration(fn) {
  attemptSynchronousHydration = fn;
}
var attemptUserBlockingHydration;
function setAttemptUserBlockingHydration(fn) {
  attemptUserBlockingHydration = fn;
}
var attemptContinuousHydration;
function setAttemptContinuousHydration(fn) {
  attemptContinuousHydration = fn;
}
var attemptHydrationAtCurrentPriority;
function setAttemptHydrationAtCurrentPriority(fn) {
  attemptHydrationAtCurrentPriority = fn;
} // TODO: Upgrade this definition once we're on a newer version of Flow that
// has this definition built-in.

var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.

var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.

// if the last target was dehydrated.

var queuedFocus = null;
var queuedDrag = null;
var queuedMouse = null; // For pointer events there can be one latest event per pointerId.

var queuedPointers = new Map();
var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.

var queuedExplicitHydrationTargets = [];
function hasQueuedDiscreteEvents() {
  return queuedDiscreteEvents.length > 0;
}

var discreteReplayableEvents = [TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_TOUCH_CANCEL, TOP_TOUCH_END, TOP_TOUCH_START, TOP_AUX_CLICK, TOP_DOUBLE_CLICK, TOP_POINTER_CANCEL, TOP_POINTER_DOWN, TOP_POINTER_UP, TOP_DRAG_END, TOP_DRAG_START, TOP_DROP, TOP_COMPOSITION_END, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_INPUT, TOP_TEXT_INPUT, TOP_CLOSE, TOP_CANCEL, TOP_COPY, TOP_CUT, TOP_PASTE, TOP_CLICK, TOP_CHANGE, TOP_CONTEXT_MENU, TOP_RESET, TOP_SUBMIT];
var continuousReplayableEvents = [TOP_FOCUS, TOP_BLUR, TOP_DRAG_ENTER, TOP_DRAG_LEAVE, TOP_MOUSE_OVER, TOP_MOUSE_OUT, TOP_POINTER_OVER, TOP_POINTER_OUT, TOP_GOT_POINTER_CAPTURE, TOP_LOST_POINTER_CAPTURE];
function isReplayableDiscreteEvent(eventType) {
  return discreteReplayableEvents.indexOf(eventType) > -1;
}

function trapReplayableEvent(topLevelType, document, listeningSet) {
  listenToTopLevel(topLevelType, document, listeningSet);

  if (enableFlareAPI) {
    // Trap events for the responder system.
    var passiveEventKey = unsafeCastDOMTopLevelTypeToString(topLevelType) + '_passive';

    if (!listeningSet.has(passiveEventKey)) {
      trapEventForResponderEventSystem(document, topLevelType, true);
      listeningSet.add(passiveEventKey);
    } // TODO: This listens to all events as active which might have
    // undesirable effects. It's also unnecessary to have both
    // passive and active listeners. Instead, we could start with
    // a passive and upgrade it to an active one if needed.
    // For replaying purposes the active is never needed since we
    // currently don't preventDefault.


    var activeEventKey = unsafeCastDOMTopLevelTypeToString(topLevelType) + '_active';

    if (!listeningSet.has(activeEventKey)) {
      trapEventForResponderEventSystem(document, topLevelType, false);
      listeningSet.add(activeEventKey);
    }
  }
}

function eagerlyTrapReplayableEvents(document) {
  var listeningSet = getListeningSetForElement(document); // Discrete

  discreteReplayableEvents.forEach(function (topLevelType) {
    trapReplayableEvent(topLevelType, document, listeningSet);
  }); // Continuous

  continuousReplayableEvents.forEach(function (topLevelType) {
    trapReplayableEvent(topLevelType, document, listeningSet);
  });
}

function createQueuedReplayableEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
  return {
    blockedOn: blockedOn,
    topLevelType: topLevelType,
    eventSystemFlags: eventSystemFlags | IS_REPLAYED,
    nativeEvent: nativeEvent
  };
}

function queueDiscreteEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
  var queuedEvent = createQueuedReplayableEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent);
  queuedDiscreteEvents.push(queuedEvent);

  if (enableSelectiveHydration) {
    if (queuedDiscreteEvents.length === 1) {
      // If this was the first discrete event, we might be able to
      // synchronously unblock it so that preventDefault still works.
      while (queuedEvent.blockedOn !== null) {
        var _fiber = getInstanceFromNode$1(queuedEvent.blockedOn);

        if (_fiber === null) {
          break;
        }

        attemptSynchronousHydration(_fiber);

        if (queuedEvent.blockedOn === null) {
          // We got unblocked by hydration. Let's try again.
          replayUnblockedEvents(); // If we're reblocked, on an inner boundary, we might need
          // to attempt hydrating that one.

          continue;
        } else {
          // We're still blocked from hydation, we have to give up
          // and replay later.
          break;
        }
      }
    }
  }
} // Resets the replaying for this type of continuous event to no event.

function clearIfContinuousEvent(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_FOCUS:
    case TOP_BLUR:
      queuedFocus = null;
      break;

    case TOP_DRAG_ENTER:
    case TOP_DRAG_LEAVE:
      queuedDrag = null;
      break;

    case TOP_MOUSE_OVER:
    case TOP_MOUSE_OUT:
      queuedMouse = null;
      break;

    case TOP_POINTER_OVER:
    case TOP_POINTER_OUT:
      {
        var pointerId = nativeEvent.pointerId;
        queuedPointers.delete(pointerId);
        break;
      }

    case TOP_GOT_POINTER_CAPTURE:
    case TOP_LOST_POINTER_CAPTURE:
      {
        var _pointerId = nativeEvent.pointerId;
        queuedPointerCaptures.delete(_pointerId);
        break;
      }
  }
}

function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
  if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
    var queuedEvent = createQueuedReplayableEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent);

    if (blockedOn !== null) {
      var _fiber2 = getInstanceFromNode$1(blockedOn);

      if (_fiber2 !== null) {
        // Attempt to increase the priority of this target.
        attemptContinuousHydration(_fiber2);
      }
    }

    return queuedEvent;
  } // If we have already queued this exact event, then it's because
  // the different event systems have different DOM event listeners.
  // We can accumulate the flags and store a single event to be
  // replayed.


  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
  return existingQueuedEvent;
}

function queueIfContinuousEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
  // These set relatedTarget to null because the replayed event will be treated as if we
  // moved from outside the window (no target) onto the target once it hydrates.
  // Instead of mutating we could clone the event.
  switch (topLevelType) {
    case TOP_FOCUS:
      {
        var focusEvent = nativeEvent;
        queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, topLevelType, eventSystemFlags, focusEvent);
        return true;
      }

    case TOP_DRAG_ENTER:
      {
        var dragEvent = nativeEvent;
        queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, topLevelType, eventSystemFlags, dragEvent);
        return true;
      }

    case TOP_MOUSE_OVER:
      {
        var mouseEvent = nativeEvent;
        queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, topLevelType, eventSystemFlags, mouseEvent);
        return true;
      }

    case TOP_POINTER_OVER:
      {
        var pointerEvent = nativeEvent;
        var pointerId = pointerEvent.pointerId;
        queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, topLevelType, eventSystemFlags, pointerEvent));
        return true;
      }

    case TOP_GOT_POINTER_CAPTURE:
      {
        var _pointerEvent = nativeEvent;
        var _pointerId2 = _pointerEvent.pointerId;
        queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, topLevelType, eventSystemFlags, _pointerEvent));
        return true;
      }
  }

  return false;
} // Check if this target is unblocked. Returns true if it's unblocked.

function attemptExplicitHydrationTarget(queuedTarget) {
  // TODO: This function shares a lot of logic with attemptToDispatchEvent.
  // Try to unify them. It's a bit tricky since it would require two return
  // values.
  var targetInst = getClosestInstanceFromNode(queuedTarget.target);

  if (targetInst !== null) {
    var nearestMounted = getNearestMountedFiber(targetInst);

    if (nearestMounted !== null) {
      var tag = nearestMounted.tag;

      if (tag === SuspenseComponent) {
        var instance = getSuspenseInstanceFromFiber(nearestMounted);

        if (instance !== null) {
          // We're blocked on hydrating this boundary.
          // Increase its priority.
          queuedTarget.blockedOn = instance;
          Scheduler.unstable_runWithPriority(queuedTarget.priority, function () {
            attemptHydrationAtCurrentPriority(nearestMounted);
          });
          return;
        }
      } else if (tag === HostRoot) {
        var root = nearestMounted.stateNode;

        if (root.hydrate) {
          queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
          // a root other than sync.

          return;
        }
      }
    }
  }

  queuedTarget.blockedOn = null;
}

function queueExplicitHydrationTarget(target) {
  if (enableSelectiveHydration) {
    var priority = Scheduler.unstable_getCurrentPriorityLevel();
    var queuedTarget = {
      blockedOn: null,
      target: target,
      priority: priority
    };
    var i = 0;

    for (; i < queuedExplicitHydrationTargets.length; i++) {
      if (priority <= queuedExplicitHydrationTargets[i].priority) {
        break;
      }
    }

    queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);

    if (i === 0) {
      attemptExplicitHydrationTarget(queuedTarget);
    }
  }
}

function attemptReplayContinuousQueuedEvent(queuedEvent) {
  if (queuedEvent.blockedOn !== null) {
    return false;
  }

  var nextBlockedOn = attemptToDispatchEvent(queuedEvent.topLevelType, queuedEvent.eventSystemFlags, queuedEvent.nativeEvent);

  if (nextBlockedOn !== null) {
    // We're still blocked. Try again later.
    var _fiber3 = getInstanceFromNode$1(nextBlockedOn);

    if (_fiber3 !== null) {
      attemptContinuousHydration(_fiber3);
    }

    queuedEvent.blockedOn = nextBlockedOn;
    return false;
  }

  return true;
}

function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
  if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
    map.delete(key);
  }
}

function replayUnblockedEvents() {
  hasScheduledReplayAttempt = false; // First replay discrete events.

  while (queuedDiscreteEvents.length > 0) {
    var nextDiscreteEvent = queuedDiscreteEvents[0];

    if (nextDiscreteEvent.blockedOn !== null) {
      // We're still blocked.
      // Increase the priority of this boundary to unblock
      // the next discrete event.
      var _fiber4 = getInstanceFromNode$1(nextDiscreteEvent.blockedOn);

      if (_fiber4 !== null) {
        attemptUserBlockingHydration(_fiber4);
      }

      break;
    }

    var nextBlockedOn = attemptToDispatchEvent(nextDiscreteEvent.topLevelType, nextDiscreteEvent.eventSystemFlags, nextDiscreteEvent.nativeEvent);

    if (nextBlockedOn !== null) {
      // We're still blocked. Try again later.
      nextDiscreteEvent.blockedOn = nextBlockedOn;
    } else {
      // We've successfully replayed the first event. Let's try the next one.
      queuedDiscreteEvents.shift();
    }
  } // Next replay any continuous events.


  if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
    queuedFocus = null;
  }

  if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
    queuedDrag = null;
  }

  if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
    queuedMouse = null;
  }

  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
}

function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
  if (queuedEvent.blockedOn === unblocked) {
    queuedEvent.blockedOn = null;

    if (!hasScheduledReplayAttempt) {
      hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
      // now unblocked. This first might not actually be unblocked yet.
      // We could check it early to avoid scheduling an unnecessary callback.

      Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
    }
  }
}

function retryIfBlockedOn(unblocked) {
  // Mark anything that was blocked on this as no longer blocked
  // and eligible for a replay.
  if (queuedDiscreteEvents.length > 0) {
    scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
    // worth it because we expect very few discrete events to queue up and once
    // we are actually fully unblocked it will be fast to replay them.

    for (var i = 1; i < queuedDiscreteEvents.length; i++) {
      var queuedEvent = queuedDiscreteEvents[i];

      if (queuedEvent.blockedOn === unblocked) {
        queuedEvent.blockedOn = null;
      }
    }
  }

  if (queuedFocus !== null) {
    scheduleCallbackIfUnblocked(queuedFocus, unblocked);
  }

  if (queuedDrag !== null) {
    scheduleCallbackIfUnblocked(queuedDrag, unblocked);
  }

  if (queuedMouse !== null) {
    scheduleCallbackIfUnblocked(queuedMouse, unblocked);
  }

  var unblock = function (queuedEvent) {
    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
  };

  queuedPointers.forEach(unblock);
  queuedPointerCaptures.forEach(unblock);

  for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
    var queuedTarget = queuedExplicitHydrationTargets[_i];

    if (queuedTarget.blockedOn === unblocked) {
      queuedTarget.blockedOn = null;
    }
  }

  while (queuedExplicitHydrationTargets.length > 0) {
    var nextExplicitTarget = queuedExplicitHydrationTargets[0];

    if (nextExplicitTarget.blockedOn !== null) {
      // We're still blocked.
      break;
    } else {
      attemptExplicitHydrationTarget(nextExplicitTarget);

      if (nextExplicitTarget.blockedOn === null) {
        // We're unblocked.
        queuedExplicitHydrationTargets.shift();
      }
    }
  }
}

function addEventBubbleListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, false);
}
function addEventCaptureListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, true);
}
function addEventCaptureListenerWithPassiveFlag(element, eventType, listener, passive) {
  element.addEventListener(eventType, listener, {
    capture: true,
    passive: passive
  });
}

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  // Fallback to nativeEvent.srcElement for IE9
  // https://github.com/facebook/react/issues/12506
  var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963

  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html


  return target.nodeType === TEXT_NODE ? target.parentNode : target;
}

function getParent(inst) {
  do {
    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
    // That is depending on if we want nested subtrees (layers) to bubble
    // events to their parent. We could also go through parentNode on the
    // host node but that wouldn't work for React Native and doesn't let us
    // do the portal feature.
  } while (inst && inst.tag !== HostComponent);

  if (inst) {
    return inst;
  }

  return null;
}
/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */


function getLowestCommonAncestor(instA, instB) {
  var depthA = 0;

  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }

  var depthB = 0;

  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
    depthB++;
  } // If A is deeper, crawl up.


  while (depthA - depthB > 0) {
    instA = getParent(instA);
    depthA--;
  } // If B is deeper, crawl up.


  while (depthB - depthA > 0) {
    instB = getParent(instB);
    depthB--;
  } // Walk in lockstep until we find a match.


  var depth = depthA;

  while (depth--) {
    if (instA === instB || instA === instB.alternate) {
      return instA;
    }

    instA = getParent(instA);
    instB = getParent(instB);
  }

  return null;
}
/**
 * Return if A is an ancestor of B.
 */


/**
 * Return the parent instance of the passed-in instance.
 */


/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */

function traverseTwoPhase(inst, fn, arg) {
  var path = [];

  while (inst) {
    path.push(inst);
    inst = getParent(inst);
  }

  var i;

  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }

  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}
/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */

function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];

  while (true) {
    if (!from) {
      break;
    }

    if (from === common) {
      break;
    }

    var alternate = from.alternate;

    if (alternate !== null && alternate === common) {
      break;
    }

    pathFrom.push(from);
    from = getParent(from);
  }

  var pathTo = [];

  while (true) {
    if (!to) {
      break;
    }

    if (to === common) {
      break;
    }

    var _alternate = to.alternate;

    if (_alternate !== null && _alternate === common) {
      break;
    }

    pathTo.push(to);
    to = getParent(to);
  }

  for (var i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }

  for (var _i = pathTo.length; _i-- > 0;) {
    fn(pathTo[_i], 'captured', argTo);
  }
}

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}
/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing even a
 * single one.
 */

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */


function accumulateDirectionalDispatches(inst, phase, event) {
  {
    !inst ? warningWithoutStack$1(false, 'Dispatching inst must not be null') : void 0;
  }

  var listener = listenerAtPhase(inst, event, phase);

  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}
/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */


function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}
/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */


function accumulateDispatches(inst, ignoredDirection, event) {
  if (inst && event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);

    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}
/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */


function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}
function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/* eslint valid-typeof: 0 */
var EVENT_POOL_SIZE = 10;
/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: function () {
    return null;
  },
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

function functionThatReturnsTrue() {
  return true;
}

function functionThatReturnsFalse() {
  return false;
}
/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */


function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
    delete this.isDefaultPrevented;
    delete this.isPropagationStopped;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;
  var Interface = this.constructor.Interface;

  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }

    {
      delete this[propName]; // this has a getter/setter for warnings
    }

    var normalize = Interface[propName];

    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;

  if (defaultPrevented) {
    this.isDefaultPrevented = functionThatReturnsTrue;
  } else {
    this.isDefaultPrevented = functionThatReturnsFalse;
  }

  this.isPropagationStopped = functionThatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;

    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }

    this.isDefaultPrevented = functionThatReturnsTrue;
  },
  stopPropagation: function () {
    var event = this.nativeEvent;

    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = functionThatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = functionThatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: functionThatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;

    for (var propName in Interface) {
      {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      }
    }

    this.dispatchConfig = null;
    this._targetInst = null;
    this.nativeEvent = null;
    this.isDefaultPrevented = functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    this._dispatchListeners = null;
    this._dispatchInstances = null;

    {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'isDefaultPrevented', getPooledWarningPropertyDefinition('isDefaultPrevented', functionThatReturnsFalse));
      Object.defineProperty(this, 'isPropagationStopped', getPooledWarningPropertyDefinition('isPropagationStopped', functionThatReturnsFalse));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', function () {}));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', function () {}));
    }
  }
});

SyntheticEvent.Interface = EventInterface;
/**
 * Helper to reduce boilerplate when creating subclasses.
 */

SyntheticEvent.extend = function (Interface) {
  var Super = this;

  var E = function () {};

  E.prototype = Super.prototype;
  var prototype = new E();

  function Class() {
    return Super.apply(this, arguments);
  }

  _assign(prototype, Class.prototype);

  Class.prototype = prototype;
  Class.prototype.constructor = Class;
  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.extend = Super.extend;
  addEventPoolingTo(Class);
  return Class;
};

addEventPoolingTo(SyntheticEvent);
/**
 * Helper to nullify syntheticEvent instance properties when destructing
 *
 * @param {String} propName
 * @param {?object} getVal
 * @return {object} defineProperty object
 */

function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    !warningCondition ? warningWithoutStack$1(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}

function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
  var EventConstructor = this;

  if (EventConstructor.eventPool.length) {
    var instance = EventConstructor.eventPool.pop();
    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
    return instance;
  }

  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
}

function releasePooledEvent(event) {
  var EventConstructor = this;

  if (!(event instanceof EventConstructor)) {
    {
      throw Error("Trying to release an event instance into a pool of a different type.");
    }
  }

  event.destructor();

  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
    EventConstructor.eventPool.push(event);
  }
}

function addEventPoolingTo(EventConstructor) {
  EventConstructor.eventPool = [];
  EventConstructor.getPooled = getPooledEvent;
  EventConstructor.release = releasePooledEvent;
}

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */

var SyntheticAnimationEvent = SyntheticEvent.extend({
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */

var SyntheticClipboardEvent = SyntheticEvent.extend({
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
});

var SyntheticUIEvent = SyntheticEvent.extend({
  view: null,
  detail: null
});

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var SyntheticFocusEvent = SyntheticUIEvent.extend({
  relatedTarget: null
});

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.

    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
  // report Enter as charCode 10 when ctrl is pressed.


  if (charCode === 10) {
    charCode = 13;
  } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.


  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */

var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};
/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */

var translateToKey = {
  '8': 'Backspace',
  '9': 'Tab',
  '12': 'Clear',
  '13': 'Enter',
  '16': 'Shift',
  '17': 'Control',
  '18': 'Alt',
  '19': 'Pause',
  '20': 'CapsLock',
  '27': 'Escape',
  '32': ' ',
  '33': 'PageUp',
  '34': 'PageDown',
  '35': 'End',
  '36': 'Home',
  '37': 'ArrowLeft',
  '38': 'ArrowUp',
  '39': 'ArrowRight',
  '40': 'ArrowDown',
  '45': 'Insert',
  '46': 'Delete',
  '112': 'F1',
  '113': 'F2',
  '114': 'F3',
  '115': 'F4',
  '116': 'F5',
  '117': 'F6',
  '118': 'F7',
  '119': 'F8',
  '120': 'F9',
  '121': 'F10',
  '122': 'F11',
  '123': 'F12',
  '144': 'NumLock',
  '145': 'ScrollLock',
  '224': 'Meta'
};
/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */

function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.
    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;

    if (key !== 'Unidentified') {
      return key;
    }
  } // Browser does not implement `key`, polyfill as much of it as we can.


  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.

    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }

  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }

  return '';
}

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */
var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
}; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
// getModifierState. If getModifierState is not supported, we map it to a set of
// modifier keys exposed by the event. In this case, Lock-keys are not supported.

function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;

  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }

  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.
    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }

    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.
    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }

    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }

    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }

    return 0;
  }
});

var previousScreenX = 0;
var previousScreenY = 0; // Use flags to signal movementX/Y has already been set

var isMovementXSet = false;
var isMovementYSet = false;
/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var SyntheticMouseEvent = SyntheticUIEvent.extend({
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  pageX: null,
  pageY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: null,
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  movementX: function (event) {
    if ('movementX' in event) {
      return event.movementX;
    }

    var screenX = previousScreenX;
    previousScreenX = event.screenX;

    if (!isMovementXSet) {
      isMovementXSet = true;
      return 0;
    }

    return event.type === 'mousemove' ? event.screenX - screenX : 0;
  },
  movementY: function (event) {
    if ('movementY' in event) {
      return event.movementY;
    }

    var screenY = previousScreenY;
    previousScreenY = event.screenY;

    if (!isMovementYSet) {
      isMovementYSet = true;
      return 0;
    }

    return event.type === 'mousemove' ? event.screenY - screenY : 0;
  }
});

/**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */

var SyntheticPointerEvent = SyntheticMouseEvent.extend({
  pointerId: null,
  width: null,
  height: null,
  pressure: null,
  tangentialPressure: null,
  tiltX: null,
  tiltY: null,
  twist: null,
  pointerType: null,
  isPrimary: null
});

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var SyntheticDragEvent = SyntheticMouseEvent.extend({
  dataTransfer: null
});

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */

var SyntheticTouchEvent = SyntheticUIEvent.extend({
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */

var SyntheticTransitionEvent = SyntheticEvent.extend({
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var SyntheticWheelEvent = SyntheticMouseEvent.extend({
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,
  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
});

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: [TOP_ABORT],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = new Map([
 *   [TOP_ABORT, { sameConfig }],
 * ]);
 */

var eventTuples = [// Discrete events
[TOP_BLUR, 'blur', DiscreteEvent], [TOP_CANCEL, 'cancel', DiscreteEvent], [TOP_CLICK, 'click', DiscreteEvent], [TOP_CLOSE, 'close', DiscreteEvent], [TOP_CONTEXT_MENU, 'contextMenu', DiscreteEvent], [TOP_COPY, 'copy', DiscreteEvent], [TOP_CUT, 'cut', DiscreteEvent], [TOP_AUX_CLICK, 'auxClick', DiscreteEvent], [TOP_DOUBLE_CLICK, 'doubleClick', DiscreteEvent], [TOP_DRAG_END, 'dragEnd', DiscreteEvent], [TOP_DRAG_START, 'dragStart', DiscreteEvent], [TOP_DROP, 'drop', DiscreteEvent], [TOP_FOCUS, 'focus', DiscreteEvent], [TOP_INPUT, 'input', DiscreteEvent], [TOP_INVALID, 'invalid', DiscreteEvent], [TOP_KEY_DOWN, 'keyDown', DiscreteEvent], [TOP_KEY_PRESS, 'keyPress', DiscreteEvent], [TOP_KEY_UP, 'keyUp', DiscreteEvent], [TOP_MOUSE_DOWN, 'mouseDown', DiscreteEvent], [TOP_MOUSE_UP, 'mouseUp', DiscreteEvent], [TOP_PASTE, 'paste', DiscreteEvent], [TOP_PAUSE, 'pause', DiscreteEvent], [TOP_PLAY, 'play', DiscreteEvent], [TOP_POINTER_CANCEL, 'pointerCancel', DiscreteEvent], [TOP_POINTER_DOWN, 'pointerDown', DiscreteEvent], [TOP_POINTER_UP, 'pointerUp', DiscreteEvent], [TOP_RATE_CHANGE, 'rateChange', DiscreteEvent], [TOP_RESET, 'reset', DiscreteEvent], [TOP_SEEKED, 'seeked', DiscreteEvent], [TOP_SUBMIT, 'submit', DiscreteEvent], [TOP_TOUCH_CANCEL, 'touchCancel', DiscreteEvent], [TOP_TOUCH_END, 'touchEnd', DiscreteEvent], [TOP_TOUCH_START, 'touchStart', DiscreteEvent], [TOP_VOLUME_CHANGE, 'volumeChange', DiscreteEvent], // User-blocking events
[TOP_DRAG, 'drag', UserBlockingEvent], [TOP_DRAG_ENTER, 'dragEnter', UserBlockingEvent], [TOP_DRAG_EXIT, 'dragExit', UserBlockingEvent], [TOP_DRAG_LEAVE, 'dragLeave', UserBlockingEvent], [TOP_DRAG_OVER, 'dragOver', UserBlockingEvent], [TOP_MOUSE_MOVE, 'mouseMove', UserBlockingEvent], [TOP_MOUSE_OUT, 'mouseOut', UserBlockingEvent], [TOP_MOUSE_OVER, 'mouseOver', UserBlockingEvent], [TOP_POINTER_MOVE, 'pointerMove', UserBlockingEvent], [TOP_POINTER_OUT, 'pointerOut', UserBlockingEvent], [TOP_POINTER_OVER, 'pointerOver', UserBlockingEvent], [TOP_SCROLL, 'scroll', UserBlockingEvent], [TOP_TOGGLE, 'toggle', UserBlockingEvent], [TOP_TOUCH_MOVE, 'touchMove', UserBlockingEvent], [TOP_WHEEL, 'wheel', UserBlockingEvent], // Continuous events
[TOP_ABORT, 'abort', ContinuousEvent], [TOP_ANIMATION_END, 'animationEnd', ContinuousEvent], [TOP_ANIMATION_ITERATION, 'animationIteration', ContinuousEvent], [TOP_ANIMATION_START, 'animationStart', ContinuousEvent], [TOP_CAN_PLAY, 'canPlay', ContinuousEvent], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough', ContinuousEvent], [TOP_DURATION_CHANGE, 'durationChange', ContinuousEvent], [TOP_EMPTIED, 'emptied', ContinuousEvent], [TOP_ENCRYPTED, 'encrypted', ContinuousEvent], [TOP_ENDED, 'ended', ContinuousEvent], [TOP_ERROR, 'error', ContinuousEvent], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture', ContinuousEvent], [TOP_LOAD, 'load', ContinuousEvent], [TOP_LOADED_DATA, 'loadedData', ContinuousEvent], [TOP_LOADED_METADATA, 'loadedMetadata', ContinuousEvent], [TOP_LOAD_START, 'loadStart', ContinuousEvent], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture', ContinuousEvent], [TOP_PLAYING, 'playing', ContinuousEvent], [TOP_PROGRESS, 'progress', ContinuousEvent], [TOP_SEEKING, 'seeking', ContinuousEvent], [TOP_STALLED, 'stalled', ContinuousEvent], [TOP_SUSPEND, 'suspend', ContinuousEvent], [TOP_TIME_UPDATE, 'timeUpdate', ContinuousEvent], [TOP_TRANSITION_END, 'transitionEnd', ContinuousEvent], [TOP_WAITING, 'waiting', ContinuousEvent]];
var eventTypes = {};
var topLevelEventsToDispatchConfig = {};

for (var i = 0; i < eventTuples.length; i++) {
  var eventTuple = eventTuples[i];
  var topEvent = eventTuple[0];
  var event = eventTuple[1];
  var eventPriority = eventTuple[2];
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var config = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent],
    eventPriority: eventPriority
  };
  eventTypes[event] = config;
  topLevelEventsToDispatchConfig[topEvent] = config;
} // Only used in DEV for exhaustiveness validation.


var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];
var SimpleEventPlugin = {
  eventTypes: eventTypes,
  getEventPriority: function (topLevelType) {
    var config = topLevelEventsToDispatchConfig[topLevelType];
    return config !== undefined ? config.eventPriority : ContinuousEvent;
  },
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];

    if (!dispatchConfig) {
      return null;
    }

    var EventConstructor;

    switch (topLevelType) {
      case TOP_KEY_PRESS:
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }

      /* falls through */

      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        EventConstructor = SyntheticKeyboardEvent;
        break;

      case TOP_BLUR:
      case TOP_FOCUS:
        EventConstructor = SyntheticFocusEvent;
        break;

      case TOP_CLICK:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }

      /* falls through */

      case TOP_AUX_CLICK:
      case TOP_DOUBLE_CLICK:
      case TOP_MOUSE_DOWN:
      case TOP_MOUSE_MOVE:
      case TOP_MOUSE_UP: // TODO: Disabled elements should not respond to mouse events

      /* falls through */

      case TOP_MOUSE_OUT:
      case TOP_MOUSE_OVER:
      case TOP_CONTEXT_MENU:
        EventConstructor = SyntheticMouseEvent;
        break;

      case TOP_DRAG:
      case TOP_DRAG_END:
      case TOP_DRAG_ENTER:
      case TOP_DRAG_EXIT:
      case TOP_DRAG_LEAVE:
      case TOP_DRAG_OVER:
      case TOP_DRAG_START:
      case TOP_DROP:
        EventConstructor = SyntheticDragEvent;
        break;

      case TOP_TOUCH_CANCEL:
      case TOP_TOUCH_END:
      case TOP_TOUCH_MOVE:
      case TOP_TOUCH_START:
        EventConstructor = SyntheticTouchEvent;
        break;

      case TOP_ANIMATION_END:
      case TOP_ANIMATION_ITERATION:
      case TOP_ANIMATION_START:
        EventConstructor = SyntheticAnimationEvent;
        break;

      case TOP_TRANSITION_END:
        EventConstructor = SyntheticTransitionEvent;
        break;

      case TOP_SCROLL:
        EventConstructor = SyntheticUIEvent;
        break;

      case TOP_WHEEL:
        EventConstructor = SyntheticWheelEvent;
        break;

      case TOP_COPY:
      case TOP_CUT:
      case TOP_PASTE:
        EventConstructor = SyntheticClipboardEvent;
        break;

      case TOP_GOT_POINTER_CAPTURE:
      case TOP_LOST_POINTER_CAPTURE:
      case TOP_POINTER_CANCEL:
      case TOP_POINTER_DOWN:
      case TOP_POINTER_MOVE:
      case TOP_POINTER_OUT:
      case TOP_POINTER_OVER:
      case TOP_POINTER_UP:
        EventConstructor = SyntheticPointerEvent;
        break;

      default:
        {
          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
            warningWithoutStack$1(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
          }
        } // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0


        EventConstructor = SyntheticEvent;
        break;
    }

    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    accumulateTwoPhaseDispatches(event);
    return event;
  }
};

var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support

if (enableFlareAPI && canUseDOM) {
  try {
    var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value

    Object.defineProperty(options, 'passive', {
      get: function () {
        passiveBrowserEventsSupported = true;
      }
    });
    window.addEventListener('test', options, options);
    window.removeEventListener('test', options, options);
  } catch (e) {
    passiveBrowserEventsSupported = false;
  }
}

// Intentionally not named imports because Rollup would use dynamic dispatch for
// CommonJS interop named imports.
var UserBlockingPriority$1 = Scheduler.unstable_UserBlockingPriority;
var runWithPriority$1 = Scheduler.unstable_runWithPriority;
var getEventPriority = SimpleEventPlugin.getEventPriority;
var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
var callbackBookkeepingPool = [];

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findRootContainerNode(inst) {
  if (inst.tag === HostRoot) {
    return inst.stateNode.containerInfo;
  } // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.


  while (inst.return) {
    inst = inst.return;
  }

  if (inst.tag !== HostRoot) {
    // This can happen if we're in a detached tree.
    return null;
  }

  return inst.stateNode.containerInfo;
} // Used to store ancestor hierarchy in top level callback


function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst, eventSystemFlags) {
  if (callbackBookkeepingPool.length) {
    var instance = callbackBookkeepingPool.pop();
    instance.topLevelType = topLevelType;
    instance.eventSystemFlags = eventSystemFlags;
    instance.nativeEvent = nativeEvent;
    instance.targetInst = targetInst;
    return instance;
  }

  return {
    topLevelType: topLevelType,
    eventSystemFlags: eventSystemFlags,
    nativeEvent: nativeEvent,
    targetInst: targetInst,
    ancestors: []
  };
}

function releaseTopLevelCallbackBookKeeping(instance) {
  instance.topLevelType = null;
  instance.nativeEvent = null;
  instance.targetInst = null;
  instance.ancestors.length = 0;

  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
    callbackBookkeepingPool.push(instance);
  }
}

function handleTopLevel(bookKeeping) {
  var targetInst = bookKeeping.targetInst; // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.

  var ancestor = targetInst;

  do {
    if (!ancestor) {
      var ancestors = bookKeeping.ancestors;
      ancestors.push(ancestor);
      break;
    }

    var root = findRootContainerNode(ancestor);

    if (!root) {
      break;
    }

    var tag = ancestor.tag;

    if (tag === HostComponent || tag === HostText) {
      bookKeeping.ancestors.push(ancestor);
    }

    ancestor = getClosestInstanceFromNode(root);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    var eventTarget = getEventTarget(bookKeeping.nativeEvent);
    var topLevelType = bookKeeping.topLevelType;
    var nativeEvent = bookKeeping.nativeEvent;
    runExtractedPluginEventsInBatch(topLevelType, targetInst, nativeEvent, eventTarget, bookKeeping.eventSystemFlags);
  }
} // TODO: can we stop exporting these?


var _enabled = true;
function setEnabled(enabled) {
  _enabled = !!enabled;
}
function isEnabled() {
  return _enabled;
}
function trapBubbledEvent(topLevelType, element) {
  trapEventForPluginEventSystem(element, topLevelType, false);
}
function trapCapturedEvent(topLevelType, element) {
  trapEventForPluginEventSystem(element, topLevelType, true);
}
function trapEventForResponderEventSystem(element, topLevelType, passive) {
  if (enableFlareAPI) {
    var rawEventName = getRawEventName(topLevelType);
    var eventFlags = RESPONDER_EVENT_SYSTEM; // If passive option is not supported, then the event will be
    // active and not passive, but we flag it as using not being
    // supported too. This way the responder event plugins know,
    // and can provide polyfills if needed.

    if (passive) {
      if (passiveBrowserEventsSupported) {
        eventFlags |= IS_PASSIVE;
      } else {
        eventFlags |= IS_ACTIVE;
        eventFlags |= PASSIVE_NOT_SUPPORTED;
        passive = false;
      }
    } else {
      eventFlags |= IS_ACTIVE;
    } // Check if interactive and wrap in discreteUpdates


    var listener = dispatchEvent.bind(null, topLevelType, eventFlags);

    if (passiveBrowserEventsSupported) {
      addEventCaptureListenerWithPassiveFlag(element, rawEventName, listener, passive);
    } else {
      addEventCaptureListener(element, rawEventName, listener);
    }
  }
}

function trapEventForPluginEventSystem(element, topLevelType, capture) {
  var listener;

  switch (getEventPriority(topLevelType)) {
    case DiscreteEvent:
      listener = dispatchDiscreteEvent.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
      break;

    case UserBlockingEvent:
      listener = dispatchUserBlockingUpdate.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
      break;

    case ContinuousEvent:
    default:
      listener = dispatchEvent.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
      break;
  }

  var rawEventName = getRawEventName(topLevelType);

  if (capture) {
    addEventCaptureListener(element, rawEventName, listener);
  } else {
    addEventBubbleListener(element, rawEventName, listener);
  }
}

function dispatchDiscreteEvent(topLevelType, eventSystemFlags, nativeEvent) {
  flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);
  discreteUpdates(dispatchEvent, topLevelType, eventSystemFlags, nativeEvent);
}

function dispatchUserBlockingUpdate(topLevelType, eventSystemFlags, nativeEvent) {
  runWithPriority$1(UserBlockingPriority$1, dispatchEvent.bind(null, topLevelType, eventSystemFlags, nativeEvent));
}

function dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst) {
  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst, eventSystemFlags);

  try {
    // Event queue being processed in the same cycle allows
    // `preventDefault`.
    batchedEventUpdates(handleTopLevel, bookKeeping);
  } finally {
    releaseTopLevelCallbackBookKeeping(bookKeeping);
  }
}

function dispatchEvent(topLevelType, eventSystemFlags, nativeEvent) {
  if (!_enabled) {
    return;
  }

  if (hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(topLevelType)) {
    // If we already have a queue of discrete events, and this is another discrete
    // event, then we can't dispatch it regardless of its target, since they
    // need to dispatch in order.
    queueDiscreteEvent(null, // Flags that we're not actually blocked on anything as far as we know.
    topLevelType, eventSystemFlags, nativeEvent);
    return;
  }

  var blockedOn = attemptToDispatchEvent(topLevelType, eventSystemFlags, nativeEvent);

  if (blockedOn === null) {
    // We successfully dispatched this event.
    clearIfContinuousEvent(topLevelType, nativeEvent);
    return;
  }

  if (isReplayableDiscreteEvent(topLevelType)) {
    // This this to be replayed later once the target is available.
    queueDiscreteEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent);
    return;
  }

  if (queueIfContinuousEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent)) {
    return;
  } // We need to clear only if we didn't queue because
  // queueing is accummulative.


  clearIfContinuousEvent(topLevelType, nativeEvent); // This is not replayable so we'll invoke it but without a target,
  // in case the event system needs to trace it.

  if (enableFlareAPI) {
    if (eventSystemFlags & PLUGIN_EVENT_SYSTEM) {
      dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, null);
    }

    if (eventSystemFlags & RESPONDER_EVENT_SYSTEM) {
      // React Flare event system
      dispatchEventForResponderEventSystem(topLevelType, null, nativeEvent, getEventTarget(nativeEvent), eventSystemFlags);
    }
  } else {
    dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, null);
  }
} // Attempt dispatching an event. Returns a SuspenseInstance or Container if it's blocked.

function attemptToDispatchEvent(topLevelType, eventSystemFlags, nativeEvent) {
  // TODO: Warn if _enabled is false.
  var nativeEventTarget = getEventTarget(nativeEvent);
  var targetInst = getClosestInstanceFromNode(nativeEventTarget);

  if (targetInst !== null) {
    var nearestMounted = getNearestMountedFiber(targetInst);

    if (nearestMounted === null) {
      // This tree has been unmounted already. Dispatch without a target.
      targetInst = null;
    } else {
      var tag = nearestMounted.tag;

      if (tag === SuspenseComponent) {
        var instance = getSuspenseInstanceFromFiber(nearestMounted);

        if (instance !== null) {
          // Queue the event to be replayed later. Abort dispatching since we
          // don't want this event dispatched twice through the event system.
          // TODO: If this is the first discrete event in the queue. Schedule an increased
          // priority for this boundary.
          return instance;
        } // This shouldn't happen, something went wrong but to avoid blocking
        // the whole system, dispatch the event without a target.
        // TODO: Warn.


        targetInst = null;
      } else if (tag === HostRoot) {
        var root = nearestMounted.stateNode;

        if (root.hydrate) {
          // If this happens during a replay something went wrong and it might block
          // the whole system.
          return getContainerFromFiber(nearestMounted);
        }

        targetInst = null;
      } else if (nearestMounted !== targetInst) {
        // If we get an event (ex: img onload) before committing that
        // component's mount, ignore it for now (that is, treat it as if it was an
        // event on a non-React tree). We might also consider queueing events and
        // dispatching them after the mount.
        targetInst = null;
      }
    }
  }

  if (enableFlareAPI) {
    if (eventSystemFlags & PLUGIN_EVENT_SYSTEM) {
      dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst);
    }

    if (eventSystemFlags & RESPONDER_EVENT_SYSTEM) {
      // React Flare event system
      dispatchEventForResponderEventSystem(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
    }
  } else {
    dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst);
  } // We're not blocked on anything.


  return null;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */

function isEventSupported(eventNameSuffix) {
  if (!canUseDOM) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  return isSupported;
}

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactDOMEventListener, which is injected and can therefore support
 *    pluggable event sources. This is the only work that occurs in the main
 *    thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
var elementListeningSets = new PossiblyWeakMap();
function getListeningSetForElement(element) {
  var listeningSet = elementListeningSets.get(element);

  if (listeningSet === undefined) {
    listeningSet = new Set();
    elementListeningSets.set(element, listeningSet);
  }

  return listeningSet;
}
/**
 * We listen for bubbled touch events on the document object.
 *
 * Firefox v8.01 (and possibly others) exhibited strange behavior when
 * mounting `onmousemove` events at some node that was not the document
 * element. The symptoms were that if your mouse is not moving over something
 * contained within that mount point (for example on the background) the
 * top-level listeners for `onmousemove` won't be called. However, if you
 * register the `mousemove` on the document object, then it will of course
 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
 * top-level listeners to the document object only, at least for these
 * movement types of events and possibly all events.
 *
 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
 *
 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
 * they bubble to document.
 *
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @param {object} mountAt Container where to mount the listener
 */

function listenTo(registrationName, mountAt) {
  var listeningSet = getListeningSetForElement(mountAt);
  var dependencies = registrationNameDependencies[registrationName];

  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    listenToTopLevel(dependency, mountAt, listeningSet);
  }
}
function listenToTopLevel(topLevelType, mountAt, listeningSet) {
  if (!listeningSet.has(topLevelType)) {
    switch (topLevelType) {
      case TOP_SCROLL:
        trapCapturedEvent(TOP_SCROLL, mountAt);
        break;

      case TOP_FOCUS:
      case TOP_BLUR:
        trapCapturedEvent(TOP_FOCUS, mountAt);
        trapCapturedEvent(TOP_BLUR, mountAt); // We set the flag for a single dependency later in this function,
        // but this ensures we mark both as attached rather than just one.

        listeningSet.add(TOP_BLUR);
        listeningSet.add(TOP_FOCUS);
        break;

      case TOP_CANCEL:
      case TOP_CLOSE:
        if (isEventSupported(getRawEventName(topLevelType))) {
          trapCapturedEvent(topLevelType, mountAt);
        }

        break;

      case TOP_INVALID:
      case TOP_SUBMIT:
      case TOP_RESET:
        // We listen to them on the target DOM elements.
        // Some of them bubble so we don't want them to fire twice.
        break;

      default:
        // By default, listen on the top level to all non-media events.
        // Media events don't bubble so adding the listener wouldn't do anything.
        var isMediaEvent = mediaEventTypes.indexOf(topLevelType) !== -1;

        if (!isMediaEvent) {
          trapBubbledEvent(topLevelType, mountAt);
        }

        break;
    }

    listeningSet.add(topLevelType);
  }
}
function isListeningToAllDependencies(registrationName, mountAt) {
  var listeningSet = getListeningSetForElement(mountAt);
  var dependencies = registrationNameDependencies[registrationName];

  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];

    if (!listeningSet.has(dependency)) {
      return false;
    }
  }

  return true;
}

// List derived from Gecko source code:
// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
var shorthandToLonghand = {
  animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
  background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
  border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
  borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
  borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
  borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
  borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
  borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
  columns: ['columnCount', 'columnWidth'],
  flex: ['flexBasis', 'flexGrow', 'flexShrink'],
  flexFlow: ['flexDirection', 'flexWrap'],
  font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
  fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
  gap: ['columnGap', 'rowGap'],
  grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
  gridColumn: ['gridColumnEnd', 'gridColumnStart'],
  gridColumnGap: ['columnGap'],
  gridGap: ['columnGap', 'rowGap'],
  gridRow: ['gridRowEnd', 'gridRowStart'],
  gridRowGap: ['rowGap'],
  gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
  marker: ['markerEnd', 'markerMid', 'markerStart'],
  mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
  maskPosition: ['maskPositionX', 'maskPositionY'],
  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
  overflow: ['overflowX', 'overflowY'],
  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
  placeContent: ['alignContent', 'justifyContent'],
  placeItems: ['alignItems', 'justifyItems'],
  placeSelf: ['alignSelf', 'justifySelf'],
  textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
  transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
  wordWrap: ['overflowWrap']
};

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */

function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}
/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */


var prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.

Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */

function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901
  var isEmpty = value == null || typeof value === 'boolean' || value === '';

  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  return ('' + value).trim();
}

var uppercasePattern = /([A-Z])/g;
var msPattern = /^ms-/;
/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */

function hyphenateStyleName(name) {
  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
}

var warnValidStyle = function () {};

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
  var msPattern$1 = /^-ms-/;
  var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon

  var badStyleValueWithSemicolonPattern = /;\s*$/;
  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var camelize = function (string) {
    return string.replace(hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  };

  var warnHyphenatedStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning$1(false, 'Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests
    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
    // is converted to lowercase `ms`.
    camelize(name.replace(msPattern$1, 'ms-')));
  };

  var warnBadVendoredStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning$1(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
  };

  var warnStyleValueWithSemicolon = function (name, value) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    warning$1(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
  };

  var warnStyleValueIsNaN = function (name, value) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    warning$1(false, '`NaN` is an invalid value for the `%s` css style property.', name);
  };

  var warnStyleValueIsInfinity = function (name, value) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;
    warning$1(false, '`Infinity` is an invalid value for the `%s` css style property.', name);
  };

  warnValidStyle = function (name, value) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

/**
 * Operations for dealing with CSS properties.
 */

/**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */

function createDangerousStringForStyles(styles) {
  {
    var serialized = '';
    var delimiter = '';

    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }

      var styleValue = styles[styleName];

      if (styleValue != null) {
        var isCustomProperty = styleName.indexOf('--') === 0;
        serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
        delimiter = ';';
      }
    }

    return serialized || null;
  }
}
/**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */

function setValueForStyles(node, styles) {
  var style = node.style;

  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }

    var isCustomProperty = styleName.indexOf('--') === 0;

    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styles[styleName]);
      }
    }

    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);

    if (styleName === 'float') {
      styleName = 'cssFloat';
    }

    if (isCustomProperty) {
      style.setProperty(styleName, styleValue);
    } else {
      style[styleName] = styleValue;
    }
  }
}

function isValueEmpty(value) {
  return value == null || typeof value === 'boolean' || value === '';
}
/**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */


function expandShorthandMap(styles) {
  var expanded = {};

  for (var key in styles) {
    var longhands = shorthandToLonghand[key] || [key];

    for (var i = 0; i < longhands.length; i++) {
      expanded[longhands[i]] = key;
    }
  }

  return expanded;
}
/**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */


function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
  if (!warnAboutShorthandPropertyCollision) {
    return;
  }

  if (!nextStyles) {
    return;
  }

  var expandedUpdates = expandShorthandMap(styleUpdates);
  var expandedStyles = expandShorthandMap(nextStyles);
  var warnedAbout = {};

  for (var key in expandedUpdates) {
    var originalKey = expandedUpdates[key];
    var correctOriginalKey = expandedStyles[key];

    if (correctOriginalKey && originalKey !== correctOriginalKey) {
      var warningKey = originalKey + ',' + correctOriginalKey;

      if (warnedAbout[warningKey]) {
        continue;
      }

      warnedAbout[warningKey] = true;
      warning$1(false, '%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.
var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.

};

// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

// or add stack by default to invariants where possible.

var HTML$1 = '__html';
var ReactDebugCurrentFrame$3 = null;

{
  ReactDebugCurrentFrame$3 = ReactSharedInternals.ReactDebugCurrentFrame;
}

function assertValidProps(tag, props) {
  if (!props) {
    return;
  } // Note the use of `==` which checks for null or undefined.


  if (voidElementTags[tag]) {
    if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {
      {
        throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`." + (ReactDebugCurrentFrame$3.getStackAddendum()));
      }
    }
  }

  if (props.dangerouslySetInnerHTML != null) {
    if (!(props.children == null)) {
      {
        throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
      }
    }

    if (!(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML)) {
      {
        throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.");
      }
    }
  }

  {
    !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning$1(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
  }

  if (!(props.style == null || typeof props.style === 'object')) {
    {
      throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX." + (ReactDebugCurrentFrame$3.getStackAddendum()));
    }
  }
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }

  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this whitelist too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;

    default:
      return true;
  }
}

// When adding attributes to the HTML or SVG whitelist, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  class: 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  default: 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  disablepictureinpicture: 'disablePictureInPicture',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  for: 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nomodule: 'noModule',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',
  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  in: 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  typeof: 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

var ariaProperties = {
  'aria-current': 0,
  // state
  'aria-details': 0,
  'aria-disabled': 0,
  // state
  'aria-hidden': 0,
  // state
  'aria-invalid': 0,
  // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

function validateProperty(tagName, name) {
  if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
    return true;
  }

  if (rARIACamel.test(name)) {
    var ariaName = 'aria-' + name.slice(4).toLowerCase();
    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.

    if (correctName == null) {
      warning$1(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
      warnedProperties[name] = true;
      return true;
    } // aria-* attributes should be lowercase; suggest the lowercase version.


    if (name !== correctName) {
      warning$1(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
      warnedProperties[name] = true;
      return true;
    }
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.

    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    } // aria-* attributes should be lowercase; suggest the lowercase version.


    if (name !== standardName) {
      warning$1(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  var invalidProps = [];

  for (var key in props) {
    var isValid = validateProperty(type, key);

    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    warning$1(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
  } else if (invalidProps.length > 1) {
    warning$1(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;
function validateProperties$1(type, props) {
  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
    return;
  }

  if (props != null && props.value === null && !didWarnValueNull) {
    didWarnValueNull = true;

    if (type === 'select' && props.multiple) {
      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
    } else {
      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
    }
  }
}

var validateProperty$1 = function () {};

{
  var warnedProperties$1 = {};
  var _hasOwnProperty = Object.prototype.hasOwnProperty;
  var EVENT_NAME_REGEX = /^on./;
  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    var lowerCasedName = name.toLowerCase();

    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      warning$1(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
      warnedProperties$1[name] = true;
      return true;
    } // We can't rely on the event system being injected on the server.


    if (canUseEventSystem) {
      if (registrationNameModules.hasOwnProperty(name)) {
        return true;
      }

      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;

      if (registrationName != null) {
        warning$1(false, 'Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
        warnedProperties$1[name] = true;
        return true;
      }

      if (EVENT_NAME_REGEX.test(name)) {
        warning$1(false, 'Unknown event handler property `%s`. It will be ignored.', name);
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we are in a server environment.
      // So we can't tell if the event name is correct for sure, but we can filter
      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
      if (INVALID_EVENT_NAME_REGEX.test(name)) {
        warning$1(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Let the ARIA attribute hook validate ARIA attributes


    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      warning$1(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      warning$1(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      warning$1(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      warning$1(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);
      warnedProperties$1[name] = true;
      return true;
    }

    var propertyInfo = getPropertyInfo(name);
    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.

    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];

      if (standardName !== name) {
        warning$1(false, 'Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      warning$1(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      if (value) {
        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
      } else {
        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Now that we've validated casing, do not validate
    // data types for reserved props


    if (isReserved) {
      return true;
    } // Warn when a known attribute is a bad type


    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      warnedProperties$1[name] = true;
      return false;
    } // Warn when passing the strings 'false' or 'true' into a boolean prop


    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
      warning$1(false, 'Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
      warnedProperties$1[name] = true;
      return true;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props, canUseEventSystem) {
  var unknownProps = [];

  for (var key in props) {
    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);

    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (unknownProps.length === 1) {
    warning$1(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
  } else if (unknownProps.length > 1) {
    warning$1(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
  }
};

function validateProperties$2(type, props, canUseEventSystem) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnUnknownProperties(type, props, canUseEventSystem);
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var didWarnInvalidHydration = false;
var didWarnShadyDOM = false;
var didWarnScriptTags = false;
var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
var AUTOFOCUS = 'autoFocus';
var CHILDREN = 'children';
var STYLE$1 = 'style';
var HTML = '__html';
var LISTENERS = 'listeners';
var HTML_NAMESPACE = Namespaces.html;
var warnedUnknownTags;
var suppressHydrationWarning;
var validatePropertiesInDevelopment;
var warnForTextDifference;
var warnForPropDifference;
var warnForExtraAttributes;
var warnForInvalidEventListener;
var canDiffStyleForHydrationWarning;
var normalizeMarkupForTextOrAttribute;
var normalizeHTML;

{
  warnedUnknownTags = {
    // Chrome is the only major browser not shipping <time>. But as of July
    // 2017 it intends to ship it due to widespread usage. We intentionally
    // *don't* warn for <time> even if it's unrecognized by Chrome because
    // it soon will be, and many apps have been using it anyway.
    time: true,
    // There are working polyfills for <dialog>. Let people use it.
    dialog: true,
    // Electron ships a custom <webview> tag to display external web content in
    // an isolated frame and process.
    // This tag is not present in non Electron environments such as JSDom which
    // is often used for testing purposes.
    // @see https://electronjs.org/docs/api/webview-tag
    webview: true
  };

  validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props,
    /* canUseEventSystem */
    true);
  }; // IE 11 parses & normalizes the style attribute as opposed to other
  // browsers. It adds spaces and sorts the properties in some
  // non-alphabetical order. Handling that would require sorting CSS
  // properties in the client & server versions or applying
  // `expectedStyle` to a temporary DOM node to read its `style` attribute
  // normalized. Since it only affects IE, we're skipping style warnings
  // in that browser completely in favor of doing all that work.
  // See https://github.com/facebook/react/issues/11807


  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode; // HTML parsing normalizes CR and CRLF to LF.
  // It also can turn \u0000 into \uFFFD inside attributes.
  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
  // If we have a mismatch, it might be caused by that.
  // We will still patch up in this case but not fire the warning.

  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

  normalizeMarkupForTextOrAttribute = function (markup) {
    var markupString = typeof markup === 'string' ? markup : '' + markup;
    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
  };

  warnForTextDifference = function (serverText, clientText) {
    if (didWarnInvalidHydration) {
      return;
    }

    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);

    if (normalizedServerText === normalizedClientText) {
      return;
    }

    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
  };

  warnForPropDifference = function (propName, serverValue, clientValue) {
    if (didWarnInvalidHydration) {
      return;
    }

    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);

    if (normalizedServerValue === normalizedClientValue) {
      return;
    }

    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
  };

  warnForExtraAttributes = function (attributeNames) {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    var names = [];
    attributeNames.forEach(function (name) {
      names.push(name);
    });
    warningWithoutStack$1(false, 'Extra attributes from the server: %s', names);
  };

  warnForInvalidEventListener = function (registrationName, listener) {
    if (listener === false) {
      warning$1(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
    } else {
      warning$1(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
    }
  }; // Parse the HTML and read it back to normalize the HTML string so that it
  // can be used for comparison.


  normalizeHTML = function (parent, html) {
    // We could have created a separate document here to avoid
    // re-initializing custom elements if they exist. But this breaks
    // how <noscript> is being handled. So we use the same document.
    // See the discussion in https://github.com/facebook/react/pull/11157.
    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
    testElement.innerHTML = html;
    return testElement.innerHTML;
  };
}

function ensureListeningTo(rootContainerElement, registrationName) {
  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
  listenTo(registrationName, doc);
}

function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
}

function noop() {}

function trapClickOnNonInteractiveElement(node) {
  // Mobile Safari does not fire properly bubble click events on
  // non-interactive elements, which means delegated click listeners do not
  // fire. The workaround for this bug involves attaching an empty click
  // listener on the target node.
  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
  // Just set it using the onclick property so that we don't have to manage any
  // bookkeeping for it. Not sure if we need to clear it when the listener is
  // removed.
  // TODO: Only do this for the relevant Safaris maybe?
  node.onclick = noop;
}

function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
  for (var propKey in nextProps) {
    if (!nextProps.hasOwnProperty(propKey)) {
      continue;
    }

    var nextProp = nextProps[propKey];

    if (propKey === STYLE$1) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      } // Relies on `updateStylesByID` not mutating `styleUpdates`.


      setValueForStyles(domElement, nextProp);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;

      if (nextHtml != null) {
        setInnerHTML(domElement, nextHtml);
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string') {
        // Avoid setting initial textContent when the text is empty. In IE11 setting
        // textContent on a <textarea> will cause the placeholder to not
        // show within the <textarea> until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        var canSetTextContent = tag !== 'textarea' || nextProp !== '';

        if (canSetTextContent) {
          setTextContent(domElement, nextProp);
        }
      } else if (typeof nextProp === 'number') {
        setTextContent(domElement, '' + nextProp);
      }
    } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
    } else if (propKey === AUTOFOCUS) {// We polyfill it separately on the client during commit.
      // We could have excluded it in the property list instead of
      // adding a special case here, but then it wouldn't be emitted
      // on server rendering (but we *do* want to emit it in SSR).
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (nextProp != null) {
      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
    }
  }
}

function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
  // TODO: Handle wasCustomComponentTag
  for (var i = 0; i < updatePayload.length; i += 2) {
    var propKey = updatePayload[i];
    var propValue = updatePayload[i + 1];

    if (propKey === STYLE$1) {
      setValueForStyles(domElement, propValue);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      setInnerHTML(domElement, propValue);
    } else if (propKey === CHILDREN) {
      setTextContent(domElement, propValue);
    } else {
      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
    }
  }
}

function createElement(type, props, rootContainerElement, parentNamespace) {
  var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
  // tags get no namespace.

  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
  var domElement;
  var namespaceURI = parentNamespace;

  if (namespaceURI === HTML_NAMESPACE) {
    namespaceURI = getIntrinsicNamespace(type);
  }

  if (namespaceURI === HTML_NAMESPACE) {
    {
      isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
      // allow <SVG> or <mATH>.

      !(isCustomComponentTag || type === type.toLowerCase()) ? warning$1(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
    }

    if (type === 'script') {
      // Create the script via .innerHTML so its "parser-inserted" flag is
      // set to true and it does not execute
      var div = ownerDocument.createElement('div');

      {
        if (enableTrustedTypesIntegration && !didWarnScriptTags) {
          warning$1(false, 'Encountered a script tag while rendering React component. ' + 'Scripts inside React components are never executed when rendering ' + 'on the client. Consider using template tag instead ' + '(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template).');
          didWarnScriptTags = true;
        }
      }

      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
      // This is guaranteed to yield a script element.

      var firstChild = div.firstChild;
      domElement = div.removeChild(firstChild);
    } else if (typeof props.is === 'string') {
      // $FlowIssue `createElement` should be updated for Web Components
      domElement = ownerDocument.createElement(type, {
        is: props.is
      });
    } else {
      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
      // See discussion in https://github.com/facebook/react/pull/6896
      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
      domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
      // attributes on `select`s needs to be added before `option`s are inserted.
      // This prevents:
      // - a bug where the `select` does not scroll to the correct option because singular
      //  `select` elements automatically pick the first item #13222
      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
      // See https://github.com/facebook/react/issues/13222
      // and https://github.com/facebook/react/issues/14239

      if (type === 'select') {
        var node = domElement;

        if (props.multiple) {
          node.multiple = true;
        } else if (props.size) {
          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
          // it is possible that no option is selected.
          //
          // This is only necessary when a select in "single selection mode".
          node.size = props.size;
        }
      }
    }
  } else {
    domElement = ownerDocument.createElementNS(namespaceURI, type);
  }

  {
    if (namespaceURI === HTML_NAMESPACE) {
      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
        warnedUnknownTags[type] = true;
        warning$1(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
      }
    }
  }

  return domElement;
}
function createTextNode(text, rootContainerElement) {
  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
}
function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
  var isCustomComponentTag = isCustomComponent(tag, rawProps);

  {
    validatePropertiesInDevelopment(tag, rawProps);

    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
      didWarnShadyDOM = true;
    }
  } // TODO: Make sure that we check isMounted before firing any of these events.


  var props;

  switch (tag) {
    case 'iframe':
    case 'object':
    case 'embed':
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;

    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }

      props = rawProps;
      break;

    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      props = rawProps;
      break;

    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;

    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      props = rawProps;
      break;

    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      props = rawProps;
      break;

    case 'input':
      initWrapperState(domElement, rawProps);
      props = getHostProps(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.

      ensureListeningTo(rootContainerElement, 'onChange');
      break;

    case 'option':
      validateProps(domElement, rawProps);
      props = getHostProps$1(domElement, rawProps);
      break;

    case 'select':
      initWrapperState$1(domElement, rawProps);
      props = getHostProps$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.

      ensureListeningTo(rootContainerElement, 'onChange');
      break;

    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      props = getHostProps$3(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.

      ensureListeningTo(rootContainerElement, 'onChange');
      break;

    default:
      props = rawProps;
  }

  assertValidProps(tag, props);
  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, false);
      break;

    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;

    case 'option':
      postMountWrapper$1(domElement, rawProps);
      break;

    case 'select':
      postMountWrapper$2(domElement, rawProps);
      break;

    default:
      if (typeof props.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }
} // Calculate the diff between the two objects.

function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
  {
    validatePropertiesInDevelopment(tag, nextRawProps);
  }

  var updatePayload = null;
  var lastProps;
  var nextProps;

  switch (tag) {
    case 'input':
      lastProps = getHostProps(domElement, lastRawProps);
      nextProps = getHostProps(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'option':
      lastProps = getHostProps$1(domElement, lastRawProps);
      nextProps = getHostProps$1(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'select':
      lastProps = getHostProps$2(domElement, lastRawProps);
      nextProps = getHostProps$2(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'textarea':
      lastProps = getHostProps$3(domElement, lastRawProps);
      nextProps = getHostProps$3(domElement, nextRawProps);
      updatePayload = [];
      break;

    default:
      lastProps = lastRawProps;
      nextProps = nextRawProps;

      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }

  assertValidProps(tag, nextProps);
  var propKey;
  var styleName;
  var styleUpdates = null;

  for (propKey in lastProps) {
    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
      continue;
    }

    if (propKey === STYLE$1) {
      var lastStyle = lastProps[propKey];

      for (styleName in lastStyle) {
        if (lastStyle.hasOwnProperty(styleName)) {
          if (!styleUpdates) {
            styleUpdates = {};
          }

          styleUpdates[styleName] = '';
        }
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {// Noop. This is handled by the clear text mechanism.
    } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
    } else if (propKey === AUTOFOCUS) {// Noop. It doesn't work on updates anyway.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      // This is a special case. If any listener updates we need to ensure
      // that the "current" fiber pointer gets updated so we need a commit
      // to update this element.
      if (!updatePayload) {
        updatePayload = [];
      }
    } else {
      // For all other deleted properties we add it to the queue. We use
      // the whitelist in the commit phase instead.
      (updatePayload = updatePayload || []).push(propKey, null);
    }
  }

  for (propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps != null ? lastProps[propKey] : undefined;

    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
      continue;
    }

    if (propKey === STYLE$1) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }

      if (lastProp) {
        // Unset styles on `lastProp` but not on `nextProp`.
        for (styleName in lastProp) {
          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
            if (!styleUpdates) {
              styleUpdates = {};
            }

            styleUpdates[styleName] = '';
          }
        } // Update styles that changed since `lastProp`.


        for (styleName in nextProp) {
          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            if (!styleUpdates) {
              styleUpdates = {};
            }

            styleUpdates[styleName] = nextProp[styleName];
          }
        }
      } else {
        // Relies on `updateStylesByID` not mutating `styleUpdates`.
        if (!styleUpdates) {
          if (!updatePayload) {
            updatePayload = [];
          }

          updatePayload.push(propKey, styleUpdates);
        }

        styleUpdates = nextProp;
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      var lastHtml = lastProp ? lastProp[HTML] : undefined;

      if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          (updatePayload = updatePayload || []).push(propKey, toStringOrTrustedType(nextHtml));
        }
      } else {// TODO: It might be too late to clear this if we have children
        // inserted already.
      }
    } else if (propKey === CHILDREN) {
      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
      }
    } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        // We eagerly listen to this even though we haven't committed yet.
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        ensureListeningTo(rootContainerElement, propKey);
      }

      if (!updatePayload && lastProp !== nextProp) {
        // This is a special case. If any listener updates we need to ensure
        // that the "current" props pointer gets updated so we need a commit
        // to update this element.
        updatePayload = [];
      }
    } else {
      // For any other property we always add it to the queue and then we
      // filter it out using the whitelist during the commit.
      (updatePayload = updatePayload || []).push(propKey, nextProp);
    }
  }

  if (styleUpdates) {
    {
      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE$1]);
    }

    (updatePayload = updatePayload || []).push(STYLE$1, styleUpdates);
  }

  return updatePayload;
} // Apply the diff.

function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
  // Update checked *before* name.
  // In the middle of an update, it is possible to have multiple checked.
  // When a checked radio tries to change name, browser makes another radio's checked false.
  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
    updateChecked(domElement, nextRawProps);
  }

  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
  var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.

  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
  // changed.

  switch (tag) {
    case 'input':
      // Update the wrapper around inputs *after* updating props. This has to
      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
      // raise warnings and prevent the new value from being assigned.
      updateWrapper(domElement, nextRawProps);
      break;

    case 'textarea':
      updateWrapper$1(domElement, nextRawProps);
      break;

    case 'select':
      // <select> value update needs to occur after <option> children
      // reconciliation
      postUpdateWrapper(domElement, nextRawProps);
      break;
  }
}

function getPossibleStandardName(propName) {
  {
    var lowerCasedName = propName.toLowerCase();

    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      return null;
    }

    return possibleStandardNames[lowerCasedName] || null;
  }

  return null;
}

function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
  var isCustomComponentTag;
  var extraAttributeNames;

  {
    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
    isCustomComponentTag = isCustomComponent(tag, rawProps);
    validatePropertiesInDevelopment(tag, rawProps);

    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
      didWarnShadyDOM = true;
    }
  } // TODO: Make sure that we check isMounted before firing any of these events.


  switch (tag) {
    case 'iframe':
    case 'object':
    case 'embed':
      trapBubbledEvent(TOP_LOAD, domElement);
      break;

    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }

      break;

    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      break;

    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      break;

    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      break;

    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      break;

    case 'input':
      initWrapperState(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.

      ensureListeningTo(rootContainerElement, 'onChange');
      break;

    case 'option':
      validateProps(domElement, rawProps);
      break;

    case 'select':
      initWrapperState$1(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.

      ensureListeningTo(rootContainerElement, 'onChange');
      break;

    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.

      ensureListeningTo(rootContainerElement, 'onChange');
      break;
  }

  assertValidProps(tag, rawProps);

  {
    extraAttributeNames = new Set();
    var attributes = domElement.attributes;

    for (var _i = 0; _i < attributes.length; _i++) {
      var name = attributes[_i].name.toLowerCase();

      switch (name) {
        // Built-in SSR attribute is whitelisted
        case 'data-reactroot':
          break;
        // Controlled attributes are not validated
        // TODO: Only ignore them on controlled tags.

        case 'value':
          break;

        case 'checked':
          break;

        case 'selected':
          break;

        default:
          // Intentionally use the original name.
          // See discussion in https://github.com/facebook/react/pull/10676.
          extraAttributeNames.add(attributes[_i].name);
      }
    }
  }

  var updatePayload = null;

  for (var propKey in rawProps) {
    if (!rawProps.hasOwnProperty(propKey)) {
      continue;
    }

    var nextProp = rawProps[propKey];

    if (propKey === CHILDREN) {
      // For text content children we compare against textContent. This
      // might match additional HTML that is hidden when we read it using
      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
      // satisfies our requirement. Our requirement is not to produce perfect
      // HTML and attributes. Ideally we should preserve structure but it's
      // ok not to if the visible content is still enough to indicate what
      // even listeners these nodes might be wired up to.
      // TODO: Warn if there is more than a single textNode as a child.
      // TODO: Should we use domElement.firstChild.nodeValue to compare?
      if (typeof nextProp === 'string') {
        if (domElement.textContent !== nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }

          updatePayload = [CHILDREN, nextProp];
        }
      } else if (typeof nextProp === 'number') {
        if (domElement.textContent !== '' + nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }

          updatePayload = [CHILDREN, '' + nextProp];
        }
      }
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (true && // Convince Flow we've calculated it (it's DEV-only in this method.)
    typeof isCustomComponentTag === 'boolean') {
      // Validate that the properties correspond to their expected values.
      var serverValue = void 0;
      var propertyInfo = getPropertyInfo(propKey);

      if (suppressHydrationWarning) {// Don't bother comparing. We're ignoring all these warnings.
      } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 || // Controlled attributes are not validated
      // TODO: Only ignore them on controlled tags.
      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {// Noop
      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
        var serverHTML = domElement.innerHTML;
        var nextHtml = nextProp ? nextProp[HTML] : undefined;
        var expectedHTML = normalizeHTML(domElement, nextHtml != null ? nextHtml : '');

        if (expectedHTML !== serverHTML) {
          warnForPropDifference(propKey, serverHTML, expectedHTML);
        }
      } else if (propKey === STYLE$1) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey);

        if (canDiffStyleForHydrationWarning) {
          var expectedStyle = createDangerousStringForStyles(nextProp);
          serverValue = domElement.getAttribute('style');

          if (expectedStyle !== serverValue) {
            warnForPropDifference(propKey, serverValue, expectedStyle);
          }
        }
      } else if (isCustomComponentTag) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey.toLowerCase());
        serverValue = getValueForAttribute(domElement, propKey, nextProp);

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
        var isMismatchDueToBadCasing = false;

        if (propertyInfo !== null) {
          // $FlowFixMe - Should be inferred as not undefined.
          extraAttributeNames.delete(propertyInfo.attributeName);
          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
        } else {
          var ownNamespace = parentNamespace;

          if (ownNamespace === HTML_NAMESPACE) {
            ownNamespace = getIntrinsicNamespace(tag);
          }

          if (ownNamespace === HTML_NAMESPACE) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
          } else {
            var standardName = getPossibleStandardName(propKey);

            if (standardName !== null && standardName !== propKey) {
              // If an SVG prop is supplied with bad casing, it will
              // be successfully parsed from HTML, but will produce a mismatch
              // (and would be incorrectly rendered on the client).
              // However, we already warn about bad casing elsewhere.
              // So we'll skip the misleading extra mismatch warning in this case.
              isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.

              extraAttributeNames.delete(standardName);
            } // $FlowFixMe - Should be inferred as not undefined.


            extraAttributeNames.delete(propKey);
          }

          serverValue = getValueForAttribute(domElement, propKey, nextProp);
        }

        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      }
    }
  }

  {
    // $FlowFixMe - Should be inferred as not undefined.
    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
      // $FlowFixMe - Should be inferred as not undefined.
      warnForExtraAttributes(extraAttributeNames);
    }
  }

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, true);
      break;

    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;

    case 'select':
    case 'option':
      // For input and textarea we current always set the value property at
      // post mount to force it to diverge from attributes. However, for
      // option and select we don't quite do the same thing and select
      // is not resilient to the DOM state changing so we don't do that here.
      // TODO: Consider not doing this for input and textarea.
      break;

    default:
      if (typeof rawProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }

  return updatePayload;
}
function diffHydratedText(textNode, text) {
  var isDifferent = textNode.nodeValue !== text;
  return isDifferent;
}
function warnForUnmatchedText(textNode, text) {
  {
    warnForTextDifference(textNode.nodeValue, text);
  }
}
function warnForDeletedHydratableElement(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
  }
}
function warnForDeletedHydratableText(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
  }
}
function warnForInsertedHydratedElement(parentNode, tag, props) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
  }
}
function warnForInsertedHydratedText(parentNode, text) {
  {
    if (text === '') {
      // We expect to insert empty text nodes since they're not represented in
      // the HTML.
      // TODO: Remove this special case if we can just avoid inserting empty
      // text nodes.
      return;
    }

    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
  }
}
function restoreControlledState$$1(domElement, tag, props) {
  switch (tag) {
    case 'input':
      restoreControlledState$1(domElement, props);
      return;

    case 'textarea':
      restoreControlledState$3(domElement, props);
      return;

    case 'select':
      restoreControlledState$2(domElement, props);
      return;
  }
}
function listenToEventResponderEventTypes(eventTypes, element) {
  if (enableFlareAPI) {
    // Get the listening Set for this element. We use this to track
    // what events we're listening to.
    var listeningSet = getListeningSetForElement(element); // Go through each target event type of the event responder

    for (var i = 0, length = eventTypes.length; i < length; ++i) {
      var eventType = eventTypes[i];
      var isPassive = !endsWith(eventType, '_active');
      var eventKey = isPassive ? eventType + '_passive' : eventType;
      var targetEventType = isPassive ? eventType : eventType.substring(0, eventType.length - 7);

      if (!listeningSet.has(eventKey)) {
        trapEventForResponderEventSystem(element, targetEventType, isPassive);
        listeningSet.add(eventKey);
      }
    }
  }
} // We can remove this once the event API is stable and out of a flag

if (enableFlareAPI) {
  setListenToResponderEventTypes(listenToEventResponderEventTypes);
}

function getActiveElement(doc) {
  doc = doc || (typeof document !== 'undefined' ? document : undefined);

  if (typeof doc === 'undefined') {
    return null;
  }

  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }

  return node;
}
/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */


function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }

    node = node.parentNode;
  }
}
/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */


function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === TEXT_NODE) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

/**
 * @param {DOMElement} outerNode
 * @return {?object}
 */

function getOffsets(outerNode) {
  var ownerDocument = outerNode.ownerDocument;
  var win = ownerDocument && ownerDocument.defaultView || window;
  var selection = win.getSelection && win.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode,
      anchorOffset = selection.anchorOffset,
      focusNode = selection.focusNode,
      focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
  // expose properties, triggering a "Permission denied error" if any of its
  // properties are accessed. The only seemingly possible way to avoid erroring
  // is to access a property that typically works for non-anonymous divs and
  // catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

  try {
    /* eslint-disable no-unused-expressions */
    anchorNode.nodeType;
    focusNode.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
}
/**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */

function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
  var length = 0;
  var start = -1;
  var end = -1;
  var indexWithinAnchor = 0;
  var indexWithinFocus = 0;
  var node = outerNode;
  var parentNode = null;

  outer: while (true) {
    var next = null;

    while (true) {
      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
        start = length + anchorOffset;
      }

      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
        end = length + focusOffset;
      }

      if (node.nodeType === TEXT_NODE) {
        length += node.nodeValue.length;
      }

      if ((next = node.firstChild) === null) {
        break;
      } // Moving from `node` to its first child `next`.


      parentNode = node;
      node = next;
    }

    while (true) {
      if (node === outerNode) {
        // If `outerNode` has children, this is always the second time visiting
        // it. If it has no children, this is still the first loop, and the only
        // valid selection is anchorNode and focusNode both equal to this node
        // and both offsets 0, in which case we will have handled above.
        break outer;
      }

      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
        start = length;
      }

      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
        end = length;
      }

      if ((next = node.nextSibling) !== null) {
        break;
      }

      node = parentNode;
      parentNode = node.parentNode;
    } // Moving from `node` to its next sibling `next`.


    node = next;
  }

  if (start === -1 || end === -1) {
    // This should never happen. (Would happen if the anchor/focus nodes aren't
    // actually inside the passed-in node.)
    return null;
  }

  return {
    start: start,
    end: end
  };
}
/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */

function setOffsets(node, offsets) {
  var doc = node.ownerDocument || document;
  var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
  // fails when pasting 100+ items)

  if (!win.getSelection) {
    return;
  }

  var selection = win.getSelection();
  var length = node.textContent.length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.

  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
      return;
    }

    var range = doc.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

function isTextNode(node) {
  return node && node.nodeType === TEXT_NODE;
}

function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

function isInDocument(node) {
  return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
}

function isSameOriginFrame(iframe) {
  try {
    // Accessing the contentDocument of a HTMLIframeElement can cause the browser
    // to throw, e.g. if it has a cross-origin src attribute.
    // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
    // iframe.contentDocument.defaultView;
    // A safety way is to access one of the cross origin properties: Window or Location
    // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
    return typeof iframe.contentWindow.location.href === 'string';
  } catch (err) {
    return false;
  }
}

function getActiveElementDeep() {
  var win = window;
  var element = getActiveElement();

  while (element instanceof win.HTMLIFrameElement) {
    if (isSameOriginFrame(element)) {
      win = element.contentWindow;
    } else {
      return element;
    }

    element = getActiveElement(win.document);
  }

  return element;
}
/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */

/**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */


function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
}
function getSelectionInformation() {
  var focusedElem = getActiveElementDeep();
  return {
    focusedElem: focusedElem,
    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
  };
}
/**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */

function restoreSelection(priorSelectionInformation) {
  var curFocusedElem = getActiveElementDeep();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;

  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
      setSelection(priorFocusedElem, priorSelectionRange);
    } // Focusing a node can change the scroll position, which is undesirable


    var ancestors = [];
    var ancestor = priorFocusedElem;

    while (ancestor = ancestor.parentNode) {
      if (ancestor.nodeType === ELEMENT_NODE) {
        ancestors.push({
          element: ancestor,
          left: ancestor.scrollLeft,
          top: ancestor.scrollTop
        });
      }
    }

    if (typeof priorFocusedElem.focus === 'function') {
      priorFocusedElem.focus();
    }

    for (var i = 0; i < ancestors.length; i++) {
      var info = ancestors[i];
      info.element.scrollLeft = info.left;
      info.element.scrollTop = info.top;
    }
  }
}
/**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */

function getSelection(input) {
  var selection;

  if ('selectionStart' in input) {
    // Modern browser with input or textarea.
    selection = {
      start: input.selectionStart,
      end: input.selectionEnd
    };
  } else {
    // Content editable or old IE textarea.
    selection = getOffsets(input);
  }

  return selection || {
    start: 0,
    end: 0
  };
}
/**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */

function setSelection(input, offsets) {
  var start = offsets.start,
      end = offsets.end;

  if (end === undefined) {
    end = start;
  }

  if ('selectionStart' in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length);
  } else {
    setOffsets(input, offsets);
  }
}

var validateDOMNesting = function () {};

var updatedAncestorInfo = function () {};

{
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.
  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope

  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope

  var buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags

  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
  var emptyAncestorInfo = {
    current: null,
    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,
    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  updatedAncestorInfo = function (oldInfo, tag) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);

    var info = {
      tag: tag
    };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }

    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    } // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }

    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }

    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }

    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }

    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }

    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }

    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };
  /**
   * Returns whether
   */


  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';

      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but

      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr

      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody

      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup

      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable

      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead

      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element

      case 'html':
        return tag === 'head' || tag === 'body' || tag === 'frameset';

      case 'frameset':
        return tag === 'frame';

      case '#document':
        return tag === 'html';
    } // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frameset':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };
  /**
   * Returns whether
   */


  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  var didWarn$1 = {};

  validateDOMNesting = function (childTag, childText, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      !(childTag == null) ? warningWithoutStack$1(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var invalidParentOrAncestor = invalidParent || invalidAncestor;

    if (!invalidParentOrAncestor) {
      return;
    }

    var ancestorTag = invalidParentOrAncestor.tag;
    var addendum = getCurrentFiberStackInDev();
    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;

    if (didWarn$1[warnKey]) {
      return;
    }

    didWarn$1[warnKey] = true;
    var tagDisplayName = childTag;
    var whitespaceInfo = '';

    if (childTag === '#text') {
      if (/\S/.test(childText)) {
        tagDisplayName = 'Text nodes';
      } else {
        tagDisplayName = 'Whitespace text nodes';
        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
      }
    } else {
      tagDisplayName = '<' + childTag + '>';
    }

    if (invalidParent) {
      var info = '';

      if (ancestorTag === 'table' && childTag === 'tr') {
        info += ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' + 'the browser.';
      }

      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
    } else {
      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
    }
  };
}

// can re-export everything from this module.

function shim() {
  {
    {
      throw Error("The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.");
    }
  }
} // Persistence (when unsupported)


var supportsPersistence = false;
var cloneInstance = shim;
var cloneFundamentalInstance = shim;
var createContainerChildSet = shim;
var appendChildToContainerChildSet = shim;
var finalizeContainerChildren = shim;
var replaceContainerChildren = shim;
var cloneHiddenInstance = shim;
var cloneHiddenTextInstance = shim;

var SUPPRESS_HYDRATION_WARNING;

{
  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
}

var SUSPENSE_START_DATA = '$';
var SUSPENSE_END_DATA = '/$';
var SUSPENSE_PENDING_START_DATA = '$?';
var SUSPENSE_FALLBACK_START_DATA = '$!';
var STYLE = 'style';
var eventsEnabled = null;
var selectionInformation = null;

function shouldAutoFocusHostComponent(type, props) {
  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      return !!props.autoFocus;
  }

  return false;
}

function getRootHostContext(rootContainerInstance) {
  var type;
  var namespace;
  var nodeType = rootContainerInstance.nodeType;

  switch (nodeType) {
    case DOCUMENT_NODE:
    case DOCUMENT_FRAGMENT_NODE:
      {
        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
        var root = rootContainerInstance.documentElement;
        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
        break;
      }

    default:
      {
        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
        var ownNamespace = container.namespaceURI || null;
        type = container.tagName;
        namespace = getChildNamespace(ownNamespace, type);
        break;
      }
  }

  {
    var validatedTag = type.toLowerCase();
    var ancestorInfo = updatedAncestorInfo(null, validatedTag);
    return {
      namespace: namespace,
      ancestorInfo: ancestorInfo
    };
  }

  return namespace;
}
function getChildHostContext(parentHostContext, type, rootContainerInstance) {
  {
    var parentHostContextDev = parentHostContext;
    var namespace = getChildNamespace(parentHostContextDev.namespace, type);
    var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
    return {
      namespace: namespace,
      ancestorInfo: ancestorInfo
    };
  }

  var parentNamespace = parentHostContext;
  return getChildNamespace(parentNamespace, type);
}
function getPublicInstance(instance) {
  return instance;
}
function prepareForCommit(containerInfo) {
  eventsEnabled = isEnabled();
  selectionInformation = getSelectionInformation();
  setEnabled(false);
}
function resetAfterCommit(containerInfo) {
  restoreSelection(selectionInformation);
  selectionInformation = null;
  setEnabled(eventsEnabled);
  eventsEnabled = null;
}
function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  var parentNamespace;

  {
    // TODO: take namespace into account when validating.
    var hostContextDev = hostContext;
    validateDOMNesting(type, null, hostContextDev.ancestorInfo);

    if (typeof props.children === 'string' || typeof props.children === 'number') {
      var string = '' + props.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }

    parentNamespace = hostContextDev.namespace;
  }

  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
  precacheFiberNode(internalInstanceHandle, domElement);
  updateFiberProps(domElement, props);
  return domElement;
}
function appendInitialChild(parentInstance, child) {
  parentInstance.appendChild(child);
}
function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
  setInitialProperties(domElement, type, props, rootContainerInstance);
  return shouldAutoFocusHostComponent(type, props);
}
function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
  {
    var hostContextDev = hostContext;

    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
      var string = '' + newProps.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }
  }

  return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
}
function shouldSetTextContent(type, props) {
  return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
}
function shouldDeprioritizeSubtree(type, props) {
  return !!props.hidden;
}
function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
  {
    var hostContextDev = hostContext;
    validateDOMNesting(null, text, hostContextDev.ancestorInfo);
  }

  var textNode = createTextNode(text, rootContainerInstance);
  precacheFiberNode(internalInstanceHandle, textNode);
  return textNode;
}
var isPrimaryRenderer = true;
var warnsIfNotActing = true; // This initialization code may run even on server environments
// if a component just imports ReactDOM (e.g. for findDOMNode).
// Some environments might not have setTimeout or clearTimeout.

var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
var noTimeout = -1; // -------------------
//     Mutation
// -------------------

var supportsMutation = true;
function commitMount(domElement, type, newProps, internalInstanceHandle) {
  // Despite the naming that might imply otherwise, this method only
  // fires if there is an `Update` effect scheduled during mounting.
  // This happens if `finalizeInitialChildren` returns `true` (which it
  // does to implement the `autoFocus` attribute on the client). But
  // there are also other cases when this might happen (such as patching
  // up text content during hydration mismatch). So we'll check this again.
  if (shouldAutoFocusHostComponent(type, newProps)) {
    domElement.focus();
  }
}
function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
  // Update the props handle so that we know which props are the ones with
  // with current event handlers.
  updateFiberProps(domElement, newProps); // Apply the diff to the DOM node.

  updateProperties(domElement, updatePayload, type, oldProps, newProps);
}
function resetTextContent(domElement) {
  setTextContent(domElement, '');
}
function commitTextUpdate(textInstance, oldText, newText) {
  textInstance.nodeValue = newText;
}
function appendChild(parentInstance, child) {
  parentInstance.appendChild(child);
}
function appendChildToContainer(container, child) {
  var parentNode;

  if (container.nodeType === COMMENT_NODE) {
    parentNode = container.parentNode;
    parentNode.insertBefore(child, container);
  } else {
    parentNode = container;
    parentNode.appendChild(child);
  } // This container might be used for a portal.
  // If something inside a portal is clicked, that click should bubble
  // through the React tree. However, on Mobile Safari the click would
  // never bubble through the *DOM* tree unless an ancestor with onclick
  // event exists. So we wouldn't see it and dispatch it.
  // This is why we ensure that non React root containers have inline onclick
  // defined.
  // https://github.com/facebook/react/issues/11918


  var reactRootContainer = container._reactRootContainer;

  if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
    // TODO: This cast may not be sound for SVG, MathML or custom elements.
    trapClickOnNonInteractiveElement(parentNode);
  }
}
function insertBefore(parentInstance, child, beforeChild) {
  parentInstance.insertBefore(child, beforeChild);
}
function insertInContainerBefore(container, child, beforeChild) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, beforeChild);
  } else {
    container.insertBefore(child, beforeChild);
  }
} // This is a specific event for the React Flare
// event system, so event responders can act
// accordingly to a DOM node being unmounted that
// previously had active document focus.

function dispatchDetachedVisibleNodeEvent(child) {
  if (enableFlareAPI && selectionInformation && child === selectionInformation.focusedElem) {
    var targetFiber = getClosestInstanceFromNode(child); // Simlulate a blur event to the React Flare responder system.

    dispatchEventForResponderEventSystem('detachedvisiblenode', targetFiber, {
      target: child,
      timeStamp: Date.now()
    }, child, RESPONDER_EVENT_SYSTEM | IS_PASSIVE);
  }
}

function removeChild(parentInstance, child) {
  dispatchDetachedVisibleNodeEvent(child);
  parentInstance.removeChild(child);
}
function removeChildFromContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.removeChild(child);
  } else {
    dispatchDetachedVisibleNodeEvent(child);
    container.removeChild(child);
  }
}
function clearSuspenseBoundary(parentInstance, suspenseInstance) {
  var node = suspenseInstance; // Delete all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  do {
    var nextNode = node.nextSibling;
    parentInstance.removeChild(node);

    if (nextNode && nextNode.nodeType === COMMENT_NODE) {
      var data = nextNode.data;

      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          parentInstance.removeChild(nextNode); // Retry if any event replaying was blocked on this.

          retryIfBlockedOn(suspenseInstance);
          return;
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) {
        depth++;
      }
    }

    node = nextNode;
  } while (node); // TODO: Warn, we didn't find the end comment boundary.
  // Retry if any event replaying was blocked on this.


  retryIfBlockedOn(suspenseInstance);
}
function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
  if (container.nodeType === COMMENT_NODE) {
    clearSuspenseBoundary(container.parentNode, suspenseInstance);
  } else if (container.nodeType === ELEMENT_NODE) {
    clearSuspenseBoundary(container, suspenseInstance);
  } else {} // Document nodes should never contain suspense boundaries.
  // Retry if any event replaying was blocked on this.


  retryIfBlockedOn(container);
}
function hideInstance(instance) {
  // TODO: Does this work for all element types? What about MathML? Should we
  // pass host context to this method?
  instance = instance;
  var style = instance.style;

  if (typeof style.setProperty === 'function') {
    style.setProperty('display', 'none', 'important');
  } else {
    style.display = 'none';
  }
}
function hideTextInstance(textInstance) {
  textInstance.nodeValue = '';
}
function unhideInstance(instance, props) {
  instance = instance;
  var styleProp = props[STYLE];
  var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
  instance.style.display = dangerousStyleValue('display', display);
}
function unhideTextInstance(textInstance, text) {
  textInstance.nodeValue = text;
} // -------------------
//     Hydration
// -------------------

var supportsHydration = true;
function canHydrateInstance(instance, type, props) {
  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
    return null;
  } // This has now been refined to an element node.


  return instance;
}
function canHydrateTextInstance(instance, text) {
  if (text === '' || instance.nodeType !== TEXT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  } // This has now been refined to a text node.


  return instance;
}
function canHydrateSuspenseInstance(instance) {
  if (instance.nodeType !== COMMENT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  } // This has now been refined to a suspense node.


  return instance;
}
function isSuspenseInstancePending(instance) {
  return instance.data === SUSPENSE_PENDING_START_DATA;
}
function isSuspenseInstanceFallback(instance) {
  return instance.data === SUSPENSE_FALLBACK_START_DATA;
}
function registerSuspenseInstanceRetry(instance, callback) {
  instance._reactRetry = callback;
}

function getNextHydratable(node) {
  // Skip non-hydratable nodes.
  for (; node != null; node = node.nextSibling) {
    var nodeType = node.nodeType;

    if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
      break;
    }

    if (enableSuspenseServerRenderer) {
      if (nodeType === COMMENT_NODE) {
        var nodeData = node.data;

        if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) {
          break;
        }
      }
    }
  }

  return node;
}

function getNextHydratableSibling(instance) {
  return getNextHydratable(instance.nextSibling);
}
function getFirstHydratableChild(parentInstance) {
  return getNextHydratable(parentInstance.firstChild);
}
function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
  // get attached.

  updateFiberProps(instance, props);
  var parentNamespace;

  {
    var hostContextDev = hostContext;
    parentNamespace = hostContextDev.namespace;
  }

  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
}
function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, textInstance);
  return diffHydratedText(textInstance, text);
}
function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, suspenseInstance);
}
function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
  var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;

      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          return getNextHydratableSibling(node);
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
        depth++;
      }
    }

    node = node.nextSibling;
  } // TODO: Warn, we didn't find the end comment boundary.


  return null;
} // Returns the SuspenseInstance if this node is a direct child of a
// SuspenseInstance. I.e. if its previous sibling is a Comment with
// SUSPENSE_x_START_DATA. Otherwise, null.

function getParentSuspenseInstance(targetInstance) {
  var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;

      if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
        if (depth === 0) {
          return node;
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_END_DATA) {
        depth++;
      }
    }

    node = node.previousSibling;
  }

  return null;
}
function commitHydratedContainer(container) {
  // Retry if any event replaying was blocked on this.
  retryIfBlockedOn(container);
}
function commitHydratedSuspenseInstance(suspenseInstance) {
  // Retry if any event replaying was blocked on this.
  retryIfBlockedOn(suspenseInstance);
}
function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
  {
    warnForUnmatchedText(textInstance, text);
  }
}
function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForUnmatchedText(textInstance, text);
  }
}
function didNotHydrateContainerInstance(parentContainer, instance) {
  {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentContainer, instance);
    } else if (instance.nodeType === COMMENT_NODE) {// TODO: warnForDeletedHydratableSuspenseBoundary
    } else {
      warnForDeletedHydratableText(parentContainer, instance);
    }
  }
}
function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentInstance, instance);
    } else if (instance.nodeType === COMMENT_NODE) {// TODO: warnForDeletedHydratableSuspenseBoundary
    } else {
      warnForDeletedHydratableText(parentInstance, instance);
    }
  }
}
function didNotFindHydratableContainerInstance(parentContainer, type, props) {
  {
    warnForInsertedHydratedElement(parentContainer, type, props);
  }
}
function didNotFindHydratableContainerTextInstance(parentContainer, text) {
  {
    warnForInsertedHydratedText(parentContainer, text);
  }
}

function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedElement(parentInstance, type, props);
  }
}
function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedText(parentInstance, text);
  }
}
function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {// TODO: warnForInsertedHydratedSuspense(parentInstance);
  }
}
function mountResponderInstance(responder, responderInstance, responderProps, responderState, instance) {
  // Listen to events
  var doc = instance.ownerDocument;
  var _ref = responder,
      rootEventTypes = _ref.rootEventTypes,
      targetEventTypes = _ref.targetEventTypes;

  if (targetEventTypes !== null) {
    listenToEventResponderEventTypes(targetEventTypes, doc);
  }

  if (rootEventTypes !== null) {
    addRootEventTypesForResponderInstance(responderInstance, rootEventTypes);
    listenToEventResponderEventTypes(rootEventTypes, doc);
  }

  mountEventResponder(responder, responderInstance, responderProps, responderState);
  return responderInstance;
}
function unmountResponderInstance(responderInstance) {
  if (enableFlareAPI) {
    // TODO stop listening to targetEventTypes
    unmountEventResponder(responderInstance);
  }
}
function getFundamentalComponentInstance(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var currentFiber = fundamentalInstance.currentFiber,
        impl = fundamentalInstance.impl,
        props = fundamentalInstance.props,
        state = fundamentalInstance.state;
    var instance = impl.getInstance(null, props, state);
    precacheFiberNode(currentFiber, instance);
    return instance;
  } // Because of the flag above, this gets around the Flow error;


  return null;
}
function mountFundamentalComponent(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var impl = fundamentalInstance.impl,
        instance = fundamentalInstance.instance,
        props = fundamentalInstance.props,
        state = fundamentalInstance.state;
    var onMount = impl.onMount;

    if (onMount !== undefined) {
      onMount(null, instance, props, state);
    }
  }
}
function shouldUpdateFundamentalComponent(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var impl = fundamentalInstance.impl,
        prevProps = fundamentalInstance.prevProps,
        props = fundamentalInstance.props,
        state = fundamentalInstance.state;
    var shouldUpdate = impl.shouldUpdate;

    if (shouldUpdate !== undefined) {
      return shouldUpdate(null, prevProps, props, state);
    }
  }

  return true;
}
function updateFundamentalComponent(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var impl = fundamentalInstance.impl,
        instance = fundamentalInstance.instance,
        prevProps = fundamentalInstance.prevProps,
        props = fundamentalInstance.props,
        state = fundamentalInstance.state;
    var onUpdate = impl.onUpdate;

    if (onUpdate !== undefined) {
      onUpdate(null, instance, prevProps, props, state);
    }
  }
}
function unmountFundamentalComponent(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var impl = fundamentalInstance.impl,
        instance = fundamentalInstance.instance,
        props = fundamentalInstance.props,
        state = fundamentalInstance.state;
    var onUnmount = impl.onUnmount;

    if (onUnmount !== undefined) {
      onUnmount(null, instance, props, state);
    }
  }
}
function getInstanceFromNode$2(node) {
  return getClosestInstanceFromNode(node) || null;
}

var randomKey = Math.random().toString(36).slice(2);
var internalInstanceKey = '__reactInternalInstance$' + randomKey;
var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;
var internalContainerInstanceKey = '__reactContainere$' + randomKey;
function precacheFiberNode(hostInst, node) {
  node[internalInstanceKey] = hostInst;
}
function markContainerAsRoot(hostRoot, node) {
  node[internalContainerInstanceKey] = hostRoot;
}
function unmarkContainerAsRoot(node) {
  node[internalContainerInstanceKey] = null;
}
function isContainerMarkedAsRoot(node) {
  return !!node[internalContainerInstanceKey];
} // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
// If the target node is part of a hydrated or not yet rendered subtree, then
// this may also return a SuspenseComponent or HostRoot to indicate that.
// Conceptually the HostRoot fiber is a child of the Container node. So if you
// pass the Container node as the targetNode, you will not actually get the
// HostRoot back. To get to the HostRoot, you need to pass a child of it.
// The same thing applies to Suspense boundaries.

function getClosestInstanceFromNode(targetNode) {
  var targetInst = targetNode[internalInstanceKey];

  if (targetInst) {
    // Don't return HostRoot or SuspenseComponent here.
    return targetInst;
  } // If the direct event target isn't a React owned DOM node, we need to look
  // to see if one of its parents is a React owned DOM node.


  var parentNode = targetNode.parentNode;

  while (parentNode) {
    // We'll check if this is a container root that could include
    // React nodes in the future. We need to check this first because
    // if we're a child of a dehydrated container, we need to first
    // find that inner container before moving on to finding the parent
    // instance. Note that we don't check this field on  the targetNode
    // itself because the fibers are conceptually between the container
    // node and the first child. It isn't surrounding the container node.
    // If it's not a container, we check if it's an instance.
    targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];

    if (targetInst) {
      // Since this wasn't the direct target of the event, we might have
      // stepped past dehydrated DOM nodes to get here. However they could
      // also have been non-React nodes. We need to answer which one.
      // If we the instance doesn't have any children, then there can't be
      // a nested suspense boundary within it. So we can use this as a fast
      // bailout. Most of the time, when people add non-React children to
      // the tree, it is using a ref to a child-less DOM node.
      // Normally we'd only need to check one of the fibers because if it
      // has ever gone from having children to deleting them or vice versa
      // it would have deleted the dehydrated boundary nested inside already.
      // However, since the HostRoot starts out with an alternate it might
      // have one on the alternate so we need to check in case this was a
      // root.
      var alternate = targetInst.alternate;

      if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
        // Next we need to figure out if the node that skipped past is
        // nested within a dehydrated boundary and if so, which one.
        var suspenseInstance = getParentSuspenseInstance(targetNode);

        while (suspenseInstance !== null) {
          // We found a suspense instance. That means that we haven't
          // hydrated it yet. Even though we leave the comments in the
          // DOM after hydrating, and there are boundaries in the DOM
          // that could already be hydrated, we wouldn't have found them
          // through this pass since if the target is hydrated it would
          // have had an internalInstanceKey on it.
          // Let's get the fiber associated with the SuspenseComponent
          // as the deepest instance.
          var targetSuspenseInst = suspenseInstance[internalInstanceKey];

          if (targetSuspenseInst) {
            return targetSuspenseInst;
          } // If we don't find a Fiber on the comment, it might be because
          // we haven't gotten to hydrate it yet. There might still be a
          // parent boundary that hasn't above this one so we need to find
          // the outer most that is known.


          suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
          // host component also hasn't hydrated yet. We can return it
          // below since it will bail out on the isMounted check later.
        }
      }

      return targetInst;
    }

    targetNode = parentNode;
    parentNode = targetNode.parentNode;
  }

  return null;
}
/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */

function getInstanceFromNode$1(node) {
  var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];

  if (inst) {
    if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
      return inst;
    } else {
      return null;
    }
  }

  return null;
}
/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */

function getNodeFromInstance$1(inst) {
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber this, is just the state node right now. We assume it will be
    // a host component or host text.
    return inst.stateNode;
  } // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.


  {
    {
      throw Error("getNodeFromInstance: Invalid argument.");
    }
  }
}
function getFiberCurrentPropsFromNode$1(node) {
  return node[internalEventHandlersKey] || null;
}
function updateFiberProps(node, props) {
  node[internalEventHandlersKey] = props;
}

/**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */
var root = null;
var startText = null;
var fallbackText = null;
function initialize(nativeEventTarget) {
  root = nativeEventTarget;
  startText = getText();
  return true;
}
function reset() {
  root = null;
  startText = null;
  fallbackText = null;
}
function getData() {
  if (fallbackText) {
    return fallbackText;
  }

  var start;
  var startValue = startText;
  var startLength = startValue.length;
  var end;
  var endValue = getText();
  var endLength = endValue.length;

  for (start = 0; start < startLength; start++) {
    if (startValue[start] !== endValue[start]) {
      break;
    }
  }

  var minEnd = startLength - start;

  for (end = 1; end <= minEnd; end++) {
    if (startValue[startLength - end] !== endValue[endLength - end]) {
      break;
    }
  }

  var sliceTail = end > 1 ? 1 - end : undefined;
  fallbackText = endValue.slice(start, sliceTail);
  return fallbackText;
}
function getText() {
  if ('value' in root) {
    return root.value;
  }

  return root.textContent;
}

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */

var SyntheticCompositionEvent = SyntheticEvent.extend({
  data: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */

var SyntheticInputEvent = SyntheticEvent.extend({
  data: null
});

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space

var START_KEYCODE = 229;
var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
var documentMode = null;

if (canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
} // Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.


var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.

var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE); // Events and their corresponding property names.

var eventTypes$1 = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  }
}; // Track whether we've ever handled a keypress on the space key.

var hasSpaceKeypress = false;
/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */

function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}
/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */


function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case TOP_COMPOSITION_START:
      return eventTypes$1.compositionStart;

    case TOP_COMPOSITION_END:
      return eventTypes$1.compositionEnd;

    case TOP_COMPOSITION_UPDATE:
      return eventTypes$1.compositionUpdate;
  }
}
/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */


function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
}
/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */


function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_KEY_UP:
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;

    case TOP_KEY_DOWN:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;

    case TOP_KEY_PRESS:
    case TOP_MOUSE_DOWN:
    case TOP_BLUR:
      // Events are not possible without cancelling IME.
      return true;

    default:
      return false;
  }
}
/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */


function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;

  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }

  return null;
}
/**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */


function isUsingKoreanIME(nativeEvent) {
  return nativeEvent.locale === 'ko';
} // Track the current IME composition status, if any.


var isComposing = false;
/**
 * @return {?object} A SyntheticCompositionEvent.
 */

function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!isComposing) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes$1.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes$1.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!isComposing && eventType === eventTypes$1.compositionStart) {
      isComposing = initialize(nativeEventTarget);
    } else if (eventType === eventTypes$1.compositionEnd) {
      if (isComposing) {
        fallbackData = getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);

    if (customData !== null) {
      event.data = customData;
    }
  }

  accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * @param {TopLevelType} topLevelType Number from `TopLevelType`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */


function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_COMPOSITION_END:
      return getDataFromCustomEvent(nativeEvent);

    case TOP_KEY_PRESS:
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;

      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case TOP_TEXT_INPUT:
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to ignore it.

      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}
/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */


function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (isComposing) {
    if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = getData();
      reset();
      isComposing = false;
      return chars;
    }

    return null;
  }

  switch (topLevelType) {
    case TOP_PASTE:
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;

    case TOP_KEY_PRESS:
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (!isKeypressCommand(nativeEvent)) {
        // IE fires the `keypress` event when a user types an emoji via
        // Touch keyboard of Windows.  In such a case, the `char` property
        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
        // is 2, the property `which` does not represent an emoji correctly.
        // In such a case, we directly return the `char` property instead of
        // using `which`.
        if (nativeEvent.char && nativeEvent.char.length > 1) {
          return nativeEvent.char;
        } else if (nativeEvent.which) {
          return String.fromCharCode(nativeEvent.which);
        }
      }

      return null;

    case TOP_COMPOSITION_END:
      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;

    default:
      return null;
  }
}
/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */


function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  } // If no characters are being inserted, no BeforeInput event should
  // be fired.


  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes$1.beforeInput, targetInst, nativeEvent, nativeEventTarget);
  event.data = chars;
  accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */


var BeforeInputEventPlugin = {
  eventTypes: eventTypes$1,
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
    var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

    if (composition === null) {
      return beforeInput;
    }

    if (beforeInput === null) {
      return composition;
    }

    return [composition, beforeInput];
  }
};

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

var eventTypes$2 = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent.getPooled(eventTypes$2.change, inst, nativeEvent, target);
  event.type = 'change'; // Flag this event loop as needing state restore.

  enqueueStateRestore(target);
  accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */


var activeElement = null;
var activeElementInst = null;
/**
 * SECTION: handle `change` event
 */

function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.

  batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  runEventsInBatch(event);
}

function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance$1(targetInst);

  if (updateValueIfChanged(targetNode)) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CHANGE) {
    return targetInst;
  }
}
/**
 * SECTION: handle `input` event
 */


var isInputEventSupported = false;

if (canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}
/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */


function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}
/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */


function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  activeElement.detachEvent('onpropertychange', handlePropertyChange);
  activeElement = null;
  activeElementInst = null;
}
/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */


function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }

  if (getInstIfValueChanged(activeElementInst)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === TOP_FOCUS) {
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === TOP_BLUR) {
    stopWatchingForValueChange();
  }
} // For IE8 and IE9.


function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
  if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst);
  }
}
/**
 * SECTION: handle `click` event
 */


function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CLICK) {
    return getInstIfValueChanged(targetInst);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
    return getInstIfValueChanged(targetInst);
  }
}

function handleControlledInputBlur(node) {
  var state = node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  if (!disableInputAttributeSyncing) {
    // If controlled, assign the value attribute to the current value on blur
    setDefaultValue(node, 'number', node.value);
  }
}
/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */


var ChangeEventPlugin = {
  eventTypes: eventTypes$2,
  _isInputEventSupported: isInputEventSupported,
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;
    var getTargetInstFunc, handleEventFunc;

    if (shouldUseChangeEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForChangeEvent;
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);

      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    } // When blurring, set the value attribute for number inputs


    if (topLevelType === TOP_BLUR) {
      handleControlledInputBlur(targetNode);
    }
  }
};

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

var eventTypes$3 = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  pointerEnter: {
    registrationName: 'onPointerEnter',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  },
  pointerLeave: {
    registrationName: 'onPointerLeave',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  }
}; // We track the lastNativeEvent to ensure that when we encounter
// cases where we process the same nativeEvent multiple times,
// which can happen when have multiple ancestors, that we don't
// duplicate enter

var lastNativeEvent;
var EnterLeaveEventPlugin = {
  eventTypes: eventTypes$3,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
    var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
    var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;

    if (isOverEvent && (eventSystemFlags & IS_REPLAYED) === 0 && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      // If this is an over event with a target, then we've already dispatched
      // the event in the out event of the other target. If this is replayed,
      // then it's because we couldn't dispatch against this target previously
      // so we have to do it now instead.
      return null;
    }

    if (!isOutEvent && !isOverEvent) {
      // Must not be a mouse or pointer in or out - ignoring.
      return null;
    }

    var win;

    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;

      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;

    if (isOutEvent) {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? getClosestInstanceFromNode(related) : null;

      if (to !== null) {
        var nearestMounted = getNearestMountedFiber(to);

        if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
          to = null;
        }
      }
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var eventInterface, leaveEventType, enterEventType, eventTypePrefix;

    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
      eventInterface = SyntheticMouseEvent;
      leaveEventType = eventTypes$3.mouseLeave;
      enterEventType = eventTypes$3.mouseEnter;
      eventTypePrefix = 'mouse';
    } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
      eventInterface = SyntheticPointerEvent;
      leaveEventType = eventTypes$3.pointerLeave;
      enterEventType = eventTypes$3.pointerEnter;
      eventTypePrefix = 'pointer';
    }

    var fromNode = from == null ? win : getNodeFromInstance$1(from);
    var toNode = to == null ? win : getNodeFromInstance$1(to);
    var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
    leave.type = eventTypePrefix + 'leave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;
    var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
    enter.type = eventTypePrefix + 'enter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;
    accumulateEnterLeaveDispatches(leave, enter, from, to);

    if (nativeEvent === lastNativeEvent) {
      lastNativeEvent = null;
      return [leave];
    }

    lastNativeEvent = nativeEvent;
    return [leave, enter];
  }
};

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
  ;
}

var is$1 = typeof Object.is === 'function' ? Object.is : is;

var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */

function shallowEqual(objA, objB) {
  if (is$1(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  } // Test for A's keys different from B.


  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty$2.call(objB, keysA[i]) || !is$1(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;
var eventTypes$4 = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_DRAG_END, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
  }
};
var activeElement$1 = null;
var activeElementInst$1 = null;
var lastSelection = null;
var mouseDown = false;
/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */

function getSelection$1(node) {
  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else {
    var win = node.ownerDocument && node.ownerDocument.defaultView || window;
    var selection = win.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}
/**
 * Get document associated with the event target.
 *
 * @param {object} nativeEventTarget
 * @return {Document}
 */


function getEventTargetDocument(eventTarget) {
  return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
}
/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */


function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  var doc = getEventTargetDocument(nativeEventTarget);

  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
    return null;
  } // Only fire when selection has actually changed.


  var currentSelection = getSelection$1(activeElement$1);

  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;
    var syntheticEvent = SyntheticEvent.getPooled(eventTypes$4.select, activeElementInst$1, nativeEvent, nativeEventTarget);
    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement$1;
    accumulateTwoPhaseDispatches(syntheticEvent);
    return syntheticEvent;
  }

  return null;
}
/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */


var SelectEventPlugin = {
  eventTypes: eventTypes$4,
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
    var doc = getEventTargetDocument(nativeEventTarget); // Track whether all listeners exists for this plugin. If none exist, we do
    // not extract events. See #3639.

    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
      return null;
    }

    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case TOP_FOCUS:
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement$1 = targetNode;
          activeElementInst$1 = targetInst;
          lastSelection = null;
        }

        break;

      case TOP_BLUR:
        activeElement$1 = null;
        activeElementInst$1 = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.

      case TOP_MOUSE_DOWN:
        mouseDown = true;
        break;

      case TOP_CONTEXT_MENU:
      case TOP_MOUSE_UP:
      case TOP_DRAG_END:
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.

      case TOP_SELECTION_CHANGE:
        if (skipSelectionChangeEvent) {
          break;
        }

      // falls through

      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  }
};

/**
 * Inject modules for resolving DOM hierarchy and plugin ordering.
 */

injection.injectEventPluginOrder(DOMEventPluginOrder);
setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromNode$1, getNodeFromInstance$1);
/**
 * Some important event plugins included by default (without having to require
 * them).
 */

injection.injectEventPluginsByName({
  SimpleEventPlugin: SimpleEventPlugin,
  EnterLeaveEventPlugin: EnterLeaveEventPlugin,
  ChangeEventPlugin: ChangeEventPlugin,
  SelectEventPlugin: SelectEventPlugin,
  BeforeInputEventPlugin: BeforeInputEventPlugin
});

// Prefix measurements so that it's possible to filter them.
// Longer prefixes are hard to read in DevTools.
var reactEmoji = "\u269B";
var warningEmoji = "\u26D4";
var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function'; // Keep track of current fiber so that we know the path to unwind on pause.
// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?

var currentFiber = null; // If we're in the middle of user code, which fiber and method is it?
// Reusing `currentFiber` would be confusing for this because user code fiber
// can change during commit phase too, but we don't need to unwind it (since
// lifecycles in the commit phase don't resemble a tree).

var currentPhase = null;
var currentPhaseFiber = null; // Did lifecycle hook schedule an update? This is often a performance problem,
// so we will keep track of it, and include it in the report.
// Track commits caused by cascading updates.

var isCommitting = false;
var hasScheduledUpdateInCurrentCommit = false;
var hasScheduledUpdateInCurrentPhase = false;
var commitCountInCurrentWorkLoop = 0;
var effectCountInCurrentCommit = 0;
// to avoid stretch the commit phase with measurement overhead.

var labelsInCurrentCommit = new Set();

var formatMarkName = function (markName) {
  return reactEmoji + " " + markName;
};

var formatLabel = function (label, warning) {
  var prefix = warning ? warningEmoji + " " : reactEmoji + " ";
  var suffix = warning ? " Warning: " + warning : '';
  return "" + prefix + label + suffix;
};

var beginMark = function (markName) {
  performance.mark(formatMarkName(markName));
};

var clearMark = function (markName) {
  performance.clearMarks(formatMarkName(markName));
};

var endMark = function (label, markName, warning) {
  var formattedMarkName = formatMarkName(markName);
  var formattedLabel = formatLabel(label, warning);

  try {
    performance.measure(formattedLabel, formattedMarkName);
  } catch (err) {} // If previous mark was missing for some reason, this will throw.
  // This could only happen if React crashed in an unexpected place earlier.
  // Don't pile on with more errors.
  // Clear marks immediately to avoid growing buffer.


  performance.clearMarks(formattedMarkName);
  performance.clearMeasures(formattedLabel);
};

var getFiberMarkName = function (label, debugID) {
  return label + " (#" + debugID + ")";
};

var getFiberLabel = function (componentName, isMounted, phase) {
  if (phase === null) {
    // These are composite component total time measurements.
    return componentName + " [" + (isMounted ? 'update' : 'mount') + "]";
  } else {
    // Composite component methods.
    return componentName + "." + phase;
  }
};

var beginFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber.type) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);

  if (isCommitting && labelsInCurrentCommit.has(label)) {
    // During the commit phase, we don't show duplicate labels because
    // there is a fixed overhead for every measurement, and we don't
    // want to stretch the commit phase beyond necessary.
    return false;
  }

  labelsInCurrentCommit.add(label);
  var markName = getFiberMarkName(label, debugID);
  beginMark(markName);
  return true;
};

var clearFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber.type) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  clearMark(markName);
};

var endFiberMark = function (fiber, phase, warning) {
  var componentName = getComponentName(fiber.type) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  endMark(label, markName, warning);
};

var shouldIgnoreFiber = function (fiber) {
  // Host components should be skipped in the timeline.
  // We could check typeof fiber.type, but does this work with RN?
  switch (fiber.tag) {
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
    case Fragment:
    case ContextProvider:
    case ContextConsumer:
    case Mode:
      return true;

    default:
      return false;
  }
};

var clearPendingPhaseMeasurement = function () {
  if (currentPhase !== null && currentPhaseFiber !== null) {
    clearFiberMark(currentPhaseFiber, currentPhase);
  }

  currentPhaseFiber = null;
  currentPhase = null;
  hasScheduledUpdateInCurrentPhase = false;
};

var pauseTimers = function () {
  // Stops all currently active measurements so that they can be resumed
  // if we continue in a later deferred loop from the same unit of work.
  var fiber = currentFiber;

  while (fiber) {
    if (fiber._debugIsCurrentlyTiming) {
      endFiberMark(fiber, null, null);
    }

    fiber = fiber.return;
  }
};

var resumeTimersRecursively = function (fiber) {
  if (fiber.return !== null) {
    resumeTimersRecursively(fiber.return);
  }

  if (fiber._debugIsCurrentlyTiming) {
    beginFiberMark(fiber, null);
  }
};

var resumeTimers = function () {
  // Resumes all measurements that were active during the last deferred loop.
  if (currentFiber !== null) {
    resumeTimersRecursively(currentFiber);
  }
};

function recordEffect() {
  if (enableUserTimingAPI) {
    effectCountInCurrentCommit++;
  }
}
function recordScheduleUpdate() {
  if (enableUserTimingAPI) {
    if (isCommitting) {
      hasScheduledUpdateInCurrentCommit = true;
    }

    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
      hasScheduledUpdateInCurrentPhase = true;
    }
  }
}


function startWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    } // If we pause, this is the fiber to unwind from.


    currentFiber = fiber;

    if (!beginFiberMark(fiber, null)) {
      return;
    }

    fiber._debugIsCurrentlyTiming = true;
  }
}
function cancelWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    } // Remember we shouldn't complete measurement for this fiber.
    // Otherwise flamechart will be deep even for small updates.


    fiber._debugIsCurrentlyTiming = false;
    clearFiberMark(fiber, null);
  }
}
function stopWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    } // If we pause, its parent is the fiber to unwind from.


    currentFiber = fiber.return;

    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }

    fiber._debugIsCurrentlyTiming = false;
    endFiberMark(fiber, null, null);
  }
}
function stopFailedWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    } // If we pause, its parent is the fiber to unwind from.


    currentFiber = fiber.return;

    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }

    fiber._debugIsCurrentlyTiming = false;
    var warning = fiber.tag === SuspenseComponent ? 'Rendering was suspended' : 'An error was thrown inside this error boundary';
    endFiberMark(fiber, null, warning);
  }
}
function startPhaseTimer(fiber, phase) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    clearPendingPhaseMeasurement();

    if (!beginFiberMark(fiber, phase)) {
      return;
    }

    currentPhaseFiber = fiber;
    currentPhase = phase;
  }
}
function stopPhaseTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    if (currentPhase !== null && currentPhaseFiber !== null) {
      var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
      endFiberMark(currentPhaseFiber, currentPhase, warning);
    }

    currentPhase = null;
    currentPhaseFiber = null;
  }
}
function startWorkLoopTimer(nextUnitOfWork) {
  if (enableUserTimingAPI) {
    currentFiber = nextUnitOfWork;

    if (!supportsUserTiming) {
      return;
    }

    commitCountInCurrentWorkLoop = 0; // This is top level call.
    // Any other measurements are performed within.

    beginMark('(React Tree Reconciliation)'); // Resume any measurements that were in progress during the last loop.

    resumeTimers();
  }
}
function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var warning = null;

    if (interruptedBy !== null) {
      if (interruptedBy.tag === HostRoot) {
        warning = 'A top-level update interrupted the previous render';
      } else {
        var componentName = getComponentName(interruptedBy.type) || 'Unknown';
        warning = "An update to " + componentName + " interrupted the previous render";
      }
    } else if (commitCountInCurrentWorkLoop > 1) {
      warning = 'There were cascading updates';
    }

    commitCountInCurrentWorkLoop = 0;
    var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)'; // Pause any measurements until the next loop.

    pauseTimers();
    endMark(label, '(React Tree Reconciliation)', warning);
  }
}
function startCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    isCommitting = true;
    hasScheduledUpdateInCurrentCommit = false;
    labelsInCurrentCommit.clear();
    beginMark('(Committing Changes)');
  }
}
function stopCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var warning = null;

    if (hasScheduledUpdateInCurrentCommit) {
      warning = 'Lifecycle hook scheduled a cascading update';
    } else if (commitCountInCurrentWorkLoop > 0) {
      warning = 'Caused by a cascading update in earlier commit';
    }

    hasScheduledUpdateInCurrentCommit = false;
    commitCountInCurrentWorkLoop++;
    isCommitting = false;
    labelsInCurrentCommit.clear();
    endMark('(Committing Changes)', '(Committing Changes)', warning);
  }
}
function startCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    effectCountInCurrentCommit = 0;
    beginMark('(Committing Snapshot Effects)');
  }
}
function stopCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark("(Committing Snapshot Effects: " + count + " Total)", '(Committing Snapshot Effects)', null);
  }
}
function startCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    effectCountInCurrentCommit = 0;
    beginMark('(Committing Host Effects)');
  }
}
function stopCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark("(Committing Host Effects: " + count + " Total)", '(Committing Host Effects)', null);
  }
}
function startCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    effectCountInCurrentCommit = 0;
    beginMark('(Calling Lifecycle Methods)');
  }
}
function stopCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark("(Calling Lifecycle Methods: " + count + " Total)", '(Calling Lifecycle Methods)', null);
  }
}

var valueStack = [];
var fiberStack;

{
  fiberStack = [];
}

var index = -1;

function createCursor(defaultValue) {
  return {
    current: defaultValue
  };
}

function pop(cursor, fiber) {
  if (index < 0) {
    {
      warningWithoutStack$1(false, 'Unexpected pop.');
    }

    return;
  }

  {
    if (fiber !== fiberStack[index]) {
      warningWithoutStack$1(false, 'Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];
  valueStack[index] = null;

  {
    fiberStack[index] = null;
  }

  index--;
}

function push(cursor, value, fiber) {
  index++;
  valueStack[index] = cursor.current;

  {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
}

var warnedAboutMissingGetChildContext;

{
  warnedAboutMissingGetChildContext = {};
}

var emptyContextObject = {};

{
  Object.freeze(emptyContextObject);
} // A cursor to the current merged context object on the stack.


var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.

var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
// We use this to get access to the parent context after we have already
// pushed the next context provider, and now need to merge their contexts.

var previousContext = emptyContextObject;

function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
  if (disableLegacyContext) {
    return emptyContextObject;
  } else {
    if (didPushOwnContextIfProvider && isContextProvider(Component)) {
      // If the fiber is a context provider itself, when we read its context
      // we may have already pushed its own child context on the stack. A context
      // provider should not "see" its own child context. Therefore we read the
      // previous (parent) context instead for a context provider.
      return previousContext;
    }

    return contextStackCursor.current;
  }
}

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  if (disableLegacyContext) {
    return;
  } else {
    var instance = workInProgress.stateNode;
    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
  }
}

function getMaskedContext(workInProgress, unmaskedContext) {
  if (disableLegacyContext) {
    return emptyContextObject;
  } else {
    var type = workInProgress.type;
    var contextTypes = type.contextTypes;

    if (!contextTypes) {
      return emptyContextObject;
    } // Avoid recreating masked context unless unmasked context has changed.
    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
    // This may trigger infinite loops if componentWillReceiveProps calls setState.


    var instance = workInProgress.stateNode;

    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
      return instance.__reactInternalMemoizedMaskedChildContext;
    }

    var context = {};

    for (var key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    {
      var name = getComponentName(type) || 'Unknown';
      checkPropTypes(contextTypes, context, 'context', name, getCurrentFiberStackInDev);
    } // Cache unmasked context so we can avoid recreating masked context unless necessary.
    // Context is created before the class component is instantiated so check for instance.


    if (instance) {
      cacheContext(workInProgress, unmaskedContext, context);
    }

    return context;
  }
}

function hasContextChanged() {
  if (disableLegacyContext) {
    return false;
  } else {
    return didPerformWorkStackCursor.current;
  }
}

function isContextProvider(type) {
  if (disableLegacyContext) {
    return false;
  } else {
    var childContextTypes = type.childContextTypes;
    return childContextTypes !== null && childContextTypes !== undefined;
  }
}

function popContext(fiber) {
  if (disableLegacyContext) {
    return;
  } else {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function popTopLevelContextObject(fiber) {
  if (disableLegacyContext) {
    return;
  } else {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function pushTopLevelContextObject(fiber, context, didChange) {
  if (disableLegacyContext) {
    return;
  } else {
    if (!(contextStackCursor.current === emptyContextObject)) {
      {
        throw Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
      }
    }

    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }
}

function processChildContext(fiber, type, parentContext) {
  if (disableLegacyContext) {
    return parentContext;
  } else {
    var instance = fiber.stateNode;
    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
    // It has only been added in Fiber to match the (unintentional) behavior in Stack.

    if (typeof instance.getChildContext !== 'function') {
      {
        var componentName = getComponentName(type) || 'Unknown';

        if (!warnedAboutMissingGetChildContext[componentName]) {
          warnedAboutMissingGetChildContext[componentName] = true;
          warningWithoutStack$1(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
        }
      }

      return parentContext;
    }

    var childContext;

    {
      setCurrentPhase('getChildContext');
    }

    startPhaseTimer(fiber, 'getChildContext');
    childContext = instance.getChildContext();
    stopPhaseTimer();

    {
      setCurrentPhase(null);
    }

    for (var contextKey in childContext) {
      if (!(contextKey in childContextTypes)) {
        {
          throw Error((getComponentName(type) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes.");
        }
      }
    }

    {
      var name = getComponentName(type) || 'Unknown';
      checkPropTypes(childContextTypes, childContext, 'child context', name, // In practice, there is one case in which we won't get a stack. It's when
      // somebody calls unstable_renderSubtreeIntoContainer() and we process
      // context from the parent component instance. The stack will be missing
      // because it's outside of the reconciliation, and so the pointer has not
      // been set. This is rare and doesn't matter. We'll also remove that API.
      getCurrentFiberStackInDev);
    }

    return _assign({}, parentContext, {}, childContext);
  }
}

function pushContextProvider(workInProgress) {
  if (disableLegacyContext) {
    return false;
  } else {
    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
    // If the instance does not exist yet, we will push null at first,
    // and replace it on the stack later when invalidating the context.

    var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.

    previousContext = contextStackCursor.current;
    push(contextStackCursor, memoizedMergedChildContext, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }
}

function invalidateContextProvider(workInProgress, type, didChange) {
  if (disableLegacyContext) {
    return;
  } else {
    var instance = workInProgress.stateNode;

    if (!instance) {
      {
        throw Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
      }
    }

    if (didChange) {
      // Merge parent and own context.
      // Skip this if we're not updating due to sCU.
      // This avoids unnecessarily recomputing memoized values.
      var mergedContext = processChildContext(workInProgress, type, previousContext);
      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
      // It is important to unwind the context in the reverse order.

      pop(didPerformWorkStackCursor, workInProgress);
      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.

      push(contextStackCursor, mergedContext, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    } else {
      pop(didPerformWorkStackCursor, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    }
  }
}

function findCurrentUnmaskedContext(fiber) {
  if (disableLegacyContext) {
    return emptyContextObject;
  } else {
    // Currently this is only used with renderSubtreeIntoContainer; not sure if it
    // makes sense elsewhere
    if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) {
      {
        throw Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
      }
    }

    var node = fiber;

    do {
      switch (node.tag) {
        case HostRoot:
          return node.stateNode.context;

        case ClassComponent:
          {
            var Component = node.type;

            if (isContextProvider(Component)) {
              return node.stateNode.__reactInternalMemoizedMergedChildContext;
            }

            break;
          }
      }

      node = node.return;
    } while (node !== null);

    {
      {
        throw Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  }
}

var LegacyRoot = 0;
var BlockingRoot = 1;
var ConcurrentRoot = 2;

// Intentionally not named imports because Rollup would use dynamic dispatch for
// CommonJS interop named imports.
var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority;
var Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback;
var Scheduler_cancelCallback = Scheduler.unstable_cancelCallback;
var Scheduler_shouldYield = Scheduler.unstable_shouldYield;
var Scheduler_requestPaint = Scheduler.unstable_requestPaint;
var Scheduler_now = Scheduler.unstable_now;
var Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
var Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority;
var Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
var Scheduler_NormalPriority = Scheduler.unstable_NormalPriority;
var Scheduler_LowPriority = Scheduler.unstable_LowPriority;
var Scheduler_IdlePriority = Scheduler.unstable_IdlePriority;

if (enableSchedulerTracing) {
  // Provide explicit error message when production+profiling bundle of e.g.
  // react-dom is used with production (non-profiling) bundle of
  // scheduler/tracing
  if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
    {
      throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling");
    }
  }
}

var fakeCallbackNode = {}; // Except for NoPriority, these correspond to Scheduler priorities. We use
// ascending numbers so we can compare them like numbers. They start at 90 to
// avoid clashing with Scheduler's priorities.

var ImmediatePriority = 99;
var UserBlockingPriority$2 = 98;
var NormalPriority = 97;
var LowPriority = 96;
var IdlePriority = 95; // NoPriority is the absence of priority. Also React-only.

var NoPriority = 90;
var shouldYield = Scheduler_shouldYield;
var requestPaint = // Fall back gracefully if we're running an older version of Scheduler.
Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : function () {};
var syncQueue = null;
var immediateQueueCallbackNode = null;
var isFlushingSyncQueue = false;
var initialTimeMs = Scheduler_now(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.
// This will be the case for modern browsers that support `performance.now`. In
// older browsers, Scheduler falls back to `Date.now`, which returns a Unix
// timestamp. In that case, subtract the module initialization time to simulate
// the behavior of performance.now and keep our times small enough to fit
// within 32 bits.
// TODO: Consider lifting this into Scheduler.

var now = initialTimeMs < 10000 ? Scheduler_now : function () {
  return Scheduler_now() - initialTimeMs;
};
function getCurrentPriorityLevel() {
  switch (Scheduler_getCurrentPriorityLevel()) {
    case Scheduler_ImmediatePriority:
      return ImmediatePriority;

    case Scheduler_UserBlockingPriority:
      return UserBlockingPriority$2;

    case Scheduler_NormalPriority:
      return NormalPriority;

    case Scheduler_LowPriority:
      return LowPriority;

    case Scheduler_IdlePriority:
      return IdlePriority;

    default:
      {
        {
          throw Error("Unknown priority level.");
        }
      }

  }
}

function reactPriorityToSchedulerPriority(reactPriorityLevel) {
  switch (reactPriorityLevel) {
    case ImmediatePriority:
      return Scheduler_ImmediatePriority;

    case UserBlockingPriority$2:
      return Scheduler_UserBlockingPriority;

    case NormalPriority:
      return Scheduler_NormalPriority;

    case LowPriority:
      return Scheduler_LowPriority;

    case IdlePriority:
      return Scheduler_IdlePriority;

    default:
      {
        {
          throw Error("Unknown priority level.");
        }
      }

  }
}

function runWithPriority$2(reactPriorityLevel, fn) {
  var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
  return Scheduler_runWithPriority(priorityLevel, fn);
}
function scheduleCallback(reactPriorityLevel, callback, options) {
  var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
  return Scheduler_scheduleCallback(priorityLevel, callback, options);
}
function scheduleSyncCallback(callback) {
  // Push this callback into an internal queue. We'll flush these either in
  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
  if (syncQueue === null) {
    syncQueue = [callback]; // Flush the queue in the next tick, at the earliest.

    immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
  } else {
    // Push onto existing queue. Don't need to schedule a callback because
    // we already scheduled one when we created the queue.
    syncQueue.push(callback);
  }

  return fakeCallbackNode;
}
function cancelCallback(callbackNode) {
  if (callbackNode !== fakeCallbackNode) {
    Scheduler_cancelCallback(callbackNode);
  }
}
function flushSyncCallbackQueue() {
  if (immediateQueueCallbackNode !== null) {
    var node = immediateQueueCallbackNode;
    immediateQueueCallbackNode = null;
    Scheduler_cancelCallback(node);
  }

  flushSyncCallbackQueueImpl();
}

function flushSyncCallbackQueueImpl() {
  if (!isFlushingSyncQueue && syncQueue !== null) {
    // Prevent re-entrancy.
    isFlushingSyncQueue = true;
    var i = 0;

    try {
      var _isSync = true;
      var queue = syncQueue;
      runWithPriority$2(ImmediatePriority, function () {
        for (; i < queue.length; i++) {
          var callback = queue[i];

          do {
            callback = callback(_isSync);
          } while (callback !== null);
        }
      });
      syncQueue = null;
    } catch (error) {
      // If something throws, leave the remaining callbacks on the queue.
      if (syncQueue !== null) {
        syncQueue = syncQueue.slice(i + 1);
      } // Resume flushing in the next tick


      Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
      throw error;
    } finally {
      isFlushingSyncQueue = false;
    }
  }
}

var NoMode = 0;
var StrictMode = 1; // TODO: Remove BlockingMode and ConcurrentMode by reading from the root
// tag instead

var BlockingMode = 2;
var ConcurrentMode = 4;
var ProfileMode = 8;

// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111
var MAX_SIGNED_31_BIT_INT = 1073741823;

var NoWork = 0; // TODO: Think of a better name for Never. The key difference with Idle is that
// Never work can be committed in an inconsistent state without tearing the UI.
// The main example is offscreen content, like a hidden subtree. So one possible
// name is Offscreen. However, it also includes dehydrated Suspense boundaries,
// which are inconsistent in the sense that they haven't finished yet, but
// aren't visibly inconsistent because the server rendered HTML matches what the
// hydrated tree would look like.

var Never = 1; // Idle is slightly higher priority than Never. It must completely finish in
// order to be consistent.

var Idle = 2; // Continuous Hydration is a moving priority. It is slightly higher than Idle
// and is used to increase priority of hover targets. It is increasing with
// each usage so that last always wins.

var ContinuousHydration = 3;
var Sync = MAX_SIGNED_31_BIT_INT;
var Batched = Sync - 1;
var UNIT_SIZE = 10;
var MAGIC_NUMBER_OFFSET = Batched - 1; // 1 unit of expiration time represents 10ms.

function msToExpirationTime(ms) {
  // Always add an offset so that we don't clash with the magic number for NoWork.
  return MAGIC_NUMBER_OFFSET - (ms / UNIT_SIZE | 0);
}
function expirationTimeToMs(expirationTime) {
  return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;
}

function ceiling(num, precision) {
  return ((num / precision | 0) + 1) * precision;
}

function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
  return MAGIC_NUMBER_OFFSET - ceiling(MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
} // TODO: This corresponds to Scheduler's NormalPriority, not LowPriority. Update
// the names to reflect.


var LOW_PRIORITY_EXPIRATION = 5000;
var LOW_PRIORITY_BATCH_SIZE = 250;
function computeAsyncExpiration(currentTime) {
  return computeExpirationBucket(currentTime, LOW_PRIORITY_EXPIRATION, LOW_PRIORITY_BATCH_SIZE);
}
function computeSuspenseExpiration(currentTime, timeoutMs) {
  // TODO: Should we warn if timeoutMs is lower than the normal pri expiration time?
  return computeExpirationBucket(currentTime, timeoutMs, LOW_PRIORITY_BATCH_SIZE);
} // We intentionally set a higher expiration time for interactive updates in
// dev than in production.
//
// If the main thread is being blocked so long that you hit the expiration,
// it's a problem that could be solved with better scheduling.
//
// People will be more likely to notice this and fix it with the long
// expiration time in development.
//
// In production we opt for better UX at the risk of masking scheduling
// problems, by expiring fast.

var HIGH_PRIORITY_EXPIRATION = 500;
var HIGH_PRIORITY_BATCH_SIZE = 100;
function computeInteractiveExpiration(currentTime) {
  return computeExpirationBucket(currentTime, HIGH_PRIORITY_EXPIRATION, HIGH_PRIORITY_BATCH_SIZE);
}
function computeContinuousHydrationExpiration(currentTime) {
  // Each time we ask for a new one of these we increase the priority.
  // This ensures that the last one always wins since we can't deprioritize
  // once we've scheduled work already.
  return ContinuousHydration++;
}
function inferPriorityFromExpirationTime(currentTime, expirationTime) {
  if (expirationTime === Sync) {
    return ImmediatePriority;
  }

  if (expirationTime === Never || expirationTime === Idle) {
    return IdlePriority;
  }

  var msUntil = expirationTimeToMs(expirationTime) - expirationTimeToMs(currentTime);

  if (msUntil <= 0) {
    return ImmediatePriority;
  }

  if (msUntil <= HIGH_PRIORITY_EXPIRATION + HIGH_PRIORITY_BATCH_SIZE) {
    return UserBlockingPriority$2;
  }

  if (msUntil <= LOW_PRIORITY_EXPIRATION + LOW_PRIORITY_BATCH_SIZE) {
    return NormalPriority;
  } // TODO: Handle LowPriority
  // Assume anything lower has idle priority


  return IdlePriority;
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
var lowPriorityWarningWithoutStack = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });

    if (typeof console !== 'undefined') {
      console.warn(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarningWithoutStack = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(void 0, [format].concat(args));
    }
  };
}

var lowPriorityWarningWithoutStack$1 = lowPriorityWarningWithoutStack;

var ReactStrictModeWarnings = {
  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
  flushPendingUnsafeLifecycleWarnings: function () {},
  recordLegacyContextWarning: function (fiber, instance) {},
  flushLegacyContextWarning: function () {},
  discardPendingWarnings: function () {}
};

{
  var findStrictRoot = function (fiber) {
    var maybeStrictRoot = null;
    var node = fiber;

    while (node !== null) {
      if (node.mode & StrictMode) {
        maybeStrictRoot = node;
      }

      node = node.return;
    }

    return maybeStrictRoot;
  };

  var setToSortedString = function (set) {
    var array = [];
    set.forEach(function (value) {
      array.push(value);
    });
    return array.sort().join(', ');
  };

  var pendingComponentWillMountWarnings = [];
  var pendingUNSAFE_ComponentWillMountWarnings = [];
  var pendingComponentWillReceivePropsWarnings = [];
  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
  var pendingComponentWillUpdateWarnings = [];
  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.

  var didWarnAboutUnsafeLifecycles = new Set();

  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
    // Dedup strategy: Warn once per component.
    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
      return;
    }

    if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.
    instance.componentWillMount.__suppressDeprecationWarning !== true) {
      pendingComponentWillMountWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === 'function') {
      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
    }

    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
      pendingComponentWillReceivePropsWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
    }

    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
      pendingComponentWillUpdateWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {
      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
    // We do an initial pass to gather component names
    var componentWillMountUniqueNames = new Set();

    if (pendingComponentWillMountWarnings.length > 0) {
      pendingComponentWillMountWarnings.forEach(function (fiber) {
        componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillMountWarnings = [];
    }

    var UNSAFE_componentWillMountUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
      pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {
        UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillMountWarnings = [];
    }

    var componentWillReceivePropsUniqueNames = new Set();

    if (pendingComponentWillReceivePropsWarnings.length > 0) {
      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
        componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillReceivePropsWarnings = [];
    }

    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {
        UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    }

    var componentWillUpdateUniqueNames = new Set();

    if (pendingComponentWillUpdateWarnings.length > 0) {
      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
        componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillUpdateWarnings = [];
    }

    var UNSAFE_componentWillUpdateUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {
        UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillUpdateWarnings = [];
    } // Finally, we flush all the warnings
    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'


    if (UNSAFE_componentWillMountUniqueNames.size > 0) {
      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
      warningWithoutStack$1(false, 'Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '\nPlease update the following components: %s', sortedNames);
    }

    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);

      warningWithoutStack$1(false, 'Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, " + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\n' + '\nPlease update the following components: %s', _sortedNames);
    }

    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);

      warningWithoutStack$1(false, 'Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '\nPlease update the following components: %s', _sortedNames2);
    }

    if (componentWillMountUniqueNames.size > 0) {
      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);

      lowPriorityWarningWithoutStack$1(false, 'componentWillMount has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames3);
    }

    if (componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);

      lowPriorityWarningWithoutStack$1(false, 'componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, refactor your " + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames4);
    }

    if (componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);

      lowPriorityWarningWithoutStack$1(false, 'componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames5);
    }
  };

  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.

  var didWarnAboutLegacyContext = new Set();

  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);

    if (strictRoot === null) {
      warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
      return;
    } // Dedup strategy: Warn once per component.


    if (didWarnAboutLegacyContext.has(fiber.type)) {
      return;
    }

    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
      if (warningsForRoot === undefined) {
        warningsForRoot = [];
        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
      }

      warningsForRoot.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
      var uniqueNames = new Set();
      fiberArray.forEach(function (fiber) {
        uniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutLegacyContext.add(fiber.type);
      });
      var sortedNames = setToSortedString(uniqueNames);
      var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);
      warningWithoutStack$1(false, 'Legacy context API has been detected within a strict-mode tree.' + '\n\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here: https://fb.me/react-legacy-context' + '%s', sortedNames, strictRootComponentStack);
    });
  };

  ReactStrictModeWarnings.discardPendingWarnings = function () {
    pendingComponentWillMountWarnings = [];
    pendingUNSAFE_ComponentWillMountWarnings = [];
    pendingComponentWillReceivePropsWarnings = [];
    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    pendingComponentWillUpdateWarnings = [];
    pendingUNSAFE_ComponentWillUpdateWarnings = [];
    pendingLegacyContextWarning = new Map();
  };
}

var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.

var failedBoundaries = null;
var setRefreshHandler = function (handler) {
  {
    resolveFamily = handler;
  }
};
function resolveFunctionForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }

    var family = resolveFamily(type);

    if (family === undefined) {
      return type;
    } // Use the latest known implementation.


    return family.current;
  }
}
function resolveClassForHotReloading(type) {
  // No implementation differences.
  return resolveFunctionForHotReloading(type);
}
function resolveForwardRefForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }

    var family = resolveFamily(type);

    if (family === undefined) {
      // Check if we're dealing with a real forwardRef. Don't want to crash early.
      if (type !== null && type !== undefined && typeof type.render === 'function') {
        // ForwardRef is special because its resolved .type is an object,
        // but it's possible that we only have its inner render function in the map.
        // If that inner render function is different, we'll build a new forwardRef type.
        var currentRender = resolveFunctionForHotReloading(type.render);

        if (type.render !== currentRender) {
          var syntheticType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: currentRender
          };

          if (type.displayName !== undefined) {
            syntheticType.displayName = type.displayName;
          }

          return syntheticType;
        }
      }

      return type;
    } // Use the latest known implementation.


    return family.current;
  }
}
function isCompatibleFamilyForHotReloading(fiber, element) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return false;
    }

    var prevType = fiber.elementType;
    var nextType = element.type; // If we got here, we know types aren't === equal.

    var needsCompareFamilies = false;
    var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;

    switch (fiber.tag) {
      case ClassComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          }

          break;
        }

      case FunctionComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            // We don't know the inner type yet.
            // We're going to assume that the lazy inner type is stable,
            // and so it is sufficient to avoid reconciling it away.
            // We're not going to unwrap or actually use the new lazy type.
            needsCompareFamilies = true;
          }

          break;
        }

      case ForwardRef:
        {
          if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }

          break;
        }

      case MemoComponent:
      case SimpleMemoComponent:
        {
          if ($$typeofNextType === REACT_MEMO_TYPE) {
            // TODO: if it was but can no longer be simple,
            // we shouldn't set this.
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }

          break;
        }

      default:
        return false;
    } // Check if both types have a family and it's the same one.


    if (needsCompareFamilies) {
      // Note: memo() and forwardRef() we'll compare outer rather than inner type.
      // This means both of them need to be registered to preserve state.
      // If we unwrapped and compared the inner types for wrappers instead,
      // then we would risk falsely saying two separate memo(Foo)
      // calls are equivalent because they wrap the same Foo function.
      var prevFamily = resolveFamily(prevType);

      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {
        return true;
      }
    }

    return false;
  }
}
function markFailedErrorBoundaryForHotReloading(fiber) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }

    if (typeof WeakSet !== 'function') {
      return;
    }

    if (failedBoundaries === null) {
      failedBoundaries = new WeakSet();
    }

    failedBoundaries.add(fiber);
  }
}
var scheduleRefresh = function (root, update) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }

    var staleFamilies = update.staleFamilies,
        updatedFamilies = update.updatedFamilies;
    flushPassiveEffects();
    flushSync(function () {
      scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
    });
  }
};
var scheduleRoot = function (root, element) {
  {
    if (root.context !== emptyContextObject) {
      // Super edge case: root has a legacy _renderSubtree context
      // but we don't know the parentComponent so we can't pass it.
      // Just ignore. We'll delete this with _renderSubtree code path later.
      return;
    }

    flushPassiveEffects();
    syncUpdates(function () {
      updateContainer(element, root, null, null);
    });
  }
};

function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
  {
    var alternate = fiber.alternate,
        child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;
    var candidateType = null;

    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;

      case ForwardRef:
        candidateType = type.render;
        break;

      default:
        break;
    }

    if (resolveFamily === null) {
      throw new Error('Expected resolveFamily to be set during hot reload.');
    }

    var needsRender = false;
    var needsRemount = false;

    if (candidateType !== null) {
      var family = resolveFamily(candidateType);

      if (family !== undefined) {
        if (staleFamilies.has(family)) {
          needsRemount = true;
        } else if (updatedFamilies.has(family)) {
          if (tag === ClassComponent) {
            needsRemount = true;
          } else {
            needsRender = true;
          }
        }
      }
    }

    if (failedBoundaries !== null) {
      if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
        needsRemount = true;
      }
    }

    if (needsRemount) {
      fiber._debugNeedsRemount = true;
    }

    if (needsRemount || needsRender) {
      scheduleWork(fiber, Sync);
    }

    if (child !== null && !needsRemount) {
      scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
    }

    if (sibling !== null) {
      scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
  }
}

var findHostInstancesForRefresh = function (root, families) {
  {
    var hostInstances = new Set();
    var types = new Set(families.map(function (family) {
      return family.current;
    }));
    findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
    return hostInstances;
  }
};

function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
  {
    var child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;
    var candidateType = null;

    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;

      case ForwardRef:
        candidateType = type.render;
        break;

      default:
        break;
    }

    var didMatch = false;

    if (candidateType !== null) {
      if (types.has(candidateType)) {
        didMatch = true;
      }
    }

    if (didMatch) {
      // We have a match. This only drills down to the closest host components.
      // There's no need to search deeper because for the purpose of giving
      // visual feedback, "flashing" outermost parent rectangles is sufficient.
      findHostInstancesForFiberShallowly(fiber, hostInstances);
    } else {
      // If there's no match, maybe there will be one further down in the child tree.
      if (child !== null) {
        findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
      }
    }

    if (sibling !== null) {
      findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
  }
}

function findHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);

    if (foundHostInstances) {
      return;
    } // If we didn't find any host children, fallback to closest host parent.


    var node = fiber;

    while (true) {
      switch (node.tag) {
        case HostComponent:
          hostInstances.add(node.stateNode);
          return;

        case HostPortal:
          hostInstances.add(node.stateNode.containerInfo);
          return;

        case HostRoot:
          hostInstances.add(node.stateNode.containerInfo);
          return;
      }

      if (node.return === null) {
        throw new Error('Expected to reach root first.');
      }

      node = node.return;
    }
  }
}

function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var node = fiber;
    var foundHostInstances = false;

    while (true) {
      if (node.tag === HostComponent) {
        // We got a match.
        foundHostInstances = true;
        hostInstances.add(node.stateNode); // There may still be more, so keep searching.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === fiber) {
        return foundHostInstances;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === fiber) {
          return foundHostInstances;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  return false;
}

function resolveDefaultProps(Component, baseProps) {
  if (Component && Component.defaultProps) {
    // Resolve default props. Taken from ReactElement
    var props = _assign({}, baseProps);

    var defaultProps = Component.defaultProps;

    for (var propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }

    return props;
  }

  return baseProps;
}
function readLazyComponentType(lazyComponent) {
  initializeLazyComponentType(lazyComponent);

  if (lazyComponent._status !== Resolved) {
    throw lazyComponent._result;
  }

  return lazyComponent._result;
}

var valueCursor = createCursor(null);
var rendererSigil;

{
  // Use this to detect multiple renderers using the same context
  rendererSigil = {};
}

var currentlyRenderingFiber = null;
var lastContextDependency = null;
var lastContextWithAllBitsObserved = null;
var isDisallowedContextReadInDEV = false;
function resetContextDependencies() {
  // This is called right before React yields execution, to ensure `readContext`
  // cannot be called outside the render phase.
  currentlyRenderingFiber = null;
  lastContextDependency = null;
  lastContextWithAllBitsObserved = null;

  {
    isDisallowedContextReadInDEV = false;
  }
}
function enterDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = true;
  }
}
function exitDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = false;
  }
}
function pushProvider(providerFiber, nextValue) {
  var context = providerFiber.type._context;

  if (isPrimaryRenderer) {
    push(valueCursor, context._currentValue, providerFiber);
    context._currentValue = nextValue;

    {
      !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer = rendererSigil;
    }
  } else {
    push(valueCursor, context._currentValue2, providerFiber);
    context._currentValue2 = nextValue;

    {
      !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer2 = rendererSigil;
    }
  }
}
function popProvider(providerFiber) {
  var currentValue = valueCursor.current;
  pop(valueCursor, providerFiber);
  var context = providerFiber.type._context;

  if (isPrimaryRenderer) {
    context._currentValue = currentValue;
  } else {
    context._currentValue2 = currentValue;
  }
}
function calculateChangedBits(context, newValue, oldValue) {
  if (is$1(oldValue, newValue)) {
    // No change
    return 0;
  } else {
    var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;

    {
      !((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits) ? warning$1(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
    }

    return changedBits | 0;
  }
}
function scheduleWorkOnParentPath(parent, renderExpirationTime) {
  // Update the child expiration time of all the ancestors, including
  // the alternates.
  var node = parent;

  while (node !== null) {
    var alternate = node.alternate;

    if (node.childExpirationTime < renderExpirationTime) {
      node.childExpirationTime = renderExpirationTime;

      if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
        alternate.childExpirationTime = renderExpirationTime;
      }
    } else if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
      alternate.childExpirationTime = renderExpirationTime;
    } else {
      // Neither alternate was updated, which means the rest of the
      // ancestor path already has sufficient priority.
      break;
    }

    node = node.return;
  }
}
function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
  var fiber = workInProgress.child;

  if (fiber !== null) {
    // Set the return pointer of the child to the work-in-progress fiber.
    fiber.return = workInProgress;
  }

  while (fiber !== null) {
    var nextFiber = void 0; // Visit this fiber.

    var list = fiber.dependencies;

    if (list !== null) {
      nextFiber = fiber.child;
      var dependency = list.firstContext;

      while (dependency !== null) {
        // Check if the context matches.
        if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
          // Match! Schedule an update on this fiber.
          if (fiber.tag === ClassComponent) {
            // Schedule a force update on the work-in-progress.
            var update = createUpdate(renderExpirationTime, null);
            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
            // update to the current fiber, too, which means it will persist even if
            // this render is thrown away. Since it's a race condition, not sure it's
            // worth fixing.

            enqueueUpdate(fiber, update);
          }

          if (fiber.expirationTime < renderExpirationTime) {
            fiber.expirationTime = renderExpirationTime;
          }

          var alternate = fiber.alternate;

          if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
            alternate.expirationTime = renderExpirationTime;
          }

          scheduleWorkOnParentPath(fiber.return, renderExpirationTime); // Mark the expiration time on the list, too.

          if (list.expirationTime < renderExpirationTime) {
            list.expirationTime = renderExpirationTime;
          } // Since we already found a match, we can stop traversing the
          // dependency list.


          break;
        }

        dependency = dependency.next;
      }
    } else if (fiber.tag === ContextProvider) {
      // Don't scan deeper if this is a matching provider
      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
    } else if (enableSuspenseServerRenderer && fiber.tag === DehydratedFragment) {
      // If a dehydrated suspense bounudary is in this subtree, we don't know
      // if it will have any context consumers in it. The best we can do is
      // mark it as having updates.
      var parentSuspense = fiber.return;

      if (!(parentSuspense !== null)) {
        {
          throw Error("We just came from a parent so we must have had a parent. This is a bug in React.");
        }
      }

      if (parentSuspense.expirationTime < renderExpirationTime) {
        parentSuspense.expirationTime = renderExpirationTime;
      }

      var _alternate = parentSuspense.alternate;

      if (_alternate !== null && _alternate.expirationTime < renderExpirationTime) {
        _alternate.expirationTime = renderExpirationTime;
      } // This is intentionally passing this fiber as the parent
      // because we want to schedule this fiber as having work
      // on its children. We'll use the childExpirationTime on
      // this fiber to indicate that a context has changed.


      scheduleWorkOnParentPath(parentSuspense, renderExpirationTime);
      nextFiber = fiber.sibling;
    } else {
      // Traverse down.
      nextFiber = fiber.child;
    }

    if (nextFiber !== null) {
      // Set the return pointer of the child to the work-in-progress fiber.
      nextFiber.return = fiber;
    } else {
      // No child. Traverse to next sibling.
      nextFiber = fiber;

      while (nextFiber !== null) {
        if (nextFiber === workInProgress) {
          // We're back to the root of this subtree. Exit.
          nextFiber = null;
          break;
        }

        var sibling = nextFiber.sibling;

        if (sibling !== null) {
          // Set the return pointer of the sibling to the work-in-progress fiber.
          sibling.return = nextFiber.return;
          nextFiber = sibling;
          break;
        } // No more siblings. Traverse up.


        nextFiber = nextFiber.return;
      }
    }

    fiber = nextFiber;
  }
}
function prepareToReadContext(workInProgress, renderExpirationTime) {
  currentlyRenderingFiber = workInProgress;
  lastContextDependency = null;
  lastContextWithAllBitsObserved = null;
  var dependencies = workInProgress.dependencies;

  if (dependencies !== null) {
    var firstContext = dependencies.firstContext;

    if (firstContext !== null) {
      if (dependencies.expirationTime >= renderExpirationTime) {
        // Context list has a pending update. Mark that this fiber performed work.
        markWorkInProgressReceivedUpdate();
      } // Reset the work-in-progress list


      dependencies.firstContext = null;
    }
  }
}
function readContext(context, observedBits) {
  {
    // This warning would fire if you read context inside a Hook like useMemo.
    // Unlike the class check below, it's not enforced in production for perf.
    !!isDisallowedContextReadInDEV ? warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().') : void 0;
  }

  if (lastContextWithAllBitsObserved === context) {// Nothing to do. We already observe everything in this context.
  } else if (observedBits === false || observedBits === 0) {// Do not observe any updates.
  } else {
    var resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.

    if (typeof observedBits !== 'number' || observedBits === MAX_SIGNED_31_BIT_INT) {
      // Observe all updates.
      lastContextWithAllBitsObserved = context;
      resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
    } else {
      resolvedObservedBits = observedBits;
    }

    var contextItem = {
      context: context,
      observedBits: resolvedObservedBits,
      next: null
    };

    if (lastContextDependency === null) {
      if (!(currentlyRenderingFiber !== null)) {
        {
          throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        }
      } // This is the first dependency for this component. Create a new list.


      lastContextDependency = contextItem;
      currentlyRenderingFiber.dependencies = {
        expirationTime: NoWork,
        firstContext: contextItem,
        responders: null
      };
    } else {
      // Append a new context item.
      lastContextDependency = lastContextDependency.next = contextItem;
    }
  }

  return isPrimaryRenderer ? context._currentValue : context._currentValue2;
}

// UpdateQueue is a linked list of prioritized updates.
//
// Like fibers, update queues come in pairs: a current queue, which represents
// the visible state of the screen, and a work-in-progress queue, which can be
// mutated and processed asynchronously before it is committed — a form of
// double buffering. If a work-in-progress render is discarded before finishing,
// we create a new work-in-progress by cloning the current queue.
//
// Both queues share a persistent, singly-linked list structure. To schedule an
// update, we append it to the end of both queues. Each queue maintains a
// pointer to first update in the persistent list that hasn't been processed.
// The work-in-progress pointer always has a position equal to or greater than
// the current queue, since we always work on that one. The current queue's
// pointer is only updated during the commit phase, when we swap in the
// work-in-progress.
//
// For example:
//
//   Current pointer:           A - B - C - D - E - F
//   Work-in-progress pointer:              D - E - F
//                                          ^
//                                          The work-in-progress queue has
//                                          processed more updates than current.
//
// The reason we append to both queues is because otherwise we might drop
// updates without ever processing them. For example, if we only add updates to
// the work-in-progress queue, some updates could be lost whenever a work-in
// -progress render restarts by cloning from current. Similarly, if we only add
// updates to the current queue, the updates will be lost whenever an already
// in-progress queue commits and swaps with the current queue. However, by
// adding to both queues, we guarantee that the update will be part of the next
// work-in-progress. (And because the work-in-progress queue becomes the
// current queue once it commits, there's no danger of applying the same
// update twice.)
//
// Prioritization
// --------------
//
// Updates are not sorted by priority, but by insertion; new updates are always
// appended to the end of the list.
//
// The priority is still important, though. When processing the update queue
// during the render phase, only the updates with sufficient priority are
// included in the result. If we skip an update because it has insufficient
// priority, it remains in the queue to be processed later, during a lower
// priority render. Crucially, all updates subsequent to a skipped update also
// remain in the queue *regardless of their priority*. That means high priority
// updates are sometimes processed twice, at two separate priorities. We also
// keep track of a base state, that represents the state before the first
// update in the queue is applied.
//
// For example:
//
//   Given a base state of '', and the following queue of updates
//
//     A1 - B2 - C1 - D2
//
//   where the number indicates the priority, and the update is applied to the
//   previous state by appending a letter, React will process these updates as
//   two separate renders, one per distinct priority level:
//
//   First render, at priority 1:
//     Base state: ''
//     Updates: [A1, C1]
//     Result state: 'AC'
//
//   Second render, at priority 2:
//     Base state: 'A'            <-  The base state does not include C1,
//                                    because B2 was skipped.
//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
//     Result state: 'ABCD'
//
// Because we process updates in insertion order, and rebase high priority
// updates when preceding updates are skipped, the final result is deterministic
// regardless of priority. Intermediate state may vary according to system
// resources, but the final state is always the same.
var UpdateState = 0;
var ReplaceState = 1;
var ForceUpdate = 2;
var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
// It should only be read right after calling `processUpdateQueue`, via
// `checkHasForceUpdateAfterProcessing`.

var hasForceUpdate = false;
var didWarnUpdateInsideUpdate;
var currentlyProcessingQueue;


{
  didWarnUpdateInsideUpdate = false;
  currentlyProcessingQueue = null;

  
}

function createUpdateQueue(baseState) {
  var queue = {
    baseState: baseState,
    firstUpdate: null,
    lastUpdate: null,
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,
    firstEffect: null,
    lastEffect: null,
    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function cloneUpdateQueue(currentQueue) {
  var queue = {
    baseState: currentQueue.baseState,
    firstUpdate: currentQueue.firstUpdate,
    lastUpdate: currentQueue.lastUpdate,
    // TODO: With resuming, if we bail out and resuse the child tree, we should
    // keep these effects.
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,
    firstEffect: null,
    lastEffect: null,
    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function createUpdate(expirationTime, suspenseConfig) {
  var update = {
    expirationTime: expirationTime,
    suspenseConfig: suspenseConfig,
    tag: UpdateState,
    payload: null,
    callback: null,
    next: null,
    nextEffect: null
  };

  {
    update.priority = getCurrentPriorityLevel();
  }

  return update;
}

function appendUpdateToQueue(queue, update) {
  // Append the update to the end of the list.
  if (queue.lastUpdate === null) {
    // Queue is empty
    queue.firstUpdate = queue.lastUpdate = update;
  } else {
    queue.lastUpdate.next = update;
    queue.lastUpdate = update;
  }
}

function enqueueUpdate(fiber, update) {
  // Update queues are created lazily.
  var alternate = fiber.alternate;
  var queue1;
  var queue2;

  if (alternate === null) {
    // There's only one fiber.
    queue1 = fiber.updateQueue;
    queue2 = null;

    if (queue1 === null) {
      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
    }
  } else {
    // There are two owners.
    queue1 = fiber.updateQueue;
    queue2 = alternate.updateQueue;

    if (queue1 === null) {
      if (queue2 === null) {
        // Neither fiber has an update queue. Create new ones.
        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
        queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
      } else {
        // Only one fiber has an update queue. Clone to create a new one.
        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
      }
    } else {
      if (queue2 === null) {
        // Only one fiber has an update queue. Clone to create a new one.
        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
      } else {// Both owners have an update queue.
      }
    }
  }

  if (queue2 === null || queue1 === queue2) {
    // There's only a single queue.
    appendUpdateToQueue(queue1, update);
  } else {
    // There are two queues. We need to append the update to both queues,
    // while accounting for the persistent structure of the list — we don't
    // want the same update to be added multiple times.
    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
      // One of the queues is not empty. We must add the update to both queues.
      appendUpdateToQueue(queue1, update);
      appendUpdateToQueue(queue2, update);
    } else {
      // Both queues are non-empty. The last update is the same in both lists,
      // because of structural sharing. So, only append to one of the lists.
      appendUpdateToQueue(queue1, update); // But we still need to update the `lastUpdate` pointer of queue2.

      queue2.lastUpdate = update;
    }
  }

  {
    if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
      warningWithoutStack$1(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
      didWarnUpdateInsideUpdate = true;
    }
  }
}
function enqueueCapturedUpdate(workInProgress, update) {
  // Captured updates go into a separate list, and only on the work-in-
  // progress queue.
  var workInProgressQueue = workInProgress.updateQueue;

  if (workInProgressQueue === null) {
    workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
  } else {
    // TODO: I put this here rather than createWorkInProgress so that we don't
    // clone the queue unnecessarily. There's probably a better way to
    // structure this.
    workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
  } // Append the update to the end of the list.


  if (workInProgressQueue.lastCapturedUpdate === null) {
    // This is the first render phase update
    workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
  } else {
    workInProgressQueue.lastCapturedUpdate.next = update;
    workInProgressQueue.lastCapturedUpdate = update;
  }
}

function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
  var current = workInProgress.alternate;

  if (current !== null) {
    // If the work-in-progress queue is equal to the current queue,
    // we need to clone it first.
    if (queue === current.updateQueue) {
      queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
    }
  }

  return queue;
}

function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
  switch (update.tag) {
    case ReplaceState:
      {
        var payload = update.payload;

        if (typeof payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();

            if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              payload.call(instance, prevState, nextProps);
            }
          }

          var nextState = payload.call(instance, prevState, nextProps);

          {
            exitDisallowedContextReadInDEV();
          }

          return nextState;
        } // State object


        return payload;
      }

    case CaptureUpdate:
      {
        workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
      }
    // Intentional fallthrough

    case UpdateState:
      {
        var _payload = update.payload;
        var partialState;

        if (typeof _payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();

            if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              _payload.call(instance, prevState, nextProps);
            }
          }

          partialState = _payload.call(instance, prevState, nextProps);

          {
            exitDisallowedContextReadInDEV();
          }
        } else {
          // Partial state object
          partialState = _payload;
        }

        if (partialState === null || partialState === undefined) {
          // Null and undefined are treated as no-ops.
          return prevState;
        } // Merge the partial state and the previous state.


        return _assign({}, prevState, partialState);
      }

    case ForceUpdate:
      {
        hasForceUpdate = true;
        return prevState;
      }
  }

  return prevState;
}

function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
  hasForceUpdate = false;
  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

  {
    currentlyProcessingQueue = queue;
  } // These values may change as we process the queue.


  var newBaseState = queue.baseState;
  var newFirstUpdate = null;
  var newExpirationTime = NoWork; // Iterate through the list of updates to compute the result.

  var update = queue.firstUpdate;
  var resultState = newBaseState;

  while (update !== null) {
    var updateExpirationTime = update.expirationTime;

    if (updateExpirationTime < renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstUpdate === null) {
        // This is the first skipped update. It will be the first update in
        // the new list.
        newFirstUpdate = update; // Since this is the first update that was skipped, the current result
        // is the new base state.

        newBaseState = resultState;
      } // Since this update will remain in the list, update the remaining
      // expiration time.


      if (newExpirationTime < updateExpirationTime) {
        newExpirationTime = updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority.
      // Mark the event time of this update as relevant to this render pass.
      // TODO: This should ideally use the true event time of this update rather than
      // its priority which is a derived and not reverseable value.
      // TODO: We should skip this update if it was already committed but currently
      // we have no way of detecting the difference between a committed and suspended
      // update here.
      markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig); // Process it and compute a new result.

      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var callback = update.callback;

      if (callback !== null) {
        workInProgress.effectTag |= Callback; // Set this to null, in case it was mutated during an aborted render.

        update.nextEffect = null;

        if (queue.lastEffect === null) {
          queue.firstEffect = queue.lastEffect = update;
        } else {
          queue.lastEffect.nextEffect = update;
          queue.lastEffect = update;
        }
      }
    } // Continue to the next update.


    update = update.next;
  } // Separately, iterate though the list of captured updates.


  var newFirstCapturedUpdate = null;
  update = queue.firstCapturedUpdate;

  while (update !== null) {
    var _updateExpirationTime = update.expirationTime;

    if (_updateExpirationTime < renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstCapturedUpdate === null) {
        // This is the first skipped captured update. It will be the first
        // update in the new list.
        newFirstCapturedUpdate = update; // If this is the first update that was skipped, the current result is
        // the new base state.

        if (newFirstUpdate === null) {
          newBaseState = resultState;
        }
      } // Since this update will remain in the list, update the remaining
      // expiration time.


      if (newExpirationTime < _updateExpirationTime) {
        newExpirationTime = _updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority. Process it and compute
      // a new result.
      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var _callback = update.callback;

      if (_callback !== null) {
        workInProgress.effectTag |= Callback; // Set this to null, in case it was mutated during an aborted render.

        update.nextEffect = null;

        if (queue.lastCapturedEffect === null) {
          queue.firstCapturedEffect = queue.lastCapturedEffect = update;
        } else {
          queue.lastCapturedEffect.nextEffect = update;
          queue.lastCapturedEffect = update;
        }
      }
    }

    update = update.next;
  }

  if (newFirstUpdate === null) {
    queue.lastUpdate = null;
  }

  if (newFirstCapturedUpdate === null) {
    queue.lastCapturedUpdate = null;
  } else {
    workInProgress.effectTag |= Callback;
  }

  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
    // We processed every update, without skipping. That means the new base
    // state is the same as the result state.
    newBaseState = resultState;
  }

  queue.baseState = newBaseState;
  queue.firstUpdate = newFirstUpdate;
  queue.firstCapturedUpdate = newFirstCapturedUpdate; // Set the remaining expiration time to be whatever is remaining in the queue.
  // This should be fine because the only two other things that contribute to
  // expiration time are props and context. We're already in the middle of the
  // begin phase by the time we start processing the queue, so we've already
  // dealt with the props. Context in components that specify
  // shouldComponentUpdate is tricky; but we'll have to account for
  // that regardless.

  markUnprocessedUpdateTime(newExpirationTime);
  workInProgress.expirationTime = newExpirationTime;
  workInProgress.memoizedState = resultState;

  {
    currentlyProcessingQueue = null;
  }
}

function callCallback(callback, context) {
  if (!(typeof callback === 'function')) {
    {
      throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
    }
  }

  callback.call(context);
}

function resetHasForceUpdateBeforeProcessing() {
  hasForceUpdate = false;
}
function checkHasForceUpdateAfterProcessing() {
  return hasForceUpdate;
}
function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
  // If the finished render included captured updates, and there are still
  // lower priority updates left over, we need to keep the captured updates
  // in the queue so that they are rebased and not dropped once we process the
  // queue again at the lower priority.
  if (finishedQueue.firstCapturedUpdate !== null) {
    // Join the captured update list to the end of the normal list.
    if (finishedQueue.lastUpdate !== null) {
      finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
      finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
    } // Clear the list of captured updates.


    finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
  } // Commit the effects


  commitUpdateEffects(finishedQueue.firstEffect, instance);
  finishedQueue.firstEffect = finishedQueue.lastEffect = null;
  commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
  finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
}

function commitUpdateEffects(effect, instance) {
  while (effect !== null) {
    var callback = effect.callback;

    if (callback !== null) {
      effect.callback = null;
      callCallback(callback, instance);
    }

    effect = effect.nextEffect;
  }
}

var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
function requestCurrentSuspenseConfig() {
  return ReactCurrentBatchConfig.suspense;
}

var fakeInternalInstance = {};
var isArray$1 = Array.isArray; // React.Component uses a shared frozen object by default.
// We'll use it to determine whether we need to initialize legacy refs.

var emptyRefsObject = new React.Component().refs;
var didWarnAboutStateAssignmentForComponent;
var didWarnAboutUninitializedState;
var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
var didWarnAboutLegacyLifecyclesAndDerivedState;
var didWarnAboutUndefinedDerivedState;
var warnOnUndefinedDerivedState;
var warnOnInvalidCallback$1;
var didWarnAboutDirectlyAssigningPropsToState;
var didWarnAboutContextTypeAndContextTypes;
var didWarnAboutInvalidateContextType;

{
  didWarnAboutStateAssignmentForComponent = new Set();
  didWarnAboutUninitializedState = new Set();
  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
  didWarnAboutDirectlyAssigningPropsToState = new Set();
  didWarnAboutUndefinedDerivedState = new Set();
  didWarnAboutContextTypeAndContextTypes = new Set();
  didWarnAboutInvalidateContextType = new Set();
  var didWarnOnInvalidCallback = new Set();

  warnOnInvalidCallback$1 = function (callback, callerName) {
    if (callback === null || typeof callback === 'function') {
      return;
    }

    var key = callerName + "_" + callback;

    if (!didWarnOnInvalidCallback.has(key)) {
      didWarnOnInvalidCallback.add(key);
      warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  };

  warnOnUndefinedDerivedState = function (type, partialState) {
    if (partialState === undefined) {
      var componentName = getComponentName(type) || 'Component';

      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
        didWarnAboutUndefinedDerivedState.add(componentName);
        warningWithoutStack$1(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
      }
    }
  }; // This is so gross but it's at least non-critical and can be removed if
  // it causes problems. This is meant to give a nicer error message for
  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
  // ...)) which otherwise throws a "_processChildContext is not a function"
  // exception.


  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
    enumerable: false,
    value: function () {
      {
        {
          throw Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
      }
    }
  });
  Object.freeze(fakeInternalInstance);
}

function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
  var prevState = workInProgress.memoizedState;

  {
    if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Invoke the function an extra time to help detect side-effects.
      getDerivedStateFromProps(nextProps, prevState);
    }
  }

  var partialState = getDerivedStateFromProps(nextProps, prevState);

  {
    warnOnUndefinedDerivedState(ctor, partialState);
  } // Merge the partial state and the previous state.


  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
  // base state.

  var updateQueue = workInProgress.updateQueue;

  if (updateQueue !== null && workInProgress.expirationTime === NoWork) {
    updateQueue.baseState = memoizedState;
  }
}
var classComponentUpdater = {
  isMounted: isMounted,
  enqueueSetState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = requestCurrentTimeForUpdate();
    var suspenseConfig = requestCurrentSuspenseConfig();
    var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
    var update = createUpdate(expirationTime, suspenseConfig);
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'setState');
      }

      update.callback = callback;
    }

    enqueueUpdate(fiber, update);
    scheduleWork(fiber, expirationTime);
  },
  enqueueReplaceState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = requestCurrentTimeForUpdate();
    var suspenseConfig = requestCurrentSuspenseConfig();
    var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
    var update = createUpdate(expirationTime, suspenseConfig);
    update.tag = ReplaceState;
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'replaceState');
      }

      update.callback = callback;
    }

    enqueueUpdate(fiber, update);
    scheduleWork(fiber, expirationTime);
  },
  enqueueForceUpdate: function (inst, callback) {
    var fiber = get(inst);
    var currentTime = requestCurrentTimeForUpdate();
    var suspenseConfig = requestCurrentSuspenseConfig();
    var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
    var update = createUpdate(expirationTime, suspenseConfig);
    update.tag = ForceUpdate;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'forceUpdate');
      }

      update.callback = callback;
    }

    enqueueUpdate(fiber, update);
    scheduleWork(fiber, expirationTime);
  }
};

function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
  var instance = workInProgress.stateNode;

  if (typeof instance.shouldComponentUpdate === 'function') {
    startPhaseTimer(workInProgress, 'shouldComponentUpdate');
    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
    stopPhaseTimer();

    {
      !(shouldUpdate !== undefined) ? warningWithoutStack$1(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component') : void 0;
    }

    return shouldUpdate;
  }

  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
  }

  return true;
}

function checkClassInstance(workInProgress, ctor, newProps) {
  var instance = workInProgress.stateNode;

  {
    var name = getComponentName(ctor) || 'Component';
    var renderPresent = instance.render;

    if (!renderPresent) {
      if (ctor.prototype && typeof ctor.prototype.render === 'function') {
        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
      } else {
        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
      }
    }

    var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
    !noGetInitialStateOnES6 ? warningWithoutStack$1(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
    var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
    !noGetDefaultPropsOnES6 ? warningWithoutStack$1(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
    var noInstancePropTypes = !instance.propTypes;
    !noInstancePropTypes ? warningWithoutStack$1(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
    var noInstanceContextType = !instance.contextType;
    !noInstanceContextType ? warningWithoutStack$1(false, 'contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name) : void 0;

    if (disableLegacyContext) {
      if (ctor.childContextTypes) {
        warningWithoutStack$1(false, '%s uses the legacy childContextTypes API which is no longer supported. ' + 'Use React.createContext() instead.', name);
      }

      if (ctor.contextTypes) {
        warningWithoutStack$1(false, '%s uses the legacy contextTypes API which is no longer supported. ' + 'Use React.createContext() with static contextType instead.', name);
      }
    } else {
      var noInstanceContextTypes = !instance.contextTypes;
      !noInstanceContextTypes ? warningWithoutStack$1(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;

      if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
        didWarnAboutContextTypeAndContextTypes.add(ctor);
        warningWithoutStack$1(false, '%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
      }
    }

    var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
    !noComponentShouldUpdate ? warningWithoutStack$1(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;

    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
      warningWithoutStack$1(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');
    }

    var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
    !noComponentDidUnmount ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
    var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
    !noComponentDidReceiveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
    var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
    !noComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
    var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
    !noUnsafeComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
    var hasMutatedProps = instance.props !== newProps;
    !(instance.props === undefined || !hasMutatedProps) ? warningWithoutStack$1(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
    var noInstanceDefaultProps = !instance.defaultProps;
    !noInstanceDefaultProps ? warningWithoutStack$1(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;

    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
      warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));
    }

    var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
    !noInstanceGetDerivedStateFromProps ? warningWithoutStack$1(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromError !== 'function';
    !noInstanceGetDerivedStateFromCatch ? warningWithoutStack$1(false, '%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noStaticGetSnapshotBeforeUpdate = typeof ctor.getSnapshotBeforeUpdate !== 'function';
    !noStaticGetSnapshotBeforeUpdate ? warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
    var _state = instance.state;

    if (_state && (typeof _state !== 'object' || isArray$1(_state))) {
      warningWithoutStack$1(false, '%s.state: must be set to an object or null', name);
    }

    if (typeof instance.getChildContext === 'function') {
      !(typeof ctor.childContextTypes === 'object') ? warningWithoutStack$1(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
    }
  }
}

function adoptClassInstance(workInProgress, instance) {
  instance.updater = classComponentUpdater;
  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates

  set(instance, workInProgress);

  {
    instance._reactInternalInstance = fakeInternalInstance;
  }
}

function constructClassInstance(workInProgress, ctor, props, renderExpirationTime) {
  var isLegacyContextConsumer = false;
  var unmaskedContext = emptyContextObject;
  var context = emptyContextObject;
  var contextType = ctor.contextType;

  {
    if ('contextType' in ctor) {
      var isValid = // Allow null for conditional declaration
      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>

      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
        didWarnAboutInvalidateContextType.add(ctor);
        var addendum = '';

        if (contextType === undefined) {
          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';
        } else if (typeof contextType !== 'object') {
          addendum = ' However, it is set to a ' + typeof contextType + '.';
        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
          addendum = ' Did you accidentally pass the Context.Provider instead?';
        } else if (contextType._context !== undefined) {
          // <Context.Consumer>
          addendum = ' Did you accidentally pass the Context.Consumer instead?';
        } else {
          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
        }

        warningWithoutStack$1(false, '%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentName(ctor) || 'Component', addendum);
      }
    }
  }

  if (typeof contextType === 'object' && contextType !== null) {
    context = readContext(contextType);
  } else if (!disableLegacyContext) {
    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    var contextTypes = ctor.contextTypes;
    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
  } // Instantiate twice to help detect side-effects.


  {
    if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      new ctor(props, context); // eslint-disable-line no-new
    }
  }

  var instance = new ctor(props, context);
  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
  adoptClassInstance(workInProgress, instance);

  {
    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
      var componentName = getComponentName(ctor) || 'Component';

      if (!didWarnAboutUninitializedState.has(componentName)) {
        didWarnAboutUninitializedState.add(componentName);
        warningWithoutStack$1(false, '`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
      }
    } // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Warn about these lifecycles if they are present.
    // Don't warn about react-lifecycles-compat polyfilled methods though.


    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
      var foundWillMountName = null;
      var foundWillReceivePropsName = null;
      var foundWillUpdateName = null;

      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
        foundWillMountName = 'componentWillMount';
      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
        foundWillMountName = 'UNSAFE_componentWillMount';
      }

      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
        foundWillReceivePropsName = 'componentWillReceiveProps';
      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
      }

      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
        foundWillUpdateName = 'componentWillUpdate';
      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
      }

      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
        var _componentName = getComponentName(ctor) || 'Component';

        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';

        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
          warningWithoutStack$1(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
        }
      }
    }
  } // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // ReactFiberContext usually updates this cache but can't for newly-created instances.


  if (isLegacyContextConsumer) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return instance;
}

function callComponentWillMount(workInProgress, instance) {
  startPhaseTimer(workInProgress, 'componentWillMount');
  var oldState = instance.state;

  if (typeof instance.componentWillMount === 'function') {
    instance.componentWillMount();
  }

  if (typeof instance.UNSAFE_componentWillMount === 'function') {
    instance.UNSAFE_componentWillMount();
  }

  stopPhaseTimer();

  if (oldState !== instance.state) {
    {
      warningWithoutStack$1(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');
    }

    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
  var oldState = instance.state;
  startPhaseTimer(workInProgress, 'componentWillReceiveProps');

  if (typeof instance.componentWillReceiveProps === 'function') {
    instance.componentWillReceiveProps(newProps, nextContext);
  }

  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
  }

  stopPhaseTimer();

  if (instance.state !== oldState) {
    {
      var componentName = getComponentName(workInProgress.type) || 'Component';

      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
        didWarnAboutStateAssignmentForComponent.add(componentName);
        warningWithoutStack$1(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
      }
    }

    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
} // Invokes the mount life-cycles on a previously never rendered instance.


function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
  {
    checkClassInstance(workInProgress, ctor, newProps);
  }

  var instance = workInProgress.stateNode;
  instance.props = newProps;
  instance.state = workInProgress.memoizedState;
  instance.refs = emptyRefsObject;
  var contextType = ctor.contextType;

  if (typeof contextType === 'object' && contextType !== null) {
    instance.context = readContext(contextType);
  } else if (disableLegacyContext) {
    instance.context = emptyContextObject;
  } else {
    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    instance.context = getMaskedContext(workInProgress, unmaskedContext);
  }

  {
    if (instance.state === newProps) {
      var componentName = getComponentName(ctor) || 'Component';

      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
        didWarnAboutDirectlyAssigningPropsToState.add(componentName);
        warningWithoutStack$1(false, '%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
    }

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
    }
  }

  var updateQueue = workInProgress.updateQueue;

  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    instance.state = workInProgress.memoizedState;
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    instance.state = workInProgress.memoizedState;
  } // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.


  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
    // process them now.

    updateQueue = workInProgress.updateQueue;

    if (updateQueue !== null) {
      processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
      instance.state = workInProgress.memoizedState;
    }
  }

  if (typeof instance.componentDidMount === 'function') {
    workInProgress.effectTag |= Update;
  }
}

function resumeMountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
  var instance = workInProgress.stateNode;
  var oldProps = workInProgress.memoizedProps;
  instance.props = oldProps;
  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;

  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else if (!disableLegacyContext) {
    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.
  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.

  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();
  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;

  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }

  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }

    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillMount');

      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }

      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }

      stopPhaseTimer();
    }

    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    } // If shouldComponentUpdate returned false, we should still update the
    // memoized state to indicate that this work can be reused.


    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  } // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.


  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;
  return shouldUpdate;
} // Invokes the update life-cycles and returns false if it shouldn't rerender.


function updateClassInstance(current, workInProgress, ctor, newProps, renderExpirationTime) {
  var instance = workInProgress.stateNode;
  var oldProps = workInProgress.memoizedProps;
  instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps);
  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;

  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else if (!disableLegacyContext) {
    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.
  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.

  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();
  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;

  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }

  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    }

    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillUpdate');

      if (typeof instance.componentWillUpdate === 'function') {
        instance.componentWillUpdate(newProps, newState, nextContext);
      }

      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
      }

      stopPhaseTimer();
    }

    if (typeof instance.componentDidUpdate === 'function') {
      workInProgress.effectTag |= Update;
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      workInProgress.effectTag |= Snapshot;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    } // If shouldComponentUpdate returned false, we should still update the
    // memoized props/state to indicate that this work can be reused.


    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  } // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.


  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;
  return shouldUpdate;
}

var didWarnAboutMaps;
var didWarnAboutGenerators;
var didWarnAboutStringRefs;
var ownerHasKeyUseWarning;
var ownerHasFunctionTypeWarning;

var warnForMissingKey = function (child) {};

{
  didWarnAboutMaps = false;
  didWarnAboutGenerators = false;
  didWarnAboutStringRefs = {};
  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */

  ownerHasKeyUseWarning = {};
  ownerHasFunctionTypeWarning = {};

  warnForMissingKey = function (child) {
    if (child === null || typeof child !== 'object') {
      return;
    }

    if (!child._store || child._store.validated || child.key != null) {
      return;
    }

    if (!(typeof child._store === 'object')) {
      {
        throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
      }
    }

    child._store.validated = true;
    var currentComponentErrorInfo = 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + getCurrentFiberStackInDev();

    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }

    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
    warning$1(false, 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.');
  };
}

var isArray = Array.isArray;

function coerceRef(returnFiber, current$$1, element) {
  var mixedRef = element.ref;

  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
    {
      // TODO: Clean this up once we turn on the string ref warning for
      // everyone, because the strict mode case will no longer be relevant
      if (returnFiber.mode & StrictMode || warnAboutStringRefs) {
        var componentName = getComponentName(returnFiber.type) || 'Component';

        if (!didWarnAboutStringRefs[componentName]) {
          if (warnAboutStringRefs) {
            warningWithoutStack$1(false, 'Component "%s" contains the string ref "%s". Support for string refs ' + 'will be removed in a future major release. We recommend using ' + 'useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref%s', componentName, mixedRef, getStackByFiberInDevAndProd(returnFiber));
          } else {
            warningWithoutStack$1(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref%s', mixedRef, getStackByFiberInDevAndProd(returnFiber));
          }

          didWarnAboutStringRefs[componentName] = true;
        }
      }
    }

    if (element._owner) {
      var owner = element._owner;
      var inst;

      if (owner) {
        var ownerFiber = owner;

        if (!(ownerFiber.tag === ClassComponent)) {
          {
            throw Error("Function components cannot have refs. Did you mean to use React.forwardRef()?");
          }
        }

        inst = ownerFiber.stateNode;
      }

      if (!inst) {
        {
          throw Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
        }
      }

      var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref

      if (current$$1 !== null && current$$1.ref !== null && typeof current$$1.ref === 'function' && current$$1.ref._stringRef === stringRef) {
        return current$$1.ref;
      }

      var ref = function (value) {
        var refs = inst.refs;

        if (refs === emptyRefsObject) {
          // This is a lazy pooled frozen object, so we need to initialize.
          refs = inst.refs = {};
        }

        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };

      ref._stringRef = stringRef;
      return ref;
    } else {
      if (!(typeof mixedRef === 'string')) {
        {
          throw Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
        }
      }

      if (!element._owner) {
        {
          throw Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.");
        }
      }
    }
  }

  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  if (returnFiber.type !== 'textarea') {
    var addendum = '';

    {
      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getCurrentFiberStackInDev();
    }

    {
      {
        throw Error("Objects are not valid as a React child (found: " + (Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild) + ")." + addendum);
      }
    }
  }
}

function warnOnFunctionType() {
  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + getCurrentFiberStackInDev();

  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
    return;
  }

  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;
  warning$1(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
} // This wrapper function exists because I expect to clone the code in each path
// to be able to optimize each path individually by branching early. This needs
// a compiler or we can do it manually. Helpers that don't need this branching
// live outside of this function.


function ChildReconciler(shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return;
    } // Deletions are added in reversed order so we add it to the front.
    // At this point, the return fiber's effect list is empty except for
    // deletions, so we can just append the deletion to the list. The remaining
    // effects aren't added until the complete phase. Once we implement
    // resuming, this may not be true.


    var last = returnFiber.lastEffect;

    if (last !== null) {
      last.nextEffect = childToDelete;
      returnFiber.lastEffect = childToDelete;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }

    childToDelete.nextEffect = null;
    childToDelete.effectTag = Deletion;
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return null;
    } // TODO: For the shouldClone case, this could be micro-optimized a bit by
    // assuming that after the first child we've already added everything.


    var childToDelete = currentFirstChild;

    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }

    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    // Add the remaining children to a temporary map so that we can find them by
    // keys quickly. Implicit (null) keys get added to this set with their index
    // instead.
    var existingChildren = new Map();
    var existingChild = currentFirstChild;

    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }

      existingChild = existingChild.sibling;
    }

    return existingChildren;
  }

  function useFiber(fiber, pendingProps, expirationTime) {
    // We currently set sibling to null and index to 0 here because it is easy
    // to forget to do before returning it. E.g. for the single child case.
    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
    clone.index = 0;
    clone.sibling = null;
    return clone;
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;

    if (!shouldTrackSideEffects) {
      // Noop.
      return lastPlacedIndex;
    }

    var current$$1 = newFiber.alternate;

    if (current$$1 !== null) {
      var oldIndex = current$$1.index;

      if (oldIndex < lastPlacedIndex) {
        // This is a move.
        newFiber.effectTag = Placement;
        return lastPlacedIndex;
      } else {
        // This item can stay in place.
        return oldIndex;
      }
    } else {
      // This is an insertion.
      newFiber.effectTag = Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    // This is simpler for the single child case. We only need to do a
    // placement for inserting new children.
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.effectTag = Placement;
    }

    return newFiber;
  }

  function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
    if (current$$1 === null || current$$1.tag !== HostText) {
      // Insert
      var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current$$1, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current$$1, element, expirationTime) {
    if (current$$1 !== null && (current$$1.elementType === element.type || ( // Keep this check inline so it only runs on the false path:
    isCompatibleFamilyForHotReloading(current$$1, element)))) {
      // Move based on index
      var existing = useFiber(current$$1, element.props, expirationTime);
      existing.ref = coerceRef(returnFiber, current$$1, element);
      existing.return = returnFiber;

      {
        existing._debugSource = element._source;
        existing._debugOwner = element._owner;
      }

      return existing;
    } else {
      // Insert
      var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
      created.ref = coerceRef(returnFiber, current$$1, element);
      created.return = returnFiber;
      return created;
    }
  }

  function updatePortal(returnFiber, current$$1, portal, expirationTime) {
    if (current$$1 === null || current$$1.tag !== HostPortal || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) {
      // Insert
      var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current$$1, portal.children || [], expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
    if (current$$1 === null || current$$1.tag !== Fragment) {
      // Insert
      var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current$$1, fragment, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);

            _created.ref = coerceRef(returnFiber, null, newChild);
            _created.return = returnFiber;
            return _created;
          }

        case REACT_PORTAL_TYPE:
          {
            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);

            _created2.return = returnFiber;
            return _created2;
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);

        _created3.return = returnFiber;
        return _created3;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
    // Update the fiber if the keys match, otherwise return null.
    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      if (key !== null) {
        return null;
      }

      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              if (newChild.type === REACT_FRAGMENT_TYPE) {
                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
              }

              return updateElement(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }

        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }

        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys, so we neither have to check the old nor
      // new node for the key. If both are text nodes, they match.
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

            if (newChild.type === REACT_FRAGMENT_TYPE) {
              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
            }

            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
          }

        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

            return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber3 = existingChildren.get(newIdx) || null;

        return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }
  /**
   * Warns if there is a duplicate or missing key
   */


  function warnOnInvalidKey(child, knownKeys) {
    {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }

      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_PORTAL_TYPE:
          warnForMissingKey(child);
          var key = child.key;

          if (typeof key !== 'string') {
            break;
          }

          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }

          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }

          warning$1(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);
          break;

        default:
          break;
      }
    }

    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
    // This algorithm can't optimize by searching from both ends since we
    // don't have backpointers on fibers. I'm trying to see how far we can get
    // with that model. If it ends up not being worth the tradeoffs, we can
    // add it later.
    // Even with a two ended optimization, we'd want to optimize for the case
    // where there are few changes and brute force the comparison instead of
    // going for the Map. It'd like to explore hitting that path first in
    // forward-only mode and only go for the Map once we notice that we need
    // lots of look ahead. This doesn't handle reversal as well as two ended
    // search but that's unusual. Besides, for the two ended optimization to
    // work on Iterables, we'd need to copy the whole set.
    // In this first iteration, we'll just live with hitting the bad case
    // (adding everything to a Map) in for every insert/move.
    // If you change this code, also update reconcileChildrenIterator() which
    // uses the same algorithm.
    {
      // First, validate keys.
      var knownKeys = null;

      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnInvalidKey(child, knownKeys);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;
    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }

      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }

        break;
      }

      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }

      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }

      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);

        if (_newFiber === null) {
          continue;
        }

        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }

        previousNewFiber = _newFiber;
      }

      return resultingFirstChild;
    } // Add all children to a key map for quick lookups.


    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);

      if (_newFiber2 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }

        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }

        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
    // This is the same implementation as reconcileChildrenArray(),
    // but using the iterator instead.
    var iteratorFn = getIteratorFn(newChildrenIterable);

    if (!(typeof iteratorFn === 'function')) {
      {
        throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
      }
    }

    {
      // We don't support rendering Generators because it's a mutation.
      // See https://github.com/facebook/react/issues/12995
      if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
      newChildrenIterable[Symbol.toStringTag] === 'Generator') {
        !didWarnAboutGenerators ? warning$1(false, 'Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.') : void 0;
        didWarnAboutGenerators = true;
      } // Warn about using Maps as children


      if (newChildrenIterable.entries === iteratorFn) {
        !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
        didWarnAboutMaps = true;
      } // First, validate keys.
      // We'll get a different iterator later for the main pass.


      var _newChildren = iteratorFn.call(newChildrenIterable);

      if (_newChildren) {
        var knownKeys = null;

        var _step = _newChildren.next();

        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnInvalidKey(child, knownKeys);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);

    if (!(newChildren != null)) {
      {
        throw Error("An iterable object provided no iterator.");
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;
    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    var step = newChildren.next();

    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }

      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }

        break;
      }

      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }

      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }

      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);

        if (_newFiber3 === null) {
          continue;
        }

        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }

        previousNewFiber = _newFiber3;
      }

      return resultingFirstChild;
    } // Add all children to a key map for quick lookups.


    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);

      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }

        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }

        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
    // There's no need to check for keys on text nodes since we don't have a
    // way to define them.
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      // We already have an existing node so let's just update it and delete
      // the rest.
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    } // The existing first child is not a text node so we need to create one
    // and delete the existing ones.


    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
    var key = element.key;
    var child = currentFirstChild;

    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.elementType === element.type || ( // Keep this check inline so it only runs on the false path:
        isCompatibleFamilyForHotReloading(child, element))) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
          existing.ref = coerceRef(returnFiber, child, element);
          existing.return = returnFiber;

          {
            existing._debugSource = element._source;
            existing._debugOwner = element._owner;
          }

          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }

      child = child.sibling;
    }

    if (element.type === REACT_FRAGMENT_TYPE) {
      var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
      created.return = returnFiber;
      return created;
    } else {
      var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);

      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
      _created4.return = returnFiber;
      return _created4;
    }
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
    var key = portal.key;
    var child = currentFirstChild;

    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, portal.children || [], expirationTime);
          existing.return = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }

      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  } // This API will tag the children with the side-effect of the reconciliation
  // itself. They will be added to the side-effect list as we pass through the
  // children and the parent.


  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
    // This function is not recursive.
    // If the top level item is an array, we treat it as a set of children,
    // not as a fragment. Nested arrays on the other hand will be treated as
    // fragment nodes. Recursion happens at the normal flow.
    // Handle top level unkeyed fragments as if they were arrays.
    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
    // We treat the ambiguous cases above the same.
    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;

    if (isUnkeyedTopLevelFragment) {
      newChild = newChild.props.children;
    } // Handle object types


    var isObject = typeof newChild === 'object' && newChild !== null;

    if (isObject) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));

        case REACT_PORTAL_TYPE:
          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
      }
    }

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
    }

    if (isArray(newChild)) {
      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (getIteratorFn(newChild)) {
      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (isObject) {
      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
      // If the new child is undefined, and the return fiber is a composite
      // component, throw an error. If Fiber return types are disabled,
      // we already threw above.
      switch (returnFiber.tag) {
        case ClassComponent:
          {
            {
              var instance = returnFiber.stateNode;

              if (instance.render._isMockFunction) {
                // We allow auto-mocks to proceed as if they're returning null.
                break;
              }
            }
          }
        // Intentionally fall through to the next case, which handles both
        // functions and classes
        // eslint-disable-next-lined no-fallthrough

        case FunctionComponent:
          {
            var Component = returnFiber.type;

            {
              {
                throw Error((Component.displayName || Component.name || 'Component') + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.");
              }
            }
          }
      }
    } // Remaining cases are all treated as empty.


    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

var reconcileChildFibers = ChildReconciler(true);
var mountChildFibers = ChildReconciler(false);
function cloneChildFibers(current$$1, workInProgress) {
  if (!(current$$1 === null || workInProgress.child === current$$1.child)) {
    {
      throw Error("Resuming work not yet implemented.");
    }
  }

  if (workInProgress.child === null) {
    return;
  }

  var currentChild = workInProgress.child;
  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
  workInProgress.child = newChild;
  newChild.return = workInProgress;

  while (currentChild.sibling !== null) {
    currentChild = currentChild.sibling;
    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
    newChild.return = workInProgress;
  }

  newChild.sibling = null;
} // Reset a workInProgress child set to prepare it for a second pass.

function resetChildFibers(workInProgress, renderExpirationTime) {
  var child = workInProgress.child;

  while (child !== null) {
    resetWorkInProgress(child, renderExpirationTime);
    child = child.sibling;
  }
}

var NO_CONTEXT = {};
var contextStackCursor$1 = createCursor(NO_CONTEXT);
var contextFiberStackCursor = createCursor(NO_CONTEXT);
var rootInstanceStackCursor = createCursor(NO_CONTEXT);

function requiredContext(c) {
  if (!(c !== NO_CONTEXT)) {
    {
      throw Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
    }
  }

  return c;
}

function getRootHostContainer() {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  return rootInstance;
}

function pushHostContainer(fiber, nextRootInstance) {
  // Push current root instance onto the stack;
  // This allows us to reset root when portals are popped.
  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.

  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
  // However, we can't just call getRootHostContext() and push it because
  // we'd have a different number of entries on the stack depending on
  // whether getRootHostContext() throws somewhere in renderer code or not.
  // So we push an empty value first. This lets us safely unwind on errors.

  push(contextStackCursor$1, NO_CONTEXT, fiber);
  var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.

  pop(contextStackCursor$1, fiber);
  push(contextStackCursor$1, nextRootContext, fiber);
}

function popHostContainer(fiber) {
  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
  pop(rootInstanceStackCursor, fiber);
}

function getHostContext() {
  var context = requiredContext(contextStackCursor$1.current);
  return context;
}

function pushHostContext(fiber) {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  var context = requiredContext(contextStackCursor$1.current);
  var nextContext = getChildHostContext(context, fiber.type, rootInstance); // Don't push this Fiber's context unless it's unique.

  if (context === nextContext) {
    return;
  } // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.


  push(contextFiberStackCursor, fiber, fiber);
  push(contextStackCursor$1, nextContext, fiber);
}

function popHostContext(fiber) {
  // Do not pop unless this Fiber provided the current context.
  // pushHostContext() only pushes Fibers that provide unique contexts.
  if (contextFiberStackCursor.current !== fiber) {
    return;
  }

  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
}

var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
// inherited deeply down the subtree. The upper bits only affect
// this immediate suspense boundary and gets reset each new
// boundary or suspense list.

var SubtreeSuspenseContextMask = 1; // Subtree Flags:
// InvisibleParentSuspenseContext indicates that one of our parent Suspense
// boundaries is not currently showing visible main content.
// Either because it is already showing a fallback or is not mounted at all.
// We can use this to determine if it is desirable to trigger a fallback at
// the parent. If not, then we might need to trigger undesirable boundaries
// and/or suspend the commit to avoid hiding the parent content.

var InvisibleParentSuspenseContext = 1; // Shallow Flags:
// ForceSuspenseFallback can be used by SuspenseList to force newly added
// items into their fallback state during one of the render passes.

var ForceSuspenseFallback = 2;
var suspenseStackCursor = createCursor(DefaultSuspenseContext);
function hasSuspenseContext(parentContext, flag) {
  return (parentContext & flag) !== 0;
}
function setDefaultShallowSuspenseContext(parentContext) {
  return parentContext & SubtreeSuspenseContextMask;
}
function setShallowSuspenseContext(parentContext, shallowContext) {
  return parentContext & SubtreeSuspenseContextMask | shallowContext;
}
function addSubtreeSuspenseContext(parentContext, subtreeContext) {
  return parentContext | subtreeContext;
}
function pushSuspenseContext(fiber, newContext) {
  push(suspenseStackCursor, newContext, fiber);
}
function popSuspenseContext(fiber) {
  pop(suspenseStackCursor, fiber);
}

function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
  // If it was the primary children that just suspended, capture and render the
  // fallback. Otherwise, don't capture and bubble to the next boundary.
  var nextState = workInProgress.memoizedState;

  if (nextState !== null) {
    if (nextState.dehydrated !== null) {
      // A dehydrated boundary always captures.
      return true;
    }

    return false;
  }

  var props = workInProgress.memoizedProps; // In order to capture, the Suspense component must have a fallback prop.

  if (props.fallback === undefined) {
    return false;
  } // Regular boundaries always capture.


  if (props.unstable_avoidThisFallback !== true) {
    return true;
  } // If it's a boundary we should avoid, then we prefer to bubble up to the
  // parent boundary if it is currently invisible.


  if (hasInvisibleParent) {
    return false;
  } // If the parent is not able to handle it, we must handle it.


  return true;
}
function findFirstSuspended(row) {
  var node = row;

  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;

      if (state !== null) {
        var dehydrated = state.dehydrated;

        if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
          return node;
        }
      }
    } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
    // keep track of whether it suspended or not.
    node.memoizedProps.revealOrder !== undefined) {
      var didSuspend = (node.effectTag & DidCapture) !== NoEffect;

      if (didSuspend) {
        return node;
      }
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === row) {
      return null;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === row) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }

  return null;
}

var emptyObject = {};
var isArray$2 = Array.isArray;
function createResponderInstance(responder, responderProps, responderState, fiber) {
  return {
    fiber: fiber,
    props: responderProps,
    responder: responder,
    rootEventTypes: null,
    state: responderState
  };
}

function mountEventResponder$1(responder, responderProps, fiber, respondersMap, rootContainerInstance) {
  var responderState = emptyObject;
  var getInitialState = responder.getInitialState;

  if (getInitialState !== null) {
    responderState = getInitialState(responderProps);
  }

  var responderInstance = createResponderInstance(responder, responderProps, responderState, fiber);

  if (!rootContainerInstance) {
    var node = fiber;

    while (node !== null) {
      var tag = node.tag;

      if (tag === HostComponent) {
        rootContainerInstance = node.stateNode;
        break;
      } else if (tag === HostRoot) {
        rootContainerInstance = node.stateNode.containerInfo;
        break;
      }

      node = node.return;
    }
  }

  mountResponderInstance(responder, responderInstance, responderProps, responderState, rootContainerInstance);
  respondersMap.set(responder, responderInstance);
}

function updateEventListener(listener, fiber, visistedResponders, respondersMap, rootContainerInstance) {
  var responder;
  var props;

  if (listener) {
    responder = listener.responder;
    props = listener.props;
  }

  if (!(responder && responder.$$typeof === REACT_RESPONDER_TYPE)) {
    {
      throw Error("An invalid value was used as an event listener. Expect one or many event listeners created via React.unstable_useResponder().");
    }
  }

  var listenerProps = props;

  if (visistedResponders.has(responder)) {
    // show warning
    {
      warning$1(false, 'Duplicate event responder "%s" found in event listeners. ' + 'Event listeners passed to elements cannot use the same event responder more than once.', responder.displayName);
    }

    return;
  }

  visistedResponders.add(responder);
  var responderInstance = respondersMap.get(responder);

  if (responderInstance === undefined) {
    // Mount (happens in either complete or commit phase)
    mountEventResponder$1(responder, listenerProps, fiber, respondersMap, rootContainerInstance);
  } else {
    // Update (happens during commit phase only)
    responderInstance.props = listenerProps;
    responderInstance.fiber = fiber;
  }
}

function updateEventListeners(listeners, fiber, rootContainerInstance) {
  var visistedResponders = new Set();
  var dependencies = fiber.dependencies;

  if (listeners != null) {
    if (dependencies === null) {
      dependencies = fiber.dependencies = {
        expirationTime: NoWork,
        firstContext: null,
        responders: new Map()
      };
    }

    var respondersMap = dependencies.responders;

    if (respondersMap === null) {
      respondersMap = new Map();
    }

    if (isArray$2(listeners)) {
      for (var i = 0, length = listeners.length; i < length; i++) {
        var listener = listeners[i];
        updateEventListener(listener, fiber, visistedResponders, respondersMap, rootContainerInstance);
      }
    } else {
      updateEventListener(listeners, fiber, visistedResponders, respondersMap, rootContainerInstance);
    }
  }

  if (dependencies !== null) {
    var _respondersMap = dependencies.responders;

    if (_respondersMap !== null) {
      // Unmount
      var mountedResponders = Array.from(_respondersMap.keys());

      for (var _i = 0, _length = mountedResponders.length; _i < _length; _i++) {
        var mountedResponder = mountedResponders[_i];

        if (!visistedResponders.has(mountedResponder)) {
          var responderInstance = _respondersMap.get(mountedResponder);

          unmountResponderInstance(responderInstance);

          _respondersMap.delete(mountedResponder);
        }
      }
    }
  }
}
function createResponderListener(responder, props) {
  var eventResponderListener = {
    responder: responder,
    props: props
  };

  {
    Object.freeze(eventResponderListener);
  }

  return eventResponderListener;
}

var NoEffect$1 =
/*             */
0;
var UnmountSnapshot =
/*      */
2;
var UnmountMutation =
/*      */
4;
var MountMutation =
/*        */
8;
var UnmountLayout =
/*        */
16;
var MountLayout =
/*          */
32;
var MountPassive =
/*         */
64;
var UnmountPassive =
/*       */
128;

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
var didWarnAboutMismatchedHooksForComponent;

{
  didWarnAboutMismatchedHooksForComponent = new Set();
}

// These are set right before calling the component.
var renderExpirationTime$1 = NoWork; // The work-in-progress fiber. I've named it differently to distinguish it from
// the work-in-progress hook.

var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
// current hook list is the list that belongs to the current fiber. The
// work-in-progress hook list is a new list that will be added to the
// work-in-progress fiber.

var currentHook = null;
var nextCurrentHook = null;
var firstWorkInProgressHook = null;
var workInProgressHook = null;
var nextWorkInProgressHook = null;
var remainingExpirationTime = NoWork;
var componentUpdateQueue = null;
var sideEffectTag = 0; // Updates scheduled during render will trigger an immediate re-render at the
// end of the current pass. We can't store these updates on the normal queue,
// because if the work is aborted, they should be discarded. Because this is
// a relatively rare case, we also don't want to add an additional field to
// either the hook or queue object types. So we store them in a lazily create
// map of queue -> render-phase updates, which are discarded once the component
// completes without re-rendering.
// Whether an update was scheduled during the currently executing render pass.

var didScheduleRenderPhaseUpdate = false; // Lazily created map of render-phase updates

var renderPhaseUpdates = null; // Counter to prevent infinite loops.

var numberOfReRenders = 0;
var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook

var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
// The list stores the order of hooks used during the initial render (mount).
// Subsequent renders (updates) reference this list.

var hookTypesDev = null;
var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
// the dependencies for Hooks that need them (e.g. useEffect or useMemo).
// When true, such Hooks will always be "remounted". Only used during hot reload.

var ignorePreviousDependencies = false;

function mountHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev === null) {
      hookTypesDev = [hookName];
    } else {
      hookTypesDev.push(hookName);
    }
  }
}

function updateHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev !== null) {
      hookTypesUpdateIndexDev++;

      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
        warnOnHookMismatchInDev(hookName);
      }
    }
  }
}

function checkDepsAreArrayDev(deps) {
  {
    if (deps !== undefined && deps !== null && !Array.isArray(deps)) {
      // Verify deps, but only on mount to avoid extra checks.
      // It's unlikely their type would change as usually you define them inline.
      warning$1(false, '%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);
    }
  }
}

function warnOnHookMismatchInDev(currentHookName) {
  {
    var componentName = getComponentName(currentlyRenderingFiber$1.type);

    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
      didWarnAboutMismatchedHooksForComponent.add(componentName);

      if (hookTypesDev !== null) {
        var table = '';
        var secondColumnStart = 30;

        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
          var oldHookName = hookTypesDev[i];
          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
          var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
          // lol @ IE not supporting String#repeat

          while (row.length < secondColumnStart) {
            row += ' ';
          }

          row += newHookName + '\n';
          table += row;
        }

        warning$1(false, 'React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://fb.me/rules-of-hooks\n\n' + '   Previous render            Next render\n' + '   ------------------------------------------------------\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', componentName, table);
      }
    }
  }
}

function throwInvalidHookError() {
  {
    {
      throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.");
    }
  }
}

function areHookInputsEqual(nextDeps, prevDeps) {
  {
    if (ignorePreviousDependencies) {
      // Only true when this component is being hot reloaded.
      return false;
    }
  }

  if (prevDeps === null) {
    {
      warning$1(false, '%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
    }

    return false;
  }

  {
    // Don't bother comparing lengths in prod because these arrays should be
    // passed inline.
    if (nextDeps.length !== prevDeps.length) {
      warning$1(false, 'The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
    }
  }

  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
    if (is$1(nextDeps[i], prevDeps[i])) {
      continue;
    }

    return false;
  }

  return true;
}

function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
  renderExpirationTime$1 = nextRenderExpirationTime;
  currentlyRenderingFiber$1 = workInProgress;
  nextCurrentHook = current !== null ? current.memoizedState : null;

  {
    hookTypesDev = current !== null ? current._debugHookTypes : null;
    hookTypesUpdateIndexDev = -1; // Used for hot reloading:

    ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
  } // The following should have already been reset
  // currentHook = null;
  // workInProgressHook = null;
  // remainingExpirationTime = NoWork;
  // componentUpdateQueue = null;
  // didScheduleRenderPhaseUpdate = false;
  // renderPhaseUpdates = null;
  // numberOfReRenders = 0;
  // sideEffectTag = 0;
  // TODO Warn if no hooks are used at all during mount, then some are used during update.
  // Currently we will identify the update render as a mount because nextCurrentHook === null.
  // This is tricky because it's valid for certain types of components (e.g. React.lazy)
  // Using nextCurrentHook to differentiate between mount/update only works if at least one stateful hook is used.
  // Non-stateful hooks (e.g. context) don't get added to memoizedState,
  // so nextCurrentHook would be null during updates and mounts.


  {
    if (nextCurrentHook !== null) {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
    } else if (hookTypesDev !== null) {
      // This dispatcher handles an edge case where a component is updating,
      // but no stateful hooks have been used.
      // We want to match the production code behavior (which will use HooksDispatcherOnMount),
      // but with the extra DEV validation to ensure hooks ordering hasn't changed.
      // This dispatcher does that.
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
    } else {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
    }
  }

  var children = Component(props, refOrContext);

  if (didScheduleRenderPhaseUpdate) {
    do {
      didScheduleRenderPhaseUpdate = false;
      numberOfReRenders += 1;

      {
        // Even when hot reloading, allow dependencies to stabilize
        // after first render to prevent infinite render phase updates.
        ignorePreviousDependencies = false;
      } // Start over from the beginning of the list


      nextCurrentHook = current !== null ? current.memoizedState : null;
      nextWorkInProgressHook = firstWorkInProgressHook;
      currentHook = null;
      workInProgressHook = null;
      componentUpdateQueue = null;

      {
        // Also validate hook order for cascading updates.
        hookTypesUpdateIndexDev = -1;
      }

      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
      children = Component(props, refOrContext);
    } while (didScheduleRenderPhaseUpdate);

    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  } // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrancy.


  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
  var renderedWork = currentlyRenderingFiber$1;
  renderedWork.memoizedState = firstWorkInProgressHook;
  renderedWork.expirationTime = remainingExpirationTime;
  renderedWork.updateQueue = componentUpdateQueue;
  renderedWork.effectTag |= sideEffectTag;

  {
    renderedWork._debugHookTypes = hookTypesDev;
  } // This check uses currentHook so that it works the same in DEV and prod bundles.
  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.


  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
  renderExpirationTime$1 = NoWork;
  currentlyRenderingFiber$1 = null;
  currentHook = null;
  nextCurrentHook = null;
  firstWorkInProgressHook = null;
  workInProgressHook = null;
  nextWorkInProgressHook = null;

  {
    currentHookNameInDev = null;
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;
  }

  remainingExpirationTime = NoWork;
  componentUpdateQueue = null;
  sideEffectTag = 0; // These were reset above
  // didScheduleRenderPhaseUpdate = false;
  // renderPhaseUpdates = null;
  // numberOfReRenders = 0;

  if (!!didRenderTooFewHooks) {
    {
      throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
    }
  }

  return children;
}
function bailoutHooks(current, workInProgress, expirationTime) {
  workInProgress.updateQueue = current.updateQueue;
  workInProgress.effectTag &= ~(Passive | Update);

  if (current.expirationTime <= expirationTime) {
    current.expirationTime = NoWork;
  }
}
function resetHooks() {
  // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrancy.
  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher; // This is used to reset the state of this module when a component throws.
  // It's also called inside mountIndeterminateComponent if we determine the
  // component is a module-style component.

  renderExpirationTime$1 = NoWork;
  currentlyRenderingFiber$1 = null;
  currentHook = null;
  nextCurrentHook = null;
  firstWorkInProgressHook = null;
  workInProgressHook = null;
  nextWorkInProgressHook = null;

  {
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;
    currentHookNameInDev = null;
  }

  remainingExpirationTime = NoWork;
  componentUpdateQueue = null;
  sideEffectTag = 0;
  didScheduleRenderPhaseUpdate = false;
  renderPhaseUpdates = null;
  numberOfReRenders = 0;
}

function mountWorkInProgressHook() {
  var hook = {
    memoizedState: null,
    baseState: null,
    queue: null,
    baseUpdate: null,
    next: null
  };

  if (workInProgressHook === null) {
    // This is the first hook in the list
    firstWorkInProgressHook = workInProgressHook = hook;
  } else {
    // Append to the end of the list
    workInProgressHook = workInProgressHook.next = hook;
  }

  return workInProgressHook;
}

function updateWorkInProgressHook() {
  // This function is used both for updates and for re-renders triggered by a
  // render phase update. It assumes there is either a current hook we can
  // clone, or a work-in-progress hook from a previous render pass that we can
  // use as a base. When we reach the end of the base list, we must switch to
  // the dispatcher used for mounts.
  if (nextWorkInProgressHook !== null) {
    // There's already a work-in-progress. Reuse it.
    workInProgressHook = nextWorkInProgressHook;
    nextWorkInProgressHook = workInProgressHook.next;
    currentHook = nextCurrentHook;
    nextCurrentHook = currentHook !== null ? currentHook.next : null;
  } else {
    // Clone from the current hook.
    if (!(nextCurrentHook !== null)) {
      {
        throw Error("Rendered more hooks than during the previous render.");
      }
    }

    currentHook = nextCurrentHook;
    var newHook = {
      memoizedState: currentHook.memoizedState,
      baseState: currentHook.baseState,
      queue: currentHook.queue,
      baseUpdate: currentHook.baseUpdate,
      next: null
    };

    if (workInProgressHook === null) {
      // This is the first hook in the list.
      workInProgressHook = firstWorkInProgressHook = newHook;
    } else {
      // Append to the end of the list.
      workInProgressHook = workInProgressHook.next = newHook;
    }

    nextCurrentHook = currentHook.next;
  }

  return workInProgressHook;
}

function createFunctionComponentUpdateQueue() {
  return {
    lastEffect: null
  };
}

function basicStateReducer(state, action) {
  return typeof action === 'function' ? action(state) : action;
}

function mountReducer(reducer, initialArg, init) {
  var hook = mountWorkInProgressHook();
  var initialState;

  if (init !== undefined) {
    initialState = init(initialArg);
  } else {
    initialState = initialArg;
  }

  hook.memoizedState = hook.baseState = initialState;
  var queue = hook.queue = {
    last: null,
    dispatch: null,
    lastRenderedReducer: reducer,
    lastRenderedState: initialState
  };
  var dispatch = queue.dispatch = dispatchAction.bind(null, // Flow doesn't know this is non-null, but we do.
  currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateReducer(reducer, initialArg, init) {
  var hook = updateWorkInProgressHook();
  var queue = hook.queue;

  if (!(queue !== null)) {
    {
      throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
    }
  }

  queue.lastRenderedReducer = reducer;

  if (numberOfReRenders > 0) {
    // This is a re-render. Apply the new render phase updates to the previous
    // work-in-progress hook.
    var _dispatch = queue.dispatch;

    if (renderPhaseUpdates !== null) {
      // Render phase updates are stored in a map of queue -> linked list
      var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

      if (firstRenderPhaseUpdate !== undefined) {
        renderPhaseUpdates.delete(queue);
        var newState = hook.memoizedState;
        var update = firstRenderPhaseUpdate;

        do {
          // Process this render phase update. We don't have to check the
          // priority because it will always be the same as the current
          // render's.
          var action = update.action;
          newState = reducer(newState, action);
          update = update.next;
        } while (update !== null); // Mark that the fiber performed work, but only if the new state is
        // different from the current state.


        if (!is$1(newState, hook.memoizedState)) {
          markWorkInProgressReceivedUpdate();
        }

        hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
        // the base state unless the queue is empty.
        // TODO: Not sure if this is the desired semantics, but it's what we
        // do for gDSFP. I can't remember why.

        if (hook.baseUpdate === queue.last) {
          hook.baseState = newState;
        }

        queue.lastRenderedState = newState;
        return [newState, _dispatch];
      }
    }

    return [hook.memoizedState, _dispatch];
  } // The last update in the entire queue


  var last = queue.last; // The last update that is part of the base state.

  var baseUpdate = hook.baseUpdate;
  var baseState = hook.baseState; // Find the first unprocessed update.

  var first;

  if (baseUpdate !== null) {
    if (last !== null) {
      // For the first update, the queue is a circular linked list where
      // `queue.last.next = queue.first`. Once the first update commits, and
      // the `baseUpdate` is no longer empty, we can unravel the list.
      last.next = null;
    }

    first = baseUpdate.next;
  } else {
    first = last !== null ? last.next : null;
  }

  if (first !== null) {
    var _newState = baseState;
    var newBaseState = null;
    var newBaseUpdate = null;
    var prevUpdate = baseUpdate;
    var _update = first;
    var didSkip = false;

    do {
      var updateExpirationTime = _update.expirationTime;

      if (updateExpirationTime < renderExpirationTime$1) {
        // Priority is insufficient. Skip this update. If this is the first
        // skipped update, the previous update/state is the new base
        // update/state.
        if (!didSkip) {
          didSkip = true;
          newBaseUpdate = prevUpdate;
          newBaseState = _newState;
        } // Update the remaining priority in the queue.


        if (updateExpirationTime > remainingExpirationTime) {
          remainingExpirationTime = updateExpirationTime;
          markUnprocessedUpdateTime(remainingExpirationTime);
        }
      } else {
        // This update does have sufficient priority.
        // Mark the event time of this update as relevant to this render pass.
        // TODO: This should ideally use the true event time of this update rather than
        // its priority which is a derived and not reverseable value.
        // TODO: We should skip this update if it was already committed but currently
        // we have no way of detecting the difference between a committed and suspended
        // update here.
        markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig); // Process this update.

        if (_update.eagerReducer === reducer) {
          // If this update was processed eagerly, and its reducer matches the
          // current reducer, we can use the eagerly computed state.
          _newState = _update.eagerState;
        } else {
          var _action = _update.action;
          _newState = reducer(_newState, _action);
        }
      }

      prevUpdate = _update;
      _update = _update.next;
    } while (_update !== null && _update !== first);

    if (!didSkip) {
      newBaseUpdate = prevUpdate;
      newBaseState = _newState;
    } // Mark that the fiber performed work, but only if the new state is
    // different from the current state.


    if (!is$1(_newState, hook.memoizedState)) {
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = _newState;
    hook.baseUpdate = newBaseUpdate;
    hook.baseState = newBaseState;
    queue.lastRenderedState = _newState;
  }

  var dispatch = queue.dispatch;
  return [hook.memoizedState, dispatch];
}

function mountState(initialState) {
  var hook = mountWorkInProgressHook();

  if (typeof initialState === 'function') {
    initialState = initialState();
  }

  hook.memoizedState = hook.baseState = initialState;
  var queue = hook.queue = {
    last: null,
    dispatch: null,
    lastRenderedReducer: basicStateReducer,
    lastRenderedState: initialState
  };
  var dispatch = queue.dispatch = dispatchAction.bind(null, // Flow doesn't know this is non-null, but we do.
  currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateState(initialState) {
  return updateReducer(basicStateReducer, initialState);
}

function pushEffect(tag, create, destroy, deps) {
  var effect = {
    tag: tag,
    create: create,
    destroy: destroy,
    deps: deps,
    // Circular
    next: null
  };

  if (componentUpdateQueue === null) {
    componentUpdateQueue = createFunctionComponentUpdateQueue();
    componentUpdateQueue.lastEffect = effect.next = effect;
  } else {
    var lastEffect = componentUpdateQueue.lastEffect;

    if (lastEffect === null) {
      componentUpdateQueue.lastEffect = effect.next = effect;
    } else {
      var firstEffect = lastEffect.next;
      lastEffect.next = effect;
      effect.next = firstEffect;
      componentUpdateQueue.lastEffect = effect;
    }
  }

  return effect;
}

function mountRef(initialValue) {
  var hook = mountWorkInProgressHook();
  var ref = {
    current: initialValue
  };

  {
    Object.seal(ref);
  }

  hook.memoizedState = ref;
  return ref;
}

function updateRef(initialValue) {
  var hook = updateWorkInProgressHook();
  return hook.memoizedState;
}

function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  sideEffectTag |= fiberEffectTag;
  hook.memoizedState = pushEffect(hookEffectTag, create, undefined, nextDeps);
}

function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var destroy = undefined;

  if (currentHook !== null) {
    var prevEffect = currentHook.memoizedState;
    destroy = prevEffect.destroy;

    if (nextDeps !== null) {
      var prevDeps = prevEffect.deps;

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        pushEffect(NoEffect$1, create, destroy, nextDeps);
        return;
      }
    }
  }

  sideEffectTag |= fiberEffectTag;
  hook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextDeps);
}

function mountEffect(create, deps) {
  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
    }
  }

  return mountEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
}

function updateEffect(create, deps) {
  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
    }
  }

  return updateEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
}

function mountLayoutEffect(create, deps) {
  return mountEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
}

function updateLayoutEffect(create, deps) {
  return updateEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
}

function imperativeHandleEffect(create, ref) {
  if (typeof ref === 'function') {
    var refCallback = ref;

    var _inst = create();

    refCallback(_inst);
    return function () {
      refCallback(null);
    };
  } else if (ref !== null && ref !== undefined) {
    var refObject = ref;

    {
      !refObject.hasOwnProperty('current') ? warning$1(false, 'Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}') : void 0;
    }

    var _inst2 = create();

    refObject.current = _inst2;
    return function () {
      refObject.current = null;
    };
  }
}

function mountImperativeHandle(ref, create, deps) {
  {
    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
  } // TODO: If deps are provided, should we skip comparing the ref itself?


  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
  return mountEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function updateImperativeHandle(ref, create, deps) {
  {
    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
  } // TODO: If deps are provided, should we skip comparing the ref itself?


  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
  return updateEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function mountDebugValue(value, formatterFn) {// This hook is normally a no-op.
  // The react-debug-hooks package injects its own implementation
  // so that e.g. DevTools can display custom hook values.
}

var updateDebugValue = mountDebugValue;

function mountCallback(callback, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function updateCallback(callback, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;

  if (prevState !== null) {
    if (nextDeps !== null) {
      var prevDeps = prevState[1];

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }

  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function mountMemo(nextCreate, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function updateMemo(nextCreate, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;

  if (prevState !== null) {
    // Assume these are defined. If they're not, areHookInputsEqual will warn.
    if (nextDeps !== null) {
      var prevDeps = prevState[1];

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }

  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function mountDeferredValue(value, config) {
  var _mountState = mountState(value),
      prevValue = _mountState[0],
      setValue = _mountState[1];

  mountEffect(function () {
    Scheduler.unstable_next(function () {
      var previousConfig = ReactCurrentBatchConfig$1.suspense;
      ReactCurrentBatchConfig$1.suspense = config === undefined ? null : config;

      try {
        setValue(value);
      } finally {
        ReactCurrentBatchConfig$1.suspense = previousConfig;
      }
    });
  }, [value, config]);
  return prevValue;
}

function updateDeferredValue(value, config) {
  var _updateState = updateState(value),
      prevValue = _updateState[0],
      setValue = _updateState[1];

  updateEffect(function () {
    Scheduler.unstable_next(function () {
      var previousConfig = ReactCurrentBatchConfig$1.suspense;
      ReactCurrentBatchConfig$1.suspense = config === undefined ? null : config;

      try {
        setValue(value);
      } finally {
        ReactCurrentBatchConfig$1.suspense = previousConfig;
      }
    });
  }, [value, config]);
  return prevValue;
}

function mountTransition(config) {
  var _mountState2 = mountState(false),
      isPending = _mountState2[0],
      setPending = _mountState2[1];

  var startTransition = mountCallback(function (callback) {
    setPending(true);
    Scheduler.unstable_next(function () {
      var previousConfig = ReactCurrentBatchConfig$1.suspense;
      ReactCurrentBatchConfig$1.suspense = config === undefined ? null : config;

      try {
        setPending(false);
        callback();
      } finally {
        ReactCurrentBatchConfig$1.suspense = previousConfig;
      }
    });
  }, [config, isPending]);
  return [startTransition, isPending];
}

function updateTransition(config) {
  var _updateState2 = updateState(false),
      isPending = _updateState2[0],
      setPending = _updateState2[1];

  var startTransition = updateCallback(function (callback) {
    setPending(true);
    Scheduler.unstable_next(function () {
      var previousConfig = ReactCurrentBatchConfig$1.suspense;
      ReactCurrentBatchConfig$1.suspense = config === undefined ? null : config;

      try {
        setPending(false);
        callback();
      } finally {
        ReactCurrentBatchConfig$1.suspense = previousConfig;
      }
    });
  }, [config, isPending]);
  return [startTransition, isPending];
}

function dispatchAction(fiber, queue, action) {
  if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
    {
      throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
    }
  }

  {
    !(typeof arguments[3] !== 'function') ? warning$1(false, "State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().') : void 0;
  }

  var alternate = fiber.alternate;

  if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
    // This is a render phase update. Stash it in a lazily-created map of
    // queue -> linked list of updates. After this render pass, we'll restart
    // and apply the stashed updates on top of the work-in-progress hook.
    didScheduleRenderPhaseUpdate = true;
    var update = {
      expirationTime: renderExpirationTime$1,
      suspenseConfig: null,
      action: action,
      eagerReducer: null,
      eagerState: null,
      next: null
    };

    {
      update.priority = getCurrentPriorityLevel();
    }

    if (renderPhaseUpdates === null) {
      renderPhaseUpdates = new Map();
    }

    var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

    if (firstRenderPhaseUpdate === undefined) {
      renderPhaseUpdates.set(queue, update);
    } else {
      // Append the update to the end of the list.
      var lastRenderPhaseUpdate = firstRenderPhaseUpdate;

      while (lastRenderPhaseUpdate.next !== null) {
        lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
      }

      lastRenderPhaseUpdate.next = update;
    }
  } else {
    var currentTime = requestCurrentTimeForUpdate();
    var suspenseConfig = requestCurrentSuspenseConfig();
    var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
    var _update2 = {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      action: action,
      eagerReducer: null,
      eagerState: null,
      next: null
    };

    {
      _update2.priority = getCurrentPriorityLevel();
    } // Append the update to the end of the list.


    var last = queue.last;

    if (last === null) {
      // This is the first update. Create a circular list.
      _update2.next = _update2;
    } else {
      var first = last.next;

      if (first !== null) {
        // Still circular.
        _update2.next = first;
      }

      last.next = _update2;
    }

    queue.last = _update2;

    if (fiber.expirationTime === NoWork && (alternate === null || alternate.expirationTime === NoWork)) {
      // The queue is currently empty, which means we can eagerly compute the
      // next state before entering the render phase. If the new state is the
      // same as the current state, we may be able to bail out entirely.
      var lastRenderedReducer = queue.lastRenderedReducer;

      if (lastRenderedReducer !== null) {
        var prevDispatcher;

        {
          prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
        }

        try {
          var currentState = queue.lastRenderedState;
          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
          // it, on the update object. If the reducer hasn't changed by the
          // time we enter the render phase, then the eager state can be used
          // without calling the reducer again.

          _update2.eagerReducer = lastRenderedReducer;
          _update2.eagerState = eagerState;

          if (is$1(eagerState, currentState)) {
            // Fast path. We can bail out without scheduling React to re-render.
            // It's still possible that we'll need to rebase this update later,
            // if the component re-renders for a different reason and by that
            // time the reducer has changed.
            return;
          }
        } catch (error) {// Suppress the error. It will throw again in the render phase.
        } finally {
          {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        }
      }
    }

    {
      // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
      if ('undefined' !== typeof jest) {
        warnIfNotScopedWithMatchingAct(fiber);
        warnIfNotCurrentlyActingUpdatesInDev(fiber);
      }
    }

    scheduleWork(fiber, expirationTime);
  }
}

var ContextOnlyDispatcher = {
  readContext: readContext,
  useCallback: throwInvalidHookError,
  useContext: throwInvalidHookError,
  useEffect: throwInvalidHookError,
  useImperativeHandle: throwInvalidHookError,
  useLayoutEffect: throwInvalidHookError,
  useMemo: throwInvalidHookError,
  useReducer: throwInvalidHookError,
  useRef: throwInvalidHookError,
  useState: throwInvalidHookError,
  useDebugValue: throwInvalidHookError,
  useResponder: throwInvalidHookError,
  useDeferredValue: throwInvalidHookError,
  useTransition: throwInvalidHookError
};
var HooksDispatcherOnMountInDEV = null;
var HooksDispatcherOnMountWithHookTypesInDEV = null;
var HooksDispatcherOnUpdateInDEV = null;
var InvalidNestedHooksDispatcherOnMountInDEV = null;
var InvalidNestedHooksDispatcherOnUpdateInDEV = null;

{
  var warnInvalidContextAccess = function () {
    warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
  };

  var warnInvalidHookAccess = function () {
    warning$1(false, 'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://fb.me/rules-of-hooks');
  };

  HooksDispatcherOnMountInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      mountHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      mountHookTypesDev();
      return mountDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      mountHookTypesDev();
      return createResponderListener(responder, props);
    },
    useDeferredValue: function (value, config) {
      currentHookNameInDev = 'useDeferredValue';
      mountHookTypesDev();
      return mountDeferredValue(value, config);
    },
    useTransition: function (config) {
      currentHookNameInDev = 'useTransition';
      mountHookTypesDev();
      return mountTransition(config);
    }
  };
  HooksDispatcherOnMountWithHookTypesInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return mountDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      updateHookTypesDev();
      return createResponderListener(responder, props);
    },
    useDeferredValue: function (value, config) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return mountDeferredValue(value, config);
    },
    useTransition: function (config) {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return mountTransition(config);
    }
  };
  HooksDispatcherOnUpdateInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return updateRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return updateDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      updateHookTypesDev();
      return createResponderListener(responder, props);
    },
    useDeferredValue: function (value, config) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return updateDeferredValue(value, config);
    },
    useTransition: function (config) {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return updateTransition(config);
    }
  };
  InvalidNestedHooksDispatcherOnMountInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return createResponderListener(responder, props);
    },
    useDeferredValue: function (value, config) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDeferredValue(value, config);
    },
    useTransition: function (config) {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountTransition(config);
    }
  };
  InvalidNestedHooksDispatcherOnUpdateInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return createResponderListener(responder, props);
    },
    useDeferredValue: function (value, config) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDeferredValue(value, config);
    },
    useTransition: function (config) {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateTransition(config);
    }
  };
}

// CommonJS interop named imports.

var now$1 = Scheduler.unstable_now;
var commitTime = 0;
var profilerStartTime = -1;

function getCommitTime() {
  return commitTime;
}

function recordCommitTime() {
  if (!enableProfilerTimer) {
    return;
  }

  commitTime = now$1();
}

function startProfilerTimer(fiber) {
  if (!enableProfilerTimer) {
    return;
  }

  profilerStartTime = now$1();

  if (fiber.actualStartTime < 0) {
    fiber.actualStartTime = now$1();
  }
}

function stopProfilerTimerIfRunning(fiber) {
  if (!enableProfilerTimer) {
    return;
  }

  profilerStartTime = -1;
}

function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
  if (!enableProfilerTimer) {
    return;
  }

  if (profilerStartTime >= 0) {
    var elapsedTime = now$1() - profilerStartTime;
    fiber.actualDuration += elapsedTime;

    if (overrideBaseTime) {
      fiber.selfBaseDuration = elapsedTime;
    }

    profilerStartTime = -1;
  }
}

// This may have been an insertion or a hydration.

var hydrationParentFiber = null;
var nextHydratableInstance = null;
var isHydrating = false;

function warnIfHydrating() {
  {
    !!isHydrating ? warning$1(false, 'We should not be hydrating here. This is a bug in React. Please file a bug.') : void 0;
  }
}

function enterHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }

  var parentInstance = fiber.stateNode.containerInfo;
  nextHydratableInstance = getFirstHydratableChild(parentInstance);
  hydrationParentFiber = fiber;
  isHydrating = true;
  return true;
}

function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance) {
  if (!supportsHydration) {
    return false;
  }

  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);
  popToNextHostParent(fiber);
  isHydrating = true;
  return true;
}

function deleteHydratableInstance(returnFiber, instance) {
  {
    switch (returnFiber.tag) {
      case HostRoot:
        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
        break;

      case HostComponent:
        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
        break;
    }
  }

  var childToDelete = createFiberFromHostInstanceForDeletion();
  childToDelete.stateNode = instance;
  childToDelete.return = returnFiber;
  childToDelete.effectTag = Deletion; // This might seem like it belongs on progressedFirstDeletion. However,
  // these children are not part of the reconciliation list of children.
  // Even if we abort and rereconcile the children, that will try to hydrate
  // again and the nodes are still in the host tree so these will be
  // recreated.

  if (returnFiber.lastEffect !== null) {
    returnFiber.lastEffect.nextEffect = childToDelete;
    returnFiber.lastEffect = childToDelete;
  } else {
    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
  }
}

function insertNonHydratedInstance(returnFiber, fiber) {
  fiber.effectTag = fiber.effectTag & ~Hydrating | Placement;

  {
    switch (returnFiber.tag) {
      case HostRoot:
        {
          var parentContainer = returnFiber.stateNode.containerInfo;

          switch (fiber.tag) {
            case HostComponent:
              var type = fiber.type;
              var props = fiber.pendingProps;
              didNotFindHydratableContainerInstance(parentContainer, type, props);
              break;

            case HostText:
              var text = fiber.pendingProps;
              didNotFindHydratableContainerTextInstance(parentContainer, text);
              break;

            case SuspenseComponent:
              
              break;
          }

          break;
        }

      case HostComponent:
        {
          var parentType = returnFiber.type;
          var parentProps = returnFiber.memoizedProps;
          var parentInstance = returnFiber.stateNode;

          switch (fiber.tag) {
            case HostComponent:
              var _type = fiber.type;
              var _props = fiber.pendingProps;
              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
              break;

            case HostText:
              var _text = fiber.pendingProps;
              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
              break;

            case SuspenseComponent:
              didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance);
              break;
          }

          break;
        }

      default:
        return;
    }
  }
}

function tryHydrate(fiber, nextInstance) {
  switch (fiber.tag) {
    case HostComponent:
      {
        var type = fiber.type;
        var props = fiber.pendingProps;
        var instance = canHydrateInstance(nextInstance, type, props);

        if (instance !== null) {
          fiber.stateNode = instance;
          return true;
        }

        return false;
      }

    case HostText:
      {
        var text = fiber.pendingProps;
        var textInstance = canHydrateTextInstance(nextInstance, text);

        if (textInstance !== null) {
          fiber.stateNode = textInstance;
          return true;
        }

        return false;
      }

    case SuspenseComponent:
      {
        if (enableSuspenseServerRenderer) {
          var suspenseInstance = canHydrateSuspenseInstance(nextInstance);

          if (suspenseInstance !== null) {
            var suspenseState = {
              dehydrated: suspenseInstance,
              retryTime: Never
            };
            fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.
            // This simplifies the code for getHostSibling and deleting nodes,
            // since it doesn't have to consider all Suspense boundaries and
            // check if they're dehydrated ones or not.

            var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
            dehydratedFragment.return = fiber;
            fiber.child = dehydratedFragment;
            return true;
          }
        }

        return false;
      }

    default:
      return false;
  }
}

function tryToClaimNextHydratableInstance(fiber) {
  if (!isHydrating) {
    return;
  }

  var nextInstance = nextHydratableInstance;

  if (!nextInstance) {
    // Nothing to hydrate. Make it an insertion.
    insertNonHydratedInstance(hydrationParentFiber, fiber);
    isHydrating = false;
    hydrationParentFiber = fiber;
    return;
  }

  var firstAttemptedInstance = nextInstance;

  if (!tryHydrate(fiber, nextInstance)) {
    // If we can't hydrate this instance let's try the next one.
    // We use this as a heuristic. It's based on intuition and not data so it
    // might be flawed or unnecessary.
    nextInstance = getNextHydratableSibling(firstAttemptedInstance);

    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
      // Nothing to hydrate. Make it an insertion.
      insertNonHydratedInstance(hydrationParentFiber, fiber);
      isHydrating = false;
      hydrationParentFiber = fiber;
      return;
    } // We matched the next one, we'll now assume that the first one was
    // superfluous and we'll delete it. Since we can't eagerly delete it
    // we'll have to schedule a deletion. To do that, this node needs a dummy
    // fiber associated with it.


    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
  }

  hydrationParentFiber = fiber;
  nextHydratableInstance = getFirstHydratableChild(nextInstance);
}

function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
  if (!supportsHydration) {
    {
      {
        throw Error("Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  }

  var instance = fiber.stateNode;
  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber); // TODO: Type this specific to this type of component.

  fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
  // is a new ref we mark this as an update.

  if (updatePayload !== null) {
    return true;
  }

  return false;
}

function prepareToHydrateHostTextInstance(fiber) {
  if (!supportsHydration) {
    {
      {
        throw Error("Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  }

  var textInstance = fiber.stateNode;
  var textContent = fiber.memoizedProps;
  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);

  {
    if (shouldUpdate) {
      // We assume that prepareToHydrateHostTextInstance is called in a context where the
      // hydration parent is the parent host component of this host text.
      var returnFiber = hydrationParentFiber;

      if (returnFiber !== null) {
        switch (returnFiber.tag) {
          case HostRoot:
            {
              var parentContainer = returnFiber.stateNode.containerInfo;
              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
              break;
            }

          case HostComponent:
            {
              var parentType = returnFiber.type;
              var parentProps = returnFiber.memoizedProps;
              var parentInstance = returnFiber.stateNode;
              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
              break;
            }
        }
      }
    }
  }

  return shouldUpdate;
}

function prepareToHydrateHostSuspenseInstance(fiber) {
  if (!supportsHydration) {
    {
      {
        throw Error("Expected prepareToHydrateHostSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  }

  var suspenseState = fiber.memoizedState;
  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

  if (!suspenseInstance) {
    {
      throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
    }
  }

  hydrateSuspenseInstance(suspenseInstance, fiber);
}

function skipPastDehydratedSuspenseInstance(fiber) {
  if (!supportsHydration) {
    {
      {
        throw Error("Expected skipPastDehydratedSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  }

  var suspenseState = fiber.memoizedState;
  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

  if (!suspenseInstance) {
    {
      throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
    }
  }

  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
}

function popToNextHostParent(fiber) {
  var parent = fiber.return;

  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
    parent = parent.return;
  }

  hydrationParentFiber = parent;
}

function popHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }

  if (fiber !== hydrationParentFiber) {
    // We're deeper than the current hydration context, inside an inserted
    // tree.
    return false;
  }

  if (!isHydrating) {
    // If we're not currently hydrating but we're in a hydration context, then
    // we were an insertion and now need to pop up reenter hydration of our
    // siblings.
    popToNextHostParent(fiber);
    isHydrating = true;
    return false;
  }

  var type = fiber.type; // If we have any remaining hydratable nodes, we need to delete them now.
  // We only do this deeper than head and body since they tend to have random
  // other nodes in them. We also ignore components with pure text content in
  // side of them.
  // TODO: Better heuristic.

  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
    var nextInstance = nextHydratableInstance;

    while (nextInstance) {
      deleteHydratableInstance(fiber, nextInstance);
      nextInstance = getNextHydratableSibling(nextInstance);
    }
  }

  popToNextHostParent(fiber);

  if (fiber.tag === SuspenseComponent) {
    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
  } else {
    nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
  }

  return true;
}

function resetHydrationState() {
  if (!supportsHydration) {
    return;
  }

  hydrationParentFiber = null;
  nextHydratableInstance = null;
  isHydrating = false;
}

var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
var didReceiveUpdate = false;
var didWarnAboutBadClass;
var didWarnAboutModulePatternComponent;
var didWarnAboutContextTypeOnFunctionComponent;
var didWarnAboutGetDerivedStateOnFunctionComponent;
var didWarnAboutFunctionRefs;
var didWarnAboutReassigningProps;
var didWarnAboutMaxDuration;
var didWarnAboutRevealOrder;
var didWarnAboutTailOptions;
var didWarnAboutDefaultPropsOnFunctionComponent;

{
  didWarnAboutBadClass = {};
  didWarnAboutModulePatternComponent = {};
  didWarnAboutContextTypeOnFunctionComponent = {};
  didWarnAboutGetDerivedStateOnFunctionComponent = {};
  didWarnAboutFunctionRefs = {};
  didWarnAboutReassigningProps = false;
  didWarnAboutMaxDuration = false;
  didWarnAboutRevealOrder = {};
  didWarnAboutTailOptions = {};
  didWarnAboutDefaultPropsOnFunctionComponent = {};
}

function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
  if (current$$1 === null) {
    // If this is a fresh new component that hasn't been rendered yet, we
    // won't update its child set by applying minimal side-effects. Instead,
    // we will add them all to the child before it gets rendered. That means
    // we can optimize this reconciliation pass by not tracking side-effects.
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
  } else {
    // If the current child is the same as the work in progress, it means that
    // we haven't yet started any work on these children. Therefore, we use
    // the clone algorithm to create a copy of all the current children.
    // If we had any progressed work already, that is invalid at this point so
    // let's throw it out.
    workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }
}

function forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime) {
  // This function is fork of reconcileChildren. It's used in cases where we
  // want to reconcile without matching against the existing set. This has the
  // effect of all current children being unmounted; even if the type and key
  // are the same, the old child is unmounted and a new child is created.
  //
  // To do this, we're going to go through the reconcile algorithm twice. In
  // the first pass, we schedule a deletion for all the current children by
  // passing null.
  workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime); // In the second pass, we mount the new children. The trick here is that we
  // pass null in place of where we usually pass the current child set. This has
  // the effect of remounting all children regardless of whether their their
  // identity matches.

  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
}

function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens after the first render suspends.
  // We'll need to figure out if this is fine or can cause issues.
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component), getCurrentFiberStackInDev);
      }
    }
  }

  var render = Component.render;
  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent

  var nextChildren;
  prepareToReadContext(workInProgress, renderExpirationTime);

  {
    ReactCurrentOwner$3.current = workInProgress;
    setCurrentPhase('render');
    nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);

    if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Only double-render components with Hooks
      if (workInProgress.memoizedState !== null) {
        nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);
      }
    }

    setCurrentPhase(null);
  }

  if (current$$1 !== null && !didReceiveUpdate) {
    bailoutHooks(current$$1, workInProgress, renderExpirationTime);
    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  } // React DevTools reads this flag.


  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
  if (current$$1 === null) {
    var type = Component.type;

    if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
    Component.defaultProps === undefined) {
      var resolvedType = type;

      {
        resolvedType = resolveFunctionForHotReloading(type);
      } // If this is a plain function component without default props,
      // and with only the default shallow comparison, we upgrade it
      // to a SimpleMemoComponent to allow fast path updates.


      workInProgress.tag = SimpleMemoComponent;
      workInProgress.type = resolvedType;

      {
        validateFunctionComponentInDev(workInProgress, type);
      }

      return updateSimpleMemoComponent(current$$1, workInProgress, resolvedType, nextProps, updateExpirationTime, renderExpirationTime);
    }

    {
      var innerPropTypes = type.propTypes;

      if (innerPropTypes) {
        // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(type), getCurrentFiberStackInDev);
      }
    }

    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
    child.ref = workInProgress.ref;
    child.return = workInProgress;
    workInProgress.child = child;
    return child;
  }

  {
    var _type = Component.type;
    var _innerPropTypes = _type.propTypes;

    if (_innerPropTypes) {
      // Inner memo component props aren't currently validated in createElement.
      // We could move it there, but we'd still need this for lazy code path.
      checkPropTypes(_innerPropTypes, nextProps, // Resolved props
      'prop', getComponentName(_type), getCurrentFiberStackInDev);
    }
  }

  var currentChild = current$$1.child; // This is always exactly one child

  if (updateExpirationTime < renderExpirationTime) {
    // This will be the props with resolved defaultProps,
    // unlike current.memoizedProps which will be the unresolved ones.
    var prevProps = currentChild.memoizedProps; // Default to shallow comparison

    var compare = Component.compare;
    compare = compare !== null ? compare : shallowEqual;

    if (compare(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {
      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    }
  } // React DevTools reads this flag.


  workInProgress.effectTag |= PerformedWork;
  var newChild = createWorkInProgress(currentChild, nextProps, renderExpirationTime);
  newChild.ref = workInProgress.ref;
  newChild.return = workInProgress;
  workInProgress.child = newChild;
  return newChild;
}

function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens when the inner render suspends.
  // We'll need to figure out if this is fine or can cause issues.
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var outerMemoType = workInProgress.elementType;

      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
        // We warn when you define propTypes on lazy()
        // so let's just skip over it to find memo() outer wrapper.
        // Inner props for memo are validated later.
        outerMemoType = refineResolvedLazyComponent(outerMemoType);
      }

      var outerPropTypes = outerMemoType && outerMemoType.propTypes;

      if (outerPropTypes) {
        checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)
        'prop', getComponentName(outerMemoType), getCurrentFiberStackInDev);
      } // Inner propTypes will be validated in the function component path.

    }
  }

  if (current$$1 !== null) {
    var prevProps = current$$1.memoizedProps;

    if (shallowEqual(prevProps, nextProps) && current$$1.ref === workInProgress.ref && ( // Prevent bailout if the implementation changed due to hot reload:
    workInProgress.type === current$$1.type)) {
      didReceiveUpdate = false;

      if (updateExpirationTime < renderExpirationTime) {
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }
    }
  }

  return updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
}

function updateFragment(current$$1, workInProgress, renderExpirationTime) {
  var nextChildren = workInProgress.pendingProps;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateMode(current$$1, workInProgress, renderExpirationTime) {
  var nextChildren = workInProgress.pendingProps.children;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateProfiler(current$$1, workInProgress, renderExpirationTime) {
  if (enableProfilerTimer) {
    workInProgress.effectTag |= Update;
  }

  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function markRef(current$$1, workInProgress) {
  var ref = workInProgress.ref;

  if (current$$1 === null && ref !== null || current$$1 !== null && current$$1.ref !== ref) {
    // Schedule a Ref effect
    workInProgress.effectTag |= Ref;
  }
}

function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component), getCurrentFiberStackInDev);
      }
    }
  }

  var context;

  if (!disableLegacyContext) {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  var nextChildren;
  prepareToReadContext(workInProgress, renderExpirationTime);

  {
    ReactCurrentOwner$3.current = workInProgress;
    setCurrentPhase('render');
    nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);

    if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Only double-render components with Hooks
      if (workInProgress.memoizedState !== null) {
        nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
      }
    }

    setCurrentPhase(null);
  }

  if (current$$1 !== null && !didReceiveUpdate) {
    bailoutHooks(current$$1, workInProgress, renderExpirationTime);
    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  } // React DevTools reads this flag.


  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component), getCurrentFiberStackInDev);
      }
    }
  } // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.


  var hasContext;

  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }

  prepareToReadContext(workInProgress, renderExpirationTime);
  var instance = workInProgress.stateNode;
  var shouldUpdate;

  if (instance === null) {
    if (current$$1 !== null) {
      // An class component without an instance only mounts if it suspended
      // inside a non- concurrent tree, in an inconsistent state. We want to
      // tree it like a new mount, even though an empty version of it already
      // committed. Disconnect the alternate pointers.
      current$$1.alternate = null;
      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

      workInProgress.effectTag |= Placement;
    } // In the initial pass we might need to construct the instance.


    constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
    mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
    shouldUpdate = true;
  } else if (current$$1 === null) {
    // In a resume, we'll already have an instance we can reuse.
    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
  } else {
    shouldUpdate = updateClassInstance(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  var nextUnitOfWork = finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime);

  {
    var inst = workInProgress.stateNode;

    if (inst.props !== nextProps) {
      !didWarnAboutReassigningProps ? warning$1(false, 'It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component') : void 0;
      didWarnAboutReassigningProps = true;
    }
  }

  return nextUnitOfWork;
}

function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
  // Refs should update even if shouldComponentUpdate returns false
  markRef(current$$1, workInProgress);
  var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;

  if (!shouldUpdate && !didCaptureError) {
    // Context providers should defer to sCU for rendering
    if (hasContext) {
      invalidateContextProvider(workInProgress, Component, false);
    }

    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  }

  var instance = workInProgress.stateNode; // Rerender

  ReactCurrentOwner$3.current = workInProgress;
  var nextChildren;

  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
    // If we captured an error, but getDerivedStateFrom catch is not defined,
    // unmount all the children. componentDidCatch will schedule an update to
    // re-render a fallback. This is temporary until we migrate everyone to
    // the new API.
    // TODO: Warn in a future release.
    nextChildren = null;

    if (enableProfilerTimer) {
      stopProfilerTimerIfRunning(workInProgress);
    }
  } else {
    {
      setCurrentPhase('render');
      nextChildren = instance.render();

      if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
        instance.render();
      }

      setCurrentPhase(null);
    }
  } // React DevTools reads this flag.


  workInProgress.effectTag |= PerformedWork;

  if (current$$1 !== null && didCaptureError) {
    // If we're recovering from an error, reconcile without reusing any of
    // the existing children. Conceptually, the normal children and the children
    // that are shown on error are two different sets, so we shouldn't reuse
    // normal children even if their identities match.
    forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime);
  } else {
    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  } // Memoize state using the values we just used to render.
  // TODO: Restructure so we never read values from the instance.


  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.

  if (hasContext) {
    invalidateContextProvider(workInProgress, Component, true);
  }

  return workInProgress.child;
}

function pushHostRootContext(workInProgress) {
  var root = workInProgress.stateNode;

  if (root.pendingContext) {
    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
  } else if (root.context) {
    // Should always be set
    pushTopLevelContextObject(workInProgress, root.context, false);
  }

  pushHostContainer(workInProgress, root.containerInfo);
}

function updateHostRoot(current$$1, workInProgress, renderExpirationTime) {
  pushHostRootContext(workInProgress);
  var updateQueue = workInProgress.updateQueue;

  if (!(updateQueue !== null)) {
    {
      throw Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.");
    }
  }

  var nextProps = workInProgress.pendingProps;
  var prevState = workInProgress.memoizedState;
  var prevChildren = prevState !== null ? prevState.element : null;
  processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
  var nextState = workInProgress.memoizedState; // Caution: React DevTools currently depends on this property
  // being called "element".

  var nextChildren = nextState.element;

  if (nextChildren === prevChildren) {
    // If the state is the same as before, that's a bailout because we had
    // no work that expires at this time.
    resetHydrationState();
    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  }

  var root = workInProgress.stateNode;

  if (root.hydrate && enterHydrationState(workInProgress)) {
    // If we don't have any current children this might be the first pass.
    // We always try to hydrate. If this isn't a hydration pass there won't
    // be any children to hydrate which is effectively the same thing as
    // not hydrating.
    var child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    workInProgress.child = child;
    var node = child;

    while (node) {
      // Mark each child as hydrating. This is a fast path to know whether this
      // tree is part of a hydrating tree. This is used to determine if a child
      // node has fully mounted yet, and for scheduling event replaying.
      // Conceptually this is similar to Placement in that a new subtree is
      // inserted into the React tree here. It just happens to not need DOM
      // mutations because it already exists.
      node.effectTag = node.effectTag & ~Placement | Hydrating;
      node = node.sibling;
    }
  } else {
    // Otherwise reset hydration state in case we aborted and resumed another
    // root.
    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    resetHydrationState();
  }

  return workInProgress.child;
}

function updateHostComponent(current$$1, workInProgress, renderExpirationTime) {
  pushHostContext(workInProgress);

  if (current$$1 === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }

  var type = workInProgress.type;
  var nextProps = workInProgress.pendingProps;
  var prevProps = current$$1 !== null ? current$$1.memoizedProps : null;
  var nextChildren = nextProps.children;
  var isDirectTextChild = shouldSetTextContent(type, nextProps);

  if (isDirectTextChild) {
    // We special case a direct text child of a host node. This is a common
    // case. We won't handle it as a reified child. We will instead handle
    // this in the host environment that also have access to this prop. That
    // avoids allocating another HostText fiber and traversing it.
    nextChildren = null;
  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
    // If we're switching from a direct text child to a normal child, or to
    // empty, we need to schedule the text content to be reset.
    workInProgress.effectTag |= ContentReset;
  }

  markRef(current$$1, workInProgress); // Check the host config to see if the children are offscreen/hidden.

  if (workInProgress.mode & ConcurrentMode && renderExpirationTime !== Never && shouldDeprioritizeSubtree(type, nextProps)) {
    if (enableSchedulerTracing) {
      markSpawnedWork(Never);
    } // Schedule this fiber to re-render at offscreen priority. Then bailout.


    workInProgress.expirationTime = workInProgress.childExpirationTime = Never;
    return null;
  }

  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateHostText(current$$1, workInProgress) {
  if (current$$1 === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  } // Nothing to do here. This is terminal. We'll do the completion step
  // immediately after.


  return null;
}

function mountLazyComponent(_current, workInProgress, elementType, updateExpirationTime, renderExpirationTime) {
  if (_current !== null) {
    // An lazy component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

    workInProgress.effectTag |= Placement;
  }

  var props = workInProgress.pendingProps; // We can't start a User Timing measurement with correct label yet.
  // Cancel and resume right after we know the tag.

  cancelWorkTimer(workInProgress);
  var Component = readLazyComponentType(elementType); // Store the unwrapped component in the type.

  workInProgress.type = Component;
  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
  startWorkTimer(workInProgress);
  var resolvedProps = resolveDefaultProps(Component, props);
  var child;

  switch (resolvedTag) {
    case FunctionComponent:
      {
        {
          validateFunctionComponentInDev(workInProgress, Component);
          workInProgress.type = Component = resolveFunctionForHotReloading(Component);
        }

        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
        break;
      }

    case ClassComponent:
      {
        {
          workInProgress.type = Component = resolveClassForHotReloading(Component);
        }

        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
        break;
      }

    case ForwardRef:
      {
        {
          workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
        }

        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderExpirationTime);
        break;
      }

    case MemoComponent:
      {
        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = Component.propTypes;

            if (outerPropTypes) {
              checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only
              'prop', getComponentName(Component), getCurrentFiberStackInDev);
            }
          }
        }

        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too
        updateExpirationTime, renderExpirationTime);
        break;
      }

    default:
      {
        var hint = '';

        {
          if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
            hint = ' Did you wrap a component in React.lazy() more than once?';
          }
        } // This message intentionally doesn't mention ForwardRef or MemoComponent
        // because the fact that it's a separate type of work is an
        // implementation detail.


        {
          {
            throw Error("Element type is invalid. Received a promise that resolves to: " + Component + ". Lazy element type must resolve to a class or function." + hint);
          }
        }
      }
  }

  return child;
}

function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderExpirationTime) {
  if (_current !== null) {
    // An incomplete component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

    workInProgress.effectTag |= Placement;
  } // Promote the fiber to a class and try rendering again.


  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
  // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.

  var hasContext;

  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }

  prepareToReadContext(workInProgress, renderExpirationTime);
  constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
  mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
}

function mountIndeterminateComponent(_current, workInProgress, Component, renderExpirationTime) {
  if (_current !== null) {
    // An indeterminate component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

    workInProgress.effectTag |= Placement;
  }

  var props = workInProgress.pendingProps;
  var context;

  if (!disableLegacyContext) {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  prepareToReadContext(workInProgress, renderExpirationTime);
  var value;

  {
    if (Component.prototype && typeof Component.prototype.render === 'function') {
      var componentName = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutBadClass[componentName]) {
        warningWithoutStack$1(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
        didWarnAboutBadClass[componentName] = true;
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
    }

    ReactCurrentOwner$3.current = workInProgress;
    value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
  } // React DevTools reads this flag.


  workInProgress.effectTag |= PerformedWork;

  if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
    {
      var _componentName = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutModulePatternComponent[_componentName]) {
        warningWithoutStack$1(false, 'The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);
        didWarnAboutModulePatternComponent[_componentName] = true;
      }
    } // Proceed under the assumption that this is a class instance


    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.

    resetHooks(); // Push context providers early to prevent context stack mismatches.
    // During mounting we don't know the child context yet as the instance doesn't exist.
    // We will invalidate the child context in finishClassComponent() right after rendering.

    var hasContext = false;

    if (isContextProvider(Component)) {
      hasContext = true;
      pushContextProvider(workInProgress);
    } else {
      hasContext = false;
    }

    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
    var getDerivedStateFromProps = Component.getDerivedStateFromProps;

    if (typeof getDerivedStateFromProps === 'function') {
      applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
    }

    adoptClassInstance(workInProgress, value);
    mountClassInstance(workInProgress, Component, props, renderExpirationTime);
    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
  } else {
    // Proceed under the assumption that this is a function component
    workInProgress.tag = FunctionComponent;

    {
      if (disableLegacyContext && Component.contextTypes) {
        warningWithoutStack$1(false, '%s uses the legacy contextTypes API which is no longer supported. ' + 'Use React.createContext() with React.useContext() instead.', getComponentName(Component) || 'Unknown');
      }

      if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
        // Only double-render components with Hooks
        if (workInProgress.memoizedState !== null) {
          value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
        }
      }
    }

    reconcileChildren(null, workInProgress, value, renderExpirationTime);

    {
      validateFunctionComponentInDev(workInProgress, Component);
    }

    return workInProgress.child;
  }
}

function validateFunctionComponentInDev(workInProgress, Component) {
  if (Component) {
    !!Component.childContextTypes ? warningWithoutStack$1(false, '%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component') : void 0;
  }

  if (workInProgress.ref !== null) {
    var info = '';
    var ownerName = getCurrentFiberOwnerNameInDevOrNull();

    if (ownerName) {
      info += '\n\nCheck the render method of `' + ownerName + '`.';
    }

    var warningKey = ownerName || workInProgress._debugID || '';
    var debugSource = workInProgress._debugSource;

    if (debugSource) {
      warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
    }

    if (!didWarnAboutFunctionRefs[warningKey]) {
      didWarnAboutFunctionRefs[warningKey] = true;
      warning$1(false, 'Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);
    }
  }

  if (warnAboutDefaultPropsOnFunctionComponents && Component.defaultProps !== undefined) {
    var componentName = getComponentName(Component) || 'Unknown';

    if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
      warningWithoutStack$1(false, '%s: Support for defaultProps will be removed from function components ' + 'in a future major release. Use JavaScript default parameters instead.', componentName);
      didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
    }
  }

  if (typeof Component.getDerivedStateFromProps === 'function') {
    var _componentName2 = getComponentName(Component) || 'Unknown';

    if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName2]) {
      warningWithoutStack$1(false, '%s: Function components do not support getDerivedStateFromProps.', _componentName2);
      didWarnAboutGetDerivedStateOnFunctionComponent[_componentName2] = true;
    }
  }

  if (typeof Component.contextType === 'object' && Component.contextType !== null) {
    var _componentName3 = getComponentName(Component) || 'Unknown';

    if (!didWarnAboutContextTypeOnFunctionComponent[_componentName3]) {
      warningWithoutStack$1(false, '%s: Function components do not support contextType.', _componentName3);
      didWarnAboutContextTypeOnFunctionComponent[_componentName3] = true;
    }
  }
}

var SUSPENDED_MARKER = {
  dehydrated: null,
  retryTime: NoWork
};

function shouldRemainOnFallback(suspenseContext, current$$1, workInProgress) {
  // If the context is telling us that we should show a fallback, and we're not
  // already showing content, then we should show the fallback instead.
  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback) && (current$$1 === null || current$$1.memoizedState !== null);
}

function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
  var mode = workInProgress.mode;
  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.

  {
    if (shouldSuspend(workInProgress)) {
      workInProgress.effectTag |= DidCapture;
    }
  }

  var suspenseContext = suspenseStackCursor.current;
  var nextDidTimeout = false;
  var didSuspend = (workInProgress.effectTag & DidCapture) !== NoEffect;

  if (didSuspend || shouldRemainOnFallback(suspenseContext, current$$1, workInProgress)) {
    // Something in this boundary's subtree already suspended. Switch to
    // rendering the fallback children.
    nextDidTimeout = true;
    workInProgress.effectTag &= ~DidCapture;
  } else {
    // Attempting the main content
    if (current$$1 === null || current$$1.memoizedState !== null) {
      // This is a new mount or this boundary is already showing a fallback state.
      // Mark this subtree context as having at least one invisible parent that could
      // handle the fallback state.
      // Boundaries without fallbacks or should be avoided are not considered since
      // they cannot handle preferred fallback states.
      if (nextProps.fallback !== undefined && nextProps.unstable_avoidThisFallback !== true) {
        suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
      }
    }
  }

  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
  pushSuspenseContext(workInProgress, suspenseContext);

  {
    if ('maxDuration' in nextProps) {
      if (!didWarnAboutMaxDuration) {
        didWarnAboutMaxDuration = true;
        warning$1(false, 'maxDuration has been removed from React. ' + 'Remove the maxDuration prop.');
      }
    }
  } // This next part is a bit confusing. If the children timeout, we switch to
  // showing the fallback children in place of the "primary" children.
  // However, we don't want to delete the primary children because then their
  // state will be lost (both the React state and the host state, e.g.
  // uncontrolled form inputs). Instead we keep them mounted and hide them.
  // Both the fallback children AND the primary children are rendered at the
  // same time. Once the primary children are un-suspended, we can delete
  // the fallback children — don't need to preserve their state.
  //
  // The two sets of children are siblings in the host environment, but
  // semantically, for purposes of reconciliation, they are two separate sets.
  // So we store them using two fragment fibers.
  //
  // However, we want to avoid allocating extra fibers for every placeholder.
  // They're only necessary when the children time out, because that's the
  // only time when both sets are mounted.
  //
  // So, the extra fragment fibers are only used if the children time out.
  // Otherwise, we render the primary children directly. This requires some
  // custom reconciliation logic to preserve the state of the primary
  // children. It's essentially a very basic form of re-parenting.


  if (current$$1 === null) {
    // If we're currently hydrating, try to hydrate this boundary.
    // But only if this has a fallback.
    if (nextProps.fallback !== undefined) {
      tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.

      if (enableSuspenseServerRenderer) {
        var suspenseState = workInProgress.memoizedState;

        if (suspenseState !== null) {
          var dehydrated = suspenseState.dehydrated;

          if (dehydrated !== null) {
            return mountDehydratedSuspenseComponent(workInProgress, dehydrated, renderExpirationTime);
          }
        }
      }
    } // This is the initial mount. This branch is pretty simple because there's
    // no previous state that needs to be preserved.


    if (nextDidTimeout) {
      // Mount separate fragments for primary and fallback children.
      var nextFallbackChildren = nextProps.fallback;
      var primaryChildFragment = createFiberFromFragment(null, mode, NoWork, null);
      primaryChildFragment.return = workInProgress;

      if ((workInProgress.mode & BlockingMode) === NoMode) {
        // Outside of blocking mode, we commit the effects from the
        // partially completed, timed-out tree, too.
        var progressedState = workInProgress.memoizedState;
        var progressedPrimaryChild = progressedState !== null ? workInProgress.child.child : workInProgress.child;
        primaryChildFragment.child = progressedPrimaryChild;
        var progressedChild = progressedPrimaryChild;

        while (progressedChild !== null) {
          progressedChild.return = primaryChildFragment;
          progressedChild = progressedChild.sibling;
        }
      }

      var fallbackChildFragment = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);
      fallbackChildFragment.return = workInProgress;
      primaryChildFragment.sibling = fallbackChildFragment; // Skip the primary children, and continue working on the
      // fallback children.

      workInProgress.memoizedState = SUSPENDED_MARKER;
      workInProgress.child = primaryChildFragment;
      return fallbackChildFragment;
    } else {
      // Mount the primary children without an intermediate fragment fiber.
      var nextPrimaryChildren = nextProps.children;
      workInProgress.memoizedState = null;
      return workInProgress.child = mountChildFibers(workInProgress, null, nextPrimaryChildren, renderExpirationTime);
    }
  } else {
    // This is an update. This branch is more complicated because we need to
    // ensure the state of the primary children is preserved.
    var prevState = current$$1.memoizedState;

    if (prevState !== null) {
      if (enableSuspenseServerRenderer) {
        var _dehydrated = prevState.dehydrated;

        if (_dehydrated !== null) {
          if (!didSuspend) {
            return updateDehydratedSuspenseComponent(current$$1, workInProgress, _dehydrated, prevState, renderExpirationTime);
          } else if (workInProgress.memoizedState !== null) {
            // Something suspended and we should still be in dehydrated mode.
            // Leave the existing child in place.
            workInProgress.child = current$$1.child; // The dehydrated completion pass expects this flag to be there
            // but the normal suspense pass doesn't.

            workInProgress.effectTag |= DidCapture;
            return null;
          } else {
            // Suspended but we should no longer be in dehydrated mode.
            // Therefore we now have to render the fallback. Wrap the children
            // in a fragment fiber to keep them separate from the fallback
            // children.
            var _nextFallbackChildren = nextProps.fallback;

            var _primaryChildFragment = createFiberFromFragment( // It shouldn't matter what the pending props are because we aren't
            // going to render this fragment.
            null, mode, NoWork, null);

            _primaryChildFragment.return = workInProgress; // This is always null since we never want the previous child
            // that we're not going to hydrate.

            _primaryChildFragment.child = null;

            if ((workInProgress.mode & BlockingMode) === NoMode) {
              // Outside of blocking mode, we commit the effects from the
              // partially completed, timed-out tree, too.
              var _progressedChild = _primaryChildFragment.child = workInProgress.child;

              while (_progressedChild !== null) {
                _progressedChild.return = _primaryChildFragment;
                _progressedChild = _progressedChild.sibling;
              }
            } else {
              // We will have dropped the effect list which contains the deletion.
              // We need to reconcile to delete the current child.
              reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime);
            } // Because primaryChildFragment is a new fiber that we're inserting as the
            // parent of a new tree, we need to set its treeBaseDuration.


            if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
              // treeBaseDuration is the sum of all the child tree base durations.
              var treeBaseDuration = 0;
              var hiddenChild = _primaryChildFragment.child;

              while (hiddenChild !== null) {
                treeBaseDuration += hiddenChild.treeBaseDuration;
                hiddenChild = hiddenChild.sibling;
              }

              _primaryChildFragment.treeBaseDuration = treeBaseDuration;
            } // Create a fragment from the fallback children, too.


            var _fallbackChildFragment = createFiberFromFragment(_nextFallbackChildren, mode, renderExpirationTime, null);

            _fallbackChildFragment.return = workInProgress;
            _primaryChildFragment.sibling = _fallbackChildFragment;
            _fallbackChildFragment.effectTag |= Placement;
            _primaryChildFragment.childExpirationTime = NoWork;
            workInProgress.memoizedState = SUSPENDED_MARKER;
            workInProgress.child = _primaryChildFragment; // Skip the primary children, and continue working on the
            // fallback children.

            return _fallbackChildFragment;
          }
        }
      } // The current tree already timed out. That means each child set is
      // wrapped in a fragment fiber.


      var currentPrimaryChildFragment = current$$1.child;
      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;

      if (nextDidTimeout) {
        // Still timed out. Reuse the current primary children by cloning
        // its fragment. We're going to skip over these entirely.
        var _nextFallbackChildren2 = nextProps.fallback;

        var _primaryChildFragment2 = createWorkInProgress(currentPrimaryChildFragment, currentPrimaryChildFragment.pendingProps, NoWork);

        _primaryChildFragment2.return = workInProgress;

        if ((workInProgress.mode & BlockingMode) === NoMode) {
          // Outside of blocking mode, we commit the effects from the
          // partially completed, timed-out tree, too.
          var _progressedState = workInProgress.memoizedState;

          var _progressedPrimaryChild = _progressedState !== null ? workInProgress.child.child : workInProgress.child;

          if (_progressedPrimaryChild !== currentPrimaryChildFragment.child) {
            _primaryChildFragment2.child = _progressedPrimaryChild;
            var _progressedChild2 = _progressedPrimaryChild;

            while (_progressedChild2 !== null) {
              _progressedChild2.return = _primaryChildFragment2;
              _progressedChild2 = _progressedChild2.sibling;
            }
          }
        } // Because primaryChildFragment is a new fiber that we're inserting as the
        // parent of a new tree, we need to set its treeBaseDuration.


        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
          // treeBaseDuration is the sum of all the child tree base durations.
          var _treeBaseDuration = 0;
          var _hiddenChild = _primaryChildFragment2.child;

          while (_hiddenChild !== null) {
            _treeBaseDuration += _hiddenChild.treeBaseDuration;
            _hiddenChild = _hiddenChild.sibling;
          }

          _primaryChildFragment2.treeBaseDuration = _treeBaseDuration;
        } // Clone the fallback child fragment, too. These we'll continue
        // working on.


        var _fallbackChildFragment2 = createWorkInProgress(currentFallbackChildFragment, _nextFallbackChildren2, currentFallbackChildFragment.expirationTime);

        _fallbackChildFragment2.return = workInProgress;
        _primaryChildFragment2.sibling = _fallbackChildFragment2;
        _primaryChildFragment2.childExpirationTime = NoWork; // Skip the primary children, and continue working on the
        // fallback children.

        workInProgress.memoizedState = SUSPENDED_MARKER;
        workInProgress.child = _primaryChildFragment2;
        return _fallbackChildFragment2;
      } else {
        // No longer suspended. Switch back to showing the primary children,
        // and remove the intermediate fragment fiber.
        var _nextPrimaryChildren = nextProps.children;
        var currentPrimaryChild = currentPrimaryChildFragment.child;
        var primaryChild = reconcileChildFibers(workInProgress, currentPrimaryChild, _nextPrimaryChildren, renderExpirationTime); // If this render doesn't suspend, we need to delete the fallback
        // children. Wait until the complete phase, after we've confirmed the
        // fallback is no longer needed.
        // TODO: Would it be better to store the fallback fragment on
        // the stateNode?
        // Continue rendering the children, like we normally do.

        workInProgress.memoizedState = null;
        return workInProgress.child = primaryChild;
      }
    } else {
      // The current tree has not already timed out. That means the primary
      // children are not wrapped in a fragment fiber.
      var _currentPrimaryChild = current$$1.child;

      if (nextDidTimeout) {
        // Timed out. Wrap the children in a fragment fiber to keep them
        // separate from the fallback children.
        var _nextFallbackChildren3 = nextProps.fallback;

        var _primaryChildFragment3 = createFiberFromFragment( // It shouldn't matter what the pending props are because we aren't
        // going to render this fragment.
        null, mode, NoWork, null);

        _primaryChildFragment3.return = workInProgress;
        _primaryChildFragment3.child = _currentPrimaryChild;

        if (_currentPrimaryChild !== null) {
          _currentPrimaryChild.return = _primaryChildFragment3;
        } // Even though we're creating a new fiber, there are no new children,
        // because we're reusing an already mounted tree. So we don't need to
        // schedule a placement.
        // primaryChildFragment.effectTag |= Placement;


        if ((workInProgress.mode & BlockingMode) === NoMode) {
          // Outside of blocking mode, we commit the effects from the
          // partially completed, timed-out tree, too.
          var _progressedState2 = workInProgress.memoizedState;

          var _progressedPrimaryChild2 = _progressedState2 !== null ? workInProgress.child.child : workInProgress.child;

          _primaryChildFragment3.child = _progressedPrimaryChild2;
          var _progressedChild3 = _progressedPrimaryChild2;

          while (_progressedChild3 !== null) {
            _progressedChild3.return = _primaryChildFragment3;
            _progressedChild3 = _progressedChild3.sibling;
          }
        } // Because primaryChildFragment is a new fiber that we're inserting as the
        // parent of a new tree, we need to set its treeBaseDuration.


        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
          // treeBaseDuration is the sum of all the child tree base durations.
          var _treeBaseDuration2 = 0;
          var _hiddenChild2 = _primaryChildFragment3.child;

          while (_hiddenChild2 !== null) {
            _treeBaseDuration2 += _hiddenChild2.treeBaseDuration;
            _hiddenChild2 = _hiddenChild2.sibling;
          }

          _primaryChildFragment3.treeBaseDuration = _treeBaseDuration2;
        } // Create a fragment from the fallback children, too.


        var _fallbackChildFragment3 = createFiberFromFragment(_nextFallbackChildren3, mode, renderExpirationTime, null);

        _fallbackChildFragment3.return = workInProgress;
        _primaryChildFragment3.sibling = _fallbackChildFragment3;
        _fallbackChildFragment3.effectTag |= Placement;
        _primaryChildFragment3.childExpirationTime = NoWork; // Skip the primary children, and continue working on the
        // fallback children.

        workInProgress.memoizedState = SUSPENDED_MARKER;
        workInProgress.child = _primaryChildFragment3;
        return _fallbackChildFragment3;
      } else {
        // Still haven't timed out.  Continue rendering the children, like we
        // normally do.
        workInProgress.memoizedState = null;
        var _nextPrimaryChildren2 = nextProps.children;
        return workInProgress.child = reconcileChildFibers(workInProgress, _currentPrimaryChild, _nextPrimaryChildren2, renderExpirationTime);
      }
    }
  }
}

function retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime) {
  // We're now not suspended nor dehydrated.
  workInProgress.memoizedState = null; // Retry with the full children.

  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children; // This will ensure that the children get Placement effects and
  // that the old child gets a Deletion effect.
  // We could also call forceUnmountCurrentAndReconcile.

  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderExpirationTime) {
  // During the first pass, we'll bail out and not drill into the children.
  // Instead, we'll leave the content in place and try to hydrate it later.
  if ((workInProgress.mode & BlockingMode) === NoMode) {
    {
      warning$1(false, 'Cannot hydrate Suspense in legacy mode. Switch from ' + 'ReactDOM.hydrate(element, container) to ' + 'ReactDOM.createBlockingRoot(container, { hydrate: true })' + '.render(element) or remove the Suspense components from ' + 'the server rendered components.');
    }

    workInProgress.expirationTime = Sync;
  } else if (isSuspenseInstanceFallback(suspenseInstance)) {
    // This is a client-only boundary. Since we won't get any content from the server
    // for this, we need to schedule that at a higher priority based on when it would
    // have timed out. In theory we could render it in this pass but it would have the
    // wrong priority associated with it and will prevent hydration of parent path.
    // Instead, we'll leave work left on it to render it in a separate commit.
    // TODO This time should be the time at which the server rendered response that is
    // a parent to this boundary was displayed. However, since we currently don't have
    // a protocol to transfer that time, we'll just estimate it by using the current
    // time. This will mean that Suspense timeouts are slightly shifted to later than
    // they should be.
    var serverDisplayTime = requestCurrentTimeForUpdate(); // Schedule a normal pri update to render this content.

    var newExpirationTime = computeAsyncExpiration(serverDisplayTime);

    if (enableSchedulerTracing) {
      markSpawnedWork(newExpirationTime);
    }

    workInProgress.expirationTime = newExpirationTime;
  } else {
    // We'll continue hydrating the rest at offscreen priority since we'll already
    // be showing the right content coming from the server, it is no rush.
    workInProgress.expirationTime = Never;

    if (enableSchedulerTracing) {
      markSpawnedWork(Never);
    }
  }

  return null;
}

function updateDehydratedSuspenseComponent(current$$1, workInProgress, suspenseInstance, suspenseState, renderExpirationTime) {
  // We should never be hydrating at this point because it is the first pass,
  // but after we've already committed once.
  warnIfHydrating();

  if ((workInProgress.mode & BlockingMode) === NoMode) {
    return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
  }

  if (isSuspenseInstanceFallback(suspenseInstance)) {
    // This boundary is in a permanent fallback state. In this case, we'll never
    // get an update and we'll never be able to hydrate the final content. Let's just try the
    // client side render instead.
    return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
  } // We use childExpirationTime to indicate that a child might depend on context, so if
  // any context has changed, we need to treat is as if the input might have changed.


  var hasContextChanged$$1 = current$$1.childExpirationTime >= renderExpirationTime;

  if (didReceiveUpdate || hasContextChanged$$1) {
    // This boundary has changed since the first render. This means that we are now unable to
    // hydrate it. We might still be able to hydrate it using an earlier expiration time, if
    // we are rendering at lower expiration than sync.
    if (renderExpirationTime < Sync) {
      if (suspenseState.retryTime <= renderExpirationTime) {
        // This render is even higher pri than we've seen before, let's try again
        // at even higher pri.
        var attemptHydrationAtExpirationTime = renderExpirationTime + 1;
        suspenseState.retryTime = attemptHydrationAtExpirationTime;
        scheduleWork(current$$1, attemptHydrationAtExpirationTime); // TODO: Early abort this render.
      } else {// We have already tried to ping at a higher priority than we're rendering with
          // so if we got here, we must have failed to hydrate at those levels. We must
          // now give up. Instead, we're going to delete the whole subtree and instead inject
          // a new real Suspense boundary to take its place, which may render content
          // or fallback. This might suspend for a while and if it does we might still have
          // an opportunity to hydrate before this pass commits.
        }
    } // If we have scheduled higher pri work above, this will probably just abort the render
    // since we now have higher priority work, but in case it doesn't, we need to prepare to
    // render something, if we time out. Even if that requires us to delete everything and
    // skip hydration.
    // Delay having to do this as long as the suspense timeout allows us.


    renderDidSuspendDelayIfPossible();
    return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
  } else if (isSuspenseInstancePending(suspenseInstance)) {
    // This component is still pending more data from the server, so we can't hydrate its
    // content. We treat it as if this component suspended itself. It might seem as if
    // we could just try to render it client-side instead. However, this will perform a
    // lot of unnecessary work and is unlikely to complete since it often will suspend
    // on missing data anyway. Additionally, the server might be able to render more
    // than we can on the client yet. In that case we'd end up with more fallback states
    // on the client than if we just leave it alone. If the server times out or errors
    // these should update this boundary to the permanent Fallback state instead.
    // Mark it as having captured (i.e. suspended).
    workInProgress.effectTag |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.

    workInProgress.child = current$$1.child; // Register a callback to retry this boundary once the server has sent the result.

    registerSuspenseInstanceRetry(suspenseInstance, retryDehydratedSuspenseBoundary.bind(null, current$$1));
    return null;
  } else {
    // This is the first attempt.
    reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance);
    var nextProps = workInProgress.pendingProps;
    var nextChildren = nextProps.children;
    var child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    var node = child;

    while (node) {
      // Mark each child as hydrating. This is a fast path to know whether this
      // tree is part of a hydrating tree. This is used to determine if a child
      // node has fully mounted yet, and for scheduling event replaying.
      // Conceptually this is similar to Placement in that a new subtree is
      // inserted into the React tree here. It just happens to not need DOM
      // mutations because it already exists.
      node.effectTag |= Hydrating;
      node = node.sibling;
    }

    workInProgress.child = child;
    return workInProgress.child;
  }
}

function scheduleWorkOnFiber(fiber, renderExpirationTime) {
  if (fiber.expirationTime < renderExpirationTime) {
    fiber.expirationTime = renderExpirationTime;
  }

  var alternate = fiber.alternate;

  if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
    alternate.expirationTime = renderExpirationTime;
  }

  scheduleWorkOnParentPath(fiber.return, renderExpirationTime);
}

function propagateSuspenseContextChange(workInProgress, firstChild, renderExpirationTime) {
  // Mark any Suspense boundaries with fallbacks as having work to do.
  // If they were previously forced into fallbacks, they may now be able
  // to unblock.
  var node = firstChild;

  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;

      if (state !== null) {
        scheduleWorkOnFiber(node, renderExpirationTime);
      }
    } else if (node.tag === SuspenseListComponent) {
      // If the tail is hidden there might not be an Suspense boundaries
      // to schedule work on. In this case we have to schedule it on the
      // list itself.
      // We don't have to traverse to the children of the list since
      // the list will propagate the change when it rerenders.
      scheduleWorkOnFiber(node, renderExpirationTime);
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === workInProgress) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === workInProgress) {
        return;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function findLastContentRow(firstChild) {
  // This is going to find the last row among these children that is already
  // showing content on the screen, as opposed to being in fallback state or
  // new. If a row has multiple Suspense boundaries, any of them being in the
  // fallback state, counts as the whole row being in a fallback state.
  // Note that the "rows" will be workInProgress, but any nested children
  // will still be current since we haven't rendered them yet. The mounted
  // order may not be the same as the new order. We use the new order.
  var row = firstChild;
  var lastContentRow = null;

  while (row !== null) {
    var currentRow = row.alternate; // New rows can't be content rows.

    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
      lastContentRow = row;
    }

    row = row.sibling;
  }

  return lastContentRow;
}

function validateRevealOrder(revealOrder) {
  {
    if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
      didWarnAboutRevealOrder[revealOrder] = true;

      if (typeof revealOrder === 'string') {
        switch (revealOrder.toLowerCase()) {
          case 'together':
          case 'forwards':
          case 'backwards':
            {
              warning$1(false, '"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
              break;
            }

          case 'forward':
          case 'backward':
            {
              warning$1(false, '"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
              break;
            }

          default:
            warning$1(false, '"%s" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
            break;
        }
      } else {
        warning$1(false, '%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
      }
    }
  }
}

function validateTailOptions(tailMode, revealOrder) {
  {
    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
        didWarnAboutTailOptions[tailMode] = true;
        warning$1(false, '"%s" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean "collapsed" or "hidden"?', tailMode);
      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
        didWarnAboutTailOptions[tailMode] = true;
        warning$1(false, '<SuspenseList tail="%s" /> is only valid if revealOrder is ' + '"forwards" or "backwards". ' + 'Did you mean to specify revealOrder="forwards"?', tailMode);
      }
    }
  }
}

function validateSuspenseListNestedChild(childSlot, index) {
  {
    var isArray = Array.isArray(childSlot);
    var isIterable = !isArray && typeof getIteratorFn(childSlot) === 'function';

    if (isArray || isIterable) {
      var type = isArray ? 'array' : 'iterable';
      warning$1(false, 'A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);
      return false;
    }
  }

  return true;
}

function validateSuspenseListChildren(children, revealOrder) {
  {
    if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          if (!validateSuspenseListNestedChild(children[i], i)) {
            return;
          }
        }
      } else {
        var iteratorFn = getIteratorFn(children);

        if (typeof iteratorFn === 'function') {
          var childrenIterator = iteratorFn.call(children);

          if (childrenIterator) {
            var step = childrenIterator.next();
            var _i = 0;

            for (; !step.done; step = childrenIterator.next()) {
              if (!validateSuspenseListNestedChild(step.value, _i)) {
                return;
              }

              _i++;
            }
          }
        } else {
          warning$1(false, 'A single row was passed to a <SuspenseList revealOrder="%s" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);
        }
      }
    }
  }
}

function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode, lastEffectBeforeRendering) {
  var renderState = workInProgress.memoizedState;

  if (renderState === null) {
    workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode,
      lastEffect: lastEffectBeforeRendering
    };
  } else {
    // We can reuse the existing object from previous renders.
    renderState.isBackwards = isBackwards;
    renderState.rendering = null;
    renderState.last = lastContentRow;
    renderState.tail = tail;
    renderState.tailExpiration = 0;
    renderState.tailMode = tailMode;
    renderState.lastEffect = lastEffectBeforeRendering;
  }
} // This can end up rendering this component multiple passes.
// The first pass splits the children fibers into two sets. A head and tail.
// We first render the head. If anything is in fallback state, we do another
// pass through beginWork to rerender all children (including the tail) with
// the force suspend context. If the first render didn't have anything in
// in fallback state. Then we render each row in the tail one-by-one.
// That happens in the completeWork phase without going back to beginWork.


function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
  var nextProps = workInProgress.pendingProps;
  var revealOrder = nextProps.revealOrder;
  var tailMode = nextProps.tail;
  var newChildren = nextProps.children;
  validateRevealOrder(revealOrder);
  validateTailOptions(tailMode, revealOrder);
  validateSuspenseListChildren(newChildren, revealOrder);
  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
  var suspenseContext = suspenseStackCursor.current;
  var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);

  if (shouldForceFallback) {
    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
    workInProgress.effectTag |= DidCapture;
  } else {
    var didSuspendBefore = current$$1 !== null && (current$$1.effectTag & DidCapture) !== NoEffect;

    if (didSuspendBefore) {
      // If we previously forced a fallback, we need to schedule work
      // on any nested boundaries to let them know to try to render
      // again. This is the same as context updating.
      propagateSuspenseContextChange(workInProgress, workInProgress.child, renderExpirationTime);
    }

    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
  }

  pushSuspenseContext(workInProgress, suspenseContext);

  if ((workInProgress.mode & BlockingMode) === NoMode) {
    // Outside of blocking mode, SuspenseList doesn't work so we just
    // use make it a noop by treating it as the default revealOrder.
    workInProgress.memoizedState = null;
  } else {
    switch (revealOrder) {
      case 'forwards':
        {
          var lastContentRow = findLastContentRow(workInProgress.child);
          var tail;

          if (lastContentRow === null) {
            // The whole list is part of the tail.
            // TODO: We could fast path by just rendering the tail now.
            tail = workInProgress.child;
            workInProgress.child = null;
          } else {
            // Disconnect the tail rows after the content row.
            // We're going to render them separately later.
            tail = lastContentRow.sibling;
            lastContentRow.sibling = null;
          }

          initSuspenseListRenderState(workInProgress, false, // isBackwards
          tail, lastContentRow, tailMode, workInProgress.lastEffect);
          break;
        }

      case 'backwards':
        {
          // We're going to find the first row that has existing content.
          // At the same time we're going to reverse the list of everything
          // we pass in the meantime. That's going to be our tail in reverse
          // order.
          var _tail = null;
          var row = workInProgress.child;
          workInProgress.child = null;

          while (row !== null) {
            var currentRow = row.alternate; // New rows can't be content rows.

            if (currentRow !== null && findFirstSuspended(currentRow) === null) {
              // This is the beginning of the main content.
              workInProgress.child = row;
              break;
            }

            var nextRow = row.sibling;
            row.sibling = _tail;
            _tail = row;
            row = nextRow;
          } // TODO: If workInProgress.child is null, we can continue on the tail immediately.


          initSuspenseListRenderState(workInProgress, true, // isBackwards
          _tail, null, // last
          tailMode, workInProgress.lastEffect);
          break;
        }

      case 'together':
        {
          initSuspenseListRenderState(workInProgress, false, // isBackwards
          null, // tail
          null, // last
          undefined, workInProgress.lastEffect);
          break;
        }

      default:
        {
          // The default reveal order is the same as not having
          // a boundary.
          workInProgress.memoizedState = null;
        }
    }
  }

  return workInProgress.child;
}

function updatePortalComponent(current$$1, workInProgress, renderExpirationTime) {
  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
  var nextChildren = workInProgress.pendingProps;

  if (current$$1 === null) {
    // Portals are special because we don't append the children during mount
    // but at commit. Therefore we need to track insertions which the normal
    // flow doesn't do during mount. This doesn't happen at the root because
    // the root always starts with a "current" with a null child.
    // TODO: Consider unifying this with how the root works.
    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
  } else {
    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  }

  return workInProgress.child;
}

function updateContextProvider(current$$1, workInProgress, renderExpirationTime) {
  var providerType = workInProgress.type;
  var context = providerType._context;
  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;
  var newValue = newProps.value;

  {
    var providerPropTypes = workInProgress.type.propTypes;

    if (providerPropTypes) {
      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackInDev);
    }
  }

  pushProvider(workInProgress, newValue);

  if (oldProps !== null) {
    var oldValue = oldProps.value;
    var changedBits = calculateChangedBits(context, newValue, oldValue);

    if (changedBits === 0) {
      // No change. Bailout early if children are the same.
      if (oldProps.children === newProps.children && !hasContextChanged()) {
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }
    } else {
      // The context value changed. Search for matching consumers and schedule
      // them to update.
      propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
    }
  }

  var newChildren = newProps.children;
  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
  return workInProgress.child;
}

var hasWarnedAboutUsingContextAsConsumer = false;

function updateContextConsumer(current$$1, workInProgress, renderExpirationTime) {
  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
  // DEV mode, we create a separate object for Context.Consumer that acts
  // like a proxy to Context. This proxy object adds unnecessary code in PROD
  // so we use the old behaviour (Context.Consumer references Context) to
  // reduce size and overhead. The separate object references context via
  // a property called "_context", which also gives us the ability to check
  // in DEV mode if this property exists or not and warn if it does not.

  {
    if (context._context === undefined) {
      // This may be because it's a Context (rather than a Consumer).
      // Or it may be because it's older React where they're the same thing.
      // We only want to warn if we're sure it's a new React.
      if (context !== context.Consumer) {
        if (!hasWarnedAboutUsingContextAsConsumer) {
          hasWarnedAboutUsingContextAsConsumer = true;
          warning$1(false, 'Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
        }
      }
    } else {
      context = context._context;
    }
  }

  var newProps = workInProgress.pendingProps;
  var render = newProps.children;

  {
    !(typeof render === 'function') ? warningWithoutStack$1(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
  }

  prepareToReadContext(workInProgress, renderExpirationTime);
  var newValue = readContext(context, newProps.unstable_observedBits);
  var newChildren;

  {
    ReactCurrentOwner$3.current = workInProgress;
    setCurrentPhase('render');
    newChildren = render(newValue);
    setCurrentPhase(null);
  } // React DevTools reads this flag.


  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateFundamentalComponent$1(current$$1, workInProgress, renderExpirationTime) {
  var fundamentalImpl = workInProgress.type.impl;

  if (fundamentalImpl.reconcileChildren === false) {
    return null;
  }

  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateScopeComponent(current$$1, workInProgress, renderExpirationTime) {
  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function markWorkInProgressReceivedUpdate() {
  didReceiveUpdate = true;
}

function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
  cancelWorkTimer(workInProgress);

  if (current$$1 !== null) {
    // Reuse previous dependencies
    workInProgress.dependencies = current$$1.dependencies;
  }

  if (enableProfilerTimer) {
    // Don't update "base" render times for bailouts.
    stopProfilerTimerIfRunning(workInProgress);
  }

  var updateExpirationTime = workInProgress.expirationTime;

  if (updateExpirationTime !== NoWork) {
    markUnprocessedUpdateTime(updateExpirationTime);
  } // Check if the children have any pending work.


  var childExpirationTime = workInProgress.childExpirationTime;

  if (childExpirationTime < renderExpirationTime) {
    // The children don't have any work either. We can skip them.
    // TODO: Once we add back resuming, we should check if the children are
    // a work-in-progress set. If so, we need to transfer their effects.
    return null;
  } else {
    // This fiber doesn't have work, but its subtree does. Clone the child
    // fibers and continue.
    cloneChildFibers(current$$1, workInProgress);
    return workInProgress.child;
  }
}

function remountFiber(current$$1, oldWorkInProgress, newWorkInProgress) {
  {
    var returnFiber = oldWorkInProgress.return;

    if (returnFiber === null) {
      throw new Error('Cannot swap the root fiber.');
    } // Disconnect from the old current.
    // It will get deleted.


    current$$1.alternate = null;
    oldWorkInProgress.alternate = null; // Connect to the new tree.

    newWorkInProgress.index = oldWorkInProgress.index;
    newWorkInProgress.sibling = oldWorkInProgress.sibling;
    newWorkInProgress.return = oldWorkInProgress.return;
    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.

    if (oldWorkInProgress === returnFiber.child) {
      returnFiber.child = newWorkInProgress;
    } else {
      var prevSibling = returnFiber.child;

      if (prevSibling === null) {
        throw new Error('Expected parent to have a child.');
      }

      while (prevSibling.sibling !== oldWorkInProgress) {
        prevSibling = prevSibling.sibling;

        if (prevSibling === null) {
          throw new Error('Expected to find the previous sibling.');
        }
      }

      prevSibling.sibling = newWorkInProgress;
    } // Delete the old fiber and place the new one.
    // Since the old fiber is disconnected, we have to schedule it manually.


    var last = returnFiber.lastEffect;

    if (last !== null) {
      last.nextEffect = current$$1;
      returnFiber.lastEffect = current$$1;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = current$$1;
    }

    current$$1.nextEffect = null;
    current$$1.effectTag = Deletion;
    newWorkInProgress.effectTag |= Placement; // Restart work from the new fiber.

    return newWorkInProgress;
  }
}

function beginWork$1(current$$1, workInProgress, renderExpirationTime) {
  var updateExpirationTime = workInProgress.expirationTime;

  {
    if (workInProgress._debugNeedsRemount && current$$1 !== null) {
      // This will restart the begin phase with a new fiber.
      return remountFiber(current$$1, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.expirationTime));
    }
  }

  if (current$$1 !== null) {
    var oldProps = current$$1.memoizedProps;
    var newProps = workInProgress.pendingProps;

    if (oldProps !== newProps || hasContextChanged() || ( // Force a re-render if the implementation changed due to hot reload:
    workInProgress.type !== current$$1.type)) {
      // If props or context changed, mark the fiber as having performed work.
      // This may be unset if the props are determined to be equal later (memo).
      didReceiveUpdate = true;
    } else if (updateExpirationTime < renderExpirationTime) {
      didReceiveUpdate = false; // This fiber does not have any pending work. Bailout without entering
      // the begin phase. There's still some bookkeeping we that needs to be done
      // in this optimized path, mostly pushing stuff onto the stack.

      switch (workInProgress.tag) {
        case HostRoot:
          pushHostRootContext(workInProgress);
          resetHydrationState();
          break;

        case HostComponent:
          pushHostContext(workInProgress);

          if (workInProgress.mode & ConcurrentMode && renderExpirationTime !== Never && shouldDeprioritizeSubtree(workInProgress.type, newProps)) {
            if (enableSchedulerTracing) {
              markSpawnedWork(Never);
            } // Schedule this fiber to re-render at offscreen priority. Then bailout.


            workInProgress.expirationTime = workInProgress.childExpirationTime = Never;
            return null;
          }

          break;

        case ClassComponent:
          {
            var Component = workInProgress.type;

            if (isContextProvider(Component)) {
              pushContextProvider(workInProgress);
            }

            break;
          }

        case HostPortal:
          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
          break;

        case ContextProvider:
          {
            var newValue = workInProgress.memoizedProps.value;
            pushProvider(workInProgress, newValue);
            break;
          }

        case Profiler:
          if (enableProfilerTimer) {
            // Profiler should only call onRender when one of its descendants actually rendered.
            var hasChildWork = workInProgress.childExpirationTime >= renderExpirationTime;

            if (hasChildWork) {
              workInProgress.effectTag |= Update;
            }
          }

          break;

        case SuspenseComponent:
          {
            var state = workInProgress.memoizedState;

            if (state !== null) {
              if (enableSuspenseServerRenderer) {
                if (state.dehydrated !== null) {
                  pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has
                  // been unsuspended it has committed as a resolved Suspense component.
                  // If it needs to be retried, it should have work scheduled on it.

                  workInProgress.effectTag |= DidCapture;
                  break;
                }
              } // If this boundary is currently timed out, we need to decide
              // whether to retry the primary children, or to skip over it and
              // go straight to the fallback. Check the priority of the primary
              // child fragment.


              var primaryChildFragment = workInProgress.child;
              var primaryChildExpirationTime = primaryChildFragment.childExpirationTime;

              if (primaryChildExpirationTime !== NoWork && primaryChildExpirationTime >= renderExpirationTime) {
                // The primary children have pending work. Use the normal path
                // to attempt to render the primary children again.
                return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
              } else {
                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                // priority. Bailout.

                var child = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);

                if (child !== null) {
                  // The fallback children have pending work. Skip over the
                  // primary children and work on the fallback.
                  return child.sibling;
                } else {
                  return null;
                }
              }
            } else {
              pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
            }

            break;
          }

        case SuspenseListComponent:
          {
            var didSuspendBefore = (current$$1.effectTag & DidCapture) !== NoEffect;

            var _hasChildWork = workInProgress.childExpirationTime >= renderExpirationTime;

            if (didSuspendBefore) {
              if (_hasChildWork) {
                // If something was in fallback state last time, and we have all the
                // same children then we're still in progressive loading state.
                // Something might get unblocked by state updates or retries in the
                // tree which will affect the tail. So we need to use the normal
                // path to compute the correct tail.
                return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
              } // If none of the children had any work, that means that none of
              // them got retried so they'll still be blocked in the same way
              // as before. We can fast bail out.


              workInProgress.effectTag |= DidCapture;
            } // If nothing suspended before and we're rendering the same children,
            // then the tail doesn't matter. Anything new that suspends will work
            // in the "together" mode, so we can continue from the state we had.


            var renderState = workInProgress.memoizedState;

            if (renderState !== null) {
              // Reset to the "together" mode in case we've started a different
              // update in the past but didn't complete it.
              renderState.rendering = null;
              renderState.tail = null;
            }

            pushSuspenseContext(workInProgress, suspenseStackCursor.current);

            if (_hasChildWork) {
              break;
            } else {
              // If none of the children had any work, that means that none of
              // them got retried so they'll still be blocked in the same way
              // as before. We can fast bail out.
              return null;
            }
          }
      }

      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    } else {
      // An update was scheduled on this fiber, but there are no new props
      // nor legacy context. Set this to false. If an update queue or context
      // consumer produces a changed value, it will set this to true. Otherwise,
      // the component will assume the children have not changed and bail out.
      didReceiveUpdate = false;
    }
  } else {
    didReceiveUpdate = false;
  } // Before entering the begin phase, clear the expiration time.


  workInProgress.expirationTime = NoWork;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      {
        return mountIndeterminateComponent(current$$1, workInProgress, workInProgress.type, renderExpirationTime);
      }

    case LazyComponent:
      {
        var elementType = workInProgress.elementType;
        return mountLazyComponent(current$$1, workInProgress, elementType, updateExpirationTime, renderExpirationTime);
      }

    case FunctionComponent:
      {
        var _Component = workInProgress.type;
        var unresolvedProps = workInProgress.pendingProps;
        var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
        return updateFunctionComponent(current$$1, workInProgress, _Component, resolvedProps, renderExpirationTime);
      }

    case ClassComponent:
      {
        var _Component2 = workInProgress.type;
        var _unresolvedProps = workInProgress.pendingProps;

        var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);

        return updateClassComponent(current$$1, workInProgress, _Component2, _resolvedProps, renderExpirationTime);
      }

    case HostRoot:
      return updateHostRoot(current$$1, workInProgress, renderExpirationTime);

    case HostComponent:
      return updateHostComponent(current$$1, workInProgress, renderExpirationTime);

    case HostText:
      return updateHostText(current$$1, workInProgress);

    case SuspenseComponent:
      return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

    case HostPortal:
      return updatePortalComponent(current$$1, workInProgress, renderExpirationTime);

    case ForwardRef:
      {
        var type = workInProgress.type;
        var _unresolvedProps2 = workInProgress.pendingProps;

        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);

        return updateForwardRef(current$$1, workInProgress, type, _resolvedProps2, renderExpirationTime);
      }

    case Fragment:
      return updateFragment(current$$1, workInProgress, renderExpirationTime);

    case Mode:
      return updateMode(current$$1, workInProgress, renderExpirationTime);

    case Profiler:
      return updateProfiler(current$$1, workInProgress, renderExpirationTime);

    case ContextProvider:
      return updateContextProvider(current$$1, workInProgress, renderExpirationTime);

    case ContextConsumer:
      return updateContextConsumer(current$$1, workInProgress, renderExpirationTime);

    case MemoComponent:
      {
        var _type2 = workInProgress.type;
        var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.

        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);

        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = _type2.propTypes;

            if (outerPropTypes) {
              checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only
              'prop', getComponentName(_type2), getCurrentFiberStackInDev);
            }
          }
        }

        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
        return updateMemoComponent(current$$1, workInProgress, _type2, _resolvedProps3, updateExpirationTime, renderExpirationTime);
      }

    case SimpleMemoComponent:
      {
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);
      }

    case IncompleteClassComponent:
      {
        var _Component3 = workInProgress.type;
        var _unresolvedProps4 = workInProgress.pendingProps;

        var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);

        return mountIncompleteClassComponent(current$$1, workInProgress, _Component3, _resolvedProps4, renderExpirationTime);
      }

    case SuspenseListComponent:
      {
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
      }

    case FundamentalComponent:
      {
        if (enableFundamentalAPI) {
          return updateFundamentalComponent$1(current$$1, workInProgress, renderExpirationTime);
        }

        break;
      }

    case ScopeComponent:
      {
        if (enableScopeAPI) {
          return updateScopeComponent(current$$1, workInProgress, renderExpirationTime);
        }

        break;
      }
  }

  {
    {
      throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
  }
}

function createFundamentalStateInstance(currentFiber, props, impl, state) {
  return {
    currentFiber: currentFiber,
    impl: impl,
    instance: null,
    prevProps: null,
    props: props,
    state: state
  };
}

function isFiberSuspenseAndTimedOut(fiber) {
  return fiber.tag === SuspenseComponent && fiber.memoizedState !== null;
}

function getSuspenseFallbackChild(fiber) {
  return fiber.child.sibling.child;
}

var emptyObject$1 = {};

function collectScopedNodes(node, fn, scopedNodes) {
  if (enableScopeAPI) {
    if (node.tag === HostComponent) {
      var _type = node.type,
          memoizedProps = node.memoizedProps,
          stateNode = node.stateNode;

      var _instance = getPublicInstance(stateNode);

      if (_instance !== null && fn(_type, memoizedProps || emptyObject$1, _instance) === true) {
        scopedNodes.push(_instance);
      }
    }

    var child = node.child;

    if (isFiberSuspenseAndTimedOut(node)) {
      child = getSuspenseFallbackChild(node);
    }

    if (child !== null) {
      collectScopedNodesFromChildren(child, fn, scopedNodes);
    }
  }
}

function collectFirstScopedNode(node, fn) {
  if (enableScopeAPI) {
    if (node.tag === HostComponent) {
      var _type2 = node.type,
          memoizedProps = node.memoizedProps,
          stateNode = node.stateNode;

      var _instance2 = getPublicInstance(stateNode);

      if (_instance2 !== null && fn(_type2, memoizedProps, _instance2) === true) {
        return _instance2;
      }
    }

    var child = node.child;

    if (isFiberSuspenseAndTimedOut(node)) {
      child = getSuspenseFallbackChild(node);
    }

    if (child !== null) {
      return collectFirstScopedNodeFromChildren(child, fn);
    }
  }

  return null;
}

function collectScopedNodesFromChildren(startingChild, fn, scopedNodes) {
  var child = startingChild;

  while (child !== null) {
    collectScopedNodes(child, fn, scopedNodes);
    child = child.sibling;
  }
}

function collectFirstScopedNodeFromChildren(startingChild, fn) {
  var child = startingChild;

  while (child !== null) {
    var scopedNode = collectFirstScopedNode(child, fn);

    if (scopedNode !== null) {
      return scopedNode;
    }

    child = child.sibling;
  }

  return null;
}

function collectNearestScopeMethods(node, scope, childrenScopes) {
  if (isValidScopeNode(node, scope)) {
    childrenScopes.push(node.stateNode.methods);
  } else {
    var child = node.child;

    if (isFiberSuspenseAndTimedOut(node)) {
      child = getSuspenseFallbackChild(node);
    }

    if (child !== null) {
      collectNearestChildScopeMethods(child, scope, childrenScopes);
    }
  }
}

function collectNearestChildScopeMethods(startingChild, scope, childrenScopes) {
  var child = startingChild;

  while (child !== null) {
    collectNearestScopeMethods(child, scope, childrenScopes);
    child = child.sibling;
  }
}

function isValidScopeNode(node, scope) {
  return node.tag === ScopeComponent && node.type === scope && node.stateNode !== null;
}

function createScopeMethods(scope, instance) {
  return {
    getChildren: function () {
      var currentFiber = instance.fiber;
      var child = currentFiber.child;
      var childrenScopes = [];

      if (child !== null) {
        collectNearestChildScopeMethods(child, scope, childrenScopes);
      }

      return childrenScopes.length === 0 ? null : childrenScopes;
    },
    getChildrenFromRoot: function () {
      var currentFiber = instance.fiber;
      var node = currentFiber;

      while (node !== null) {
        var parent = node.return;

        if (parent === null) {
          break;
        }

        node = parent;

        if (node.tag === ScopeComponent && node.type === scope) {
          break;
        }
      }

      var childrenScopes = [];
      collectNearestChildScopeMethods(node.child, scope, childrenScopes);
      return childrenScopes.length === 0 ? null : childrenScopes;
    },
    getParent: function () {
      var node = instance.fiber.return;

      while (node !== null) {
        if (node.tag === ScopeComponent && node.type === scope) {
          return node.stateNode.methods;
        }

        node = node.return;
      }

      return null;
    },
    getProps: function () {
      var currentFiber = instance.fiber;
      return currentFiber.memoizedProps;
    },
    queryAllNodes: function (fn) {
      var currentFiber = instance.fiber;
      var child = currentFiber.child;
      var scopedNodes = [];

      if (child !== null) {
        collectScopedNodesFromChildren(child, fn, scopedNodes);
      }

      return scopedNodes.length === 0 ? null : scopedNodes;
    },
    queryFirstNode: function (fn) {
      var currentFiber = instance.fiber;
      var child = currentFiber.child;

      if (child !== null) {
        return collectFirstScopedNodeFromChildren(child, fn);
      }

      return null;
    },
    containsNode: function (node) {
      var fiber = getInstanceFromNode$2(node);

      while (fiber !== null) {
        if (fiber.tag === ScopeComponent && fiber.type === scope && fiber.stateNode === instance) {
          return true;
        }

        fiber = fiber.return;
      }

      return false;
    }
  };
}

function markUpdate(workInProgress) {
  // Tag the fiber with an update effect. This turns a Placement into
  // a PlacementAndUpdate.
  workInProgress.effectTag |= Update;
}

function markRef$1(workInProgress) {
  workInProgress.effectTag |= Ref;
}

var appendAllChildren;
var updateHostContainer;
var updateHostComponent$1;
var updateHostText$1;

if (supportsMutation) {
  // Mutation mode
  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;

    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendInitialChild(parent, node.stateNode);
      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
        appendInitialChild(parent, node.stateNode.instance);
      } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === workInProgress) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function (workInProgress) {// Noop
  };

  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    // If we have an alternate, that means this is an update and we need to
    // schedule a side-effect to do the updates.
    var oldProps = current.memoizedProps;

    if (oldProps === newProps) {
      // In mutation mode, this is sufficient for a bailout because
      // we won't touch this node even if children changed.
      return;
    } // If we get updated because one of our children updated, we don't
    // have newProps so we'll have to reuse them.
    // TODO: Split the update API as separate for the props vs. children.
    // Even better would be if children weren't special cased at all tho.


    var instance = workInProgress.stateNode;
    var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
    // component is hitting the resume path. Figure out why. Possibly
    // related to `hidden`.

    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.

    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
    // is a new ref we mark this as an update. All the work is done in commitWork.

    if (updatePayload) {
      markUpdate(workInProgress);
    }
  };

  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // If the text differs, mark it as an update. All the work in done in commitWork.
    if (oldText !== newText) {
      markUpdate(workInProgress);
    }
  };
} else if (supportsPersistence) {
  // Persistent host tree mode
  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;

    while (node !== null) {
      // eslint-disable-next-line no-labels
      branches: if (node.tag === HostComponent) {
        var instance = node.stateNode;

        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var props = node.memoizedProps;
          var type = node.type;
          instance = cloneHiddenInstance(instance, type, props, node);
        }

        appendInitialChild(parent, instance);
      } else if (node.tag === HostText) {
        var _instance = node.stateNode;

        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var text = node.memoizedProps;
          _instance = cloneHiddenTextInstance(_instance, text, node);
        }

        appendInitialChild(parent, _instance);
      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
        var _instance2 = node.stateNode.instance;

        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var _props = node.memoizedProps;
          var _type = node.type;
          _instance2 = cloneHiddenInstance(_instance2, _type, _props, node);
        }

        appendInitialChild(parent, _instance2);
      } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.tag === SuspenseComponent) {
        if ((node.effectTag & Update) !== NoEffect) {
          // Need to toggle the visibility of the primary children.
          var newIsHidden = node.memoizedState !== null;

          if (newIsHidden) {
            var primaryChildParent = node.child;

            if (primaryChildParent !== null) {
              if (primaryChildParent.child !== null) {
                primaryChildParent.child.return = primaryChildParent;
                appendAllChildren(parent, primaryChildParent, true, newIsHidden);
              }

              var fallbackChildParent = primaryChildParent.sibling;

              if (fallbackChildParent !== null) {
                fallbackChildParent.return = node;
                node = fallbackChildParent;
                continue;
              }
            }
          }
        }

        if (node.child !== null) {
          // Continue traversing like normal
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      } // $FlowFixMe This is correct but Flow is confused by the labeled break.


      node = node;

      if (node === workInProgress) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }; // An unfortunate fork of appendAllChildren because we have two different parent types.


  var appendAllChildrenToContainer = function (containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;

    while (node !== null) {
      // eslint-disable-next-line no-labels
      branches: if (node.tag === HostComponent) {
        var instance = node.stateNode;

        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var props = node.memoizedProps;
          var type = node.type;
          instance = cloneHiddenInstance(instance, type, props, node);
        }

        appendChildToContainerChildSet(containerChildSet, instance);
      } else if (node.tag === HostText) {
        var _instance3 = node.stateNode;

        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var text = node.memoizedProps;
          _instance3 = cloneHiddenTextInstance(_instance3, text, node);
        }

        appendChildToContainerChildSet(containerChildSet, _instance3);
      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
        var _instance4 = node.stateNode.instance;

        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var _props2 = node.memoizedProps;
          var _type2 = node.type;
          _instance4 = cloneHiddenInstance(_instance4, _type2, _props2, node);
        }

        appendChildToContainerChildSet(containerChildSet, _instance4);
      } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.tag === SuspenseComponent) {
        if ((node.effectTag & Update) !== NoEffect) {
          // Need to toggle the visibility of the primary children.
          var newIsHidden = node.memoizedState !== null;

          if (newIsHidden) {
            var primaryChildParent = node.child;

            if (primaryChildParent !== null) {
              if (primaryChildParent.child !== null) {
                primaryChildParent.child.return = primaryChildParent;
                appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, newIsHidden);
              }

              var fallbackChildParent = primaryChildParent.sibling;

              if (fallbackChildParent !== null) {
                fallbackChildParent.return = node;
                node = fallbackChildParent;
                continue;
              }
            }
          }
        }

        if (node.child !== null) {
          // Continue traversing like normal
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      } // $FlowFixMe This is correct but Flow is confused by the labeled break.


      node = node;

      if (node === workInProgress) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function (workInProgress) {
    var portalOrRoot = workInProgress.stateNode;
    var childrenUnchanged = workInProgress.firstEffect === null;

    if (childrenUnchanged) {// No changes, just reuse the existing instance.
    } else {
      var container = portalOrRoot.containerInfo;
      var newChildSet = createContainerChildSet(container); // If children might have changed, we have to add them all to the set.

      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
      portalOrRoot.pendingChildren = newChildSet; // Schedule an update on the container to swap out the container.

      markUpdate(workInProgress);
      finalizeContainerChildren(container, newChildSet);
    }
  };

  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    var currentInstance = current.stateNode;
    var oldProps = current.memoizedProps; // If there are no effects associated with this node, then none of our children had any updates.
    // This guarantees that we can reuse all of them.

    var childrenUnchanged = workInProgress.firstEffect === null;

    if (childrenUnchanged && oldProps === newProps) {
      // No changes, just reuse the existing instance.
      // Note that this might release a previous clone.
      workInProgress.stateNode = currentInstance;
      return;
    }

    var recyclableInstance = workInProgress.stateNode;
    var currentHostContext = getHostContext();
    var updatePayload = null;

    if (oldProps !== newProps) {
      updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
    }

    if (childrenUnchanged && updatePayload === null) {
      // No changes, just reuse the existing instance.
      // Note that this might release a previous clone.
      workInProgress.stateNode = currentInstance;
      return;
    }

    var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);

    if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
      markUpdate(workInProgress);
    }

    workInProgress.stateNode = newInstance;

    if (childrenUnchanged) {
      // If there are no other effects in this tree, we need to flag this node as having one.
      // Even though we're not going to use it for anything.
      // Otherwise parents won't know that there are new children to propagate upwards.
      markUpdate(workInProgress);
    } else {
      // If children might have changed, we have to add them all to the set.
      appendAllChildren(newInstance, workInProgress, false, false);
    }
  };

  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    if (oldText !== newText) {
      // If the text content differs, we'll create a new text instance for it.
      var rootContainerInstance = getRootHostContainer();
      var currentHostContext = getHostContext();
      workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress); // We'll have to mark it as having an effect, even though we won't use the effect for anything.
      // This lets the parents know that at least one of their children has changed.

      markUpdate(workInProgress);
    }
  };
} else {
  // No host operations
  updateHostContainer = function (workInProgress) {// Noop
  };

  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {// Noop
  };

  updateHostText$1 = function (current, workInProgress, oldText, newText) {// Noop
  };
}

function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
  switch (renderState.tailMode) {
    case 'hidden':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var tailNode = renderState.tail;
        var lastTailNode = null;

        while (tailNode !== null) {
          if (tailNode.alternate !== null) {
            lastTailNode = tailNode;
          }

          tailNode = tailNode.sibling;
        } // Next we're simply going to delete all insertions after the
        // last rendered item.


        if (lastTailNode === null) {
          // All remaining items in the tail are insertions.
          renderState.tail = null;
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          lastTailNode.sibling = null;
        }

        break;
      }

    case 'collapsed':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var _tailNode = renderState.tail;
        var _lastTailNode = null;

        while (_tailNode !== null) {
          if (_tailNode.alternate !== null) {
            _lastTailNode = _tailNode;
          }

          _tailNode = _tailNode.sibling;
        } // Next we're simply going to delete all insertions after the
        // last rendered item.


        if (_lastTailNode === null) {
          // All remaining items in the tail are insertions.
          if (!hasRenderedATailFallback && renderState.tail !== null) {
            // We suspended during the head. We want to show at least one
            // row at the tail. So we'll keep on and cut off the rest.
            renderState.tail.sibling = null;
          } else {
            renderState.tail = null;
          }
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          _lastTailNode.sibling = null;
        }

        break;
      }
  }
}

function completeWork(current, workInProgress, renderExpirationTime) {
  var newProps = workInProgress.pendingProps;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      break;

    case LazyComponent:
      break;

    case SimpleMemoComponent:
    case FunctionComponent:
      break;

    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }

        break;
      }

    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var fiberRoot = workInProgress.stateNode;

        if (fiberRoot.pendingContext) {
          fiberRoot.context = fiberRoot.pendingContext;
          fiberRoot.pendingContext = null;
        }

        if (current === null || current.child === null) {
          // If we hydrated, pop so that we can delete any remaining children
          // that weren't hydrated.
          var wasHydrated = popHydrationState(workInProgress);

          if (wasHydrated) {
            // If we hydrated, then we'll need to schedule an update for
            // the commit side-effects on the root.
            markUpdate(workInProgress);
          }
        }

        updateHostContainer(workInProgress);
        break;
      }

    case HostComponent:
      {
        popHostContext(workInProgress);
        var rootContainerInstance = getRootHostContainer();
        var type = workInProgress.type;

        if (current !== null && workInProgress.stateNode != null) {
          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);

          if (enableFlareAPI) {
            var prevListeners = current.memoizedProps.listeners;
            var nextListeners = newProps.listeners;

            if (prevListeners !== nextListeners) {
              markUpdate(workInProgress);
            }
          }

          if (current.ref !== workInProgress.ref) {
            markRef$1(workInProgress);
          }
        } else {
          if (!newProps) {
            if (!(workInProgress.stateNode !== null)) {
              {
                throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              }
            } // This can happen when we abort work.


            break;
          }

          var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
          // "stack" as the parent. Then append children as we go in beginWork
          // or completeWork depending on we want to add then top->down or
          // bottom->up. Top->down is faster in IE11.

          var _wasHydrated = popHydrationState(workInProgress);

          if (_wasHydrated) {
            // TODO: Move this and createInstance step into the beginPhase
            // to consolidate.
            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
              // If changes to the hydrated node needs to be applied at the
              // commit-phase we mark this as such.
              markUpdate(workInProgress);
            }

            if (enableFlareAPI) {
              var listeners = newProps.listeners;

              if (listeners != null) {
                updateEventListeners(listeners, workInProgress, rootContainerInstance);
              }
            }
          } else {
            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
            appendAllChildren(instance, workInProgress, false, false); // This needs to be set before we mount Flare event listeners

            workInProgress.stateNode = instance;

            if (enableFlareAPI) {
              var _listeners = newProps.listeners;

              if (_listeners != null) {
                updateEventListeners(_listeners, workInProgress, rootContainerInstance);
              }
            } // Certain renderers require commit-time effects for initial mount.
            // (eg DOM renderer supports auto-focus for certain elements).
            // Make sure such renderers get scheduled for later work.


            if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance, currentHostContext)) {
              markUpdate(workInProgress);
            }
          }

          if (workInProgress.ref !== null) {
            // If there is a ref on a host node we need to schedule a callback
            markRef$1(workInProgress);
          }
        }

        break;
      }

    case HostText:
      {
        var newText = newProps;

        if (current && workInProgress.stateNode != null) {
          var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
          // to schedule a side-effect to do the updates.

          updateHostText$1(current, workInProgress, oldText, newText);
        } else {
          if (typeof newText !== 'string') {
            if (!(workInProgress.stateNode !== null)) {
              {
                throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              }
            } // This can happen when we abort work.

          }

          var _rootContainerInstance = getRootHostContainer();

          var _currentHostContext = getHostContext();

          var _wasHydrated2 = popHydrationState(workInProgress);

          if (_wasHydrated2) {
            if (prepareToHydrateHostTextInstance(workInProgress)) {
              markUpdate(workInProgress);
            }
          } else {
            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
          }
        }

        break;
      }

    case ForwardRef:
      break;

    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);
        var nextState = workInProgress.memoizedState;

        if (enableSuspenseServerRenderer) {
          if (nextState !== null && nextState.dehydrated !== null) {
            if (current === null) {
              var _wasHydrated3 = popHydrationState(workInProgress);

              if (!_wasHydrated3) {
                {
                  throw Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                }
              }

              prepareToHydrateHostSuspenseInstance(workInProgress);

              if (enableSchedulerTracing) {
                markSpawnedWork(Never);
              }

              return null;
            } else {
              // We should never have been in a hydration state if we didn't have a current.
              // However, in some of those paths, we might have reentered a hydration state
              // and then we might be inside a hydration state. In that case, we'll need to
              // exit out of it.
              resetHydrationState();

              if ((workInProgress.effectTag & DidCapture) === NoEffect) {
                // This boundary did not suspend so it's now hydrated and unsuspended.
                workInProgress.memoizedState = null;
              } // If nothing suspended, we need to schedule an effect to mark this boundary
              // as having hydrated so events know that they're free be invoked.
              // It's also a signal to replay events and the suspense callback.
              // If something suspended, schedule an effect to attach retry listeners.
              // So we might as well always mark this.


              workInProgress.effectTag |= Update;
              return null;
            }
          }
        }

        if ((workInProgress.effectTag & DidCapture) !== NoEffect) {
          // Something suspended. Re-render with the fallback children.
          workInProgress.expirationTime = renderExpirationTime; // Do not reset the effect list.

          return workInProgress;
        }

        var nextDidTimeout = nextState !== null;
        var prevDidTimeout = false;

        if (current === null) {
          if (workInProgress.memoizedProps.fallback !== undefined) {
            popHydrationState(workInProgress);
          }
        } else {
          var prevState = current.memoizedState;
          prevDidTimeout = prevState !== null;

          if (!nextDidTimeout && prevState !== null) {
            // We just switched from the fallback to the normal children.
            // Delete the fallback.
            // TODO: Would it be better to store the fallback fragment on
            // the stateNode during the begin phase?
            var currentFallbackChild = current.child.sibling;

            if (currentFallbackChild !== null) {
              // Deletions go at the beginning of the return fiber's effect list
              var first = workInProgress.firstEffect;

              if (first !== null) {
                workInProgress.firstEffect = currentFallbackChild;
                currentFallbackChild.nextEffect = first;
              } else {
                workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;
                currentFallbackChild.nextEffect = null;
              }

              currentFallbackChild.effectTag = Deletion;
            }
          }
        }

        if (nextDidTimeout && !prevDidTimeout) {
          // If this subtreee is running in blocking mode we can suspend,
          // otherwise we won't suspend.
          // TODO: This will still suspend a synchronous tree if anything
          // in the concurrent tree already suspended during this render.
          // This is a known bug.
          if ((workInProgress.mode & BlockingMode) !== NoMode) {
            // TODO: Move this back to throwException because this is too late
            // if this is a large tree which is common for initial loads. We
            // don't know if we should restart a render or not until we get
            // this marker, and this is too late.
            // If this render already had a ping or lower pri updates,
            // and this is the first time we know we're going to suspend we
            // should be able to immediately restart from within throwException.
            var hasInvisibleChildContext = current === null && workInProgress.memoizedProps.unstable_avoidThisFallback !== true;

            if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
              // If this was in an invisible tree or a new render, then showing
              // this boundary is ok.
              renderDidSuspend();
            } else {
              // Otherwise, we're going to have to hide content so we should
              // suspend for longer if possible.
              renderDidSuspendDelayIfPossible();
            }
          }
        }

        if (supportsPersistence) {
          // TODO: Only schedule updates if not prevDidTimeout.
          if (nextDidTimeout) {
            // If this boundary just timed out, schedule an effect to attach a
            // retry listener to the proimse. This flag is also used to hide the
            // primary children.
            workInProgress.effectTag |= Update;
          }
        }

        if (supportsMutation) {
          // TODO: Only schedule updates if these values are non equal, i.e. it changed.
          if (nextDidTimeout || prevDidTimeout) {
            // If this boundary just timed out, schedule an effect to attach a
            // retry listener to the proimse. This flag is also used to hide the
            // primary children. In mutation mode, we also need the flag to
            // *unhide* children that were previously hidden, so check if the
            // is currently timed out, too.
            workInProgress.effectTag |= Update;
          }
        }

        if (enableSuspenseCallback && workInProgress.updateQueue !== null && workInProgress.memoizedProps.suspenseCallback != null) {
          // Always notify the callback
          workInProgress.effectTag |= Update;
        }

        break;
      }

    case Fragment:
      break;

    case Mode:
      break;

    case Profiler:
      break;

    case HostPortal:
      popHostContainer(workInProgress);
      updateHostContainer(workInProgress);
      break;

    case ContextProvider:
      // Pop provider fiber
      popProvider(workInProgress);
      break;

    case ContextConsumer:
      break;

    case MemoComponent:
      break;

    case IncompleteClassComponent:
      {
        // Same as class component case. I put it down here so that the tags are
        // sequential to ensure this switch is compiled to a jump table.
        var _Component = workInProgress.type;

        if (isContextProvider(_Component)) {
          popContext(workInProgress);
        }

        break;
      }

    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress);
        var renderState = workInProgress.memoizedState;

        if (renderState === null) {
          // We're running in the default, "independent" mode. We don't do anything
          // in this mode.
          break;
        }

        var didSuspendAlready = (workInProgress.effectTag & DidCapture) !== NoEffect;
        var renderedTail = renderState.rendering;

        if (renderedTail === null) {
          // We just rendered the head.
          if (!didSuspendAlready) {
            // This is the first pass. We need to figure out if anything is still
            // suspended in the rendered set.
            // If new content unsuspended, but there's still some content that
            // didn't. Then we need to do a second pass that forces everything
            // to keep showing their fallbacks.
            // We might be suspended if something in this render pass suspended, or
            // something in the previous committed pass suspended. Otherwise,
            // there's no chance so we can skip the expensive call to
            // findFirstSuspended.
            var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.effectTag & DidCapture) === NoEffect);

            if (!cannotBeSuspended) {
              var row = workInProgress.child;

              while (row !== null) {
                var suspended = findFirstSuspended(row);

                if (suspended !== null) {
                  didSuspendAlready = true;
                  workInProgress.effectTag |= DidCapture;
                  cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                  // part of the second pass. In that case nothing will subscribe to
                  // its thennables. Instead, we'll transfer its thennables to the
                  // SuspenseList so that it can retry if they resolve.
                  // There might be multiple of these in the list but since we're
                  // going to wait for all of them anyway, it doesn't really matter
                  // which ones gets to ping. In theory we could get clever and keep
                  // track of how many dependencies remain but it gets tricky because
                  // in the meantime, we can add/remove/change items and dependencies.
                  // We might bail out of the loop before finding any but that
                  // doesn't matter since that means that the other boundaries that
                  // we did find already has their listeners attached.

                  var newThennables = suspended.updateQueue;

                  if (newThennables !== null) {
                    workInProgress.updateQueue = newThennables;
                    workInProgress.effectTag |= Update;
                  } // Rerender the whole list, but this time, we'll force fallbacks
                  // to stay in place.
                  // Reset the effect list before doing the second pass since that's now invalid.


                  if (renderState.lastEffect === null) {
                    workInProgress.firstEffect = null;
                  }

                  workInProgress.lastEffect = renderState.lastEffect; // Reset the child fibers to their original state.

                  resetChildFibers(workInProgress, renderExpirationTime); // Set up the Suspense Context to force suspense and immediately
                  // rerender the children.

                  pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                  return workInProgress.child;
                }

                row = row.sibling;
              }
            }
          } else {
            cutOffTailIfNeeded(renderState, false);
          } // Next we're going to render the tail.

        } else {
          // Append the rendered row to the child list.
          if (!didSuspendAlready) {
            var _suspended = findFirstSuspended(renderedTail);

            if (_suspended !== null) {
              workInProgress.effectTag |= DidCapture;
              didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
              // get lost if this row ends up dropped during a second pass.

              var _newThennables = _suspended.updateQueue;

              if (_newThennables !== null) {
                workInProgress.updateQueue = _newThennables;
                workInProgress.effectTag |= Update;
              }

              cutOffTailIfNeeded(renderState, true); // This might have been modified.

              if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate) {
                // We need to delete the row we just rendered.
                // Reset the effect list to what it was before we rendered this
                // child. The nested children have already appended themselves.
                var lastEffect = workInProgress.lastEffect = renderState.lastEffect; // Remove any effects that were appended after this point.

                if (lastEffect !== null) {
                  lastEffect.nextEffect = null;
                } // We're done.


                return null;
              }
            } else if (now() > renderState.tailExpiration && renderExpirationTime > Never) {
              // We have now passed our CPU deadline and we'll just give up further
              // attempts to render the main content and only render fallbacks.
              // The assumption is that this is usually faster.
              workInProgress.effectTag |= DidCapture;
              didSuspendAlready = true;
              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
              // to get it started back up to attempt the next item. If we can show
              // them, then they really have the same priority as this render.
              // So we'll pick it back up the very next render pass once we've had
              // an opportunity to yield for paint.

              var nextPriority = renderExpirationTime - 1;
              workInProgress.expirationTime = workInProgress.childExpirationTime = nextPriority;

              if (enableSchedulerTracing) {
                markSpawnedWork(nextPriority);
              }
            }
          }

          if (renderState.isBackwards) {
            // The effect list of the backwards tail will have been added
            // to the end. This breaks the guarantee that life-cycles fire in
            // sibling order but that isn't a strong guarantee promised by React.
            // Especially since these might also just pop in during future commits.
            // Append to the beginning of the list.
            renderedTail.sibling = workInProgress.child;
            workInProgress.child = renderedTail;
          } else {
            var previousSibling = renderState.last;

            if (previousSibling !== null) {
              previousSibling.sibling = renderedTail;
            } else {
              workInProgress.child = renderedTail;
            }

            renderState.last = renderedTail;
          }
        }

        if (renderState.tail !== null) {
          // We still have tail rows to render.
          if (renderState.tailExpiration === 0) {
            // Heuristic for how long we're willing to spend rendering rows
            // until we just give up and show what we have so far.
            var TAIL_EXPIRATION_TIMEOUT_MS = 500;
            renderState.tailExpiration = now() + TAIL_EXPIRATION_TIMEOUT_MS;
          } // Pop a row.


          var next = renderState.tail;
          renderState.rendering = next;
          renderState.tail = next.sibling;
          renderState.lastEffect = workInProgress.lastEffect;
          next.sibling = null; // Restore the context.
          // TODO: We can probably just avoid popping it instead and only
          // setting it the first time we go from not suspended to suspended.

          var suspenseContext = suspenseStackCursor.current;

          if (didSuspendAlready) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
          } else {
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          }

          pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.

          return next;
        }

        break;
      }

    case FundamentalComponent:
      {
        if (enableFundamentalAPI) {
          var fundamentalImpl = workInProgress.type.impl;
          var fundamentalInstance = workInProgress.stateNode;

          if (fundamentalInstance === null) {
            var getInitialState = fundamentalImpl.getInitialState;
            var fundamentalState;

            if (getInitialState !== undefined) {
              fundamentalState = getInitialState(newProps);
            }

            fundamentalInstance = workInProgress.stateNode = createFundamentalStateInstance(workInProgress, newProps, fundamentalImpl, fundamentalState || {});

            var _instance5 = getFundamentalComponentInstance(fundamentalInstance);

            fundamentalInstance.instance = _instance5;

            if (fundamentalImpl.reconcileChildren === false) {
              return null;
            }

            appendAllChildren(_instance5, workInProgress, false, false);
            mountFundamentalComponent(fundamentalInstance);
          } else {
            // We fire update in commit phase
            var prevProps = fundamentalInstance.props;
            fundamentalInstance.prevProps = prevProps;
            fundamentalInstance.props = newProps;
            fundamentalInstance.currentFiber = workInProgress;

            if (supportsPersistence) {
              var _instance6 = cloneFundamentalInstance(fundamentalInstance);

              fundamentalInstance.instance = _instance6;
              appendAllChildren(_instance6, workInProgress, false, false);
            }

            var shouldUpdate = shouldUpdateFundamentalComponent(fundamentalInstance);

            if (shouldUpdate) {
              markUpdate(workInProgress);
            }
          }
        }

        break;
      }

    case ScopeComponent:
      {
        if (enableScopeAPI) {
          if (current === null) {
            var _type3 = workInProgress.type;
            var scopeInstance = {
              fiber: workInProgress,
              methods: null
            };
            workInProgress.stateNode = scopeInstance;
            scopeInstance.methods = createScopeMethods(_type3, scopeInstance);

            if (enableFlareAPI) {
              var _listeners2 = newProps.listeners;

              if (_listeners2 != null) {
                var _rootContainerInstance2 = getRootHostContainer();

                updateEventListeners(_listeners2, workInProgress, _rootContainerInstance2);
              }
            }

            if (workInProgress.ref !== null) {
              markRef$1(workInProgress);
              markUpdate(workInProgress);
            }
          } else {
            if (enableFlareAPI) {
              var _prevListeners = current.memoizedProps.listeners;
              var _nextListeners = newProps.listeners;

              if (_prevListeners !== _nextListeners || workInProgress.ref !== null) {
                markUpdate(workInProgress);
              }
            } else {
              if (workInProgress.ref !== null) {
                markUpdate(workInProgress);
              }
            }

            if (current.ref !== workInProgress.ref) {
              markRef$1(workInProgress);
            }
          }
        }

        break;
      }

    default:
      {
        {
          throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
        }
      }

  }

  return null;
}

function unwindWork(workInProgress, renderExpirationTime) {
  switch (workInProgress.tag) {
    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }

        var effectTag = workInProgress.effectTag;

        if (effectTag & ShouldCapture) {
          workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
          return workInProgress;
        }

        return null;
      }

    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var _effectTag = workInProgress.effectTag;

        if (!((_effectTag & DidCapture) === NoEffect)) {
          {
            throw Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue.");
          }
        }

        workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
        return workInProgress;
      }

    case HostComponent:
      {
        // TODO: popHydrationState
        popHostContext(workInProgress);
        return null;
      }

    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);

        if (enableSuspenseServerRenderer) {
          var suspenseState = workInProgress.memoizedState;

          if (suspenseState !== null && suspenseState.dehydrated !== null) {
            if (!(workInProgress.alternate !== null)) {
              {
                throw Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
              }
            }

            resetHydrationState();
          }
        }

        var _effectTag2 = workInProgress.effectTag;

        if (_effectTag2 & ShouldCapture) {
          workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.

          return workInProgress;
        }

        return null;
      }

    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
        // caught by a nested boundary. If not, it should bubble through.

        return null;
      }

    case HostPortal:
      popHostContainer(workInProgress);
      return null;

    case ContextProvider:
      popProvider(workInProgress);
      return null;

    default:
      return null;
  }
}

function unwindInterruptedWork(interruptedWork) {
  switch (interruptedWork.tag) {
    case ClassComponent:
      {
        var childContextTypes = interruptedWork.type.childContextTypes;

        if (childContextTypes !== null && childContextTypes !== undefined) {
          popContext(interruptedWork);
        }

        break;
      }

    case HostRoot:
      {
        popHostContainer(interruptedWork);
        popTopLevelContextObject(interruptedWork);
        break;
      }

    case HostComponent:
      {
        popHostContext(interruptedWork);
        break;
      }

    case HostPortal:
      popHostContainer(interruptedWork);
      break;

    case SuspenseComponent:
      popSuspenseContext(interruptedWork);
      break;

    case SuspenseListComponent:
      popSuspenseContext(interruptedWork);
      break;

    case ContextProvider:
      popProvider(interruptedWork);
      break;

    default:
      break;
  }
}

function createCapturedValue(value, source) {
  // If the value is an error, call this function immediately after it is thrown
  // so the stack is accurate.
  return {
    value: value,
    source: source,
    stack: getStackByFiberInDevAndProd(source)
  };
}

// This module is forked in different environments.
// By default, return `true` to log errors to the console.
// Forks can return `false` if this isn't desirable.
function showErrorDialog(capturedError) {
  return true;
}

function logCapturedError(capturedError) {
  var logError = showErrorDialog(capturedError); // Allow injected showErrorDialog() to prevent default console.error logging.
  // This enables renderers like ReactNative to better manage redbox behavior.

  if (logError === false) {
    return;
  }

  var error = capturedError.error;

  {
    var componentName = capturedError.componentName,
        componentStack = capturedError.componentStack,
        errorBoundaryName = capturedError.errorBoundaryName,
        errorBoundaryFound = capturedError.errorBoundaryFound,
        willRetry = capturedError.willRetry; // Browsers support silencing uncaught errors by calling
    // `preventDefault()` in window `error` handler.
    // We record this information as an expando on the error.

    if (error != null && error._suppressLogging) {
      if (errorBoundaryFound && willRetry) {
        // The error is recoverable and was silenced.
        // Ignore it and don't print the stack addendum.
        // This is handy for testing error boundaries without noise.
        return;
      } // The error is fatal. Since the silencing might have
      // been accidental, we'll surface it anyway.
      // However, the browser would have silenced the original error
      // so we'll print it first, and then print the stack addendum.


      console.error(error); // For a more detailed description of this block, see:
      // https://github.com/facebook/react/pull/13384
    }

    var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
    var errorBoundaryMessage; // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.

    if (errorBoundaryFound && errorBoundaryName) {
      if (willRetry) {
        errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
      } else {
        errorBoundaryMessage = "This error was initially handled by the error boundary " + errorBoundaryName + ".\n" + "Recreating the tree from scratch failed so React will unmount the tree.";
      }
    } else {
      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
    }

    var combinedMessage = "" + componentNameMessage + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
    // We don't include the original error message and JS stack because the browser
    // has already printed it. Even if the application swallows the error, it is still
    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.

    console.error(combinedMessage);
  }
}

var didWarnAboutUndefinedSnapshotBeforeUpdate = null;

{
  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
}

var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
function logError(boundary, errorInfo) {
  var source = errorInfo.source;
  var stack = errorInfo.stack;

  if (stack === null && source !== null) {
    stack = getStackByFiberInDevAndProd(source);
  }

  var capturedError = {
    componentName: source !== null ? getComponentName(source.type) : null,
    componentStack: stack !== null ? stack : '',
    error: errorInfo.value,
    errorBoundary: null,
    errorBoundaryName: null,
    errorBoundaryFound: false,
    willRetry: false
  };

  if (boundary !== null && boundary.tag === ClassComponent) {
    capturedError.errorBoundary = boundary.stateNode;
    capturedError.errorBoundaryName = getComponentName(boundary.type);
    capturedError.errorBoundaryFound = true;
    capturedError.willRetry = true;
  }

  try {
    logCapturedError(capturedError);
  } catch (e) {
    // This method must not throw, or React internal state will get messed up.
    // If console.error is overridden, or logCapturedError() shows a dialog that throws,
    // we want to report this error outside of the normal stack as a last resort.
    // https://github.com/facebook/react/issues/13188
    setTimeout(function () {
      throw e;
    });
  }
}

var callComponentWillUnmountWithTimer = function (current$$1, instance) {
  startPhaseTimer(current$$1, 'componentWillUnmount');
  instance.props = current$$1.memoizedProps;
  instance.state = current$$1.memoizedState;
  instance.componentWillUnmount();
  stopPhaseTimer();
}; // Capture errors so they don't interrupt unmounting.


function safelyCallComponentWillUnmount(current$$1, instance) {
  {
    invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current$$1, instance);

    if (hasCaughtError()) {
      var unmountError = clearCaughtError();
      captureCommitPhaseError(current$$1, unmountError);
    }
  }
}

function safelyDetachRef(current$$1) {
  var ref = current$$1.ref;

  if (ref !== null) {
    if (typeof ref === 'function') {
      {
        invokeGuardedCallback(null, ref, null, null);

        if (hasCaughtError()) {
          var refError = clearCaughtError();
          captureCommitPhaseError(current$$1, refError);
        }
      }
    } else {
      ref.current = null;
    }
  }
}

function safelyCallDestroy(current$$1, destroy) {
  {
    invokeGuardedCallback(null, destroy, null);

    if (hasCaughtError()) {
      var error = clearCaughtError();
      captureCommitPhaseError(current$$1, error);
    }
  }
}

function commitBeforeMutationLifeCycles(current$$1, finishedWork) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);
        return;
      }

    case ClassComponent:
      {
        if (finishedWork.effectTag & Snapshot) {
          if (current$$1 !== null) {
            var prevProps = current$$1.memoizedProps;
            var prevState = current$$1.memoizedState;
            startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
            var instance = finishedWork.stateNode; // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.

            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              }
            }

            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);

            {
              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;

              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                didWarnSet.add(finishedWork.type);
                warningWithoutStack$1(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));
              }
            }

            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
            stopPhaseTimer();
          }
        }

        return;
      }

    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
    case IncompleteClassComponent:
      // Nothing to do for these component types
      return;

    default:
      {
        {
          {
            throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }
  }
}

function commitHookEffectList(unmountTag, mountTag, finishedWork) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;

    do {
      if ((effect.tag & unmountTag) !== NoEffect$1) {
        // Unmount
        var destroy = effect.destroy;
        effect.destroy = undefined;

        if (destroy !== undefined) {
          destroy();
        }
      }

      if ((effect.tag & mountTag) !== NoEffect$1) {
        // Mount
        var create = effect.create;
        effect.destroy = create();

        {
          var _destroy = effect.destroy;

          if (_destroy !== undefined && typeof _destroy !== 'function') {
            var addendum = void 0;

            if (_destroy === null) {
              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';
            } else if (typeof _destroy.then === 'function') {
              addendum = '\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + 'useEffect(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + 'Learn more about data fetching with Hooks: https://fb.me/react-hooks-data-fetching';
            } else {
              addendum = ' You returned: ' + _destroy;
            }

            warningWithoutStack$1(false, 'An effect function must not return anything besides a function, ' + 'which is used for clean-up.%s%s', addendum, getStackByFiberInDevAndProd(finishedWork));
          }
        }
      }

      effect = effect.next;
    } while (effect !== firstEffect);
  }
}

function commitPassiveHookEffects(finishedWork) {
  if ((finishedWork.effectTag & Passive) !== NoEffect) {
    switch (finishedWork.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);
          commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
          break;
        }

      default:
        break;
    }
  }
}

function commitLifeCycles(finishedRoot, current$$1, finishedWork, committedExpirationTime) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        commitHookEffectList(UnmountLayout, MountLayout, finishedWork);
        break;
      }

    case ClassComponent:
      {
        var instance = finishedWork.stateNode;

        if (finishedWork.effectTag & Update) {
          if (current$$1 === null) {
            startPhaseTimer(finishedWork, 'componentDidMount'); // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.

            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              }
            }

            instance.componentDidMount();
            stopPhaseTimer();
          } else {
            var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);
            var prevState = current$$1.memoizedState;
            startPhaseTimer(finishedWork, 'componentDidUpdate'); // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.

            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              }
            }

            instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
            stopPhaseTimer();
          }
        }

        var updateQueue = finishedWork.updateQueue;

        if (updateQueue !== null) {
          {
            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
              !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
            }
          } // We could update instance props and state here,
          // but instead we rely on them being set during last render.
          // TODO: revisit this when we implement resuming.


          commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
        }

        return;
      }

    case HostRoot:
      {
        var _updateQueue = finishedWork.updateQueue;

        if (_updateQueue !== null) {
          var _instance = null;

          if (finishedWork.child !== null) {
            switch (finishedWork.child.tag) {
              case HostComponent:
                _instance = getPublicInstance(finishedWork.child.stateNode);
                break;

              case ClassComponent:
                _instance = finishedWork.child.stateNode;
                break;
            }
          }

          commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
        }

        return;
      }

    case HostComponent:
      {
        var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
        // (eg DOM renderer may schedule auto-focus for inputs and form controls).
        // These effects should only be committed when components are first mounted,
        // aka when there is no current/alternate.

        if (current$$1 === null && finishedWork.effectTag & Update) {
          var type = finishedWork.type;
          var props = finishedWork.memoizedProps;
          commitMount(_instance2, type, props, finishedWork);
        }

        return;
      }

    case HostText:
      {
        // We have no life-cycles associated with text.
        return;
      }

    case HostPortal:
      {
        // We have no life-cycles associated with portals.
        return;
      }

    case Profiler:
      {
        if (enableProfilerTimer) {
          var onRender = finishedWork.memoizedProps.onRender;

          if (typeof onRender === 'function') {
            if (enableSchedulerTracing) {
              onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime(), finishedRoot.memoizedInteractions);
            } else {
              onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime());
            }
          }
        }

        return;
      }

    case SuspenseComponent:
      {
        commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
        return;
      }

    case SuspenseListComponent:
    case IncompleteClassComponent:
    case FundamentalComponent:
    case ScopeComponent:
      return;

    default:
      {
        {
          {
            throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }
  }
}

function hideOrUnhideAllChildren(finishedWork, isHidden) {
  if (supportsMutation) {
    // We only have the top Fiber that was inserted but we need to recurse down its
    // children to find all the terminal nodes.
    var node = finishedWork;

    while (true) {
      if (node.tag === HostComponent) {
        var instance = node.stateNode;

        if (isHidden) {
          hideInstance(instance);
        } else {
          unhideInstance(node.stateNode, node.memoizedProps);
        }
      } else if (node.tag === HostText) {
        var _instance3 = node.stateNode;

        if (isHidden) {
          hideTextInstance(_instance3);
        } else {
          unhideTextInstance(_instance3, node.memoizedProps);
        }
      } else if (node.tag === SuspenseComponent && node.memoizedState !== null && node.memoizedState.dehydrated === null) {
        // Found a nested Suspense component that timed out. Skip over the
        // primary child fragment, which should remain hidden.
        var fallbackChildFragment = node.child.sibling;
        fallbackChildFragment.return = node;
        node = fallbackChildFragment;
        continue;
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === finishedWork) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === finishedWork) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }
}

function commitAttachRef(finishedWork) {
  var ref = finishedWork.ref;

  if (ref !== null) {
    var instance = finishedWork.stateNode;
    var instanceToUse;

    switch (finishedWork.tag) {
      case HostComponent:
        instanceToUse = getPublicInstance(instance);
        break;

      default:
        instanceToUse = instance;
    } // Moved outside to ensure DCE works with this flag


    if (enableScopeAPI && finishedWork.tag === ScopeComponent) {
      instanceToUse = instance.methods;
    }

    if (typeof ref === 'function') {
      ref(instanceToUse);
    } else {
      {
        if (!ref.hasOwnProperty('current')) {
          warningWithoutStack$1(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork.type), getStackByFiberInDevAndProd(finishedWork));
        }
      }

      ref.current = instanceToUse;
    }
  }
}

function commitDetachRef(current$$1) {
  var currentRef = current$$1.ref;

  if (currentRef !== null) {
    if (typeof currentRef === 'function') {
      currentRef(null);
    } else {
      currentRef.current = null;
    }
  }
} // User-originating errors (lifecycles and refs) should not interrupt
// deletion, so don't let them throw. Host-originating errors should
// interrupt deletion, so it's okay


function commitUnmount(finishedRoot, current$$1, renderPriorityLevel) {
  onCommitUnmount(current$$1);

  switch (current$$1.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
      {
        var updateQueue = current$$1.updateQueue;

        if (updateQueue !== null) {
          var lastEffect = updateQueue.lastEffect;

          if (lastEffect !== null) {
            var firstEffect = lastEffect.next; // When the owner fiber is deleted, the destroy function of a passive
            // effect hook is called during the synchronous commit phase. This is
            // a concession to implementation complexity. Calling it in the
            // passive effect phase (like they usually are, when dependencies
            // change during an update) would require either traversing the
            // children of the deleted fiber again, or including unmount effects
            // as part of the fiber effect list.
            //
            // Because this is during the sync commit phase, we need to change
            // the priority.
            //
            // TODO: Reconsider this implementation trade off.

            var priorityLevel = renderPriorityLevel > NormalPriority ? NormalPriority : renderPriorityLevel;
            runWithPriority$2(priorityLevel, function () {
              var effect = firstEffect;

              do {
                var destroy = effect.destroy;

                if (destroy !== undefined) {
                  safelyCallDestroy(current$$1, destroy);
                }

                effect = effect.next;
              } while (effect !== firstEffect);
            });
          }
        }

        break;
      }

    case ClassComponent:
      {
        safelyDetachRef(current$$1);
        var instance = current$$1.stateNode;

        if (typeof instance.componentWillUnmount === 'function') {
          safelyCallComponentWillUnmount(current$$1, instance);
        }

        return;
      }

    case HostComponent:
      {
        if (enableFlareAPI) {
          var dependencies = current$$1.dependencies;

          if (dependencies !== null) {
            var respondersMap = dependencies.responders;

            if (respondersMap !== null) {
              var responderInstances = Array.from(respondersMap.values());

              for (var i = 0, length = responderInstances.length; i < length; i++) {
                var responderInstance = responderInstances[i];
                unmountResponderInstance(responderInstance);
              }

              dependencies.responders = null;
            }
          }
        }

        safelyDetachRef(current$$1);
        return;
      }

    case HostPortal:
      {
        // TODO: this is recursive.
        // We are also not using this parent because
        // the portal will get pushed immediately.
        if (supportsMutation) {
          unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel);
        } else if (supportsPersistence) {
          emptyPortalContainer(current$$1);
        }

        return;
      }

    case FundamentalComponent:
      {
        if (enableFundamentalAPI) {
          var fundamentalInstance = current$$1.stateNode;

          if (fundamentalInstance !== null) {
            unmountFundamentalComponent(fundamentalInstance);
            current$$1.stateNode = null;
          }
        }

        return;
      }

    case DehydratedFragment:
      {
        if (enableSuspenseCallback) {
          var hydrationCallbacks = finishedRoot.hydrationCallbacks;

          if (hydrationCallbacks !== null) {
            var onDeleted = hydrationCallbacks.onDeleted;

            if (onDeleted) {
              onDeleted(current$$1.stateNode);
            }
          }
        }

        return;
      }

    case ScopeComponent:
      {
        if (enableScopeAPI) {
          safelyDetachRef(current$$1);
        }
      }
  }
}

function commitNestedUnmounts(finishedRoot, root, renderPriorityLevel) {
  // While we're inside a removed host node we don't want to call
  // removeChild on the inner nodes because they're removed by the top
  // call anyway. We also want to call componentWillUnmount on all
  // composites before this host node is removed from the tree. Therefore
  // we do an inner loop while we're still inside the host node.
  var node = root;

  while (true) {
    commitUnmount(finishedRoot, node, renderPriorityLevel); // Visit children because they may contain more composite or host nodes.
    // Skip portals because commitUnmount() currently visits them recursively.

    if (node.child !== null && ( // If we use mutation we drill down into portals using commitUnmount above.
    // If we don't use mutation we drill down into portals here instead.
    !supportsMutation || node.tag !== HostPortal)) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === root) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === root) {
        return;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function detachFiber(current$$1) {
  var alternate = current$$1.alternate; // Cut off the return pointers to disconnect it from the tree. Ideally, we
  // should clear the child pointer of the parent alternate to let this
  // get GC:ed but we don't know which for sure which parent is the current
  // one so we'll settle for GC:ing the subtree of this child. This child
  // itself will be GC:ed when the parent updates the next time.

  current$$1.return = null;
  current$$1.child = null;
  current$$1.memoizedState = null;
  current$$1.updateQueue = null;
  current$$1.dependencies = null;
  current$$1.alternate = null;
  current$$1.firstEffect = null;
  current$$1.lastEffect = null;
  current$$1.pendingProps = null;
  current$$1.memoizedProps = null;

  if (alternate !== null) {
    detachFiber(alternate);
  }
}

function emptyPortalContainer(current$$1) {
  if (!supportsPersistence) {
    return;
  }

  var portal = current$$1.stateNode;
  var containerInfo = portal.containerInfo;
  var emptyChildSet = createContainerChildSet(containerInfo);
  replaceContainerChildren(containerInfo, emptyChildSet);
}

function commitContainer(finishedWork) {
  if (!supportsPersistence) {
    return;
  }

  switch (finishedWork.tag) {
    case ClassComponent:
    case HostComponent:
    case HostText:
    case FundamentalComponent:
      {
        return;
      }

    case HostRoot:
    case HostPortal:
      {
        var portalOrRoot = finishedWork.stateNode;
        var containerInfo = portalOrRoot.containerInfo,
            pendingChildren = portalOrRoot.pendingChildren;
        replaceContainerChildren(containerInfo, pendingChildren);
        return;
      }

    default:
      {
        {
          {
            throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }
  }
}

function getHostParentFiber(fiber) {
  var parent = fiber.return;

  while (parent !== null) {
    if (isHostParent(parent)) {
      return parent;
    }

    parent = parent.return;
  }

  {
    {
      throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
  }
}

function isHostParent(fiber) {
  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
}

function getHostSibling(fiber) {
  // We're going to search forward into the tree until we find a sibling host
  // node. Unfortunately, if multiple insertions are done in a row we have to
  // search past them. This leads to exponential search for the next sibling.
  // TODO: Find a more efficient way to do this.
  var node = fiber;

  siblings: while (true) {
    // If we didn't find anything, let's try the next sibling.
    while (node.sibling === null) {
      if (node.return === null || isHostParent(node.return)) {
        // If we pop out of the root or hit the parent the fiber we are the
        // last sibling.
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;

    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
      // If it is not host node and, we might have a host node inside it.
      // Try to search down until we find one.
      if (node.effectTag & Placement) {
        // If we don't have a child, try the siblings instead.
        continue siblings;
      } // If we don't have a child, try the siblings instead.
      // We also skip portals because they are not part of this host tree.


      if (node.child === null || node.tag === HostPortal) {
        continue siblings;
      } else {
        node.child.return = node;
        node = node.child;
      }
    } // Check if this host node is stable or about to be placed.


    if (!(node.effectTag & Placement)) {
      // Found it!
      return node.stateNode;
    }
  }
}

function commitPlacement(finishedWork) {
  if (!supportsMutation) {
    return;
  } // Recursively insert all host nodes into the parent.


  var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.

  var parent;
  var isContainer;
  var parentStateNode = parentFiber.stateNode;

  switch (parentFiber.tag) {
    case HostComponent:
      parent = parentStateNode;
      isContainer = false;
      break;

    case HostRoot:
      parent = parentStateNode.containerInfo;
      isContainer = true;
      break;

    case HostPortal:
      parent = parentStateNode.containerInfo;
      isContainer = true;
      break;

    case FundamentalComponent:
      if (enableFundamentalAPI) {
        parent = parentStateNode.instance;
        isContainer = false;
      }

    // eslint-disable-next-line-no-fallthrough

    default:
      {
        {
          throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
      }

  }

  if (parentFiber.effectTag & ContentReset) {
    // Reset the text content of the parent before doing any insertions
    resetTextContent(parent); // Clear ContentReset from the effect tag

    parentFiber.effectTag &= ~ContentReset;
  }

  var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
  // children to find all the terminal nodes.

  var node = finishedWork;

  while (true) {
    var isHost = node.tag === HostComponent || node.tag === HostText;

    if (isHost || enableFundamentalAPI && node.tag === FundamentalComponent) {
      var stateNode = isHost ? node.stateNode : node.stateNode.instance;

      if (before) {
        if (isContainer) {
          insertInContainerBefore(parent, stateNode, before);
        } else {
          insertBefore(parent, stateNode, before);
        }
      } else {
        if (isContainer) {
          appendChildToContainer(parent, stateNode);
        } else {
          appendChild(parent, stateNode);
        }
      }
    } else if (node.tag === HostPortal) {// If the insertion itself is a portal, then we don't want to traverse
      // down its children. Instead, we'll get insertions from each child in
      // the portal directly.
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === finishedWork) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === finishedWork) {
        return;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel) {
  // We only have the top Fiber that was deleted but we need to recurse down its
  // children to find all the terminal nodes.
  var node = current$$1; // Each iteration, currentParent is populated with node's host parent if not
  // currentParentIsValid.

  var currentParentIsValid = false; // Note: these two variables *must* always be updated together.

  var currentParent;
  var currentParentIsContainer;

  while (true) {
    if (!currentParentIsValid) {
      var parent = node.return;

      findParent: while (true) {
        if (!(parent !== null)) {
          {
            throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        var parentStateNode = parent.stateNode;

        switch (parent.tag) {
          case HostComponent:
            currentParent = parentStateNode;
            currentParentIsContainer = false;
            break findParent;

          case HostRoot:
            currentParent = parentStateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;

          case HostPortal:
            currentParent = parentStateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;

          case FundamentalComponent:
            if (enableFundamentalAPI) {
              currentParent = parentStateNode.instance;
              currentParentIsContainer = false;
            }

        }

        parent = parent.return;
      }

      currentParentIsValid = true;
    }

    if (node.tag === HostComponent || node.tag === HostText) {
      commitNestedUnmounts(finishedRoot, node, renderPriorityLevel); // After all the children have unmounted, it is now safe to remove the
      // node from the tree.

      if (currentParentIsContainer) {
        removeChildFromContainer(currentParent, node.stateNode);
      } else {
        removeChild(currentParent, node.stateNode);
      } // Don't visit children because we already visited them.

    } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
      var fundamentalNode = node.stateNode.instance;
      commitNestedUnmounts(finishedRoot, node, renderPriorityLevel); // After all the children have unmounted, it is now safe to remove the
      // node from the tree.

      if (currentParentIsContainer) {
        removeChildFromContainer(currentParent, fundamentalNode);
      } else {
        removeChild(currentParent, fundamentalNode);
      }
    } else if (enableSuspenseServerRenderer && node.tag === DehydratedFragment) {
      if (enableSuspenseCallback) {
        var hydrationCallbacks = finishedRoot.hydrationCallbacks;

        if (hydrationCallbacks !== null) {
          var onDeleted = hydrationCallbacks.onDeleted;

          if (onDeleted) {
            onDeleted(node.stateNode);
          }
        }
      } // Delete the dehydrated suspense boundary and all of its content.


      if (currentParentIsContainer) {
        clearSuspenseBoundaryFromContainer(currentParent, node.stateNode);
      } else {
        clearSuspenseBoundary(currentParent, node.stateNode);
      }
    } else if (node.tag === HostPortal) {
      if (node.child !== null) {
        // When we go into a portal, it becomes the parent to remove from.
        // We will reassign it back when we pop the portal on the way up.
        currentParent = node.stateNode.containerInfo;
        currentParentIsContainer = true; // Visit children because portals might contain host components.

        node.child.return = node;
        node = node.child;
        continue;
      }
    } else {
      commitUnmount(finishedRoot, node, renderPriorityLevel); // Visit children because we may find more host components below.

      if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
    }

    if (node === current$$1) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === current$$1) {
        return;
      }

      node = node.return;

      if (node.tag === HostPortal) {
        // When we go out of the portal, we need to restore the parent.
        // Since we don't keep a stack of them, we will search for it.
        currentParentIsValid = false;
      }
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function commitDeletion(finishedRoot, current$$1, renderPriorityLevel) {
  if (supportsMutation) {
    // Recursively delete all host nodes from the parent.
    // Detach refs and call componentWillUnmount() on the whole subtree.
    unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel);
  } else {
    // Detach refs and call componentWillUnmount() on the whole subtree.
    commitNestedUnmounts(finishedRoot, current$$1, renderPriorityLevel);
  }

  detachFiber(current$$1);
}

function commitWork(current$$1, finishedWork) {
  if (!supportsMutation) {
    switch (finishedWork.tag) {
      case FunctionComponent:
      case ForwardRef:
      case MemoComponent:
      case SimpleMemoComponent:
        {
          // Note: We currently never use MountMutation, but useLayout uses
          // UnmountMutation.
          commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
          return;
        }

      case Profiler:
        {
          return;
        }

      case SuspenseComponent:
        {
          commitSuspenseComponent(finishedWork);
          attachSuspenseRetryListeners(finishedWork);
          return;
        }

      case SuspenseListComponent:
        {
          attachSuspenseRetryListeners(finishedWork);
          return;
        }

      case HostRoot:
        {
          if (supportsHydration) {
            var root = finishedWork.stateNode;

            if (root.hydrate) {
              // We've just hydrated. No need to hydrate again.
              root.hydrate = false;
              commitHydratedContainer(root.containerInfo);
            }
          }

          break;
        }
    }

    commitContainer(finishedWork);
    return;
  }

  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
      {
        // Note: We currently never use MountMutation, but useLayout uses
        // UnmountMutation.
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        return;
      }

    case ClassComponent:
      {
        return;
      }

    case HostComponent:
      {
        var instance = finishedWork.stateNode;

        if (instance != null) {
          // Commit the work prepared earlier.
          var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
          // as the newProps. The updatePayload will contain the real change in
          // this case.

          var oldProps = current$$1 !== null ? current$$1.memoizedProps : newProps;
          var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.

          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;

          if (updatePayload !== null) {
            commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
          }

          if (enableFlareAPI) {
            var prevListeners = oldProps.listeners;
            var nextListeners = newProps.listeners;

            if (prevListeners !== nextListeners) {
              updateEventListeners(nextListeners, finishedWork, null);
            }
          }
        }

        return;
      }

    case HostText:
      {
        if (!(finishedWork.stateNode !== null)) {
          {
            throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        var textInstance = finishedWork.stateNode;
        var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
        // as the newProps. The updatePayload will contain the real change in
        // this case.

        var oldText = current$$1 !== null ? current$$1.memoizedProps : newText;
        commitTextUpdate(textInstance, oldText, newText);
        return;
      }

    case HostRoot:
      {
        if (supportsHydration) {
          var _root = finishedWork.stateNode;

          if (_root.hydrate) {
            // We've just hydrated. No need to hydrate again.
            _root.hydrate = false;
            commitHydratedContainer(_root.containerInfo);
          }
        }

        return;
      }

    case Profiler:
      {
        return;
      }

    case SuspenseComponent:
      {
        commitSuspenseComponent(finishedWork);
        attachSuspenseRetryListeners(finishedWork);
        return;
      }

    case SuspenseListComponent:
      {
        attachSuspenseRetryListeners(finishedWork);
        return;
      }

    case IncompleteClassComponent:
      {
        return;
      }

    case FundamentalComponent:
      {
        if (enableFundamentalAPI) {
          var fundamentalInstance = finishedWork.stateNode;
          updateFundamentalComponent(fundamentalInstance);
        }

        return;
      }

    case ScopeComponent:
      {
        if (enableScopeAPI) {
          var scopeInstance = finishedWork.stateNode;
          scopeInstance.fiber = finishedWork;

          if (enableFlareAPI) {
            var _newProps = finishedWork.memoizedProps;

            var _oldProps = current$$1 !== null ? current$$1.memoizedProps : _newProps;

            var _prevListeners = _oldProps.listeners;
            var _nextListeners = _newProps.listeners;

            if (_prevListeners !== _nextListeners) {
              updateEventListeners(_nextListeners, finishedWork, null);
            }
          }
        }

        return;
      }

    default:
      {
        {
          {
            throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }
  }
}

function commitSuspenseComponent(finishedWork) {
  var newState = finishedWork.memoizedState;
  var newDidTimeout;
  var primaryChildParent = finishedWork;

  if (newState === null) {
    newDidTimeout = false;
  } else {
    newDidTimeout = true;
    primaryChildParent = finishedWork.child;
    markCommitTimeOfFallback();
  }

  if (supportsMutation && primaryChildParent !== null) {
    hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);
  }

  if (enableSuspenseCallback && newState !== null) {
    var suspenseCallback = finishedWork.memoizedProps.suspenseCallback;

    if (typeof suspenseCallback === 'function') {
      var thenables = finishedWork.updateQueue;

      if (thenables !== null) {
        suspenseCallback(new Set(thenables));
      }
    } else {
      if (suspenseCallback !== undefined) {
        warning$1(false, 'Unexpected type for suspenseCallback.');
      }
    }
  }
}

function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
  if (!supportsHydration) {
    return;
  }

  var newState = finishedWork.memoizedState;

  if (newState === null) {
    var current$$1 = finishedWork.alternate;

    if (current$$1 !== null) {
      var prevState = current$$1.memoizedState;

      if (prevState !== null) {
        var suspenseInstance = prevState.dehydrated;

        if (suspenseInstance !== null) {
          commitHydratedSuspenseInstance(suspenseInstance);

          if (enableSuspenseCallback) {
            var hydrationCallbacks = finishedRoot.hydrationCallbacks;

            if (hydrationCallbacks !== null) {
              var onHydrated = hydrationCallbacks.onHydrated;

              if (onHydrated) {
                onHydrated(suspenseInstance);
              }
            }
          }
        }
      }
    }
  }
}

function attachSuspenseRetryListeners(finishedWork) {
  // If this boundary just timed out, then it will have a set of thenables.
  // For each thenable, attach a listener so that when it resolves, React
  // attempts to re-render the boundary in the primary (pre-timeout) state.
  var thenables = finishedWork.updateQueue;

  if (thenables !== null) {
    finishedWork.updateQueue = null;
    var retryCache = finishedWork.stateNode;

    if (retryCache === null) {
      retryCache = finishedWork.stateNode = new PossiblyWeakSet();
    }

    thenables.forEach(function (thenable) {
      // Memoize using the boundary fiber to prevent redundant listeners.
      var retry = resolveRetryThenable.bind(null, finishedWork, thenable);

      if (!retryCache.has(thenable)) {
        if (enableSchedulerTracing) {
          if (thenable.__reactDoNotTraceInteractions !== true) {
            retry = tracing.unstable_wrap(retry);
          }
        }

        retryCache.add(thenable);
        thenable.then(retry, retry);
      }
    });
  }
}

function commitResetTextContent(current$$1) {
  if (!supportsMutation) {
    return;
  }

  resetTextContent(current$$1.stateNode);
}

var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;

function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime, null); // Unmount the root by rendering null.

  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
  // being called "element".

  update.payload = {
    element: null
  };
  var error = errorInfo.value;

  update.callback = function () {
    onUncaughtError(error);
    logError(fiber, errorInfo);
  };

  return update;
}

function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime, null);
  update.tag = CaptureUpdate;
  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

  if (typeof getDerivedStateFromError === 'function') {
    var error = errorInfo.value;

    update.payload = function () {
      logError(fiber, errorInfo);
      return getDerivedStateFromError(error);
    };
  }

  var inst = fiber.stateNode;

  if (inst !== null && typeof inst.componentDidCatch === 'function') {
    update.callback = function callback() {
      {
        markFailedErrorBoundaryForHotReloading(fiber);
      }

      if (typeof getDerivedStateFromError !== 'function') {
        // To preserve the preexisting retry behavior of error boundaries,
        // we keep track of which ones already failed during this batch.
        // This gets reset before we yield back to the browser.
        // TODO: Warn in strict mode if getDerivedStateFromError is
        // not defined.
        markLegacyErrorBoundaryAsFailed(this); // Only log here if componentDidCatch is the only error boundary method defined

        logError(fiber, errorInfo);
      }

      var error = errorInfo.value;
      var stack = errorInfo.stack;
      this.componentDidCatch(error, {
        componentStack: stack !== null ? stack : ''
      });

      {
        if (typeof getDerivedStateFromError !== 'function') {
          // If componentDidCatch is the only error boundary method defined,
          // then it needs to call setState to recover from errors.
          // If no state update is scheduled then the boundary will swallow the error.
          !(fiber.expirationTime === Sync) ? warningWithoutStack$1(false, '%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown') : void 0;
        }
      }
    };
  } else {
    update.callback = function () {
      markFailedErrorBoundaryForHotReloading(fiber);
    };
  }

  return update;
}

function attachPingListener(root, renderExpirationTime, thenable) {
  // Attach a listener to the promise to "ping" the root and retry. But
  // only if one does not already exist for the current render expiration
  // time (which acts like a "thread ID" here).
  var pingCache = root.pingCache;
  var threadIDs;

  if (pingCache === null) {
    pingCache = root.pingCache = new PossiblyWeakMap$1();
    threadIDs = new Set();
    pingCache.set(thenable, threadIDs);
  } else {
    threadIDs = pingCache.get(thenable);

    if (threadIDs === undefined) {
      threadIDs = new Set();
      pingCache.set(thenable, threadIDs);
    }
  }

  if (!threadIDs.has(renderExpirationTime)) {
    // Memoize using the thread ID to prevent redundant listeners.
    threadIDs.add(renderExpirationTime);
    var ping = pingSuspendedRoot.bind(null, root, thenable, renderExpirationTime);
    thenable.then(ping, ping);
  }
}

function throwException(root, returnFiber, sourceFiber, value, renderExpirationTime) {
  // The source fiber did not complete.
  sourceFiber.effectTag |= Incomplete; // Its effect list is no longer valid.

  sourceFiber.firstEffect = sourceFiber.lastEffect = null;

  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
    // This is a thenable.
    var thenable = value;
    checkForWrongSuspensePriorityInDEV(sourceFiber);
    var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext); // Schedule the nearest Suspense to re-render the timed out view.

    var _workInProgress = returnFiber;

    do {
      if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
        // Found the nearest boundary.
        // Stash the promise on the boundary fiber. If the boundary times out, we'll
        // attach another listener to flip the boundary back to its normal state.
        var thenables = _workInProgress.updateQueue;

        if (thenables === null) {
          var updateQueue = new Set();
          updateQueue.add(thenable);
          _workInProgress.updateQueue = updateQueue;
        } else {
          thenables.add(thenable);
        } // If the boundary is outside of blocking mode, we should *not*
        // suspend the commit. Pretend as if the suspended component rendered
        // null and keep rendering. In the commit phase, we'll schedule a
        // subsequent synchronous update to re-render the Suspense.
        //
        // Note: It doesn't matter whether the component that suspended was
        // inside a blocking mode tree. If the Suspense is outside of it, we
        // should *not* suspend the commit.


        if ((_workInProgress.mode & BlockingMode) === NoMode) {
          _workInProgress.effectTag |= DidCapture; // We're going to commit this fiber even though it didn't complete.
          // But we shouldn't call any lifecycle methods or callbacks. Remove
          // all lifecycle effect tags.

          sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);

          if (sourceFiber.tag === ClassComponent) {
            var currentSourceFiber = sourceFiber.alternate;

            if (currentSourceFiber === null) {
              // This is a new mount. Change the tag so it's not mistaken for a
              // completed class component. For example, we should not call
              // componentWillUnmount if it is deleted.
              sourceFiber.tag = IncompleteClassComponent;
            } else {
              // When we try rendering again, we should not reuse the current fiber,
              // since it's known to be in an inconsistent state. Use a force update to
              // prevent a bail out.
              var update = createUpdate(Sync, null);
              update.tag = ForceUpdate;
              enqueueUpdate(sourceFiber, update);
            }
          } // The source fiber did not complete. Mark it with Sync priority to
          // indicate that it still has pending work.


          sourceFiber.expirationTime = Sync; // Exit without suspending.

          return;
        } // Confirmed that the boundary is in a concurrent mode tree. Continue
        // with the normal suspend path.
        //
        // After this we'll use a set of heuristics to determine whether this
        // render pass will run to completion or restart or "suspend" the commit.
        // The actual logic for this is spread out in different places.
        //
        // This first principle is that if we're going to suspend when we complete
        // a root, then we should also restart if we get an update or ping that
        // might unsuspend it, and vice versa. The only reason to suspend is
        // because you think you might want to restart before committing. However,
        // it doesn't make sense to restart only while in the period we're suspended.
        //
        // Restarting too aggressively is also not good because it starves out any
        // intermediate loading state. So we use heuristics to determine when.
        // Suspense Heuristics
        //
        // If nothing threw a Promise or all the same fallbacks are already showing,
        // then don't suspend/restart.
        //
        // If this is an initial render of a new tree of Suspense boundaries and
        // those trigger a fallback, then don't suspend/restart. We want to ensure
        // that we can show the initial loading state as quickly as possible.
        //
        // If we hit a "Delayed" case, such as when we'd switch from content back into
        // a fallback, then we should always suspend/restart. SuspenseConfig applies to
        // this case. If none is defined, JND is used instead.
        //
        // If we're already showing a fallback and it gets "retried", allowing us to show
        // another level, but there's still an inner boundary that would show a fallback,
        // then we suspend/restart for 500ms since the last time we showed a fallback
        // anywhere in the tree. This effectively throttles progressive loading into a
        // consistent train of commits. This also gives us an opportunity to restart to
        // get to the completed state slightly earlier.
        //
        // If there's ambiguity due to batching it's resolved in preference of:
        // 1) "delayed", 2) "initial render", 3) "retry".
        //
        // We want to ensure that a "busy" state doesn't get force committed. We want to
        // ensure that new initial loading states can commit as soon as possible.


        attachPingListener(root, renderExpirationTime, thenable);
        _workInProgress.effectTag |= ShouldCapture;
        _workInProgress.expirationTime = renderExpirationTime;
        return;
      } // This boundary already captured during this render. Continue to the next
      // boundary.


      _workInProgress = _workInProgress.return;
    } while (_workInProgress !== null); // No boundary was found. Fallthrough to error mode.
    // TODO: Use invariant so the message is stripped in prod?


    value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.' + getStackByFiberInDevAndProd(sourceFiber));
  } // We didn't find a boundary that could handle this type of exception. Start
  // over and traverse parent path again, this time treating the exception
  // as an error.


  renderDidError();
  value = createCapturedValue(value, sourceFiber);
  var workInProgress = returnFiber;

  do {
    switch (workInProgress.tag) {
      case HostRoot:
        {
          var _errorInfo = value;
          workInProgress.effectTag |= ShouldCapture;
          workInProgress.expirationTime = renderExpirationTime;

          var _update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);

          enqueueCapturedUpdate(workInProgress, _update);
          return;
        }

      case ClassComponent:
        // Capture and retry
        var errorInfo = value;
        var ctor = workInProgress.type;
        var instance = workInProgress.stateNode;

        if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
          workInProgress.effectTag |= ShouldCapture;
          workInProgress.expirationTime = renderExpirationTime; // Schedule the error boundary to re-render using updated state

          var _update2 = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);

          enqueueCapturedUpdate(workInProgress, _update2);
          return;
        }

        break;

      default:
        break;
    }

    workInProgress = workInProgress.return;
  } while (workInProgress !== null);
}

var ceil = Math.ceil;
var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;
var IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;
var NoContext =
/*                    */
0;
var BatchedContext =
/*               */
1;
var EventContext =
/*                 */
2;
var DiscreteEventContext =
/*         */
4;
var LegacyUnbatchedContext =
/*       */
8;
var RenderContext =
/*                */
16;
var CommitContext =
/*                */
32;
var RootIncomplete = 0;
var RootFatalErrored = 1;
var RootErrored = 2;
var RootSuspended = 3;
var RootSuspendedWithDelay = 4;
var RootCompleted = 5;
// Describes where we are in the React execution stack
var executionContext = NoContext; // The root we're working on

var workInProgressRoot = null; // The fiber we're working on

var workInProgress = null; // The expiration time we're rendering

var renderExpirationTime = NoWork; // Whether to root completed, errored, suspended, etc.

var workInProgressRootExitStatus = RootIncomplete; // A fatal error, if one is thrown

var workInProgressRootFatalError = null; // Most recent event time among processed updates during this render.
// This is conceptually a time stamp but expressed in terms of an ExpirationTime
// because we deal mostly with expiration times in the hot path, so this avoids
// the conversion happening in the hot path.

var workInProgressRootLatestProcessedExpirationTime = Sync;
var workInProgressRootLatestSuspenseTimeout = Sync;
var workInProgressRootCanSuspendUsingConfig = null; // The work left over by components that were visited during this render. Only
// includes unprocessed updates, not work in bailed out children.

var workInProgressRootNextUnprocessedUpdateTime = NoWork; // If we're pinged while rendering we don't always restart immediately.
// This flag determines if it might be worthwhile to restart if an opportunity
// happens latere.

var workInProgressRootHasPendingPing = false; // The most recent time we committed a fallback. This lets us ensure a train
// model where we don't commit new loading states in too quick succession.

var globalMostRecentFallbackTime = 0;
var FALLBACK_THROTTLE_MS = 500;
var nextEffect = null;
var hasUncaughtError = false;
var firstUncaughtError = null;
var legacyErrorBoundariesThatAlreadyFailed = null;
var rootDoesHavePassiveEffects = false;
var rootWithPendingPassiveEffects = null;
var pendingPassiveEffectsRenderPriority = NoPriority;
var pendingPassiveEffectsExpirationTime = NoWork;
var rootsWithPendingDiscreteUpdates = null; // Use these to prevent an infinite loop of nested updates

var NESTED_UPDATE_LIMIT = 50;
var nestedUpdateCount = 0;
var rootWithNestedUpdates = null;
var NESTED_PASSIVE_UPDATE_LIMIT = 50;
var nestedPassiveUpdateCount = 0;
var interruptedBy = null; // Marks the need to reschedule pending interactions at these expiration times
// during the commit phase. This enables them to be traced across components
// that spawn new work during render. E.g. hidden boundaries, suspended SSR
// hydration or SuspenseList.

var spawnedWorkDuringRender = null; // Expiration times are computed by adding to the current time (the start
// time). However, if two updates are scheduled within the same event, we
// should treat their start times as simultaneous, even if the actual clock
// time has advanced between the first and second call.
// In other words, because expiration times determine how updates are batched,
// we want all updates of like priority that occur within the same event to
// receive the same expiration time. Otherwise we get tearing.

var currentEventTime = NoWork;
function requestCurrentTimeForUpdate() {
  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    // We're inside React, so it's fine to read the actual time.
    return msToExpirationTime(now());
  } // We're not inside React, so we may be in the middle of a browser event.


  if (currentEventTime !== NoWork) {
    // Use the same start time for all updates until we enter React again.
    return currentEventTime;
  } // This is the first update since React yielded. Compute a new start time.


  currentEventTime = msToExpirationTime(now());
  return currentEventTime;
}
function getCurrentTime() {
  return msToExpirationTime(now());
}
function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
  var mode = fiber.mode;

  if ((mode & BlockingMode) === NoMode) {
    return Sync;
  }

  var priorityLevel = getCurrentPriorityLevel();

  if ((mode & ConcurrentMode) === NoMode) {
    return priorityLevel === ImmediatePriority ? Sync : Batched;
  }

  if ((executionContext & RenderContext) !== NoContext) {
    // Use whatever time we're already rendering
    // TODO: Should there be a way to opt out, like with `runWithPriority`?
    return renderExpirationTime;
  }

  var expirationTime;

  if (suspenseConfig !== null) {
    // Compute an expiration time based on the Suspense timeout.
    expirationTime = computeSuspenseExpiration(currentTime, suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION);
  } else {
    // Compute an expiration time based on the Scheduler priority.
    switch (priorityLevel) {
      case ImmediatePriority:
        expirationTime = Sync;
        break;

      case UserBlockingPriority$2:
        // TODO: Rename this to computeUserBlockingExpiration
        expirationTime = computeInteractiveExpiration(currentTime);
        break;

      case NormalPriority:
      case LowPriority:
        // TODO: Handle LowPriority
        // TODO: Rename this to... something better.
        expirationTime = computeAsyncExpiration(currentTime);
        break;

      case IdlePriority:
        expirationTime = Idle;
        break;

      default:
        {
          {
            throw Error("Expected a valid priority level");
          }
        }

    }
  } // If we're in the middle of rendering a tree, do not update at the same
  // expiration time that is already rendering.
  // TODO: We shouldn't have to do this if the update is on a different root.
  // Refactor computeExpirationForFiber + scheduleUpdate so we have access to
  // the root when we check for this condition.


  if (workInProgressRoot !== null && expirationTime === renderExpirationTime) {
    // This is a trick to move this update into a separate batch
    expirationTime -= 1;
  }

  return expirationTime;
}
function scheduleUpdateOnFiber(fiber, expirationTime) {
  checkForNestedUpdates();
  warnAboutInvalidUpdatesOnClassComponentsInDEV(fiber);
  var root = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

  if (root === null) {
    warnAboutUpdateOnUnmountedFiberInDEV(fiber);
    return;
  }

  checkForInterruption(fiber, expirationTime);
  recordScheduleUpdate(); // TODO: computeExpirationForFiber also reads the priority. Pass the
  // priority as an argument to that function and this one.

  var priorityLevel = getCurrentPriorityLevel();

  if (expirationTime === Sync) {
    if ( // Check if we're inside unbatchedUpdates
    (executionContext & LegacyUnbatchedContext) !== NoContext && // Check if we're not already rendering
    (executionContext & (RenderContext | CommitContext)) === NoContext) {
      // Register pending interactions on the root to avoid losing traced interaction data.
      schedulePendingInteractions(root, expirationTime); // This is a legacy edge case. The initial mount of a ReactDOM.render-ed
      // root inside of batchedUpdates should be synchronous, but layout updates
      // should be deferred until the end of the batch.

      performSyncWorkOnRoot(root);
    } else {
      ensureRootIsScheduled(root);
      schedulePendingInteractions(root, expirationTime);

      if (executionContext === NoContext) {
        // Flush the synchronous work now, unless we're already working or inside
        // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
        // scheduleCallbackForFiber to preserve the ability to schedule a callback
        // without immediately flushing it. We only do this for user-initiated
        // updates, to preserve historical behavior of legacy mode.
        flushSyncCallbackQueue();
      }
    }
  } else {
    ensureRootIsScheduled(root);
    schedulePendingInteractions(root, expirationTime);
  }

  if ((executionContext & DiscreteEventContext) !== NoContext && ( // Only updates at user-blocking priority or greater are considered
  // discrete, even inside a discrete event.
  priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority)) {
    // This is the result of a discrete event. Track the lowest priority
    // discrete update per root so we can flush them early, if needed.
    if (rootsWithPendingDiscreteUpdates === null) {
      rootsWithPendingDiscreteUpdates = new Map([[root, expirationTime]]);
    } else {
      var lastDiscreteTime = rootsWithPendingDiscreteUpdates.get(root);

      if (lastDiscreteTime === undefined || lastDiscreteTime > expirationTime) {
        rootsWithPendingDiscreteUpdates.set(root, expirationTime);
      }
    }
  }
}
var scheduleWork = scheduleUpdateOnFiber; // This is split into a separate function so we can mark a fiber with pending
// work without treating it as a typical update that originates from an event;
// e.g. retrying a Suspense boundary isn't an update, but it does schedule work
// on a fiber.

function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
  // Update the source fiber's expiration time
  if (fiber.expirationTime < expirationTime) {
    fiber.expirationTime = expirationTime;
  }

  var alternate = fiber.alternate;

  if (alternate !== null && alternate.expirationTime < expirationTime) {
    alternate.expirationTime = expirationTime;
  } // Walk the parent path to the root and update the child expiration time.


  var node = fiber.return;
  var root = null;

  if (node === null && fiber.tag === HostRoot) {
    root = fiber.stateNode;
  } else {
    while (node !== null) {
      alternate = node.alternate;

      if (node.childExpirationTime < expirationTime) {
        node.childExpirationTime = expirationTime;

        if (alternate !== null && alternate.childExpirationTime < expirationTime) {
          alternate.childExpirationTime = expirationTime;
        }
      } else if (alternate !== null && alternate.childExpirationTime < expirationTime) {
        alternate.childExpirationTime = expirationTime;
      }

      if (node.return === null && node.tag === HostRoot) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
  }

  if (root !== null) {
    if (workInProgressRoot === root) {
      // Received an update to a tree that's in the middle of rendering. Mark
      // that's unprocessed work on this root.
      markUnprocessedUpdateTime(expirationTime);

      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
        // The root already suspended with a delay, which means this render
        // definitely won't finish. Since we have a new update, let's mark it as
        // suspended now, right before marking the incoming update. This has the
        // effect of interrupting the current render and switching to the update.
        // TODO: This happens to work when receiving an update during the render
        // phase, because of the trick inside computeExpirationForFiber to
        // subtract 1 from `renderExpirationTime` to move it into a
        // separate bucket. But we should probably model it with an exception,
        // using the same mechanism we use to force hydration of a subtree.
        // TODO: This does not account for low pri updates that were already
        // scheduled before the root started rendering. Need to track the next
        // pending expiration time (perhaps by backtracking the return path) and
        // then trigger a restart in the `renderDidSuspendDelayIfPossible` path.
        markRootSuspendedAtTime(root, renderExpirationTime);
      }
    } // Mark that the root has a pending update.


    markRootUpdatedAtTime(root, expirationTime);
  }

  return root;
}

function getNextRootExpirationTimeToWorkOn(root) {
  // Determines the next expiration time that the root should render, taking
  // into account levels that may be suspended, or levels that may have
  // received a ping.
  var lastExpiredTime = root.lastExpiredTime;

  if (lastExpiredTime !== NoWork) {
    return lastExpiredTime;
  } // "Pending" refers to any update that hasn't committed yet, including if it
  // suspended. The "suspended" range is therefore a subset.


  var firstPendingTime = root.firstPendingTime;

  if (!isRootSuspendedAtTime(root, firstPendingTime)) {
    // The highest priority pending time is not suspended. Let's work on that.
    return firstPendingTime;
  } // If the first pending time is suspended, check if there's a lower priority
  // pending level that we know about. Or check if we received a ping. Work
  // on whichever is higher priority.


  var lastPingedTime = root.lastPingedTime;
  var nextKnownPendingLevel = root.nextKnownPendingLevel;
  return lastPingedTime > nextKnownPendingLevel ? lastPingedTime : nextKnownPendingLevel;
} // Use this function to schedule a task for a root. There's only one task per
// root; if a task was already scheduled, we'll check to make sure the
// expiration time of the existing task is the same as the expiration time of
// the next level that the root has work on. This function is called on every
// update, and right before exiting a task.


function ensureRootIsScheduled(root) {
  var lastExpiredTime = root.lastExpiredTime;

  if (lastExpiredTime !== NoWork) {
    // Special case: Expired work should flush synchronously.
    root.callbackExpirationTime = Sync;
    root.callbackPriority = ImmediatePriority;
    root.callbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
    return;
  }

  var expirationTime = getNextRootExpirationTimeToWorkOn(root);
  var existingCallbackNode = root.callbackNode;

  if (expirationTime === NoWork) {
    // There's nothing to work on.
    if (existingCallbackNode !== null) {
      root.callbackNode = null;
      root.callbackExpirationTime = NoWork;
      root.callbackPriority = NoPriority;
    }

    return;
  } // TODO: If this is an update, we already read the current time. Pass the
  // time as an argument.


  var currentTime = requestCurrentTimeForUpdate();
  var priorityLevel = inferPriorityFromExpirationTime(currentTime, expirationTime); // If there's an existing render task, confirm it has the correct priority and
  // expiration time. Otherwise, we'll cancel it and schedule a new one.

  if (existingCallbackNode !== null) {
    var existingCallbackPriority = root.callbackPriority;
    var existingCallbackExpirationTime = root.callbackExpirationTime;

    if ( // Callback must have the exact same expiration time.
    existingCallbackExpirationTime === expirationTime && // Callback must have greater or equal priority.
    existingCallbackPriority >= priorityLevel) {
      // Existing callback is sufficient.
      return;
    } // Need to schedule a new task.
    // TODO: Instead of scheduling a new task, we should be able to change the
    // priority of the existing one.


    cancelCallback(existingCallbackNode);
  }

  root.callbackExpirationTime = expirationTime;
  root.callbackPriority = priorityLevel;
  var callbackNode;

  if (expirationTime === Sync) {
    // Sync React callbacks are scheduled on a special internal queue
    callbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
  } else if (disableSchedulerTimeoutBasedOnReactExpirationTime) {
    callbackNode = scheduleCallback(priorityLevel, performConcurrentWorkOnRoot.bind(null, root));
  } else {
    callbackNode = scheduleCallback(priorityLevel, performConcurrentWorkOnRoot.bind(null, root), // Compute a task timeout based on the expiration time. This also affects
    // ordering because tasks are processed in timeout order.
    {
      timeout: expirationTimeToMs(expirationTime) - now()
    });
  }

  root.callbackNode = callbackNode;
} // This is the entry point for every concurrent task, i.e. anything that
// goes through Scheduler.


function performConcurrentWorkOnRoot(root, didTimeout) {
  // Since we know we're in a React event, we can clear the current
  // event time. The next update will compute a new event time.
  currentEventTime = NoWork;

  if (didTimeout) {
    // The render task took too long to complete. Mark the current time as
    // expired to synchronously render all expired work in a single batch.
    var currentTime = requestCurrentTimeForUpdate();
    markRootExpiredAtTime(root, currentTime); // This will schedule a synchronous callback.

    ensureRootIsScheduled(root);
    return null;
  } // Determine the next expiration time to work on, using the fields stored
  // on the root.


  var expirationTime = getNextRootExpirationTimeToWorkOn(root);

  if (expirationTime !== NoWork) {
    var originalCallbackNode = root.callbackNode;

    if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
      {
        throw Error("Should not already be working.");
      }
    }

    flushPassiveEffects(); // If the root or expiration time have changed, throw out the existing stack
    // and prepare a fresh one. Otherwise we'll continue where we left off.

    if (root !== workInProgressRoot || expirationTime !== renderExpirationTime) {
      prepareFreshStack(root, expirationTime);
      startWorkOnPendingInteractions(root, expirationTime);
    } // If we have a work-in-progress fiber, it means there's still work to do
    // in this root.


    if (workInProgress !== null) {
      var prevExecutionContext = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = pushDispatcher(root);
      var prevInteractions = pushInteractions(root);
      startWorkLoopTimer(workInProgress);

      do {
        try {
          workLoopConcurrent();
          break;
        } catch (thrownValue) {
          handleError(root, thrownValue);
        }
      } while (true);

      resetContextDependencies();
      executionContext = prevExecutionContext;
      popDispatcher(prevDispatcher);

      if (enableSchedulerTracing) {
        popInteractions(prevInteractions);
      }

      if (workInProgressRootExitStatus === RootFatalErrored) {
        var fatalError = workInProgressRootFatalError;
        stopInterruptedWorkLoopTimer();
        prepareFreshStack(root, expirationTime);
        markRootSuspendedAtTime(root, expirationTime);
        ensureRootIsScheduled(root);
        throw fatalError;
      }

      if (workInProgress !== null) {
        // There's still work left over. Exit without committing.
        stopInterruptedWorkLoopTimer();
      } else {
        // We now have a consistent tree. The next step is either to commit it,
        // or, if something suspended, wait to commit it after a timeout.
        stopFinishedWorkLoopTimer();
        var finishedWork = root.finishedWork = root.current.alternate;
        root.finishedExpirationTime = expirationTime;
        finishConcurrentRender(root, finishedWork, workInProgressRootExitStatus, expirationTime);
      }

      ensureRootIsScheduled(root);

      if (root.callbackNode === originalCallbackNode) {
        // The task node scheduled for this root is the same one that's
        // currently executed. Need to return a continuation.
        return performConcurrentWorkOnRoot.bind(null, root);
      }
    }
  }

  return null;
}

function finishConcurrentRender(root, finishedWork, exitStatus, expirationTime) {
  // Set this to null to indicate there's no in-progress render.
  workInProgressRoot = null;

  switch (exitStatus) {
    case RootIncomplete:
    case RootFatalErrored:
      {
        {
          {
            throw Error("Root did not complete. This is a bug in React.");
          }
        }
      }
    // Flow knows about invariant, so it complains if I add a break
    // statement, but eslint doesn't know about invariant, so it complains
    // if I do. eslint-disable-next-line no-fallthrough

    case RootErrored:
      {
        // If this was an async render, the error may have happened due to
        // a mutation in a concurrent event. Try rendering one more time,
        // synchronously, to see if the error goes away. If there are
        // lower priority updates, let's include those, too, in case they
        // fix the inconsistency. Render at Idle to include all updates.
        // If it was Idle or Never or some not-yet-invented time, render
        // at that time.
        markRootExpiredAtTime(root, expirationTime > Idle ? Idle : expirationTime); // We assume that this second render pass will be synchronous
        // and therefore not hit this path again.

        break;
      }

    case RootSuspended:
      {
        markRootSuspendedAtTime(root, expirationTime);
        var lastSuspendedTime = root.lastSuspendedTime;

        if (expirationTime === lastSuspendedTime) {
          root.nextKnownPendingLevel = getRemainingExpirationTime(finishedWork);
        }

        flushSuspensePriorityWarningInDEV(); // We have an acceptable loading state. We need to figure out if we
        // should immediately commit it or wait a bit.
        // If we have processed new updates during this render, we may now
        // have a new loading state ready. We want to ensure that we commit
        // that as soon as possible.

        var hasNotProcessedNewUpdates = workInProgressRootLatestProcessedExpirationTime === Sync;

        if (hasNotProcessedNewUpdates && // do not delay if we're inside an act() scope
        !(true && flushSuspenseFallbacksInTests && IsThisRendererActing.current)) {
          // If we have not processed any new updates during this pass, then
          // this is either a retry of an existing fallback state or a
          // hidden tree. Hidden trees shouldn't be batched with other work
          // and after that's fixed it can only be a retry. We're going to
          // throttle committing retries so that we don't show too many
          // loading states too quickly.
          var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.

          if (msUntilTimeout > 10) {
            if (workInProgressRootHasPendingPing) {
              var lastPingedTime = root.lastPingedTime;

              if (lastPingedTime === NoWork || lastPingedTime >= expirationTime) {
                // This render was pinged but we didn't get to restart
                // earlier so try restarting now instead.
                root.lastPingedTime = expirationTime;
                prepareFreshStack(root, expirationTime);
                break;
              }
            }

            var nextTime = getNextRootExpirationTimeToWorkOn(root);

            if (nextTime !== NoWork && nextTime !== expirationTime) {
              // There's additional work on this root.
              break;
            }

            if (lastSuspendedTime !== NoWork && lastSuspendedTime !== expirationTime) {
              // We should prefer to render the fallback of at the last
              // suspended level. Ping the last suspended level to try
              // rendering it again.
              root.lastPingedTime = lastSuspendedTime;
              break;
            } // The render is suspended, it hasn't timed out, and there's no
            // lower priority work to do. Instead of committing the fallback
            // immediately, wait for more data to arrive.


            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), msUntilTimeout);
            break;
          }
        } // The work expired. Commit immediately.


        commitRoot(root);
        break;
      }

    case RootSuspendedWithDelay:
      {
        markRootSuspendedAtTime(root, expirationTime);
        var _lastSuspendedTime = root.lastSuspendedTime;

        if (expirationTime === _lastSuspendedTime) {
          root.nextKnownPendingLevel = getRemainingExpirationTime(finishedWork);
        }

        flushSuspensePriorityWarningInDEV();

        if ( // do not delay if we're inside an act() scope
        !(true && flushSuspenseFallbacksInTests && IsThisRendererActing.current)) {
          // We're suspended in a state that should be avoided. We'll try to
          // avoid committing it for as long as the timeouts let us.
          if (workInProgressRootHasPendingPing) {
            var _lastPingedTime = root.lastPingedTime;

            if (_lastPingedTime === NoWork || _lastPingedTime >= expirationTime) {
              // This render was pinged but we didn't get to restart earlier
              // so try restarting now instead.
              root.lastPingedTime = expirationTime;
              prepareFreshStack(root, expirationTime);
              break;
            }
          }

          var _nextTime = getNextRootExpirationTimeToWorkOn(root);

          if (_nextTime !== NoWork && _nextTime !== expirationTime) {
            // There's additional work on this root.
            break;
          }

          if (_lastSuspendedTime !== NoWork && _lastSuspendedTime !== expirationTime) {
            // We should prefer to render the fallback of at the last
            // suspended level. Ping the last suspended level to try
            // rendering it again.
            root.lastPingedTime = _lastSuspendedTime;
            break;
          }

          var _msUntilTimeout;

          if (workInProgressRootLatestSuspenseTimeout !== Sync) {
            // We have processed a suspense config whose expiration time we
            // can use as the timeout.
            _msUntilTimeout = expirationTimeToMs(workInProgressRootLatestSuspenseTimeout) - now();
          } else if (workInProgressRootLatestProcessedExpirationTime === Sync) {
            // This should never normally happen because only new updates
            // cause delayed states, so we should have processed something.
            // However, this could also happen in an offscreen tree.
            _msUntilTimeout = 0;
          } else {
            // If we don't have a suspense config, we're going to use a
            // heuristic to determine how long we can suspend.
            var eventTimeMs = inferTimeFromExpirationTime(workInProgressRootLatestProcessedExpirationTime);
            var currentTimeMs = now();
            var timeUntilExpirationMs = expirationTimeToMs(expirationTime) - currentTimeMs;
            var timeElapsed = currentTimeMs - eventTimeMs;

            if (timeElapsed < 0) {
              // We get this wrong some time since we estimate the time.
              timeElapsed = 0;
            }

            _msUntilTimeout = jnd(timeElapsed) - timeElapsed; // Clamp the timeout to the expiration time. TODO: Once the
            // event time is exact instead of inferred from expiration time
            // we don't need this.

            if (timeUntilExpirationMs < _msUntilTimeout) {
              _msUntilTimeout = timeUntilExpirationMs;
            }
          } // Don't bother with a very short suspense time.


          if (_msUntilTimeout > 10) {
            // The render is suspended, it hasn't timed out, and there's no
            // lower priority work to do. Instead of committing the fallback
            // immediately, wait for more data to arrive.
            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout);
            break;
          }
        } // The work expired. Commit immediately.


        commitRoot(root);
        break;
      }

    case RootCompleted:
      {
        // The work completed. Ready to commit.
        if ( // do not delay if we're inside an act() scope
        !(true && flushSuspenseFallbacksInTests && IsThisRendererActing.current) && workInProgressRootLatestProcessedExpirationTime !== Sync && workInProgressRootCanSuspendUsingConfig !== null) {
          // If we have exceeded the minimum loading delay, which probably
          // means we have shown a spinner already, we might have to suspend
          // a bit longer to ensure that the spinner is shown for
          // enough time.
          var _msUntilTimeout2 = computeMsUntilSuspenseLoadingDelay(workInProgressRootLatestProcessedExpirationTime, expirationTime, workInProgressRootCanSuspendUsingConfig);

          if (_msUntilTimeout2 > 10) {
            markRootSuspendedAtTime(root, expirationTime);
            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout2);
            break;
          }
        }

        commitRoot(root);
        break;
      }

    default:
      {
        {
          {
            throw Error("Unknown root exit status.");
          }
        }
      }
  }
} // This is the entry point for synchronous tasks that don't go
// through Scheduler


function performSyncWorkOnRoot(root) {
  // Check if there's expired work on this root. Otherwise, render at Sync.
  var lastExpiredTime = root.lastExpiredTime;
  var expirationTime = lastExpiredTime !== NoWork ? lastExpiredTime : Sync;

  if (root.finishedExpirationTime === expirationTime) {
    // There's already a pending commit at this expiration time.
    // TODO: This is poorly factored. This case only exists for the
    // batch.commit() API.
    commitRoot(root);
  } else {
    if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
      {
        throw Error("Should not already be working.");
      }
    }

    flushPassiveEffects(); // If the root or expiration time have changed, throw out the existing stack
    // and prepare a fresh one. Otherwise we'll continue where we left off.

    if (root !== workInProgressRoot || expirationTime !== renderExpirationTime) {
      prepareFreshStack(root, expirationTime);
      startWorkOnPendingInteractions(root, expirationTime);
    } // If we have a work-in-progress fiber, it means there's still work to do
    // in this root.


    if (workInProgress !== null) {
      var prevExecutionContext = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = pushDispatcher(root);
      var prevInteractions = pushInteractions(root);
      startWorkLoopTimer(workInProgress);

      do {
        try {
          workLoopSync();
          break;
        } catch (thrownValue) {
          handleError(root, thrownValue);
        }
      } while (true);

      resetContextDependencies();
      executionContext = prevExecutionContext;
      popDispatcher(prevDispatcher);

      if (enableSchedulerTracing) {
        popInteractions(prevInteractions);
      }

      if (workInProgressRootExitStatus === RootFatalErrored) {
        var fatalError = workInProgressRootFatalError;
        stopInterruptedWorkLoopTimer();
        prepareFreshStack(root, expirationTime);
        markRootSuspendedAtTime(root, expirationTime);
        ensureRootIsScheduled(root);
        throw fatalError;
      }

      if (workInProgress !== null) {
        // This is a sync render, so we should have finished the whole tree.
        {
          {
            throw Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      } else {
        // We now have a consistent tree. Because this is a sync render, we
        // will commit it even if something suspended.
        stopFinishedWorkLoopTimer();
        root.finishedWork = root.current.alternate;
        root.finishedExpirationTime = expirationTime;
        finishSyncRender(root, workInProgressRootExitStatus, expirationTime);
      } // Before exiting, make sure there's a callback scheduled for the next
      // pending level.


      ensureRootIsScheduled(root);
    }
  }

  return null;
}

function finishSyncRender(root, exitStatus, expirationTime) {
  // Set this to null to indicate there's no in-progress render.
  workInProgressRoot = null;

  {
    if (exitStatus === RootSuspended || exitStatus === RootSuspendedWithDelay) {
      flushSuspensePriorityWarningInDEV();
    }
  }

  commitRoot(root);
}

function flushRoot(root, expirationTime) {
  markRootExpiredAtTime(root, expirationTime);
  ensureRootIsScheduled(root);

  if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
    flushSyncCallbackQueue();
  }
}
function flushDiscreteUpdates() {
  // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.
  // However, `act` uses `batchedUpdates`, so there's no way to distinguish
  // those two cases. Need to fix this before exposing flushDiscreteUpdates
  // as a public API.
  if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
    if (true && (executionContext & RenderContext) !== NoContext) {
      warning$1(false, 'unstable_flushDiscreteUpdates: Cannot flush updates when React is ' + 'already rendering.');
    } // We're already rendering, so we can't synchronously flush pending work.
    // This is probably a nested event dispatch triggered by a lifecycle/effect,
    // like `el.focus()`. Exit.


    return;
  }

  flushPendingDiscreteUpdates(); // If the discrete updates scheduled passive effects, flush them now so that
  // they fire before the next serial event.

  flushPassiveEffects();
}

function syncUpdates(fn, a, b, c) {
  return runWithPriority$2(ImmediatePriority, fn.bind(null, a, b, c));
}

function flushPendingDiscreteUpdates() {
  if (rootsWithPendingDiscreteUpdates !== null) {
    // For each root with pending discrete updates, schedule a callback to
    // immediately flush them.
    var roots = rootsWithPendingDiscreteUpdates;
    rootsWithPendingDiscreteUpdates = null;
    roots.forEach(function (expirationTime, root) {
      markRootExpiredAtTime(root, expirationTime);
      ensureRootIsScheduled(root);
    }); // Now flush the immediate queue.

    flushSyncCallbackQueue();
  }
}

function batchedUpdates$1(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}
function batchedEventUpdates$1(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext |= EventContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}
function discreteUpdates$1(fn, a, b, c) {
  var prevExecutionContext = executionContext;
  executionContext |= DiscreteEventContext;

  try {
    // Should this
    return runWithPriority$2(UserBlockingPriority$2, fn.bind(null, a, b, c));
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}
function unbatchedUpdates(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext &= ~BatchedContext;
  executionContext |= LegacyUnbatchedContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}
function flushSync(fn, a) {
  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    {
      {
        throw Error("flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.");
      }
    }
  }

  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;

  try {
    return runWithPriority$2(ImmediatePriority, fn.bind(null, a));
  } finally {
    executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
    // Note that this will happen even if batchedUpdates is higher up
    // the stack.

    flushSyncCallbackQueue();
  }
}
function flushControlled(fn) {
  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;

  try {
    runWithPriority$2(ImmediatePriority, fn);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}

function prepareFreshStack(root, expirationTime) {
  root.finishedWork = null;
  root.finishedExpirationTime = NoWork;
  var timeoutHandle = root.timeoutHandle;

  if (timeoutHandle !== noTimeout) {
    // The root previous suspended and scheduled a timeout to commit a fallback
    // state. Now that we have additional work, cancel the timeout.
    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above

    cancelTimeout(timeoutHandle);
  }

  if (workInProgress !== null) {
    var interruptedWork = workInProgress.return;

    while (interruptedWork !== null) {
      unwindInterruptedWork(interruptedWork);
      interruptedWork = interruptedWork.return;
    }
  }

  workInProgressRoot = root;
  workInProgress = createWorkInProgress(root.current, null, expirationTime);
  renderExpirationTime = expirationTime;
  workInProgressRootExitStatus = RootIncomplete;
  workInProgressRootFatalError = null;
  workInProgressRootLatestProcessedExpirationTime = Sync;
  workInProgressRootLatestSuspenseTimeout = Sync;
  workInProgressRootCanSuspendUsingConfig = null;
  workInProgressRootNextUnprocessedUpdateTime = NoWork;
  workInProgressRootHasPendingPing = false;

  if (enableSchedulerTracing) {
    spawnedWorkDuringRender = null;
  }

  {
    ReactStrictModeWarnings.discardPendingWarnings();
    componentsThatTriggeredHighPriSuspend = null;
  }
}

function handleError(root, thrownValue) {
  do {
    try {
      // Reset module-level state that was set during the render phase.
      resetContextDependencies();
      resetHooks();
      resetCurrentFiber();

      if (workInProgress === null || workInProgress.return === null) {
        // Expected to be working on a non-root fiber. This is a fatal error
        // because there's no ancestor that can handle it; the root is
        // supposed to capture all errors that weren't caught by an error
        // boundary.
        workInProgressRootExitStatus = RootFatalErrored;
        workInProgressRootFatalError = thrownValue;
        return null;
      }

      if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
        // Record the time spent rendering before an error was thrown. This
        // avoids inaccurate Profiler durations in the case of a
        // suspended render.
        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);
      }

      throwException(root, workInProgress.return, workInProgress, thrownValue, renderExpirationTime);
      workInProgress = completeUnitOfWork(workInProgress);
    } catch (yetAnotherThrownValue) {
      // Something in the return path also threw.
      thrownValue = yetAnotherThrownValue;
      continue;
    } // Return to the normal work loop.


    return;
  } while (true);
}

function pushDispatcher(root) {
  var prevDispatcher = ReactCurrentDispatcher.current;
  ReactCurrentDispatcher.current = ContextOnlyDispatcher;

  if (prevDispatcher === null) {
    // The React isomorphic package does not include a default dispatcher.
    // Instead the first renderer will lazily attach one, in order to give
    // nicer error messages.
    return ContextOnlyDispatcher;
  } else {
    return prevDispatcher;
  }
}

function popDispatcher(prevDispatcher) {
  ReactCurrentDispatcher.current = prevDispatcher;
}

function pushInteractions(root) {
  if (enableSchedulerTracing) {
    var prevInteractions = tracing.__interactionsRef.current;
    tracing.__interactionsRef.current = root.memoizedInteractions;
    return prevInteractions;
  }

  return null;
}

function popInteractions(prevInteractions) {
  if (enableSchedulerTracing) {
    tracing.__interactionsRef.current = prevInteractions;
  }
}

function markCommitTimeOfFallback() {
  globalMostRecentFallbackTime = now();
}
function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
  if (expirationTime < workInProgressRootLatestProcessedExpirationTime && expirationTime > Idle) {
    workInProgressRootLatestProcessedExpirationTime = expirationTime;
  }

  if (suspenseConfig !== null) {
    if (expirationTime < workInProgressRootLatestSuspenseTimeout && expirationTime > Idle) {
      workInProgressRootLatestSuspenseTimeout = expirationTime; // Most of the time we only have one config and getting wrong is not bad.

      workInProgressRootCanSuspendUsingConfig = suspenseConfig;
    }
  }
}
function markUnprocessedUpdateTime(expirationTime) {
  if (expirationTime > workInProgressRootNextUnprocessedUpdateTime) {
    workInProgressRootNextUnprocessedUpdateTime = expirationTime;
  }
}
function renderDidSuspend() {
  if (workInProgressRootExitStatus === RootIncomplete) {
    workInProgressRootExitStatus = RootSuspended;
  }
}
function renderDidSuspendDelayIfPossible() {
  if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) {
    workInProgressRootExitStatus = RootSuspendedWithDelay;
  } // Check if there's a lower priority update somewhere else in the tree.


  if (workInProgressRootNextUnprocessedUpdateTime !== NoWork && workInProgressRoot !== null) {
    // Mark the current render as suspended, and then mark that there's a
    // pending update.
    // TODO: This should immediately interrupt the current render, instead
    // of waiting until the next time we yield.
    markRootSuspendedAtTime(workInProgressRoot, renderExpirationTime);
    markRootUpdatedAtTime(workInProgressRoot, workInProgressRootNextUnprocessedUpdateTime);
  }
}
function renderDidError() {
  if (workInProgressRootExitStatus !== RootCompleted) {
    workInProgressRootExitStatus = RootErrored;
  }
} // Called during render to determine if anything has suspended.
// Returns false if we're not sure.

function renderHasNotSuspendedYet() {
  // If something errored or completed, we can't really be sure,
  // so those are false.
  return workInProgressRootExitStatus === RootIncomplete;
}

function inferTimeFromExpirationTime(expirationTime) {
  // We don't know exactly when the update was scheduled, but we can infer an
  // approximate start time from the expiration time.
  var earliestExpirationTimeMs = expirationTimeToMs(expirationTime);
  return earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;
}

function inferTimeFromExpirationTimeWithSuspenseConfig(expirationTime, suspenseConfig) {
  // We don't know exactly when the update was scheduled, but we can infer an
  // approximate start time from the expiration time by subtracting the timeout
  // that was added to the event time.
  var earliestExpirationTimeMs = expirationTimeToMs(expirationTime);
  return earliestExpirationTimeMs - (suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION);
} // The work loop is an extremely hot path. Tell Closure not to inline it.

/** @noinline */


function workLoopSync() {
  // Already timed out, so perform work without checking if we need to yield.
  while (workInProgress !== null) {
    workInProgress = performUnitOfWork(workInProgress);
  }
}
/** @noinline */


function workLoopConcurrent() {
  // Perform work until Scheduler asks us to yield
  while (workInProgress !== null && !shouldYield()) {
    workInProgress = performUnitOfWork(workInProgress);
  }
}

function performUnitOfWork(unitOfWork) {
  // The current, flushed, state of this fiber is the alternate. Ideally
  // nothing should rely on this, but relying on it here means that we don't
  // need an additional field on the work in progress.
  var current$$1 = unitOfWork.alternate;
  startWorkTimer(unitOfWork);
  setCurrentFiber(unitOfWork);
  var next;

  if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {
    startProfilerTimer(unitOfWork);
    next = beginWork$$1(current$$1, unitOfWork, renderExpirationTime);
    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
  } else {
    next = beginWork$$1(current$$1, unitOfWork, renderExpirationTime);
  }

  resetCurrentFiber();
  unitOfWork.memoizedProps = unitOfWork.pendingProps;

  if (next === null) {
    // If this doesn't spawn new work, complete the current work.
    next = completeUnitOfWork(unitOfWork);
  }

  ReactCurrentOwner$2.current = null;
  return next;
}

function completeUnitOfWork(unitOfWork) {
  // Attempt to complete the current unit of work, then move to the next
  // sibling. If there are no more siblings, return to the parent fiber.
  workInProgress = unitOfWork;

  do {
    // The current, flushed, state of this fiber is the alternate. Ideally
    // nothing should rely on this, but relying on it here means that we don't
    // need an additional field on the work in progress.
    var current$$1 = workInProgress.alternate;
    var returnFiber = workInProgress.return; // Check if the work completed or if something threw.

    if ((workInProgress.effectTag & Incomplete) === NoEffect) {
      setCurrentFiber(workInProgress);
      var next = void 0;

      if (!enableProfilerTimer || (workInProgress.mode & ProfileMode) === NoMode) {
        next = completeWork(current$$1, workInProgress, renderExpirationTime);
      } else {
        startProfilerTimer(workInProgress);
        next = completeWork(current$$1, workInProgress, renderExpirationTime); // Update render duration assuming we didn't error.

        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);
      }

      stopWorkTimer(workInProgress);
      resetCurrentFiber();
      resetChildExpirationTime(workInProgress);

      if (next !== null) {
        // Completing this fiber spawned new work. Work on that next.
        return next;
      }

      if (returnFiber !== null && // Do not append effects to parents if a sibling failed to complete
      (returnFiber.effectTag & Incomplete) === NoEffect) {
        // Append all the effects of the subtree and this fiber onto the effect
        // list of the parent. The completion order of the children affects the
        // side-effect order.
        if (returnFiber.firstEffect === null) {
          returnFiber.firstEffect = workInProgress.firstEffect;
        }

        if (workInProgress.lastEffect !== null) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
          }

          returnFiber.lastEffect = workInProgress.lastEffect;
        } // If this fiber had side-effects, we append it AFTER the children's
        // side-effects. We can perform certain side-effects earlier if needed,
        // by doing multiple passes over the effect list. We don't want to
        // schedule our own side-effect on our own list because if end up
        // reusing children we'll schedule this effect onto itself since we're
        // at the end.


        var effectTag = workInProgress.effectTag; // Skip both NoWork and PerformedWork tags when creating the effect
        // list. PerformedWork effect is read by React DevTools but shouldn't be
        // committed.

        if (effectTag > PerformedWork) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress;
          } else {
            returnFiber.firstEffect = workInProgress;
          }

          returnFiber.lastEffect = workInProgress;
        }
      }
    } else {
      // This fiber did not complete because something threw. Pop values off
      // the stack without entering the complete phase. If this is a boundary,
      // capture values if possible.
      var _next = unwindWork(workInProgress, renderExpirationTime); // Because this fiber did not complete, don't reset its expiration time.


      if (enableProfilerTimer && (workInProgress.mode & ProfileMode) !== NoMode) {
        // Record the render duration for the fiber that errored.
        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false); // Include the time spent working on failed children before continuing.

        var actualDuration = workInProgress.actualDuration;
        var child = workInProgress.child;

        while (child !== null) {
          actualDuration += child.actualDuration;
          child = child.sibling;
        }

        workInProgress.actualDuration = actualDuration;
      }

      if (_next !== null) {
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        // Since we're restarting, remove anything that is not a host effect
        // from the effect tag.
        // TODO: The name stopFailedWorkTimer is misleading because Suspense
        // also captures and restarts.
        stopFailedWorkTimer(workInProgress);
        _next.effectTag &= HostEffectMask;
        return _next;
      }

      stopWorkTimer(workInProgress);

      if (returnFiber !== null) {
        // Mark the parent fiber as incomplete and clear its effect list.
        returnFiber.firstEffect = returnFiber.lastEffect = null;
        returnFiber.effectTag |= Incomplete;
      }
    }

    var siblingFiber = workInProgress.sibling;

    if (siblingFiber !== null) {
      // If there is more work to do in this returnFiber, do that next.
      return siblingFiber;
    } // Otherwise, return to the parent


    workInProgress = returnFiber;
  } while (workInProgress !== null); // We've reached the root.


  if (workInProgressRootExitStatus === RootIncomplete) {
    workInProgressRootExitStatus = RootCompleted;
  }

  return null;
}

function getRemainingExpirationTime(fiber) {
  var updateExpirationTime = fiber.expirationTime;
  var childExpirationTime = fiber.childExpirationTime;
  return updateExpirationTime > childExpirationTime ? updateExpirationTime : childExpirationTime;
}

function resetChildExpirationTime(completedWork) {
  if (renderExpirationTime !== Never && completedWork.childExpirationTime === Never) {
    // The children of this component are hidden. Don't bubble their
    // expiration times.
    return;
  }

  var newChildExpirationTime = NoWork; // Bubble up the earliest expiration time.

  if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {
    // In profiling mode, resetChildExpirationTime is also used to reset
    // profiler durations.
    var actualDuration = completedWork.actualDuration;
    var treeBaseDuration = completedWork.selfBaseDuration; // When a fiber is cloned, its actualDuration is reset to 0. This value will
    // only be updated if work is done on the fiber (i.e. it doesn't bailout).
    // When work is done, it should bubble to the parent's actualDuration. If
    // the fiber has not been cloned though, (meaning no work was done), then
    // this value will reflect the amount of time spent working on a previous
    // render. In that case it should not bubble. We determine whether it was
    // cloned by comparing the child pointer.

    var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;
    var child = completedWork.child;

    while (child !== null) {
      var childUpdateExpirationTime = child.expirationTime;
      var childChildExpirationTime = child.childExpirationTime;

      if (childUpdateExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = childUpdateExpirationTime;
      }

      if (childChildExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = childChildExpirationTime;
      }

      if (shouldBubbleActualDurations) {
        actualDuration += child.actualDuration;
      }

      treeBaseDuration += child.treeBaseDuration;
      child = child.sibling;
    }

    completedWork.actualDuration = actualDuration;
    completedWork.treeBaseDuration = treeBaseDuration;
  } else {
    var _child = completedWork.child;

    while (_child !== null) {
      var _childUpdateExpirationTime = _child.expirationTime;
      var _childChildExpirationTime = _child.childExpirationTime;

      if (_childUpdateExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = _childUpdateExpirationTime;
      }

      if (_childChildExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = _childChildExpirationTime;
      }

      _child = _child.sibling;
    }
  }

  completedWork.childExpirationTime = newChildExpirationTime;
}

function commitRoot(root) {
  var renderPriorityLevel = getCurrentPriorityLevel();
  runWithPriority$2(ImmediatePriority, commitRootImpl.bind(null, root, renderPriorityLevel));
  return null;
}

function commitRootImpl(root, renderPriorityLevel) {
  do {
    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
    // means `flushPassiveEffects` will sometimes result in additional
    // passive effects. So we need to keep flushing in a loop until there are
    // no more pending effects.
    // TODO: Might be better if `flushPassiveEffects` did not automatically
    // flush synchronous work at the end, to avoid factoring hazards like this.
    flushPassiveEffects();
  } while (rootWithPendingPassiveEffects !== null);

  flushRenderPhaseStrictModeWarningsInDEV();

  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
    {
      throw Error("Should not already be working.");
    }
  }

  var finishedWork = root.finishedWork;
  var expirationTime = root.finishedExpirationTime;

  if (finishedWork === null) {
    return null;
  }

  root.finishedWork = null;
  root.finishedExpirationTime = NoWork;

  if (!(finishedWork !== root.current)) {
    {
      throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
    }
  } // commitRoot never returns a continuation; it always finishes synchronously.
  // So we can clear these now to allow a new callback to be scheduled.


  root.callbackNode = null;
  root.callbackExpirationTime = NoWork;
  root.callbackPriority = NoPriority;
  root.nextKnownPendingLevel = NoWork;
  startCommitTimer(); // Update the first and last pending times on this root. The new first
  // pending time is whatever is left on the root fiber.

  var remainingExpirationTimeBeforeCommit = getRemainingExpirationTime(finishedWork);
  markRootFinishedAtTime(root, expirationTime, remainingExpirationTimeBeforeCommit);

  if (root === workInProgressRoot) {
    // We can reset these now that they are finished.
    workInProgressRoot = null;
    workInProgress = null;
    renderExpirationTime = NoWork;
  } else {} // This indicates that the last root we worked on is not the same one that
  // we're committing now. This most commonly happens when a suspended root
  // times out.
  // Get the list of effects.


  var firstEffect;

  if (finishedWork.effectTag > PerformedWork) {
    // A fiber's effect list consists only of its children, not itself. So if
    // the root has an effect, we need to add it to the end of the list. The
    // resulting list is the set that would belong to the root's parent, if it
    // had one; that is, all the effects in the tree including the root.
    if (finishedWork.lastEffect !== null) {
      finishedWork.lastEffect.nextEffect = finishedWork;
      firstEffect = finishedWork.firstEffect;
    } else {
      firstEffect = finishedWork;
    }
  } else {
    // There is no effect on the root.
    firstEffect = finishedWork.firstEffect;
  }

  if (firstEffect !== null) {
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;
    var prevInteractions = pushInteractions(root); // Reset this to null before calling lifecycles

    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
    // of the effect list for each phase: all mutation effects come before all
    // layout effects, and so on.
    // The first phase a "before mutation" phase. We use this phase to read the
    // state of the host tree right before we mutate it. This is where
    // getSnapshotBeforeUpdate is called.

    startCommitSnapshotEffectsTimer();
    prepareForCommit(root.containerInfo);
    nextEffect = firstEffect;

    do {
      {
        invokeGuardedCallback(null, commitBeforeMutationEffects, null);

        if (hasCaughtError()) {
          if (!(nextEffect !== null)) {
            {
              throw Error("Should be working on an effect.");
            }
          }

          var error = clearCaughtError();
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null);

    stopCommitSnapshotEffectsTimer();

    if (enableProfilerTimer) {
      // Mark the current commit time to be shared by all Profilers in this
      // batch. This enables them to be grouped later.
      recordCommitTime();
    } // The next phase is the mutation phase, where we mutate the host tree.


    startCommitHostEffectsTimer();
    nextEffect = firstEffect;

    do {
      {
        invokeGuardedCallback(null, commitMutationEffects, null, root, renderPriorityLevel);

        if (hasCaughtError()) {
          if (!(nextEffect !== null)) {
            {
              throw Error("Should be working on an effect.");
            }
          }

          var _error = clearCaughtError();

          captureCommitPhaseError(nextEffect, _error);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null);

    stopCommitHostEffectsTimer();
    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
    // the mutation phase, so that the previous tree is still current during
    // componentWillUnmount, but before the layout phase, so that the finished
    // work is current during componentDidMount/Update.

    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
    // the host tree after it's been mutated. The idiomatic use case for this is
    // layout, but class component lifecycles also fire here for legacy reasons.

    startCommitLifeCyclesTimer();
    nextEffect = firstEffect;

    do {
      {
        invokeGuardedCallback(null, commitLayoutEffects, null, root, expirationTime);

        if (hasCaughtError()) {
          if (!(nextEffect !== null)) {
            {
              throw Error("Should be working on an effect.");
            }
          }

          var _error2 = clearCaughtError();

          captureCommitPhaseError(nextEffect, _error2);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null);

    stopCommitLifeCyclesTimer();
    nextEffect = null; // Tell Scheduler to yield at the end of the frame, so the browser has an
    // opportunity to paint.

    requestPaint();

    if (enableSchedulerTracing) {
      popInteractions(prevInteractions);
    }

    executionContext = prevExecutionContext;
  } else {
    // No effects.
    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
    // no effects.
    // TODO: Maybe there's a better way to report this.

    startCommitSnapshotEffectsTimer();
    stopCommitSnapshotEffectsTimer();

    if (enableProfilerTimer) {
      recordCommitTime();
    }

    startCommitHostEffectsTimer();
    stopCommitHostEffectsTimer();
    startCommitLifeCyclesTimer();
    stopCommitLifeCyclesTimer();
  }

  stopCommitTimer();
  var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;

  if (rootDoesHavePassiveEffects) {
    // This commit has passive effects. Stash a reference to them. But don't
    // schedule a callback until after flushing layout work.
    rootDoesHavePassiveEffects = false;
    rootWithPendingPassiveEffects = root;
    pendingPassiveEffectsExpirationTime = expirationTime;
    pendingPassiveEffectsRenderPriority = renderPriorityLevel;
  } else {
    // We are done with the effect chain at this point so let's clear the
    // nextEffect pointers to assist with GC. If we have passive effects, we'll
    // clear this in flushPassiveEffects.
    nextEffect = firstEffect;

    while (nextEffect !== null) {
      var nextNextEffect = nextEffect.nextEffect;
      nextEffect.nextEffect = null;
      nextEffect = nextNextEffect;
    }
  } // Check if there's remaining work on this root


  var remainingExpirationTime = root.firstPendingTime;

  if (remainingExpirationTime !== NoWork) {
    if (enableSchedulerTracing) {
      if (spawnedWorkDuringRender !== null) {
        var expirationTimes = spawnedWorkDuringRender;
        spawnedWorkDuringRender = null;

        for (var i = 0; i < expirationTimes.length; i++) {
          scheduleInteractions(root, expirationTimes[i], root.memoizedInteractions);
        }
      }

      schedulePendingInteractions(root, remainingExpirationTime);
    }
  } else {
    // If there's no remaining work, we can clear the set of already failed
    // error boundaries.
    legacyErrorBoundariesThatAlreadyFailed = null;
  }

  if (enableSchedulerTracing) {
    if (!rootDidHavePassiveEffects) {
      // If there are no passive effects, then we can complete the pending interactions.
      // Otherwise, we'll wait until after the passive effects are flushed.
      // Wait to do this until after remaining work has been scheduled,
      // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.
      finishPendingInteractions(root, expirationTime);
    }
  }

  if (remainingExpirationTime === Sync) {
    // Count the number of times the root synchronously re-renders without
    // finishing. If there are too many, it indicates an infinite update loop.
    if (root === rootWithNestedUpdates) {
      nestedUpdateCount++;
    } else {
      nestedUpdateCount = 0;
      rootWithNestedUpdates = root;
    }
  } else {
    nestedUpdateCount = 0;
  }

  onCommitRoot(finishedWork.stateNode, expirationTime); // Always call this before exiting `commitRoot`, to ensure that any
  // additional work on this root is scheduled.

  ensureRootIsScheduled(root);

  if (hasUncaughtError) {
    hasUncaughtError = false;
    var _error3 = firstUncaughtError;
    firstUncaughtError = null;
    throw _error3;
  }

  if ((executionContext & LegacyUnbatchedContext) !== NoContext) {
    // This is a legacy edge case. We just committed the initial mount of
    // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired
    // synchronously, but layout updates should be deferred until the end
    // of the batch.
    return null;
  } // If layout work was scheduled, flush it now.


  flushSyncCallbackQueue();
  return null;
}

function commitBeforeMutationEffects() {
  while (nextEffect !== null) {
    var effectTag = nextEffect.effectTag;

    if ((effectTag & Snapshot) !== NoEffect) {
      setCurrentFiber(nextEffect);
      recordEffect();
      var current$$1 = nextEffect.alternate;
      commitBeforeMutationLifeCycles(current$$1, nextEffect);
      resetCurrentFiber();
    }

    if ((effectTag & Passive) !== NoEffect) {
      // If there are passive effects, schedule a callback to flush at
      // the earliest opportunity.
      if (!rootDoesHavePassiveEffects) {
        rootDoesHavePassiveEffects = true;
        scheduleCallback(NormalPriority, function () {
          flushPassiveEffects();
          return null;
        });
      }
    }

    nextEffect = nextEffect.nextEffect;
  }
}

function commitMutationEffects(root, renderPriorityLevel) {
  // TODO: Should probably move the bulk of this function to commitWork.
  while (nextEffect !== null) {
    setCurrentFiber(nextEffect);
    var effectTag = nextEffect.effectTag;

    if (effectTag & ContentReset) {
      commitResetTextContent(nextEffect);
    }

    if (effectTag & Ref) {
      var current$$1 = nextEffect.alternate;

      if (current$$1 !== null) {
        commitDetachRef(current$$1);
      }
    } // The following switch statement is only concerned about placement,
    // updates, and deletions. To avoid needing to add a case for every possible
    // bitmap value, we remove the secondary effects from the effect tag and
    // switch on that value.


    var primaryEffectTag = effectTag & (Placement | Update | Deletion | Hydrating);

    switch (primaryEffectTag) {
      case Placement:
        {
          commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
          // inserted, before any life-cycles like componentDidMount gets called.
          // TODO: findDOMNode doesn't rely on this any more but isMounted does
          // and isMounted is deprecated anyway so we should be able to kill this.

          nextEffect.effectTag &= ~Placement;
          break;
        }

      case PlacementAndUpdate:
        {
          // Placement
          commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
          // inserted, before any life-cycles like componentDidMount gets called.

          nextEffect.effectTag &= ~Placement; // Update

          var _current = nextEffect.alternate;
          commitWork(_current, nextEffect);
          break;
        }

      case Hydrating:
        {
          nextEffect.effectTag &= ~Hydrating;
          break;
        }

      case HydratingAndUpdate:
        {
          nextEffect.effectTag &= ~Hydrating; // Update

          var _current2 = nextEffect.alternate;
          commitWork(_current2, nextEffect);
          break;
        }

      case Update:
        {
          var _current3 = nextEffect.alternate;
          commitWork(_current3, nextEffect);
          break;
        }

      case Deletion:
        {
          commitDeletion(root, nextEffect, renderPriorityLevel);
          break;
        }
    } // TODO: Only record a mutation effect if primaryEffectTag is non-zero.


    recordEffect();
    resetCurrentFiber();
    nextEffect = nextEffect.nextEffect;
  }
}

function commitLayoutEffects(root, committedExpirationTime) {
  // TODO: Should probably move the bulk of this function to commitWork.
  while (nextEffect !== null) {
    setCurrentFiber(nextEffect);
    var effectTag = nextEffect.effectTag;

    if (effectTag & (Update | Callback)) {
      recordEffect();
      var current$$1 = nextEffect.alternate;
      commitLifeCycles(root, current$$1, nextEffect, committedExpirationTime);
    }

    if (effectTag & Ref) {
      recordEffect();
      commitAttachRef(nextEffect);
    }

    resetCurrentFiber();
    nextEffect = nextEffect.nextEffect;
  }
}

function flushPassiveEffects() {
  if (pendingPassiveEffectsRenderPriority !== NoPriority) {
    var priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority ? NormalPriority : pendingPassiveEffectsRenderPriority;
    pendingPassiveEffectsRenderPriority = NoPriority;
    return runWithPriority$2(priorityLevel, flushPassiveEffectsImpl);
  }
}

function flushPassiveEffectsImpl() {
  if (rootWithPendingPassiveEffects === null) {
    return false;
  }

  var root = rootWithPendingPassiveEffects;
  var expirationTime = pendingPassiveEffectsExpirationTime;
  rootWithPendingPassiveEffects = null;
  pendingPassiveEffectsExpirationTime = NoWork;

  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
    {
      throw Error("Cannot flush passive effects while already rendering.");
    }
  }

  var prevExecutionContext = executionContext;
  executionContext |= CommitContext;
  var prevInteractions = pushInteractions(root); // Note: This currently assumes there are no passive effects on the root
  // fiber, because the root is not part of its own effect list. This could
  // change in the future.

  var effect = root.current.firstEffect;

  while (effect !== null) {
    {
      setCurrentFiber(effect);
      invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);

      if (hasCaughtError()) {
        if (!(effect !== null)) {
          {
            throw Error("Should be working on an effect.");
          }
        }

        var error = clearCaughtError();
        captureCommitPhaseError(effect, error);
      }

      resetCurrentFiber();
    }

    var nextNextEffect = effect.nextEffect; // Remove nextEffect pointer to assist GC

    effect.nextEffect = null;
    effect = nextNextEffect;
  }

  if (enableSchedulerTracing) {
    popInteractions(prevInteractions);
    finishPendingInteractions(root, expirationTime);
  }

  executionContext = prevExecutionContext;
  flushSyncCallbackQueue(); // If additional passive effects were scheduled, increment a counter. If this
  // exceeds the limit, we'll fire a warning.

  nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;
  return true;
}

function isAlreadyFailedLegacyErrorBoundary(instance) {
  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
}
function markLegacyErrorBoundaryAsFailed(instance) {
  if (legacyErrorBoundariesThatAlreadyFailed === null) {
    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
  } else {
    legacyErrorBoundariesThatAlreadyFailed.add(instance);
  }
}

function prepareToThrowUncaughtError(error) {
  if (!hasUncaughtError) {
    hasUncaughtError = true;
    firstUncaughtError = error;
  }
}

var onUncaughtError = prepareToThrowUncaughtError;

function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
  var errorInfo = createCapturedValue(error, sourceFiber);
  var update = createRootErrorUpdate(rootFiber, errorInfo, Sync);
  enqueueUpdate(rootFiber, update);
  var root = markUpdateTimeFromFiberToRoot(rootFiber, Sync);

  if (root !== null) {
    ensureRootIsScheduled(root);
    schedulePendingInteractions(root, Sync);
  }
}

function captureCommitPhaseError(sourceFiber, error) {
  if (sourceFiber.tag === HostRoot) {
    // Error was thrown at the root. There is no parent, so the root
    // itself should capture it.
    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
    return;
  }

  var fiber = sourceFiber.return;

  while (fiber !== null) {
    if (fiber.tag === HostRoot) {
      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
      return;
    } else if (fiber.tag === ClassComponent) {
      var ctor = fiber.type;
      var instance = fiber.stateNode;

      if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
        var errorInfo = createCapturedValue(error, sourceFiber);
        var update = createClassErrorUpdate(fiber, errorInfo, // TODO: This is always sync
        Sync);
        enqueueUpdate(fiber, update);
        var root = markUpdateTimeFromFiberToRoot(fiber, Sync);

        if (root !== null) {
          ensureRootIsScheduled(root);
          schedulePendingInteractions(root, Sync);
        }

        return;
      }
    }

    fiber = fiber.return;
  }
}
function pingSuspendedRoot(root, thenable, suspendedTime) {
  var pingCache = root.pingCache;

  if (pingCache !== null) {
    // The thenable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    pingCache.delete(thenable);
  }

  if (workInProgressRoot === root && renderExpirationTime === suspendedTime) {
    // Received a ping at the same priority level at which we're currently
    // rendering. We might want to restart this render. This should mirror
    // the logic of whether or not a root suspends once it completes.
    // TODO: If we're rendering sync either due to Sync, Batched or expired,
    // we should probably never restart.
    // If we're suspended with delay, we'll always suspend so we can always
    // restart. If we're suspended without any updates, it might be a retry.
    // If it's early in the retry we can restart. We can't know for sure
    // whether we'll eventually process an update during this render pass,
    // but it's somewhat unlikely that we get to a ping before that, since
    // getting to the root most update is usually very fast.
    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && workInProgressRootLatestProcessedExpirationTime === Sync && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
      // Restart from the root. Don't need to schedule a ping because
      // we're already working on this tree.
      prepareFreshStack(root, renderExpirationTime);
    } else {
      // Even though we can't restart right now, we might get an
      // opportunity later. So we mark this render as having a ping.
      workInProgressRootHasPendingPing = true;
    }

    return;
  }

  if (!isRootSuspendedAtTime(root, suspendedTime)) {
    // The root is no longer suspended at this time.
    return;
  }

  var lastPingedTime = root.lastPingedTime;

  if (lastPingedTime !== NoWork && lastPingedTime < suspendedTime) {
    // There's already a lower priority ping scheduled.
    return;
  } // Mark the time at which this ping was scheduled.


  root.lastPingedTime = suspendedTime;

  if (root.finishedExpirationTime === suspendedTime) {
    // If there's a pending fallback waiting to commit, throw it away.
    root.finishedExpirationTime = NoWork;
    root.finishedWork = null;
  }

  ensureRootIsScheduled(root);
  schedulePendingInteractions(root, suspendedTime);
}

function retryTimedOutBoundary(boundaryFiber, retryTime) {
  // The boundary fiber (a Suspense component or SuspenseList component)
  // previously was rendered in its fallback state. One of the promises that
  // suspended it has resolved, which means at least part of the tree was
  // likely unblocked. Try rendering again, at a new expiration time.
  if (retryTime === NoWork) {
    var suspenseConfig = null; // Retries don't carry over the already committed update.

    var currentTime = requestCurrentTimeForUpdate();
    retryTime = computeExpirationForFiber(currentTime, boundaryFiber, suspenseConfig);
  } // TODO: Special case idle priority?


  var root = markUpdateTimeFromFiberToRoot(boundaryFiber, retryTime);

  if (root !== null) {
    ensureRootIsScheduled(root);
    schedulePendingInteractions(root, retryTime);
  }
}

function retryDehydratedSuspenseBoundary(boundaryFiber) {
  var suspenseState = boundaryFiber.memoizedState;
  var retryTime = NoWork;

  if (suspenseState !== null) {
    retryTime = suspenseState.retryTime;
  }

  retryTimedOutBoundary(boundaryFiber, retryTime);
}
function resolveRetryThenable(boundaryFiber, thenable) {
  var retryTime = NoWork; // Default

  var retryCache;

  if (enableSuspenseServerRenderer) {
    switch (boundaryFiber.tag) {
      case SuspenseComponent:
        retryCache = boundaryFiber.stateNode;
        var suspenseState = boundaryFiber.memoizedState;

        if (suspenseState !== null) {
          retryTime = suspenseState.retryTime;
        }

        break;

      case SuspenseListComponent:
        retryCache = boundaryFiber.stateNode;
        break;

      default:
        {
          {
            throw Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
          }
        }

    }
  } else {
    retryCache = boundaryFiber.stateNode;
  }

  if (retryCache !== null) {
    // The thenable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    retryCache.delete(thenable);
  }

  retryTimedOutBoundary(boundaryFiber, retryTime);
} // Computes the next Just Noticeable Difference (JND) boundary.
// The theory is that a person can't tell the difference between small differences in time.
// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
// difference in the experience. However, waiting for longer might mean that we can avoid
// showing an intermediate loading state. The longer we have already waited, the harder it
// is to tell small differences in time. Therefore, the longer we've already waited,
// the longer we can wait additionally. At some point we have to give up though.
// We pick a train model where the next boundary commits at a consistent schedule.
// These particular numbers are vague estimates. We expect to adjust them based on research.

function jnd(timeElapsed) {
  return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
}

function computeMsUntilSuspenseLoadingDelay(mostRecentEventTime, committedExpirationTime, suspenseConfig) {
  var busyMinDurationMs = suspenseConfig.busyMinDurationMs | 0;

  if (busyMinDurationMs <= 0) {
    return 0;
  }

  var busyDelayMs = suspenseConfig.busyDelayMs | 0; // Compute the time until this render pass would expire.

  var currentTimeMs = now();
  var eventTimeMs = inferTimeFromExpirationTimeWithSuspenseConfig(mostRecentEventTime, suspenseConfig);
  var timeElapsed = currentTimeMs - eventTimeMs;

  if (timeElapsed <= busyDelayMs) {
    // If we haven't yet waited longer than the initial delay, we don't
    // have to wait any additional time.
    return 0;
  }

  var msUntilTimeout = busyDelayMs + busyMinDurationMs - timeElapsed; // This is the value that is passed to `setTimeout`.

  return msUntilTimeout;
}

function checkForNestedUpdates() {
  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
    nestedUpdateCount = 0;
    rootWithNestedUpdates = null;

    {
      {
        throw Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
      }
    }
  }

  {
    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
      nestedPassiveUpdateCount = 0;
      warning$1(false, 'Maximum update depth exceeded. This can happen when a component ' + "calls setState inside useEffect, but useEffect either doesn't " + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');
    }
  }
}

function flushRenderPhaseStrictModeWarningsInDEV() {
  {
    ReactStrictModeWarnings.flushLegacyContextWarning();

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
  }
}

function stopFinishedWorkLoopTimer() {
  var didCompleteRoot = true;
  stopWorkLoopTimer(interruptedBy, didCompleteRoot);
  interruptedBy = null;
}

function stopInterruptedWorkLoopTimer() {
  // TODO: Track which fiber caused the interruption.
  var didCompleteRoot = false;
  stopWorkLoopTimer(interruptedBy, didCompleteRoot);
  interruptedBy = null;
}

function checkForInterruption(fiberThatReceivedUpdate, updateExpirationTime) {
  if (enableUserTimingAPI && workInProgressRoot !== null && updateExpirationTime > renderExpirationTime) {
    interruptedBy = fiberThatReceivedUpdate;
  }
}

var didWarnStateUpdateForUnmountedComponent = null;

function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
  {
    var tag = fiber.tag;

    if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {
      // Only warn for user-defined components, not internal ones like Suspense.
      return;
    } // We show the whole stack but dedupe on the top component's name because
    // the problematic code almost always lies inside that component.


    var componentName = getComponentName(fiber.type) || 'ReactComponent';

    if (didWarnStateUpdateForUnmountedComponent !== null) {
      if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {
        return;
      }

      didWarnStateUpdateForUnmountedComponent.add(componentName);
    } else {
      didWarnStateUpdateForUnmountedComponent = new Set([componentName]);
    }

    warningWithoutStack$1(false, "Can't perform a React state update on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.%s', tag === ClassComponent ? 'the componentWillUnmount method' : 'a useEffect cleanup function', getStackByFiberInDevAndProd(fiber));
  }
}

var beginWork$$1;

if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
  var dummyFiber = null;

  beginWork$$1 = function (current$$1, unitOfWork, expirationTime) {
    // If a component throws an error, we replay it again in a synchronously
    // dispatched event, so that the debugger will treat it as an uncaught
    // error See ReactErrorUtils for more information.
    // Before entering the begin phase, copy the work-in-progress onto a dummy
    // fiber. If beginWork throws, we'll use this to reset the state.
    var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);

    try {
      return beginWork$1(current$$1, unitOfWork, expirationTime);
    } catch (originalError) {
      if (originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') {
        // Don't replay promises. Treat everything else like an error.
        throw originalError;
      } // Keep this code in sync with handleError; any changes here must have
      // corresponding changes there.


      resetContextDependencies();
      resetHooks(); // Don't reset current debug fiber, since we're about to work on the
      // same fiber again.
      // Unwind the failed stack frame

      unwindInterruptedWork(unitOfWork); // Restore the original properties of the fiber.

      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);

      if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {
        // Reset the profiler timer.
        startProfilerTimer(unitOfWork);
      } // Run beginWork again.


      invokeGuardedCallback(null, beginWork$1, null, current$$1, unitOfWork, expirationTime);

      if (hasCaughtError()) {
        var replayError = clearCaughtError(); // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.
        // Rethrow this error instead of the original one.

        throw replayError;
      } else {
        // This branch is reachable if the render phase is impure.
        throw originalError;
      }
    }
  };
} else {
  beginWork$$1 = beginWork$1;
}

var didWarnAboutUpdateInRender = false;
var didWarnAboutUpdateInGetChildContext = false;

function warnAboutInvalidUpdatesOnClassComponentsInDEV(fiber) {
  {
    if (fiber.tag === ClassComponent) {
      switch (phase) {
        case 'getChildContext':
          if (didWarnAboutUpdateInGetChildContext) {
            return;
          }

          warningWithoutStack$1(false, 'setState(...): Cannot call setState() inside getChildContext()');
          didWarnAboutUpdateInGetChildContext = true;
          break;

        case 'render':
          if (didWarnAboutUpdateInRender) {
            return;
          }

          warningWithoutStack$1(false, 'Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure function of ' + 'props and state.');
          didWarnAboutUpdateInRender = true;
          break;
      }
    }
  }
} // a 'shared' variable that changes when act() opens/closes in tests.


var IsThisRendererActing = {
  current: false
};
function warnIfNotScopedWithMatchingAct(fiber) {
  {
    if (warnsIfNotActing === true && IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
      warningWithoutStack$1(false, "It looks like you're using the wrong act() around your test interactions.\n" + 'Be sure to use the matching version of act() corresponding to your renderer:\n\n' + '// for react-dom:\n' + "import {act} from 'react-dom/test-utils';\n" + '// ...\n' + 'act(() => ...);\n\n' + '// for react-test-renderer:\n' + "import TestRenderer from 'react-test-renderer';\n" + 'const {act} = TestRenderer;\n' + '// ...\n' + 'act(() => ...);' + '%s', getStackByFiberInDevAndProd(fiber));
    }
  }
}
function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
  {
    if (warnsIfNotActing === true && (fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
      warningWithoutStack$1(false, 'An update to %s ran an effect, but was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
    }
  }
}

function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
  {
    if (warnsIfNotActing === true && executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
      warningWithoutStack$1(false, 'An update to %s inside a test was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
    }
  }
}

var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV; // In tests, we want to enforce a mocked scheduler.

var didWarnAboutUnmockedScheduler = false; // TODO Before we release concurrent mode, revisit this and decide whether a mocked
// scheduler is the actual recommendation. The alternative could be a testing build,
// a new lib, or whatever; we dunno just yet. This message is for early adopters
// to get their tests right.

function warnIfUnmockedScheduler(fiber) {
  {
    if (didWarnAboutUnmockedScheduler === false && Scheduler.unstable_flushAllWithoutAsserting === undefined) {
      if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {
        didWarnAboutUnmockedScheduler = true;
        warningWithoutStack$1(false, 'In Concurrent or Sync modes, the "scheduler" module needs to be mocked ' + 'to guarantee consistent behaviour across tests and browsers. ' + 'For example, with jest: \n' + "jest.mock('scheduler', () => require('scheduler/unstable_mock'));\n\n" + 'For more info, visit https://fb.me/react-mock-scheduler');
      } else if (warnAboutUnmockedScheduler === true) {
        didWarnAboutUnmockedScheduler = true;
        warningWithoutStack$1(false, 'Starting from React v17, the "scheduler" module will need to be mocked ' + 'to guarantee consistent behaviour across tests and browsers. ' + 'For example, with jest: \n' + "jest.mock('scheduler', () => require('scheduler/unstable_mock'));\n\n" + 'For more info, visit https://fb.me/react-mock-scheduler');
      }
    }
  }
}
var componentsThatTriggeredHighPriSuspend = null;
function checkForWrongSuspensePriorityInDEV(sourceFiber) {
  {
    var currentPriorityLevel = getCurrentPriorityLevel();

    if ((sourceFiber.mode & ConcurrentMode) !== NoEffect && (currentPriorityLevel === UserBlockingPriority$2 || currentPriorityLevel === ImmediatePriority)) {
      var workInProgressNode = sourceFiber;

      while (workInProgressNode !== null) {
        // Add the component that triggered the suspense
        var current$$1 = workInProgressNode.alternate;

        if (current$$1 !== null) {
          // TODO: warn component that triggers the high priority
          // suspend is the HostRoot
          switch (workInProgressNode.tag) {
            case ClassComponent:
              // Loop through the component's update queue and see whether the component
              // has triggered any high priority updates
              var updateQueue = current$$1.updateQueue;

              if (updateQueue !== null) {
                var update = updateQueue.firstUpdate;

                while (update !== null) {
                  var priorityLevel = update.priority;

                  if (priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority) {
                    if (componentsThatTriggeredHighPriSuspend === null) {
                      componentsThatTriggeredHighPriSuspend = new Set([getComponentName(workInProgressNode.type)]);
                    } else {
                      componentsThatTriggeredHighPriSuspend.add(getComponentName(workInProgressNode.type));
                    }

                    break;
                  }

                  update = update.next;
                }
              }

              break;

            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
              if (workInProgressNode.memoizedState !== null && workInProgressNode.memoizedState.baseUpdate !== null) {
                var _update = workInProgressNode.memoizedState.baseUpdate; // Loop through the functional component's memoized state to see whether
                // the component has triggered any high pri updates

                while (_update !== null) {
                  var priority = _update.priority;

                  if (priority === UserBlockingPriority$2 || priority === ImmediatePriority) {
                    if (componentsThatTriggeredHighPriSuspend === null) {
                      componentsThatTriggeredHighPriSuspend = new Set([getComponentName(workInProgressNode.type)]);
                    } else {
                      componentsThatTriggeredHighPriSuspend.add(getComponentName(workInProgressNode.type));
                    }

                    break;
                  }

                  if (_update.next === workInProgressNode.memoizedState.baseUpdate) {
                    break;
                  }

                  _update = _update.next;
                }
              }

              break;

            default:
              break;
          }
        }

        workInProgressNode = workInProgressNode.return;
      }
    }
  }
}

function flushSuspensePriorityWarningInDEV() {
  {
    if (componentsThatTriggeredHighPriSuspend !== null) {
      var componentNames = [];
      componentsThatTriggeredHighPriSuspend.forEach(function (name) {
        return componentNames.push(name);
      });
      componentsThatTriggeredHighPriSuspend = null;

      if (componentNames.length > 0) {
        warningWithoutStack$1(false, '%s triggered a user-blocking update that suspended.' + '\n\n' + 'The fix is to split the update into multiple parts: a user-blocking ' + 'update to provide immediate feedback, and another update that ' + 'triggers the bulk of the changes.' + '\n\n' + 'Refer to the documentation for useTransition to learn how ' + 'to implement this pattern.', // TODO: Add link to React docs with more information, once it exists
        componentNames.sort().join(', '));
      }
    }
  }
}

function computeThreadID(root, expirationTime) {
  // Interaction threads are unique per root and expiration time.
  return expirationTime * 1000 + root.interactionThreadID;
}

function markSpawnedWork(expirationTime) {
  if (!enableSchedulerTracing) {
    return;
  }

  if (spawnedWorkDuringRender === null) {
    spawnedWorkDuringRender = [expirationTime];
  } else {
    spawnedWorkDuringRender.push(expirationTime);
  }
}

function scheduleInteractions(root, expirationTime, interactions) {
  if (!enableSchedulerTracing) {
    return;
  }

  if (interactions.size > 0) {
    var pendingInteractionMap = root.pendingInteractionMap;
    var pendingInteractions = pendingInteractionMap.get(expirationTime);

    if (pendingInteractions != null) {
      interactions.forEach(function (interaction) {
        if (!pendingInteractions.has(interaction)) {
          // Update the pending async work count for previously unscheduled interaction.
          interaction.__count++;
        }

        pendingInteractions.add(interaction);
      });
    } else {
      pendingInteractionMap.set(expirationTime, new Set(interactions)); // Update the pending async work count for the current interactions.

      interactions.forEach(function (interaction) {
        interaction.__count++;
      });
    }

    var subscriber = tracing.__subscriberRef.current;

    if (subscriber !== null) {
      var threadID = computeThreadID(root, expirationTime);
      subscriber.onWorkScheduled(interactions, threadID);
    }
  }
}

function schedulePendingInteractions(root, expirationTime) {
  // This is called when work is scheduled on a root.
  // It associates the current interactions with the newly-scheduled expiration.
  // They will be restored when that expiration is later committed.
  if (!enableSchedulerTracing) {
    return;
  }

  scheduleInteractions(root, expirationTime, tracing.__interactionsRef.current);
}

function startWorkOnPendingInteractions(root, expirationTime) {
  // This is called when new work is started on a root.
  if (!enableSchedulerTracing) {
    return;
  } // Determine which interactions this batch of work currently includes, So that
  // we can accurately attribute time spent working on it, And so that cascading
  // work triggered during the render phase will be associated with it.


  var interactions = new Set();
  root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
    if (scheduledExpirationTime >= expirationTime) {
      scheduledInteractions.forEach(function (interaction) {
        return interactions.add(interaction);
      });
    }
  }); // Store the current set of interactions on the FiberRoot for a few reasons:
  // We can re-use it in hot functions like performConcurrentWorkOnRoot()
  // without having to recalculate it. We will also use it in commitWork() to
  // pass to any Profiler onRender() hooks. This also provides DevTools with a
  // way to access it when the onCommitRoot() hook is called.

  root.memoizedInteractions = interactions;

  if (interactions.size > 0) {
    var subscriber = tracing.__subscriberRef.current;

    if (subscriber !== null) {
      var threadID = computeThreadID(root, expirationTime);

      try {
        subscriber.onWorkStarted(interactions, threadID);
      } catch (error) {
        // If the subscriber throws, rethrow it in a separate task
        scheduleCallback(ImmediatePriority, function () {
          throw error;
        });
      }
    }
  }
}

function finishPendingInteractions(root, committedExpirationTime) {
  if (!enableSchedulerTracing) {
    return;
  }

  var earliestRemainingTimeAfterCommit = root.firstPendingTime;
  var subscriber;

  try {
    subscriber = tracing.__subscriberRef.current;

    if (subscriber !== null && root.memoizedInteractions.size > 0) {
      var threadID = computeThreadID(root, committedExpirationTime);
      subscriber.onWorkStopped(root.memoizedInteractions, threadID);
    }
  } catch (error) {
    // If the subscriber throws, rethrow it in a separate task
    scheduleCallback(ImmediatePriority, function () {
      throw error;
    });
  } finally {
    // Clear completed interactions from the pending Map.
    // Unless the render was suspended or cascading work was scheduled,
    // In which case– leave pending interactions until the subsequent render.
    var pendingInteractionMap = root.pendingInteractionMap;
    pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
      // Only decrement the pending interaction count if we're done.
      // If there's still work at the current priority,
      // That indicates that we are waiting for suspense data.
      if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {
        pendingInteractionMap.delete(scheduledExpirationTime);
        scheduledInteractions.forEach(function (interaction) {
          interaction.__count--;

          if (subscriber !== null && interaction.__count === 0) {
            try {
              subscriber.onInteractionScheduledWorkCompleted(interaction);
            } catch (error) {
              // If the subscriber throws, rethrow it in a separate task
              scheduleCallback(ImmediatePriority, function () {
                throw error;
              });
            }
          }
        });
      }
    });
  }
}

var onCommitFiberRoot = null;
var onCommitFiberUnmount = null;
var hasLoggedError = false;
var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';
function injectInternals(internals) {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
    // No DevTools
    return false;
  }

  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;

  if (hook.isDisabled) {
    // This isn't a real property on the hook, but it can be set to opt out
    // of DevTools integration and associated warnings and logs.
    // https://github.com/facebook/react/issues/3877
    return true;
  }

  if (!hook.supportsFiber) {
    {
      warningWithoutStack$1(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
    } // DevTools exists, even though it doesn't support Fiber.


    return true;
  }

  try {
    var rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.

    onCommitFiberRoot = function (root, expirationTime) {
      try {
        var didError = (root.current.effectTag & DidCapture) === DidCapture;

        if (enableProfilerTimer) {
          var currentTime = getCurrentTime();
          var priorityLevel = inferPriorityFromExpirationTime(currentTime, expirationTime);
          hook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);
        } else {
          hook.onCommitFiberRoot(rendererID, root, undefined, didError);
        }
      } catch (err) {
        if (true && !hasLoggedError) {
          hasLoggedError = true;
          warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
        }
      }
    };

    onCommitFiberUnmount = function (fiber) {
      try {
        hook.onCommitFiberUnmount(rendererID, fiber);
      } catch (err) {
        if (true && !hasLoggedError) {
          hasLoggedError = true;
          warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
        }
      }
    };
  } catch (err) {
    // Catch all errors because it is unsafe to throw during initialization.
    {
      warningWithoutStack$1(false, 'React DevTools encountered an error: %s.', err);
    }
  } // DevTools exists


  return true;
}
function onCommitRoot(root, expirationTime) {
  if (typeof onCommitFiberRoot === 'function') {
    onCommitFiberRoot(root, expirationTime);
  }
}
function onCommitUnmount(fiber) {
  if (typeof onCommitFiberUnmount === 'function') {
    onCommitFiberUnmount(fiber);
  }
}

var hasBadMapPolyfill;

{
  hasBadMapPolyfill = false;

  try {
    var nonExtensibleObject = Object.preventExtensions({});
    var testMap = new Map([[nonExtensibleObject, null]]);
    var testSet = new Set([nonExtensibleObject]); // This is necessary for Rollup to not consider these unused.
    // https://github.com/rollup/rollup/issues/1771
    // TODO: we can remove these if Rollup fixes the bug.

    testMap.set(0, 0);
    testSet.add(0);
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

var debugCounter = 1;

function FiberNode(tag, pendingProps, key, mode) {
  // Instance
  this.tag = tag;
  this.key = key;
  this.elementType = null;
  this.type = null;
  this.stateNode = null; // Fiber

  this.return = null;
  this.child = null;
  this.sibling = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = pendingProps;
  this.memoizedProps = null;
  this.updateQueue = null;
  this.memoizedState = null;
  this.dependencies = null;
  this.mode = mode; // Effects

  this.effectTag = NoEffect;
  this.nextEffect = null;
  this.firstEffect = null;
  this.lastEffect = null;
  this.expirationTime = NoWork;
  this.childExpirationTime = NoWork;
  this.alternate = null;

  if (enableProfilerTimer) {
    // Note: The following is done to avoid a v8 performance cliff.
    //
    // Initializing the fields below to smis and later updating them with
    // double values will cause Fibers to end up having separate shapes.
    // This behavior/bug has something to do with Object.preventExtension().
    // Fortunately this only impacts DEV builds.
    // Unfortunately it makes React unusably slow for some applications.
    // To work around this, initialize the fields below with doubles.
    //
    // Learn more about this here:
    // https://github.com/facebook/react/issues/14365
    // https://bugs.chromium.org/p/v8/issues/detail?id=8538
    this.actualDuration = Number.NaN;
    this.actualStartTime = Number.NaN;
    this.selfBaseDuration = Number.NaN;
    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
    // This won't trigger the performance cliff mentioned above,
    // and it simplifies other profiler code (including DevTools).

    this.actualDuration = 0;
    this.actualStartTime = -1;
    this.selfBaseDuration = 0;
    this.treeBaseDuration = 0;
  } // This is normally DEV-only except www when it adds listeners.
  // TODO: remove the User Timing integration in favor of Root Events.


  if (enableUserTimingAPI) {
    this._debugID = debugCounter++;
    this._debugIsCurrentlyTiming = false;
  }

  {
    this._debugSource = null;
    this._debugOwner = null;
    this._debugNeedsRemount = false;
    this._debugHookTypes = null;

    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(this);
    }
  }
} // This is a constructor function, rather than a POJO constructor, still
// please ensure we do the following:
// 1) Nobody should add any instance methods on this. Instance methods can be
//    more difficult to predict when they get optimized and they are almost
//    never inlined properly in static compilers.
// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//    always know when it is a fiber.
// 3) We might want to experiment with using numeric keys since they are easier
//    to optimize in a non-JIT environment.
// 4) We can easily go from a constructor to a createFiber object literal if that
//    is faster.
// 5) It should be easy to port this to a C struct and keep a C implementation
//    compatible.


var createFiber = function (tag, pendingProps, key, mode) {
  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
  return new FiberNode(tag, pendingProps, key, mode);
};

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function isSimpleFunctionComponent(type) {
  return typeof type === 'function' && !shouldConstruct(type) && type.defaultProps === undefined;
}
function resolveLazyComponentTag(Component) {
  if (typeof Component === 'function') {
    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;
  } else if (Component !== undefined && Component !== null) {
    var $$typeof = Component.$$typeof;

    if ($$typeof === REACT_FORWARD_REF_TYPE) {
      return ForwardRef;
    }

    if ($$typeof === REACT_MEMO_TYPE) {
      return MemoComponent;
    }
  }

  return IndeterminateComponent;
} // This is used to create an alternate fiber to do work on.

function createWorkInProgress(current, pendingProps, expirationTime) {
  var workInProgress = current.alternate;

  if (workInProgress === null) {
    // We use a double buffering pooling technique because we know that we'll
    // only ever need at most two versions of a tree. We pool the "other" unused
    // node that we're free to reuse. This is lazily created to avoid allocating
    // extra objects for things that are never updated. It also allow us to
    // reclaim the extra memory if needed.
    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
    workInProgress.elementType = current.elementType;
    workInProgress.type = current.type;
    workInProgress.stateNode = current.stateNode;

    {
      // DEV-only fields
      workInProgress._debugID = current._debugID;
      workInProgress._debugSource = current._debugSource;
      workInProgress._debugOwner = current._debugOwner;
      workInProgress._debugHookTypes = current._debugHookTypes;
    }

    workInProgress.alternate = current;
    current.alternate = workInProgress;
  } else {
    workInProgress.pendingProps = pendingProps; // We already have an alternate.
    // Reset the effect tag.

    workInProgress.effectTag = NoEffect; // The effect list is no longer valid.

    workInProgress.nextEffect = null;
    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;

    if (enableProfilerTimer) {
      // We intentionally reset, rather than copy, actualDuration & actualStartTime.
      // This prevents time from endlessly accumulating in new commits.
      // This has the downside of resetting values for different priority renders,
      // But works for yielding (the common case) and should support resuming.
      workInProgress.actualDuration = 0;
      workInProgress.actualStartTime = -1;
    }
  }

  workInProgress.childExpirationTime = current.childExpirationTime;
  workInProgress.expirationTime = current.expirationTime;
  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
  // it cannot be shared with the current fiber.

  var currentDependencies = current.dependencies;
  workInProgress.dependencies = currentDependencies === null ? null : {
    expirationTime: currentDependencies.expirationTime,
    firstContext: currentDependencies.firstContext,
    responders: currentDependencies.responders
  }; // These will be overridden during the parent's reconciliation

  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;

  if (enableProfilerTimer) {
    workInProgress.selfBaseDuration = current.selfBaseDuration;
    workInProgress.treeBaseDuration = current.treeBaseDuration;
  }

  {
    workInProgress._debugNeedsRemount = current._debugNeedsRemount;

    switch (workInProgress.tag) {
      case IndeterminateComponent:
      case FunctionComponent:
      case SimpleMemoComponent:
        workInProgress.type = resolveFunctionForHotReloading(current.type);
        break;

      case ClassComponent:
        workInProgress.type = resolveClassForHotReloading(current.type);
        break;

      case ForwardRef:
        workInProgress.type = resolveForwardRefForHotReloading(current.type);
        break;

      default:
        break;
    }
  }

  return workInProgress;
} // Used to reuse a Fiber for a second pass.

function resetWorkInProgress(workInProgress, renderExpirationTime) {
  // This resets the Fiber to what createFiber or createWorkInProgress would
  // have set the values to before during the first pass. Ideally this wouldn't
  // be necessary but unfortunately many code paths reads from the workInProgress
  // when they should be reading from current and writing to workInProgress.
  // We assume pendingProps, index, key, ref, return are still untouched to
  // avoid doing another reconciliation.
  // Reset the effect tag but keep any Placement tags, since that's something
  // that child fiber is setting, not the reconciliation.
  workInProgress.effectTag &= Placement; // The effect list is no longer valid.

  workInProgress.nextEffect = null;
  workInProgress.firstEffect = null;
  workInProgress.lastEffect = null;
  var current = workInProgress.alternate;

  if (current === null) {
    // Reset to createFiber's initial values.
    workInProgress.childExpirationTime = NoWork;
    workInProgress.expirationTime = renderExpirationTime;
    workInProgress.child = null;
    workInProgress.memoizedProps = null;
    workInProgress.memoizedState = null;
    workInProgress.updateQueue = null;
    workInProgress.dependencies = null;

    if (enableProfilerTimer) {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = 0;
      workInProgress.treeBaseDuration = 0;
    }
  } else {
    // Reset to the cloned values that createWorkInProgress would've.
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
    // it cannot be shared with the current fiber.

    var currentDependencies = current.dependencies;
    workInProgress.dependencies = currentDependencies === null ? null : {
      expirationTime: currentDependencies.expirationTime,
      firstContext: currentDependencies.firstContext,
      responders: currentDependencies.responders
    };

    if (enableProfilerTimer) {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = current.selfBaseDuration;
      workInProgress.treeBaseDuration = current.treeBaseDuration;
    }
  }

  return workInProgress;
}
function createHostRootFiber(tag) {
  var mode;

  if (tag === ConcurrentRoot) {
    mode = ConcurrentMode | BlockingMode | StrictMode;
  } else if (tag === BlockingRoot) {
    mode = BlockingMode | StrictMode;
  } else {
    mode = NoMode;
  }

  if (enableProfilerTimer && isDevToolsPresent) {
    // Always collect profile timings when DevTools are present.
    // This enables DevTools to start capturing timing at any point–
    // Without some nodes in the tree having empty base times.
    mode |= ProfileMode;
  }

  return createFiber(HostRoot, null, null, mode);
}
function createFiberFromTypeAndProps(type, // React$ElementType
key, pendingProps, owner, mode, expirationTime) {
  var fiber;
  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.

  var resolvedType = type;

  if (typeof type === 'function') {
    if (shouldConstruct(type)) {
      fiberTag = ClassComponent;

      {
        resolvedType = resolveClassForHotReloading(resolvedType);
      }
    } else {
      {
        resolvedType = resolveFunctionForHotReloading(resolvedType);
      }
    }
  } else if (typeof type === 'string') {
    fiberTag = HostComponent;
  } else {
    getTag: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = Mode;
        mode |= ConcurrentMode | BlockingMode | StrictMode;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = Mode;
        mode |= StrictMode;
        break;

      case REACT_PROFILER_TYPE:
        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);

      case REACT_SUSPENSE_TYPE:
        return createFiberFromSuspense(pendingProps, mode, expirationTime, key);

      case REACT_SUSPENSE_LIST_TYPE:
        return createFiberFromSuspenseList(pendingProps, mode, expirationTime, key);

      default:
        {
          if (typeof type === 'object' && type !== null) {
            switch (type.$$typeof) {
              case REACT_PROVIDER_TYPE:
                fiberTag = ContextProvider;
                break getTag;

              case REACT_CONTEXT_TYPE:
                // This is a consumer
                fiberTag = ContextConsumer;
                break getTag;

              case REACT_FORWARD_REF_TYPE:
                fiberTag = ForwardRef;

                {
                  resolvedType = resolveForwardRefForHotReloading(resolvedType);
                }

                break getTag;

              case REACT_MEMO_TYPE:
                fiberTag = MemoComponent;
                break getTag;

              case REACT_LAZY_TYPE:
                fiberTag = LazyComponent;
                resolvedType = null;
                break getTag;

              case REACT_FUNDAMENTAL_TYPE:
                if (enableFundamentalAPI) {
                  return createFiberFromFundamental(type, pendingProps, mode, expirationTime, key);
                }

                break;

              case REACT_SCOPE_TYPE:
                if (enableScopeAPI) {
                  return createFiberFromScope(type, pendingProps, mode, expirationTime, key);
                }

            }
          }

          var info = '';

          {
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
            }

            var ownerName = owner ? getComponentName(owner.type) : null;

            if (ownerName) {
              info += '\n\nCheck the render method of `' + ownerName + '`.';
            }
          }

          {
            {
              throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (type == null ? type : typeof type) + "." + info);
            }
          }
        }
    }
  }

  fiber = createFiber(fiberTag, pendingProps, key, mode);
  fiber.elementType = type;
  fiber.type = resolvedType;
  fiber.expirationTime = expirationTime;
  return fiber;
}
function createFiberFromElement(element, mode, expirationTime) {
  var owner = null;

  {
    owner = element._owner;
  }

  var type = element.type;
  var key = element.key;
  var pendingProps = element.props;
  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime);

  {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }

  return fiber;
}
function createFiberFromFragment(elements, mode, expirationTime, key) {
  var fiber = createFiber(Fragment, elements, key, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}
function createFiberFromFundamental(fundamentalComponent, pendingProps, mode, expirationTime, key) {
  var fiber = createFiber(FundamentalComponent, pendingProps, key, mode);
  fiber.elementType = fundamentalComponent;
  fiber.type = fundamentalComponent;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromScope(scope, pendingProps, mode, expirationTime, key) {
  var fiber = createFiber(ScopeComponent, pendingProps, key, mode);
  fiber.type = scope;
  fiber.elementType = scope;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
  {
    if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
      warningWithoutStack$1(false, 'Profiler must specify an "id" string and "onRender" function as props');
    }
  }

  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode); // TODO: The Profiler fiber shouldn't have a type. It has a tag.

  fiber.elementType = REACT_PROFILER_TYPE;
  fiber.type = REACT_PROFILER_TYPE;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromSuspense(pendingProps, mode, expirationTime, key) {
  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode); // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.
  // This needs to be fixed in getComponentName so that it relies on the tag
  // instead.

  fiber.type = REACT_SUSPENSE_TYPE;
  fiber.elementType = REACT_SUSPENSE_TYPE;
  fiber.expirationTime = expirationTime;
  return fiber;
}
function createFiberFromSuspenseList(pendingProps, mode, expirationTime, key) {
  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);

  {
    // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.
    // This needs to be fixed in getComponentName so that it relies on the tag
    // instead.
    fiber.type = REACT_SUSPENSE_LIST_TYPE;
  }

  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
  fiber.expirationTime = expirationTime;
  return fiber;
}
function createFiberFromText(content, mode, expirationTime) {
  var fiber = createFiber(HostText, content, null, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}
function createFiberFromHostInstanceForDeletion() {
  var fiber = createFiber(HostComponent, null, null, NoMode); // TODO: These should not need a type.

  fiber.elementType = 'DELETED';
  fiber.type = 'DELETED';
  return fiber;
}
function createFiberFromDehydratedFragment(dehydratedNode) {
  var fiber = createFiber(DehydratedFragment, null, null, NoMode);
  fiber.stateNode = dehydratedNode;
  return fiber;
}
function createFiberFromPortal(portal, mode, expirationTime) {
  var pendingProps = portal.children !== null ? portal.children : [];
  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
  fiber.expirationTime = expirationTime;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null,
    // Used by persistent updates
    implementation: portal.implementation
  };
  return fiber;
} // Used for stashing WIP properties to replay failed work in DEV.

function assignFiberPropertiesInDEV(target, source) {
  if (target === null) {
    // This Fiber's initial properties will always be overwritten.
    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
    target = createFiber(IndeterminateComponent, null, null, NoMode);
  } // This is intentionally written as a list of all properties.
  // We tried to use Object.assign() instead but this is called in
  // the hottest path, and Object.assign() was too slow:
  // https://github.com/facebook/react/issues/12502
  // This code is DEV-only so size is not a concern.


  target.tag = source.tag;
  target.key = source.key;
  target.elementType = source.elementType;
  target.type = source.type;
  target.stateNode = source.stateNode;
  target.return = source.return;
  target.child = source.child;
  target.sibling = source.sibling;
  target.index = source.index;
  target.ref = source.ref;
  target.pendingProps = source.pendingProps;
  target.memoizedProps = source.memoizedProps;
  target.updateQueue = source.updateQueue;
  target.memoizedState = source.memoizedState;
  target.dependencies = source.dependencies;
  target.mode = source.mode;
  target.effectTag = source.effectTag;
  target.nextEffect = source.nextEffect;
  target.firstEffect = source.firstEffect;
  target.lastEffect = source.lastEffect;
  target.expirationTime = source.expirationTime;
  target.childExpirationTime = source.childExpirationTime;
  target.alternate = source.alternate;

  if (enableProfilerTimer) {
    target.actualDuration = source.actualDuration;
    target.actualStartTime = source.actualStartTime;
    target.selfBaseDuration = source.selfBaseDuration;
    target.treeBaseDuration = source.treeBaseDuration;
  }

  target._debugID = source._debugID;
  target._debugSource = source._debugSource;
  target._debugOwner = source._debugOwner;
  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
  target._debugNeedsRemount = source._debugNeedsRemount;
  target._debugHookTypes = source._debugHookTypes;
  return target;
}

function FiberRootNode(containerInfo, tag, hydrate) {
  this.tag = tag;
  this.current = null;
  this.containerInfo = containerInfo;
  this.pendingChildren = null;
  this.pingCache = null;
  this.finishedExpirationTime = NoWork;
  this.finishedWork = null;
  this.timeoutHandle = noTimeout;
  this.context = null;
  this.pendingContext = null;
  this.hydrate = hydrate;
  this.callbackNode = null;
  this.callbackPriority = NoPriority;
  this.firstPendingTime = NoWork;
  this.firstSuspendedTime = NoWork;
  this.lastSuspendedTime = NoWork;
  this.nextKnownPendingLevel = NoWork;
  this.lastPingedTime = NoWork;
  this.lastExpiredTime = NoWork;

  if (enableSchedulerTracing) {
    this.interactionThreadID = tracing.unstable_getThreadID();
    this.memoizedInteractions = new Set();
    this.pendingInteractionMap = new Map();
  }

  if (enableSuspenseCallback) {
    this.hydrationCallbacks = null;
  }
}

function createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks) {
  var root = new FiberRootNode(containerInfo, tag, hydrate);

  if (enableSuspenseCallback) {
    root.hydrationCallbacks = hydrationCallbacks;
  } // Cyclic construction. This cheats the type system right now because
  // stateNode is any.


  var uninitializedFiber = createHostRootFiber(tag);
  root.current = uninitializedFiber;
  uninitializedFiber.stateNode = root;
  return root;
}
function isRootSuspendedAtTime(root, expirationTime) {
  var firstSuspendedTime = root.firstSuspendedTime;
  var lastSuspendedTime = root.lastSuspendedTime;
  return firstSuspendedTime !== NoWork && firstSuspendedTime >= expirationTime && lastSuspendedTime <= expirationTime;
}
function markRootSuspendedAtTime(root, expirationTime) {
  var firstSuspendedTime = root.firstSuspendedTime;
  var lastSuspendedTime = root.lastSuspendedTime;

  if (firstSuspendedTime < expirationTime) {
    root.firstSuspendedTime = expirationTime;
  }

  if (lastSuspendedTime > expirationTime || firstSuspendedTime === NoWork) {
    root.lastSuspendedTime = expirationTime;
  }

  if (expirationTime <= root.lastPingedTime) {
    root.lastPingedTime = NoWork;
  }

  if (expirationTime <= root.lastExpiredTime) {
    root.lastExpiredTime = NoWork;
  }
}
function markRootUpdatedAtTime(root, expirationTime) {
  // Update the range of pending times
  var firstPendingTime = root.firstPendingTime;

  if (expirationTime > firstPendingTime) {
    root.firstPendingTime = expirationTime;
  } // Update the range of suspended times. Treat everything lower priority or
  // equal to this update as unsuspended.


  var firstSuspendedTime = root.firstSuspendedTime;

  if (firstSuspendedTime !== NoWork) {
    if (expirationTime >= firstSuspendedTime) {
      // The entire suspended range is now unsuspended.
      root.firstSuspendedTime = root.lastSuspendedTime = root.nextKnownPendingLevel = NoWork;
    } else if (expirationTime >= root.lastSuspendedTime) {
      root.lastSuspendedTime = expirationTime + 1;
    } // This is a pending level. Check if it's higher priority than the next
    // known pending level.


    if (expirationTime > root.nextKnownPendingLevel) {
      root.nextKnownPendingLevel = expirationTime;
    }
  }
}
function markRootFinishedAtTime(root, finishedExpirationTime, remainingExpirationTime) {
  // Update the range of pending times
  root.firstPendingTime = remainingExpirationTime; // Update the range of suspended times. Treat everything higher priority or
  // equal to this update as unsuspended.

  if (finishedExpirationTime <= root.lastSuspendedTime) {
    // The entire suspended range is now unsuspended.
    root.firstSuspendedTime = root.lastSuspendedTime = root.nextKnownPendingLevel = NoWork;
  } else if (finishedExpirationTime <= root.firstSuspendedTime) {
    // Part of the suspended range is now unsuspended. Narrow the range to
    // include everything between the unsuspended time (non-inclusive) and the
    // last suspended time.
    root.firstSuspendedTime = finishedExpirationTime - 1;
  }

  if (finishedExpirationTime <= root.lastPingedTime) {
    // Clear the pinged time
    root.lastPingedTime = NoWork;
  }

  if (finishedExpirationTime <= root.lastExpiredTime) {
    // Clear the expired time
    root.lastExpiredTime = NoWork;
  }
}
function markRootExpiredAtTime(root, expirationTime) {
  var lastExpiredTime = root.lastExpiredTime;

  if (lastExpiredTime === NoWork || lastExpiredTime > expirationTime) {
    root.lastExpiredTime = expirationTime;
  }
}

// This lets us hook into Fiber to debug what it's doing.
// See https://github.com/facebook/react/pull/8033.
// This is not part of the public API, not even for React DevTools.
// You may only inject a debugTool if you work on React Fiber itself.
var ReactFiberInstrumentation = {
  debugTool: null
};
var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

var didWarnAboutNestedUpdates;
var didWarnAboutFindNodeInStrictMode;

{
  didWarnAboutNestedUpdates = false;
  didWarnAboutFindNodeInStrictMode = {};
}

function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyContextObject;
  }

  var fiber = get(parentComponent);
  var parentContext = findCurrentUnmaskedContext(fiber);

  if (fiber.tag === ClassComponent) {
    var Component = fiber.type;

    if (isContextProvider(Component)) {
      return processChildContext(fiber, Component, parentContext);
    }
  }

  return parentContext;
}

function findHostInstance(component) {
  var fiber = get(component);

  if (fiber === undefined) {
    if (typeof component.render === 'function') {
      {
        {
          throw Error("Unable to find node on an unmounted component.");
        }
      }
    } else {
      {
        {
          throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
        }
      }
    }
  }

  var hostFiber = findCurrentHostFiber(fiber);

  if (hostFiber === null) {
    return null;
  }

  return hostFiber.stateNode;
}

function findHostInstanceWithWarning(component, methodName) {
  {
    var fiber = get(component);

    if (fiber === undefined) {
      if (typeof component.render === 'function') {
        {
          {
            throw Error("Unable to find node on an unmounted component.");
          }
        }
      } else {
        {
          {
            throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
          }
        }
      }
    }

    var hostFiber = findCurrentHostFiber(fiber);

    if (hostFiber === null) {
      return null;
    }

    if (hostFiber.mode & StrictMode) {
      var componentName = getComponentName(fiber.type) || 'Component';

      if (!didWarnAboutFindNodeInStrictMode[componentName]) {
        didWarnAboutFindNodeInStrictMode[componentName] = true;

        if (fiber.mode & StrictMode) {
          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-find-node%s', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
        } else {
          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-find-node%s', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
        }
      }
    }

    return hostFiber.stateNode;
  }

  return findHostInstance(component);
}

function createContainer(containerInfo, tag, hydrate, hydrationCallbacks) {
  return createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks);
}
function updateContainer(element, container, parentComponent, callback) {
  var current$$1 = container.current;
  var currentTime = requestCurrentTimeForUpdate();

  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfUnmockedScheduler(current$$1);
      warnIfNotScopedWithMatchingAct(current$$1);
    }
  }

  var suspenseConfig = requestCurrentSuspenseConfig();
  var expirationTime = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);

  {
    if (ReactFiberInstrumentation_1.debugTool) {
      if (current$$1.alternate === null) {
        ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
      } else if (element === null) {
        ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
      } else {
        ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
      }
    }
  }

  var context = getContextForSubtree(parentComponent);

  if (container.context === null) {
    container.context = context;
  } else {
    container.pendingContext = context;
  }

  {
    if (phase === 'render' && current !== null && !didWarnAboutNestedUpdates) {
      didWarnAboutNestedUpdates = true;
      warningWithoutStack$1(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');
    }
  }

  var update = createUpdate(expirationTime, suspenseConfig); // Caution: React DevTools currently depends on this property
  // being called "element".

  update.payload = {
    element: element
  };
  callback = callback === undefined ? null : callback;

  if (callback !== null) {
    !(typeof callback === 'function') ? warningWithoutStack$1(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
    update.callback = callback;
  }

  enqueueUpdate(current$$1, update);
  scheduleWork(current$$1, expirationTime);
  return expirationTime;
}
function getPublicRootInstance(container) {
  var containerFiber = container.current;

  if (!containerFiber.child) {
    return null;
  }

  switch (containerFiber.child.tag) {
    case HostComponent:
      return getPublicInstance(containerFiber.child.stateNode);

    default:
      return containerFiber.child.stateNode;
  }
}
function attemptSynchronousHydration$1(fiber) {
  switch (fiber.tag) {
    case HostRoot:
      var root = fiber.stateNode;

      if (root.hydrate) {
        // Flush the first scheduled "update".
        flushRoot(root, root.firstPendingTime);
      }

      break;

    case SuspenseComponent:
      flushSync(function () {
        return scheduleWork(fiber, Sync);
      }); // If we're still blocked after this, we need to increase
      // the priority of any promises resolving within this
      // boundary so that they next attempt also has higher pri.

      var retryExpTime = computeInteractiveExpiration(requestCurrentTimeForUpdate());
      markRetryTimeIfNotHydrated(fiber, retryExpTime);
      break;
  }
}

function markRetryTimeImpl(fiber, retryTime) {
  var suspenseState = fiber.memoizedState;

  if (suspenseState !== null && suspenseState.dehydrated !== null) {
    if (suspenseState.retryTime < retryTime) {
      suspenseState.retryTime = retryTime;
    }
  }
} // Increases the priority of thennables when they resolve within this boundary.


function markRetryTimeIfNotHydrated(fiber, retryTime) {
  markRetryTimeImpl(fiber, retryTime);
  var alternate = fiber.alternate;

  if (alternate) {
    markRetryTimeImpl(alternate, retryTime);
  }
}

function attemptUserBlockingHydration$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority and they should not suspend on I/O,
    // since you have to wrap anything that might suspend in
    // Suspense.
    return;
  }

  var expTime = computeInteractiveExpiration(requestCurrentTimeForUpdate());
  scheduleWork(fiber, expTime);
  markRetryTimeIfNotHydrated(fiber, expTime);
}
function attemptContinuousHydration$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority and they should not suspend on I/O,
    // since you have to wrap anything that might suspend in
    // Suspense.
    return;
  }

  var expTime = computeContinuousHydrationExpiration(requestCurrentTimeForUpdate());
  scheduleWork(fiber, expTime);
  markRetryTimeIfNotHydrated(fiber, expTime);
}
function attemptHydrationAtCurrentPriority$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority other than synchronously flush it.
    return;
  }

  var currentTime = requestCurrentTimeForUpdate();
  var expTime = computeExpirationForFiber(currentTime, fiber, null);
  scheduleWork(fiber, expTime);
  markRetryTimeIfNotHydrated(fiber, expTime);
}
function findHostInstanceWithNoPortals(fiber) {
  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);

  if (hostFiber === null) {
    return null;
  }

  if (hostFiber.tag === FundamentalComponent) {
    return hostFiber.stateNode.instance;
  }

  return hostFiber.stateNode;
}

var shouldSuspendImpl = function (fiber) {
  return false;
};

function shouldSuspend(fiber) {
  return shouldSuspendImpl(fiber);
}
var overrideHookState = null;
var overrideProps = null;
var scheduleUpdate = null;
var setSuspenseHandler = null;

{
  var copyWithSetImpl = function (obj, path, idx, value) {
    if (idx >= path.length) {
      return value;
    }

    var key = path[idx];
    var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj); // $FlowFixMe number or string is fine here

    updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);
    return updated;
  };

  var copyWithSet = function (obj, path, value) {
    return copyWithSetImpl(obj, path, 0, value);
  }; // Support DevTools editable values for useState and useReducer.


  overrideHookState = function (fiber, id, path, value) {
    // For now, the "id" of stateful hooks is just the stateful hook index.
    // This may change in the future with e.g. nested hooks.
    var currentHook = fiber.memoizedState;

    while (currentHook !== null && id > 0) {
      currentHook = currentHook.next;
      id--;
    }

    if (currentHook !== null) {
      var newState = copyWithSet(currentHook.memoizedState, path, value);
      currentHook.memoizedState = newState;
      currentHook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = _assign({}, fiber.memoizedProps);
      scheduleWork(fiber, Sync);
    }
  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.


  overrideProps = function (fiber, path, value) {
    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    scheduleWork(fiber, Sync);
  };

  scheduleUpdate = function (fiber) {
    scheduleWork(fiber, Sync);
  };

  setSuspenseHandler = function (newShouldSuspendImpl) {
    shouldSuspendImpl = newShouldSuspendImpl;
  };
}

function injectIntoDevTools(devToolsConfig) {
  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
  return injectInternals(_assign({}, devToolsConfig, {
    overrideHookState: overrideHookState,
    overrideProps: overrideProps,
    setSuspenseHandler: setSuspenseHandler,
    scheduleUpdate: scheduleUpdate,
    currentDispatcherRef: ReactCurrentDispatcher,
    findHostInstanceByFiber: function (fiber) {
      var hostFiber = findCurrentHostFiber(fiber);

      if (hostFiber === null) {
        return null;
      }

      return hostFiber.stateNode;
    },
    findFiberByHostInstance: function (instance) {
      if (!findFiberByHostInstance) {
        // Might not be implemented by the renderer.
        return null;
      }

      return findFiberByHostInstance(instance);
    },
    // React Refresh
    findHostInstancesForRefresh: findHostInstancesForRefresh,
    scheduleRefresh: scheduleRefresh,
    scheduleRoot: scheduleRoot,
    setRefreshHandler: setRefreshHandler,
    // Enables DevTools to append owner stacks to error messages in DEV mode.
    getCurrentFiber: function () {
      return current;
    }
  }));
}

// This file intentionally does *not* have the Flow annotation.
// Don't add it. See `./inline-typed.js` for an explanation.

// TODO: This type is shared between the reconciler and ReactDOM, but will
// eventually be lifted out to the renderer.
function ReactDOMRoot(container, options) {
  this._internalRoot = createRootImpl(container, ConcurrentRoot, options);
}

function ReactDOMBlockingRoot(container, tag, options) {
  this._internalRoot = createRootImpl(container, tag, options);
}

ReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function (children, callback) {
  var root = this._internalRoot;
  var cb = callback === undefined ? null : callback;

  {
    warnOnInvalidCallback(cb, 'render');
  }

  updateContainer(children, root, null, cb);
};

ReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function (callback) {
  var root = this._internalRoot;
  var cb = callback === undefined ? null : callback;

  {
    warnOnInvalidCallback(cb, 'render');
  }

  var container = root.containerInfo;
  updateContainer(null, root, null, function () {
    unmarkContainerAsRoot(container);

    if (cb !== null) {
      cb();
    }
  });
};

function createRootImpl(container, tag, options) {
  // Tag is either LegacyRoot or Concurrent Root
  var hydrate = options != null && options.hydrate === true;
  var hydrationCallbacks = options != null && options.hydrationOptions || null;
  var root = createContainer(container, tag, hydrate, hydrationCallbacks);
  markContainerAsRoot(root.current, container);

  if (hydrate && tag !== LegacyRoot) {
    var doc = container.nodeType === DOCUMENT_NODE ? container : container.ownerDocument;
    eagerlyTrapReplayableEvents(doc);
  }

  return root;
}

function createRoot(container, options) {
  if (!isValidContainer(container)) {
    {
      throw Error("createRoot(...): Target container is not a DOM element.");
    }
  }

  warnIfReactDOMContainerInDEV(container);
  return new ReactDOMRoot(container, options);
}
function createBlockingRoot(container, options) {
  if (!isValidContainer(container)) {
    {
      throw Error("createRoot(...): Target container is not a DOM element.");
    }
  }

  warnIfReactDOMContainerInDEV(container);
  return new ReactDOMBlockingRoot(container, BlockingRoot, options);
}
function createLegacyRoot(container, options) {
  return new ReactDOMBlockingRoot(container, LegacyRoot, options);
}
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
}
function warnOnInvalidCallback(callback, callerName) {
  {
    !(callback === null || typeof callback === 'function') ? warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
  }
}

function warnIfReactDOMContainerInDEV(container) {
  {
    if (isContainerMarkedAsRoot(container)) {
      if (container._reactRootContainer) {
        warningWithoutStack$1(false, 'You are calling ReactDOM.createRoot() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.');
      } else {
        warningWithoutStack$1(false, 'You are calling ReactDOM.createRoot() on a container that ' + 'has already been passed to createRoot() before. Instead, call ' + 'root.render() on the existing root instead if you want to update it.');
      }
    }
  }
}

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
var topLevelUpdateWarnings;
var warnedAboutHydrateAPI = false;

{
  topLevelUpdateWarnings = function (container) {
    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);

      if (hostInstance) {
        !(hostInstance.parentNode === container) ? warningWithoutStack$1(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
      }
    }

    var isRootRenderedBySomeReact = !!container._reactRootContainer;
    var rootEl = getReactRootElementInContainer(container);
    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));
    !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warningWithoutStack$1(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
    !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warningWithoutStack$1(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
  };
}

function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOCUMENT_NODE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function shouldHydrateDueToLegacyHeuristic(container) {
  var rootElement = getReactRootElementInContainer(container);
  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
}

function legacyCreateRootFromDOMContainer(container, forceHydrate) {
  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container); // First clear any existing content.

  if (!shouldHydrate) {
    var warned = false;
    var rootSibling;

    while (rootSibling = container.lastChild) {
      {
        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
          warned = true;
          warningWithoutStack$1(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
        }
      }

      container.removeChild(rootSibling);
    }
  }

  {
    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
      warnedAboutHydrateAPI = true;
      lowPriorityWarningWithoutStack$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
    }
  }

  return createLegacyRoot(container, shouldHydrate ? {
    hydrate: true
  } : undefined);
}

function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
  {
    topLevelUpdateWarnings(container);
    warnOnInvalidCallback(callback === undefined ? null : callback, 'render');
  } // TODO: Without `any` type, Flow says "Property cannot be accessed on any
  // member of intersection type." Whyyyyyy.


  var root = container._reactRootContainer;
  var fiberRoot;

  if (!root) {
    // Initial mount
    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
    fiberRoot = root._internalRoot;

    if (typeof callback === 'function') {
      var originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(fiberRoot);
        originalCallback.call(instance);
      };
    } // Initial mount should not be batched.


    unbatchedUpdates(function () {
      updateContainer(children, fiberRoot, parentComponent, callback);
    });
  } else {
    fiberRoot = root._internalRoot;

    if (typeof callback === 'function') {
      var _originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(fiberRoot);

        _originalCallback.call(instance);
      };
    } // Update


    updateContainer(children, fiberRoot, parentComponent, callback);
  }

  return getPublicRootInstance(fiberRoot);
}

function findDOMNode(componentOrElement) {
  {
    var owner = ReactCurrentOwner$1.current;

    if (owner !== null && owner.stateNode !== null) {
      var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
      !warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component') : void 0;
      owner.stateNode._warnedAboutRefsInRender = true;
    }
  }

  if (componentOrElement == null) {
    return null;
  }

  if (componentOrElement.nodeType === ELEMENT_NODE) {
    return componentOrElement;
  }

  {
    return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
  }

  return findHostInstance(componentOrElement);
}
function hydrate(element, container, callback) {
  if (!isValidContainer(container)) {
    {
      throw Error("Target container is not a DOM element.");
    }
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      warningWithoutStack$1(false, 'You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?');
    }
  } // TODO: throw or warn if we couldn't hydrate?


  return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
}
function render(element, container, callback) {
  if (!isValidContainer(container)) {
    {
      throw Error("Target container is not a DOM element.");
    }
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      warningWithoutStack$1(false, 'You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. ' + 'Did you mean to call root.render(element)?');
    }
  }

  return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
}
function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
  if (!isValidContainer(containerNode)) {
    {
      throw Error("Target container is not a DOM element.");
    }
  }

  if (!(parentComponent != null && has(parentComponent))) {
    {
      throw Error("parentComponent must be a valid React Component");
    }
  }

  return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
}
function unmountComponentAtNode(container) {
  if (!isValidContainer(container)) {
    {
      throw Error("unmountComponentAtNode(...): Target container is not a DOM element.");
    }
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      warningWithoutStack$1(false, 'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.unmount()?');
    }
  }

  if (container._reactRootContainer) {
    {
      var rootEl = getReactRootElementInContainer(container);
      var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
      !!renderedByDifferentReact ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
    } // Unmount should not be batched.


    unbatchedUpdates(function () {
      legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
        container._reactRootContainer = null;
        unmarkContainerAsRoot(container);
      });
    }); // If you call unmountComponentAtNode twice in quick succession, you'll
    // get `true` twice. That's probably fine?

    return true;
  } else {
    {
      var _rootEl = getReactRootElementInContainer(container);

      var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl)); // Check if the container itself is a React root node.

      var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;
      !!hasNonRootReactChild ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
    }

    return false;
  }
}

function createPortal$1(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.
implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  return {
    // This tag allow us to uniquely identify this as a React Portal
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.12.0';

setAttemptSynchronousHydration(attemptSynchronousHydration$1);
setAttemptUserBlockingHydration(attemptUserBlockingHydration$1);
setAttemptContinuousHydration(attemptContinuousHydration$1);
setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
var didWarnAboutUnstableCreatePortal = false;

{
  if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype
  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype
  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
    warningWithoutStack$1(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
  }
}

setRestoreImplementation(restoreControlledState$$1);
setBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);

function createPortal$$1(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  if (!isValidContainer(container)) {
    {
      throw Error("Target container is not a DOM element.");
    }
  } // TODO: pass ReactDOM portal implementation as third argument


  return createPortal$1(children, container, null, key);
}

var ReactDOM = {
  createPortal: createPortal$$1,
  // Legacy
  findDOMNode: findDOMNode,
  hydrate: hydrate,
  render: render,
  unstable_renderSubtreeIntoContainer: unstable_renderSubtreeIntoContainer,
  unmountComponentAtNode: unmountComponentAtNode,
  // Temporary alias since we already shipped React 16 RC with it.
  // TODO: remove in React 17.
  unstable_createPortal: function () {
    if (!didWarnAboutUnstableCreatePortal) {
      didWarnAboutUnstableCreatePortal = true;
      lowPriorityWarningWithoutStack$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
    }

    return createPortal$$1.apply(void 0, arguments);
  },
  unstable_batchedUpdates: batchedUpdates$1,
  flushSync: flushSync,
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    // Keep in sync with ReactDOMUnstableNativeDependencies.js
    // ReactTestUtils.js, and ReactTestUtilsAct.js. This is an array for better minification.
    Events: [getInstanceFromNode$1, getNodeFromInstance$1, getFiberCurrentPropsFromNode$1, injection.injectEventPluginsByName, eventNameDispatchConfigs, accumulateTwoPhaseDispatches, accumulateDirectDispatches, enqueueStateRestore, restoreStateIfNeeded, dispatchEvent, runEventsInBatch, flushPassiveEffects, IsThisRendererActing]
  }
};

if (exposeConcurrentModeAPIs) {
  ReactDOM.createRoot = createRoot;
  ReactDOM.createBlockingRoot = createBlockingRoot;
  ReactDOM.unstable_discreteUpdates = discreteUpdates$1;
  ReactDOM.unstable_flushDiscreteUpdates = flushDiscreteUpdates;
  ReactDOM.unstable_flushControlled = flushControlled;

  ReactDOM.unstable_scheduleHydration = function (target) {
    if (target) {
      queueExplicitHydrationTarget(target);
    }
  };
}

var foundDevTools = injectIntoDevTools({
  findFiberByHostInstance: getClosestInstanceFromNode,
  bundleType: 1,
  version: ReactVersion,
  rendererPackageName: 'react-dom'
});

{
  if (!foundDevTools && canUseDOM && window.top === window.self) {
    // If we're in Chrome or Firefox, provide a download link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
      var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.

      if (/^(https?|file):$/.test(protocol)) {
        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
      }
    }
  }
}



var ReactDOM$2 = Object.freeze({
	default: ReactDOM
});

var ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.


var reactDom = ReactDOM$3.default || ReactDOM$3;

module.exports = reactDom;
  })();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.12.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
var aa=__webpack_require__(0),n=__webpack_require__(39),q=__webpack_require__(142);function u(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!aa)throw Error(u(227));var ba=null,ca={};
function da(){if(ba)for(var a in ca){var b=ca[a],c=ba.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!ea[c]){if(!b.extractEvents)throw Error(u(97,a));ea[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(fa.hasOwnProperty(h))throw Error(u(99,h));fa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ha(k[e],g,h);e=!0}else f.registrationName?(ha(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}
function ha(a,b,c){if(ia[a])throw Error(u(100,a));ia[a]=b;ja[a]=b.eventTypes[c].dependencies}var ea=[],fa={},ia={},ja={};function ka(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var la=!1,ma=null,na=!1,oa=null,pa={onError:function(a){la=!0;ma=a}};function qa(a,b,c,d,e,f,g,h,k){la=!1;ma=null;ka.apply(pa,arguments)}
function ra(a,b,c,d,e,f,g,h,k){qa.apply(this,arguments);if(la){if(la){var l=ma;la=!1;ma=null}else throw Error(u(198));na||(na=!0,oa=l)}}var sa=null,ua=null,va=null;function wa(a,b,c){var d=a.type||"unknown-event";a.currentTarget=va(c);ra(d,b,void 0,a);a.currentTarget=null}function xa(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}
function ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ba(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a){ya(a,Aa);if(za)throw Error(u(95));if(na)throw a=oa,na=!1,oa=null,a;}}
var Ca={injectEventPluginOrder:function(a){if(ba)throw Error(u(101));ba=Array.prototype.slice.call(a);da()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!ca.hasOwnProperty(c)||ca[c]!==d){if(ca[c])throw Error(u(102,c));ca[c]=d;b=!0}}b&&da()}};
function Da(a,b){var c=a.stateNode;if(!c)return null;var d=sa(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==typeof c)throw Error(u(231,b,typeof c));
return c}var Ea=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Ea.hasOwnProperty("ReactCurrentDispatcher")||(Ea.ReactCurrentDispatcher={current:null});Ea.hasOwnProperty("ReactCurrentBatchConfig")||(Ea.ReactCurrentBatchConfig={suspense:null});
var Fa=/^(.*)[\\\/]/,w="function"===typeof Symbol&&Symbol.for,Ga=w?Symbol.for("react.element"):60103,Ha=w?Symbol.for("react.portal"):60106,Ia=w?Symbol.for("react.fragment"):60107,Ja=w?Symbol.for("react.strict_mode"):60108,Ka=w?Symbol.for("react.profiler"):60114,La=w?Symbol.for("react.provider"):60109,Ma=w?Symbol.for("react.context"):60110,Na=w?Symbol.for("react.concurrent_mode"):60111,Oa=w?Symbol.for("react.forward_ref"):60112,Pa=w?Symbol.for("react.suspense"):60113,Qa=w?Symbol.for("react.suspense_list"):
60120,Ra=w?Symbol.for("react.memo"):60115,Sa=w?Symbol.for("react.lazy"):60116;w&&Symbol.for("react.fundamental");w&&Symbol.for("react.responder");w&&Symbol.for("react.scope");var Ta="function"===typeof Symbol&&Symbol.iterator;function Ua(a){if(null===a||"object"!==typeof a)return null;a=Ta&&a[Ta]||a["@@iterator"];return"function"===typeof a?a:null}
function Va(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}
function Wa(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case Ia:return"Fragment";case Ha:return"Portal";case Ka:return"Profiler";case Ja:return"StrictMode";case Pa:return"Suspense";case Qa:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case Ma:return"Context.Consumer";case La:return"Context.Provider";case Oa:var b=a.render;b=b.displayName||b.name||"";return a.displayName||(""!==b?"ForwardRef("+b+")":
"ForwardRef");case Ra:return Wa(a.type);case Sa:if(a=1===a._status?a._result:null)return Wa(a)}return null}function Xa(a){var b="";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c="";break a;default:var d=a._debugOwner,e=a._debugSource,f=Wa(a.type);c=null;d&&(c=Wa(d.type));d=f;f="";e?f=" (at "+e.fileName.replace(Fa,"")+":"+e.lineNumber+")":c&&(f=" (created by "+c+")");c="\n    in "+(d||"Unknown")+f}b+=c;a=a.return}while(a);return b}
var Ya=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),Za=null,$a=null,ab=null;function bb(a){if(a=ua(a)){if("function"!==typeof Za)throw Error(u(280));var b=sa(a.stateNode);Za(a.stateNode,a.type,b)}}function cb(a){$a?ab?ab.push(a):ab=[a]:$a=a}function db(){if($a){var a=$a,b=ab;ab=$a=null;bb(a);if(b)for(a=0;a<b.length;a++)bb(b[a])}}function eb(a,b){return a(b)}function fb(a,b,c,d){return a(b,c,d)}function gb(){}
var hb=eb,ib=!1,jb=!1;function kb(){if(null!==$a||null!==ab)gb(),db()}new Map;var lb=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,mb=Object.prototype.hasOwnProperty,nb={},ob={};
function pb(a){if(mb.call(ob,a))return!0;if(mb.call(nb,a))return!1;if(lb.test(a))return ob[a]=!0;nb[a]=!0;return!1}function qb(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function rb(a,b,c,d){if(null===b||"undefined"===typeof b||qb(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var D={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1)});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1)});
["checked","multiple","muted","selected"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1)});["capture","download"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1)});["cols","rows","size","span"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1)});["rowSpan","start"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1)});var sb=/[\-:]([a-z])/g;function tb(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(sb,
tb);D[b]=new B(b,1,!1,a,null,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(sb,tb);D[b]=new B(b,1,!1,a,"http://www.w3.org/1999/xlink",!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(sb,tb);D[b]=new B(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1)});["tabIndex","crossOrigin"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1)});
D.xlinkHref=new B("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0);["src","href","action","formAction"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0)});function ub(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}
function vb(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(rb(b,c,e,d)&&(c=null),d||null===e?pb(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
function wb(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function xb(a){var b=wb(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function yb(a){a._valueTracker||(a._valueTracker=xb(a))}function zb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=wb(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Ab(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}
function Bb(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=ub(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Cb(a,b){b=b.checked;null!=b&&vb(a,"checked",b,!1)}
function Eb(a,b){Cb(a,b);var c=ub(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?Fb(a,b.type,c):b.hasOwnProperty("defaultValue")&&Fb(a,b.type,ub(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function Gb(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
function Fb(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}function Hb(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Ib(a,b){a=n({children:void 0},b);if(b=Hb(b.children))a.children=b;return a}
function Jb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+ub(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function Kb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Lb(a,b){var c=b.value;if(null==c){c=b.defaultValue;b=b.children;if(null!=b){if(null!=c)throw Error(u(92));if(Array.isArray(b)){if(!(1>=b.length))throw Error(u(93));b=b[0]}c=b}null==c&&(c="")}a._wrapperState={initialValue:ub(c)}}
function Mb(a,b){var c=ub(b.value),d=ub(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function Nb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}var Ob={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function Pb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Qb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Pb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var Rb,Sb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Ob.svg||"innerHTML"in a)a.innerHTML=b;else{Rb=Rb||document.createElement("div");Rb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=Rb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function Tb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Ub(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Vb={animationend:Ub("Animation","AnimationEnd"),animationiteration:Ub("Animation","AnimationIteration"),animationstart:Ub("Animation","AnimationStart"),transitionend:Ub("Transition","TransitionEnd")},Wb={},Xb={};
Ya&&(Xb=document.createElement("div").style,"AnimationEvent"in window||(delete Vb.animationend.animation,delete Vb.animationiteration.animation,delete Vb.animationstart.animation),"TransitionEvent"in window||delete Vb.transitionend.transition);function Yb(a){if(Wb[a])return Wb[a];if(!Vb[a])return a;var b=Vb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Xb)return Wb[a]=b[c];return a}var Zb=Yb("animationend"),$b=Yb("animationiteration"),ac=Yb("animationstart"),bc=Yb("transitionend"),cc="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" ");
function ec(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function fc(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function gc(a){if(ec(a)!==a)throw Error(u(188));}
function hc(a){var b=a.alternate;if(!b){b=ec(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return gc(e),a;if(f===d)return gc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===
c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function ic(a){a=hc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
var jc,kc,lc,mc=!1,nc=[],oc=null,pc=null,qc=null,rc=new Map,sc=new Map,tc=[],uc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),vc="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");
function wc(a){var b=xc(a);uc.forEach(function(c){yc(c,a,b)});vc.forEach(function(c){yc(c,a,b)})}function zc(a,b,c,d){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:d}}function Ac(a,b){switch(a){case "focus":case "blur":oc=null;break;case "dragenter":case "dragleave":pc=null;break;case "mouseover":case "mouseout":qc=null;break;case "pointerover":case "pointerout":rc.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":sc.delete(b.pointerId)}}
function Bc(a,b,c,d,e){if(null===a||a.nativeEvent!==e)return a=zc(b,c,d,e),null!==b&&(b=Cc(b),null!==b&&kc(b)),a;a.eventSystemFlags|=d;return a}function Dc(a,b,c,d){switch(b){case "focus":return oc=Bc(oc,a,b,c,d),!0;case "dragenter":return pc=Bc(pc,a,b,c,d),!0;case "mouseover":return qc=Bc(qc,a,b,c,d),!0;case "pointerover":var e=d.pointerId;rc.set(e,Bc(rc.get(e)||null,a,b,c,d));return!0;case "gotpointercapture":return e=d.pointerId,sc.set(e,Bc(sc.get(e)||null,a,b,c,d)),!0}return!1}
function Ec(a){var b=Fc(a.target);if(null!==b){var c=ec(b);if(null!==c)if(b=c.tag,13===b){if(b=fc(c),null!==b){a.blockedOn=b;q.unstable_runWithPriority(a.priority,function(){lc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Gc(a){if(null!==a.blockedOn)return!1;var b=Hc(a.topLevelType,a.eventSystemFlags,a.nativeEvent);if(null!==b){var c=Cc(b);null!==c&&kc(c);a.blockedOn=b;return!1}return!0}
function Ic(a,b,c){Gc(a)&&c.delete(b)}function Jc(){for(mc=!1;0<nc.length;){var a=nc[0];if(null!==a.blockedOn){a=Cc(a.blockedOn);null!==a&&jc(a);break}var b=Hc(a.topLevelType,a.eventSystemFlags,a.nativeEvent);null!==b?a.blockedOn=b:nc.shift()}null!==oc&&Gc(oc)&&(oc=null);null!==pc&&Gc(pc)&&(pc=null);null!==qc&&Gc(qc)&&(qc=null);rc.forEach(Ic);sc.forEach(Ic)}function Kc(a,b){a.blockedOn===b&&(a.blockedOn=null,mc||(mc=!0,q.unstable_scheduleCallback(q.unstable_NormalPriority,Jc)))}
function Lc(a){function b(b){return Kc(b,a)}if(0<nc.length){Kc(nc[0],a);for(var c=1;c<nc.length;c++){var d=nc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==oc&&Kc(oc,a);null!==pc&&Kc(pc,a);null!==qc&&Kc(qc,a);rc.forEach(b);sc.forEach(b);for(c=0;c<tc.length;c++)d=tc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<tc.length&&(c=tc[0],null===c.blockedOn);)Ec(c),null===c.blockedOn&&tc.shift()}
function Mc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Nc(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Oc(a,b,c){if(b=Da(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}
function Pc(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Nc(b);for(b=c.length;0<b--;)Oc(c[b],"captured",a);for(b=0;b<c.length;b++)Oc(c[b],"bubbled",a)}}function Qc(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Da(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Rc(a){a&&a.dispatchConfig.registrationName&&Qc(a._targetInst,null,a)}
function Sc(a){ya(a,Pc)}function Tc(){return!0}function Uc(){return!1}function E(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?Tc:Uc;this.isPropagationStopped=Uc;return this}
n(E.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=Tc)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=Tc)},persist:function(){this.isPersistent=Tc},isPersistent:Uc,destructor:function(){var a=this.constructor.Interface,
b;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=Uc;this._dispatchInstances=this._dispatchListeners=null}});E.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
E.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;Vc(c);return c};Vc(E);function Wc(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}
function Xc(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Vc(a){a.eventPool=[];a.getPooled=Wc;a.release=Xc}var Yc=E.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Zc=E.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),$c=E.extend({view:null,detail:null}),ad=$c.extend({relatedTarget:null});
function bd(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
var cd={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},dd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ed={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function gd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=ed[a])?!!b[a]:!1}function hd(){return gd}
var id=$c.extend({key:function(a){if(a.key){var b=cd[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=bd(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?dd[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:hd,charCode:function(a){return"keypress"===a.type?bd(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===
a.type?bd(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),jd=0,kd=0,ld=!1,md=!1,nd=$c.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:hd,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if("movementX"in a)return a.movementX;var b=jd;jd=a.screenX;return ld?"mousemove"===a.type?a.screenX-
b:0:(ld=!0,0)},movementY:function(a){if("movementY"in a)return a.movementY;var b=kd;kd=a.screenY;return md?"mousemove"===a.type?a.screenY-b:0:(md=!0,0)}}),od=nd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),pd=nd.extend({dataTransfer:null}),qd=$c.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:hd}),rd=E.extend({propertyName:null,
elapsedTime:null,pseudoElement:null}),sd=nd.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[["blur","blur",0],["cancel","cancel",0],["click","click",0],["close","close",0],["contextmenu","contextMenu",0],["copy","copy",0],["cut","cut",0],["auxclick","auxClick",0],["dblclick","doubleClick",0],["dragend","dragEnd",
0],["dragstart","dragStart",0],["drop","drop",0],["focus","focus",0],["input","input",0],["invalid","invalid",0],["keydown","keyDown",0],["keypress","keyPress",0],["keyup","keyUp",0],["mousedown","mouseDown",0],["mouseup","mouseUp",0],["paste","paste",0],["pause","pause",0],["play","play",0],["pointercancel","pointerCancel",0],["pointerdown","pointerDown",0],["pointerup","pointerUp",0],["ratechange","rateChange",0],["reset","reset",0],["seeked","seeked",0],["submit","submit",0],["touchcancel","touchCancel",
0],["touchend","touchEnd",0],["touchstart","touchStart",0],["volumechange","volumeChange",0],["drag","drag",1],["dragenter","dragEnter",1],["dragexit","dragExit",1],["dragleave","dragLeave",1],["dragover","dragOver",1],["mousemove","mouseMove",1],["mouseout","mouseOut",1],["mouseover","mouseOver",1],["pointermove","pointerMove",1],["pointerout","pointerOut",1],["pointerover","pointerOver",1],["scroll","scroll",1],["toggle","toggle",1],["touchmove","touchMove",1],["wheel","wheel",1],["abort","abort",
2],[Zb,"animationEnd",2],[$b,"animationIteration",2],[ac,"animationStart",2],["canplay","canPlay",2],["canplaythrough","canPlayThrough",2],["durationchange","durationChange",2],["emptied","emptied",2],["encrypted","encrypted",2],["ended","ended",2],["error","error",2],["gotpointercapture","gotPointerCapture",2],["load","load",2],["loadeddata","loadedData",2],["loadedmetadata","loadedMetadata",2],["loadstart","loadStart",2],["lostpointercapture","lostPointerCapture",2],["playing","playing",2],["progress",
"progress",2],["seeking","seeking",2],["stalled","stalled",2],["suspend","suspend",2],["timeupdate","timeUpdate",2],[bc,"transitionEnd",2],["waiting","waiting",2]],ud={},vd={},wd=0;for(;wd<td.length;wd++){var yd=td[wd],zd=yd[0],Ad=yd[1],Bd=yd[2],Cd="on"+(Ad[0].toUpperCase()+Ad.slice(1)),Dd={phasedRegistrationNames:{bubbled:Cd,captured:Cd+"Capture"},dependencies:[zd],eventPriority:Bd};ud[Ad]=Dd;vd[zd]=Dd}
var Ed={eventTypes:ud,getEventPriority:function(a){a=vd[a];return void 0!==a?a.eventPriority:2},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case "keypress":if(0===bd(c))return null;case "keydown":case "keyup":a=id;break;case "blur":case "focus":a=ad;break;case "click":if(2===c.button)return null;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=nd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=
pd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=qd;break;case Zb:case $b:case ac:a=Yc;break;case bc:a=rd;break;case "scroll":a=$c;break;case "wheel":a=sd;break;case "copy":case "cut":case "paste":a=Zc;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=od;break;default:a=E}b=a.getPooled(e,b,c,d);Sc(b);return b}},Fd=q.unstable_UserBlockingPriority,
Gd=q.unstable_runWithPriority,Hd=Ed.getEventPriority,Id=10,Jd=[];
function Kd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=Fc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Mc(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=a.eventSystemFlags,h=null,k=0;k<ea.length;k++){var l=ea[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=xa(h,l))}Ba(h)}}
var Ld=!0;function F(a,b){Md(b,a,!1)}function Md(a,b,c){switch(Hd(b)){case 0:var d=Nd.bind(null,b,1);break;case 1:d=Od.bind(null,b,1);break;default:d=Pd.bind(null,b,1)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function Nd(a,b,c){ib||gb();var d=Pd,e=ib;ib=!0;try{fb(d,a,b,c)}finally{(ib=e)||kb()}}function Od(a,b,c){Gd(Fd,Pd.bind(null,a,b,c))}
function Qd(a,b,c,d){if(Jd.length){var e=Jd.pop();e.topLevelType=a;e.eventSystemFlags=b;e.nativeEvent=c;e.targetInst=d;a=e}else a={topLevelType:a,eventSystemFlags:b,nativeEvent:c,targetInst:d,ancestors:[]};try{if(b=Kd,c=a,jb)b(c,void 0);else{jb=!0;try{hb(b,c,void 0)}finally{jb=!1,kb()}}}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,Jd.length<Id&&Jd.push(a)}}
function Pd(a,b,c){if(Ld)if(0<nc.length&&-1<uc.indexOf(a))a=zc(null,a,b,c),nc.push(a);else{var d=Hc(a,b,c);null===d?Ac(a,c):-1<uc.indexOf(a)?(a=zc(d,a,b,c),nc.push(a)):Dc(d,a,b,c)||(Ac(a,c),Qd(a,b,c,null))}}function Hc(a,b,c){var d=Mc(c);d=Fc(d);if(null!==d){var e=ec(d);if(null===e)d=null;else{var f=e.tag;if(13===f){d=fc(e);if(null!==d)return d;d=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;d=null}else e!==d&&(d=null)}}Qd(a,b,c,d);return null}
function Rd(a){if(!Ya)return!1;a="on"+a;var b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}var Sd=new ("function"===typeof WeakMap?WeakMap:Map);function xc(a){var b=Sd.get(a);void 0===b&&(b=new Set,Sd.set(a,b));return b}
function yc(a,b,c){if(!c.has(a)){switch(a){case "scroll":Md(b,"scroll",!0);break;case "focus":case "blur":Md(b,"focus",!0);Md(b,"blur",!0);c.add("blur");c.add("focus");break;case "cancel":case "close":Rd(a)&&Md(b,a,!0);break;case "invalid":case "submit":case "reset":break;default:-1===cc.indexOf(a)&&F(a,b)}c.add(a)}}
var Td={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ud=["Webkit","ms","Moz","O"];Object.keys(Td).forEach(function(a){Ud.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Td[b]=Td[a]})});function Vd(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||Td.hasOwnProperty(a)&&Td[a]?(""+b).trim():b+"px"}
function Wd(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=Vd(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var Xd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function Yd(a,b){if(b){if(Xd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,""));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!("object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(u(62,""));}}
function Zd(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}function $d(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=xc(a);b=ja[b];for(var d=0;d<b.length;d++)yc(b[d],a,c)}function ae(){}
function be(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ce(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function de(a,b){var c=ce(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ce(c)}}
function ee(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?ee(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function fe(){for(var a=window,b=be();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=be(a.document)}return b}
function ge(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}var he="$",ie="/$",je="$?",ke="$!",le=null,me=null;function ne(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
function oe(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var pe="function"===typeof setTimeout?setTimeout:void 0,qe="function"===typeof clearTimeout?clearTimeout:void 0;function re(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}
function se(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===he||c===ke||c===je){if(0===b)return a;b--}else c===ie&&b++}a=a.previousSibling}return null}var te=Math.random().toString(36).slice(2),ue="__reactInternalInstance$"+te,ve="__reactEventHandlers$"+te,we="__reactContainere$"+te;
function Fc(a){var b=a[ue];if(b)return b;for(var c=a.parentNode;c;){if(b=c[we]||c[ue]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=se(a);null!==a;){if(c=a[ue])return c;a=se(a)}return b}a=c;c=a.parentNode}return null}function Cc(a){a=a[ue]||a[we];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function xe(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function ye(a){return a[ve]||null}var ze=null,Ae=null,Be=null;
function Ce(){if(Be)return Be;var a,b=Ae,c=b.length,d,e="value"in ze?ze.value:ze.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return Be=e.slice(a,1<d?1-d:void 0)}var De=E.extend({data:null}),Ee=E.extend({data:null}),Fe=[9,13,27,32],Ge=Ya&&"CompositionEvent"in window,He=null;Ya&&"documentMode"in document&&(He=document.documentMode);
var Ie=Ya&&"TextEvent"in window&&!He,Je=Ya&&(!Ge||He&&8<He&&11>=He),Ke=String.fromCharCode(32),Le={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Me=!1;
function Ne(a,b){switch(a){case "keyup":return-1!==Fe.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function Oe(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var Pe=!1;function Qe(a,b){switch(a){case "compositionend":return Oe(b);case "keypress":if(32!==b.which)return null;Me=!0;return Ke;case "textInput":return a=b.data,a===Ke&&Me?null:a;default:return null}}
function Re(a,b){if(Pe)return"compositionend"===a||!Ge&&Ne(a,b)?(a=Ce(),Be=Ae=ze=null,Pe=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return Je&&"ko"!==b.locale?null:b.data;default:return null}}
var Se={eventTypes:Le,extractEvents:function(a,b,c,d){var e;if(Ge)b:{switch(a){case "compositionstart":var f=Le.compositionStart;break b;case "compositionend":f=Le.compositionEnd;break b;case "compositionupdate":f=Le.compositionUpdate;break b}f=void 0}else Pe?Ne(a,c)&&(f=Le.compositionEnd):"keydown"===a&&229===c.keyCode&&(f=Le.compositionStart);f?(Je&&"ko"!==c.locale&&(Pe||f!==Le.compositionStart?f===Le.compositionEnd&&Pe&&(e=Ce()):(ze=d,Ae="value"in ze?ze.value:ze.textContent,Pe=!0)),f=De.getPooled(f,
b,c,d),e?f.data=e:(e=Oe(c),null!==e&&(f.data=e)),Sc(f),e=f):e=null;(a=Ie?Qe(a,c):Re(a,c))?(b=Ee.getPooled(Le.beforeInput,b,c,d),b.data=a,Sc(b)):b=null;return null===e?b:null===b?e:[e,b]}},Te={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ue(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!Te[a.type]:"textarea"===b?!0:!1}
var Ve={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function We(a,b,c){a=E.getPooled(Ve.change,a,b,c);a.type="change";cb(c);Sc(a);return a}var Xe=null,Ye=null;function Ze(a){Ba(a)}function $e(a){var b=xe(a);if(zb(b))return a}function af(a,b){if("change"===a)return b}var bf=!1;Ya&&(bf=Rd("input")&&(!document.documentMode||9<document.documentMode));
function cf(){Xe&&(Xe.detachEvent("onpropertychange",df),Ye=Xe=null)}function df(a){if("value"===a.propertyName&&$e(Ye))if(a=We(Ye,a,Mc(a)),ib)Ba(a);else{ib=!0;try{eb(Ze,a)}finally{ib=!1,kb()}}}function ef(a,b,c){"focus"===a?(cf(),Xe=b,Ye=c,Xe.attachEvent("onpropertychange",df)):"blur"===a&&cf()}function ff(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return $e(Ye)}function gf(a,b){if("click"===a)return $e(b)}function hf(a,b){if("input"===a||"change"===a)return $e(b)}
var jf={eventTypes:Ve,_isInputEventSupported:bf,extractEvents:function(a,b,c,d){var e=b?xe(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if("select"===f||"input"===f&&"file"===e.type)var g=af;else if(Ue(e))if(bf)g=hf;else{g=ff;var h=ef}else(f=e.nodeName)&&"input"===f.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(g=gf);if(g&&(g=g(a,b)))return We(g,c,d);h&&h(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&Fb(e,"number",e.value)}},kf={mouseEnter:{registrationName:"onMouseEnter",
dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},lf,mf={eventTypes:kf,extractEvents:function(a,b,c,d,e){var f="mouseover"===a||"pointerover"===a,g="mouseout"===a||"pointerout"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;
e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?Fc(b):null,null!==b&&(f=ec(b),b!==f||5!==b.tag&&6!==b.tag))b=null}else g=null;if(g===b)return null;if("mouseout"===a||"mouseover"===a){var h=nd;var k=kf.mouseLeave;var l=kf.mouseEnter;var m="mouse"}else if("pointerout"===a||"pointerover"===a)h=od,k=kf.pointerLeave,l=kf.pointerEnter,m="pointer";a=null==g?e:xe(g);e=null==b?e:xe(b);k=h.getPooled(k,g,c,d);k.type=m+"leave";k.target=
a;k.relatedTarget=e;d=h.getPooled(l,b,c,d);d.type=m+"enter";d.target=e;d.relatedTarget=a;h=g;m=b;if(h&&m)a:{l=h;a=m;g=0;for(b=l;b;b=Nc(b))g++;b=0;for(e=a;e;e=Nc(e))b++;for(;0<g-b;)l=Nc(l),g--;for(;0<b-g;)a=Nc(a),b--;for(;g--;){if(l===a||l===a.alternate)break a;l=Nc(l);a=Nc(a)}l=null}else l=null;a=l;for(l=[];h&&h!==a;){g=h.alternate;if(null!==g&&g===a)break;l.push(h);h=Nc(h)}for(h=[];m&&m!==a;){g=m.alternate;if(null!==g&&g===a)break;h.push(m);m=Nc(m)}for(m=0;m<l.length;m++)Qc(l[m],"bubbled",k);for(m=
h.length;0<m--;)Qc(h[m],"captured",d);if(c===lf)return lf=null,[k];lf=c;return[k,d]}};function nf(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var of="function"===typeof Object.is?Object.is:nf,pf=Object.prototype.hasOwnProperty;function qf(a,b){if(of(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!pf.call(b,c[d])||!of(a[c[d]],b[c[d]]))return!1;return!0}
var rf=Ya&&"documentMode"in document&&11>=document.documentMode,sf={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},tf=null,uf=null,vf=null,wf=!1;
function xf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(wf||null==tf||tf!==be(c))return null;c=tf;"selectionStart"in c&&ge(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return vf&&qf(vf,c)?null:(vf=c,a=E.getPooled(sf.select,uf,a,b),a.type="select",a.target=tf,Sc(a),a)}
var yf={eventTypes:sf,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=xc(e);f=ja.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?xe(b):window;switch(a){case "focus":if(Ue(e)||"true"===e.contentEditable)tf=e,uf=b,vf=null;break;case "blur":vf=uf=tf=null;break;case "mousedown":wf=!0;break;case "contextmenu":case "mouseup":case "dragend":return wf=!1,xf(c,d);case "selectionchange":if(rf)break;
case "keydown":case "keyup":return xf(c,d)}return null}};Ca.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));var zf=Cc;sa=ye;ua=zf;va=xe;Ca.injectEventPluginsByName({SimpleEventPlugin:Ed,EnterLeaveEventPlugin:mf,ChangeEventPlugin:jf,SelectEventPlugin:yf,BeforeInputEventPlugin:Se});new Set;var Af=[],Bf=-1;function G(a){0>Bf||(a.current=Af[Bf],Af[Bf]=null,Bf--)}
function I(a,b){Bf++;Af[Bf]=a.current;a.current=b}var Cf={},J={current:Cf},K={current:!1},Df=Cf;function Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}
function Ff(a){G(K,a);G(J,a)}function Gf(a){G(K,a);G(J,a)}function Hf(a,b,c){if(J.current!==Cf)throw Error(u(168));I(J,b,a);I(K,c,a)}function If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,Wa(b)||"Unknown",e));return n({},c,{},d)}function Jf(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Cf;Df=J.current;I(J,b,a);I(K,K.current,a);return!0}
function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(b=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=b,G(K,a),G(J,a),I(J,b,a)):G(K,a);I(K,c,a)}
var Lf=q.unstable_runWithPriority,Mf=q.unstable_scheduleCallback,Nf=q.unstable_cancelCallback,Of=q.unstable_shouldYield,Pf=q.unstable_requestPaint,Qf=q.unstable_now,Rf=q.unstable_getCurrentPriorityLevel,Sf=q.unstable_ImmediatePriority,Tf=q.unstable_UserBlockingPriority,Uf=q.unstable_NormalPriority,Vf=q.unstable_LowPriority,Wf=q.unstable_IdlePriority,Xf={},Yf=void 0!==Pf?Pf:function(){},Zf=null,$f=null,ag=!1,bg=Qf(),cg=1E4>bg?Qf:function(){return Qf()-bg};
function dg(){switch(Rf()){case Sf:return 99;case Tf:return 98;case Uf:return 97;case Vf:return 96;case Wf:return 95;default:throw Error(u(332));}}function eg(a){switch(a){case 99:return Sf;case 98:return Tf;case 97:return Uf;case 96:return Vf;case 95:return Wf;default:throw Error(u(332));}}function fg(a,b){a=eg(a);return Lf(a,b)}function gg(a,b,c){a=eg(a);return Mf(a,b,c)}function hg(a){null===Zf?(Zf=[a],$f=Mf(Sf,ig)):Zf.push(a);return Xf}function jg(){if(null!==$f){var a=$f;$f=null;Nf(a)}ig()}
function ig(){if(!ag&&null!==Zf){ag=!0;var a=0;try{var b=Zf;fg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Zf=null}catch(c){throw null!==Zf&&(Zf=Zf.slice(a+1)),Mf(Sf,jg),c;}finally{ag=!1}}}var kg=3;function lg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function mg(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var ng={current:null},og=null,pg=null,qg=null;function rg(){qg=pg=og=null}
function sg(a,b){var c=a.type._context;I(ng,c._currentValue,a);c._currentValue=b}function tg(a){var b=ng.current;G(ng,a);a.type._context._currentValue=b}function ug(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}
function vg(a,b){og=a;qg=pg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(wg=!0),a.firstContext=null)}function xg(a,b){if(qg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)qg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===pg){if(null===og)throw Error(u(308));pg=b;og.dependencies={expirationTime:0,firstContext:b,responders:null}}else pg=pg.next=b}return a._currentValue}var yg=!1;
function zg(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ag(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}
function Bg(a,b){return{expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Cg(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}
function Dg(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=zg(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=zg(a.memoizedState),e=c.updateQueue=zg(c.memoizedState)):d=a.updateQueue=Ag(e):null===e&&(e=c.updateQueue=Ag(d));null===e||d===e?Cg(d,b):null===d.lastUpdate||null===e.lastUpdate?(Cg(d,b),Cg(e,b)):(Cg(d,b),e.lastUpdate=b)}
function Eg(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=zg(a.memoizedState):Fg(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function Fg(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Ag(b));return b}
function Gg(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,"function"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-4097|64;case 0:a=c.payload;e="function"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:yg=!0}return d}
function Hg(a,b,c,d,e){yg=!1;b=Fg(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;m<e?(null===g&&(g=k,f=l),h<m&&(h=m)):(Ig(m,k.suspenseConfig),l=Gg(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k)));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var C=k.expirationTime;C<e?(null===m&&(m=k,null===g&&(f=l)),h<C&&(h=C)):(l=Gg(a,b,k,l,c,d),null!==
k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k)));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;Jg(h);a.expirationTime=h;a.memoizedState=l}
function Kg(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);Lg(b.firstEffect,c);b.firstEffect=b.lastEffect=null;Lg(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function Lg(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;if("function"!==typeof c)throw Error(u(191,c));c.call(d)}a=a.nextEffect}}
var Mg=Ea.ReactCurrentBatchConfig,Ng=(new aa.Component).refs;function Og(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}
var Sg={isMounted:function(a){return(a=a._reactInternalFiber)?ec(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Pg(),e=Mg.suspense;d=Qg(d,a,e);e=Bg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Dg(a,e);Rg(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Pg(),e=Mg.suspense;d=Qg(d,a,e);e=Bg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Dg(a,e);Rg(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Pg(),d=Mg.suspense;
c=Qg(c,a,d);d=Bg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);Dg(a,d);Rg(a,c)}};function Tg(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!qf(c,d)||!qf(e,f):!0}
function Ug(a,b,c){var d=!1,e=Cf;var f=b.contextType;"object"===typeof f&&null!==f?f=xg(f):(e=L(b)?Df:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Sg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
function Vg(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Sg.enqueueReplaceState(b,b.state,null)}
function Wg(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Ng;var f=b.contextType;"object"===typeof f&&null!==f?e.context=xg(f):(f=L(b)?Df:J.current,e.context=Ef(a,f));f=a.updateQueue;null!==f&&(Hg(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;"function"===typeof f&&(Og(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==
typeof e.componentWillMount||(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Sg.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(Hg(a,f,c,e,d),e.state=a.memoizedState));"function"===typeof e.componentDidMount&&(a.effectTag|=4)}var Xg=Array.isArray;
function Yg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Ng&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if("string"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}
function Zg(a,b){if("textarea"!==a.type)throw Error(u(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,""));}
function $g(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=ah(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=bh(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Yg(a,b,c),d.return=a,d;d=ch(c.type,c.key,c.props,null,a.mode,d);d.ref=Yg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==
c.implementation)return b=dh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=eh(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function C(a,b,c){if("string"===typeof b||"number"===typeof b)return b=bh(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Ga:return c=ch(b.type,b.key,b.props,null,a.mode,c),c.ref=Yg(a,null,b),c.return=a,c;case Ha:return b=dh(b,a.mode,c),b.return=a,b}if(Xg(b)||
Ua(b))return b=eh(b,a.mode,c,null),b.return=a,b;Zg(a,b)}return null}function y(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Ga:return c.key===e?c.type===Ia?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case Ha:return c.key===e?l(a,b,c,d):null}if(Xg(c)||Ua(c))return null!==e?null:m(a,b,c,d,null);Zg(a,c)}return null}function H(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=
a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Ga:return a=a.get(null===d.key?c:d.key)||null,d.type===Ia?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case Ha:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Xg(d)||Ua(d))return a=a.get(c)||null,m(b,a,d,e,null);Zg(b,d)}return null}function z(e,g,h,k){for(var l=null,m=null,r=g,x=g=0,A=null;null!==r&&x<h.length;x++){r.index>x?(A=r,r=null):A=r.sibling;var p=y(e,r,h[x],k);if(null===p){null===r&&(r=A);break}a&&
r&&null===p.alternate&&b(e,r);g=f(p,g,x);null===m?l=p:m.sibling=p;m=p;r=A}if(x===h.length)return c(e,r),l;if(null===r){for(;x<h.length;x++)r=C(e,h[x],k),null!==r&&(g=f(r,g,x),null===m?l=r:m.sibling=r,m=r);return l}for(r=d(e,r);x<h.length;x++)A=H(r,e,x,h[x],k),null!==A&&(a&&null!==A.alternate&&r.delete(null===A.key?x:A.key),g=f(A,g,x),null===m?l=A:m.sibling=A,m=A);a&&r.forEach(function(a){return b(e,a)});return l}function ta(e,g,h,k){var l=Ua(h);if("function"!==typeof l)throw Error(u(150));h=l.call(h);
if(null==h)throw Error(u(151));for(var m=l=null,r=g,x=g=0,A=null,p=h.next();null!==r&&!p.done;x++,p=h.next()){r.index>x?(A=r,r=null):A=r.sibling;var z=y(e,r,p.value,k);if(null===z){null===r&&(r=A);break}a&&r&&null===z.alternate&&b(e,r);g=f(z,g,x);null===m?l=z:m.sibling=z;m=z;r=A}if(p.done)return c(e,r),l;if(null===r){for(;!p.done;x++,p=h.next())p=C(e,p.value,k),null!==p&&(g=f(p,g,x),null===m?l=p:m.sibling=p,m=p);return l}for(r=d(e,r);!p.done;x++,p=h.next())p=H(r,e,x,p.value,k),null!==p&&(a&&null!==
p.alternate&&r.delete(null===p.key?x:p.key),g=f(p,g,x),null===m?l=p:m.sibling=p,m=p);a&&r.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===Ia&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Ga:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Ia:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Ia?f.props.children:f.props,h);d.ref=Yg(a,k,f);d.return=a;a=d;break a}else{c(a,
k);break}else b(a,k);k=k.sibling}f.type===Ia?(d=eh(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=ch(f.type,f.key,f.props,null,a.mode,h),h.ref=Yg(a,d,f),h.return=a,a=h)}return g(a);case Ha:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=dh(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===
typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=bh(f,a.mode,h),d.return=a,a=d),g(a);if(Xg(f))return z(a,d,f,h);if(Ua(f))return ta(a,d,f,h);l&&Zg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||"Component"));}return c(a,d)}}var fh=$g(!0),gh=$g(!1),hh={},ih={current:hh},jh={current:hh},kh={current:hh};function lh(a){if(a===hh)throw Error(u(174));return a}
function mh(a,b){I(kh,b,a);I(jh,a,a);I(ih,hh,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Qb(null,"");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=Qb(b,c)}G(ih,a);I(ih,b,a)}function nh(a){G(ih,a);G(jh,a);G(kh,a)}function oh(a){lh(kh.current);var b=lh(ih.current);var c=Qb(b,a.type);b!==c&&(I(jh,a,a),I(ih,c,a))}function ph(a){jh.current===a&&(G(ih,a),G(jh,a))}var M={current:0};
function qh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===je||c.data===ke))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function rh(a,b){return{responder:a,props:b}}
var sh=Ea.ReactCurrentDispatcher,N=Ea.ReactCurrentBatchConfig,th=0,uh=null,O=null,vh=null,wh=null,P=null,xh=null,yh=0,zh=null,Ah=0,Bh=!1,Ch=null,Gh=0;function Q(){throw Error(u(321));}function Hh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!of(a[c],b[c]))return!1;return!0}
function Ih(a,b,c,d,e,f){th=f;uh=b;vh=null!==a?a.memoizedState:null;sh.current=null===vh?Jh:Kh;b=c(d,e);if(Bh){do Bh=!1,Gh+=1,vh=null!==a?a.memoizedState:null,xh=wh,zh=P=O=null,sh.current=Kh,b=c(d,e);while(Bh);Ch=null;Gh=0}sh.current=Lh;a=uh;a.memoizedState=wh;a.expirationTime=yh;a.updateQueue=zh;a.effectTag|=Ah;a=null!==O&&null!==O.next;th=0;xh=P=wh=vh=O=uh=null;yh=0;zh=null;Ah=0;if(a)throw Error(u(300));return b}
function Mh(){sh.current=Lh;th=0;xh=P=wh=vh=O=uh=null;yh=0;zh=null;Ah=0;Bh=!1;Ch=null;Gh=0}function Nh(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===P?wh=P=a:P=P.next=a;return P}function Oh(){if(null!==xh)P=xh,xh=P.next,O=vh,vh=null!==O?O.next:null;else{if(null===vh)throw Error(u(310));O=vh;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};P=null===P?wh=a:P.next=a;vh=O.next}return P}
function Ph(a,b){return"function"===typeof b?b(a):b}
function Qh(a){var b=Oh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;if(0<Gh){var d=c.dispatch;if(null!==Ch){var e=Ch.get(c);if(void 0!==e){Ch.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);of(f,b.memoizedState)||(wg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==
d){var h=e=null,k=d,l=!1;do{var m=k.expirationTime;m<th?(l||(l=!0,h=g,e=f),m>yh&&(yh=m,Jg(yh))):(Ig(m,k.suspenseConfig),f=k.eagerReducer===a?k.eagerState:a(f,k.action));g=k;k=k.next}while(null!==k&&k!==d);l||(h=g,e=f);of(f,b.memoizedState)||(wg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}
function Rh(a){var b=Nh();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,lastRenderedReducer:Ph,lastRenderedState:a};a=a.dispatch=Sh.bind(null,uh,a);return[b.memoizedState,a]}function Th(a){return Qh(Ph,a)}function Uh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===zh?(zh={lastEffect:null},zh.lastEffect=a.next=a):(b=zh.lastEffect,null===b?zh.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,zh.lastEffect=a));return a}
function Vh(a,b,c,d){var e=Nh();Ah|=a;e.memoizedState=Uh(b,c,void 0,void 0===d?null:d)}function Wh(a,b,c,d){var e=Oh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Hh(d,g.deps)){Uh(0,c,f,d);return}}Ah|=a;e.memoizedState=Uh(b,c,f,d)}function Xh(a,b){return Vh(516,192,a,b)}function Yh(a,b){return Wh(516,192,a,b)}
function Zh(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function $h(){}function ai(a,b){Nh().memoizedState=[a,void 0===b?null:b];return a}function bi(a,b){var c=Oh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Hh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}
function Sh(a,b,c){if(!(25>Gh))throw Error(u(301));var d=a.alternate;if(a===uh||null!==d&&d===uh)if(Bh=!0,a={expirationTime:th,suspenseConfig:null,action:c,eagerReducer:null,eagerState:null,next:null},null===Ch&&(Ch=new Map),c=Ch.get(b),void 0===c)Ch.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{var e=Pg(),f=Mg.suspense;e=Qg(e,a,f);f={expirationTime:e,suspenseConfig:f,action:c,eagerReducer:null,eagerState:null,next:null};var g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&
(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===d||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var k=b.lastRenderedState,l=d(k,c);f.eagerReducer=d;f.eagerState=l;if(of(l,k))return}catch(m){}finally{}Rg(a,e)}}
var Lh={readContext:xg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},Jh={readContext:xg,useCallback:ai,useContext:xg,useEffect:Xh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,36,Zh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Vh(4,36,a,b)},useMemo:function(a,b){var c=Nh();b=void 0===b?null:b;a=a();c.memoizedState=
[a,b];return a},useReducer:function(a,b,c){var d=Nh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Sh.bind(null,uh,a);return[d.memoizedState,a]},useRef:function(a){var b=Nh();a={current:a};return b.memoizedState=a},useState:Rh,useDebugValue:$h,useResponder:rh,useDeferredValue:function(a,b){var c=Rh(a),d=c[0],e=c[1];Xh(function(){q.unstable_next(function(){var c=N.suspense;N.suspense=void 0===b?null:b;try{e(a)}finally{N.suspense=
c}})},[a,b]);return d},useTransition:function(a){var b=Rh(!1),c=b[0],d=b[1];return[ai(function(b){d(!0);q.unstable_next(function(){var c=N.suspense;N.suspense=void 0===a?null:a;try{d(!1),b()}finally{N.suspense=c}})},[a,c]),c]}},Kh={readContext:xg,useCallback:bi,useContext:xg,useEffect:Yh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Wh(4,36,Zh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Wh(4,36,a,b)},useMemo:function(a,b){var c=Oh();b=void 0===b?
null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Hh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:Qh,useRef:function(){return Oh().memoizedState},useState:Th,useDebugValue:$h,useResponder:rh,useDeferredValue:function(a,b){var c=Th(a),d=c[0],e=c[1];Yh(function(){q.unstable_next(function(){var c=N.suspense;N.suspense=void 0===b?null:b;try{e(a)}finally{N.suspense=c}})},[a,b]);return d},useTransition:function(a){var b=Th(!1),c=b[0],d=b[1];return[bi(function(b){d(!0);q.unstable_next(function(){var c=
N.suspense;N.suspense=void 0===a?null:a;try{d(!1),b()}finally{N.suspense=c}})},[a,c]),c]}},ci=null,di=null,ei=!1;function fi(a,b){var c=gi(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}
function hi(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}
function ii(a){if(ei){var b=di;if(b){var c=b;if(!hi(a,b)){b=re(c.nextSibling);if(!b||!hi(a,b)){a.effectTag=a.effectTag&-1025|2;ei=!1;ci=a;return}fi(ci,c)}ci=a;di=re(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,ei=!1,ci=a}}function ji(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;ci=a}
function ki(a){if(a!==ci)return!1;if(!ei)return ji(a),ei=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!oe(b,a.memoizedProps))for(b=di;b;)fi(a,b),b=re(b.nextSibling);ji(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===ie){if(0===b){di=re(a.nextSibling);break a}b--}else c!==he&&c!==ke&&c!==je||b++}a=a.nextSibling}di=null}}else di=ci?re(a.stateNode.nextSibling):null;return!0}
function li(){di=ci=null;ei=!1}var mi=Ea.ReactCurrentOwner,wg=!1;function R(a,b,c,d){b.child=null===a?gh(b,null,c,d):fh(b,a.child,c,d)}function ni(a,b,c,d,e){c=c.render;var f=b.ref;vg(b,e);d=Ih(a,b,c,d,f,e);if(null!==a&&!wg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),oi(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}
function pi(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!qi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ri(a,b,g,d,e,f);a=ch(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:qf,c(e,d)&&a.ref===b.ref))return oi(a,b,f);b.effectTag|=1;a=ah(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}
function ri(a,b,c,d,e,f){return null!==a&&qf(a.memoizedProps,d)&&a.ref===b.ref&&(wg=!1,e<f)?oi(a,b,f):si(a,b,c,d,f)}function ti(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function si(a,b,c,d,e){var f=L(c)?Df:J.current;f=Ef(b,f);vg(b,e);c=Ih(a,b,c,d,f,e);if(null!==a&&!wg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),oi(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}
function ui(a,b,c,d,e){if(L(c)){var f=!0;Jf(b)}else f=!1;vg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Ug(b,c,d,e),Wg(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=xg(l):(l=L(c)?Df:J.current,l=Ef(b,l));var m=c.getDerivedStateFromProps,C="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;C||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&
"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Vg(b,g,d,l);yg=!1;var y=b.memoizedState;k=g.state=y;var H=b.updateQueue;null!==H&&(Hg(b,H,d,g,e),k=b.memoizedState);h!==d||y!==k||K.current||yg?("function"===typeof m&&(Og(b,c,m,d),k=b.memoizedState),(h=yg||Tg(b,c,h,d,y,k,l))?(C||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&
g.UNSAFE_componentWillMount()),"function"===typeof g.componentDidMount&&(b.effectTag|=4)):("function"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:mg(b.type,h),k=g.context,l=c.contextType,"object"===typeof l&&null!==l?l=xg(l):(l=L(c)?Df:J.current,l=Ef(b,l)),m=c.getDerivedStateFromProps,(C=
"function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Vg(b,g,d,l),yg=!1,k=b.memoizedState,y=g.state=k,H=b.updateQueue,null!==H&&(Hg(b,H,d,g,e),y=b.memoizedState),h!==d||k!==y||K.current||yg?("function"===typeof m&&(Og(b,c,m,d),y=b.memoizedState),(m=yg||Tg(b,c,h,d,k,y,l))?(C||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||
("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,y,l),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,y,l)),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=
d,b.memoizedState=y),g.props=d,g.state=y,g.context=l,d=m):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return vi(a,b,c,d,f,e)}
function vi(a,b,c,d,e,f){ti(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Kf(b,c,!1),oi(a,b,f);d=b.stateNode;mi.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=fh(b,a.child,null,f),b.child=fh(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function wi(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);mh(a,b.containerInfo)}
var xi={dehydrated:null,retryTime:0};
function yi(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1,b);if(null===a){void 0!==e.fallback&&ii(b);if(g){g=e.fallback;e=eh(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=eh(g,d,c,null);c.return=
b;e.sibling=c;b.memoizedState=xi;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=gh(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=ah(a,a.pendingProps,0);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=ah(d,e,d.expirationTime);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=xi;b.child=c;return d}c=fh(b,a.child,e.children,c);b.memoizedState=
null;return b.child=c}a=a.child;if(g){g=e.fallback;e=eh(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=eh(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=xi;b.child=e;return c}b.memoizedState=null;return b.child=fh(b,a,e.children,c)}
function zi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);ug(a.return,b)}function Ai(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}
function Bi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&zi(a,c);else if(19===a.tag)zi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d,b);if(0===(b.mode&2))b.memoizedState=
null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===qh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);Ai(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===qh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}Ai(b,!0,c,null,f,b.lastEffect);break;case "together":Ai(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}
function oi(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Jg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=ah(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=ah(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}function Ci(a){a.effectTag|=4}var Hi,Ii,Ji,Ki;
Hi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ii=function(){};
Ji=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;lh(ih.current);a=null;switch(c){case "input":f=Ab(g,f);d=Ab(g,d);a=[];break;case "option":f=Ib(g,f);d=Ib(g,d);a=[];break;case "select":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case "textarea":f=Kb(g,f);d=Kb(g,d);a=[];break;default:"function"!==typeof f.onClick&&"function"===typeof d.onClick&&(g.onclick=ae)}Yd(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if("style"===
h)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]="");else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(ia.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if("style"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]="");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),
c[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else"dangerouslySetInnerHTML"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,""+l)):"children"===h?g===l||"string"!==typeof l&&"number"!==typeof l||(a=a||[]).push(h,""+l):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(ia.hasOwnProperty(h)?(null!=l&&$d(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push("style",c);e=a;(b.updateQueue=e)&&Ci(b)}};Ki=function(a,b,c,d){c!==d&&Ci(b)};
function Li(a,b){switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}
function Mi(a){switch(a.tag){case 1:L(a.type)&&Ff(a);var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:nh(a);Gf(a);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return ph(a),null;case 13:return G(M,a),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return G(M,a),null;case 4:return nh(a),null;case 10:return tg(a),null;default:return null}}function Ni(a,b){return{value:a,source:b,stack:Xa(b)}}
var Oi="function"===typeof WeakSet?WeakSet:Set;function Pi(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=Xa(c));null!==c&&Wa(c.type);b=b.value;null!==a&&1===a.tag&&Wa(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Qi(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ri(a,c)}}function Si(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Ri(a,c)}else b.current=null}
function Ti(a,b){switch(b.tag){case 0:case 11:case 15:Ui(2,0,b);break;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:mg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break;case 3:case 5:case 6:case 4:case 17:break;default:throw Error(u(163));}}
function Ui(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if(0!==(d.tag&a)){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}0!==(d.tag&b)&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}
function Vi(a,b,c){"function"===typeof Wi&&Wi(b);switch(b.tag){case 0:case 11:case 14:case 15:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;fg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ri(g,h)}}a=a.next}while(a!==d)})}break;case 1:Si(b);c=b.stateNode;"function"===typeof c.componentWillUnmount&&Qi(b,c);break;case 5:Si(b);break;case 4:Xi(a,b,c)}}
function Yi(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;null!==b&&Yi(b)}function Zi(a){return 5===a.tag||3===a.tag||4===a.tag}
function $i(a){a:{for(var b=a.return;null!==b;){if(Zi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Tb(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Zi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;
if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){var f=5===e.tag||6===e.tag;if(f){var g=f?e.stateNode:e.stateNode.instance;if(c)if(d){f=b;var h=g;g=c;8===f.nodeType?f.parentNode.insertBefore(h,g):f.insertBefore(h,g)}else b.insertBefore(g,c);else d?(h=b,8===h.nodeType?(f=h.parentNode,f.insertBefore(g,h)):(f=h,f.appendChild(g)),h=h._reactRootContainer,null!==h&&void 0!==h||null!==f.onclick||(f.onclick=ae)):b.appendChild(g)}else if(4!==
e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}
function Xi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Vi(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=
f,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Vi(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}
function aj(a,b){switch(b.tag){case 0:case 11:case 14:case 15:Ui(4,8,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[ve]=d;"input"===a&&"radio"===d.type&&null!=d.name&&Cb(c,d);Zd(a,e);b=Zd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];"style"===g?Wd(c,h):"dangerouslySetInnerHTML"===g?Sb(c,h):"children"===g?Tb(c,h):vb(c,g,h,b)}switch(a){case "input":Eb(c,d);break;case "textarea":Mb(c,
d);break;case "select":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Jb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Jb(c,!!d.multiple,d.defaultValue,!0):Jb(c,!!d.multiple,d.multiple?[]:"",!1))}}}break;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;break;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Lc(b.containerInfo));break;case 12:break;case 13:c=b;null===b.memoizedState?d=!1:(d=!0,c=b.child,bj=cg());
if(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null,f.style.display=Vd("display",e));else if(6===a.tag)a.stateNode.nodeValue=d?"":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=f;continue}else if(null!==a.child){a.child.return=
a;a=a.child;continue}if(a===c)break a;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}cj(b);break;case 19:cj(b);break;case 17:break;case 20:break;case 21:break;default:throw Error(u(163));}}function cj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Oi);b.forEach(function(b){var d=dj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}var ej="function"===typeof WeakMap?WeakMap:Map;
function fj(a,b,c){c=Bg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){gj||(gj=!0,hj=d);Pi(a,b)};return c}
function ij(a,b,c){c=Bg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){Pi(a,b);return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===jj?jj=new Set([this]):jj.add(this),Pi(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}
var kj=Math.ceil,lj=Ea.ReactCurrentDispatcher,mj=Ea.ReactCurrentOwner,S=0,nj=8,oj=16,pj=32,qj=0,rj=1,sj=2,tj=3,uj=4,vj=5,T=S,U=null,V=null,W=0,X=qj,wj=null,xj=1073741823,yj=1073741823,zj=null,Aj=0,Bj=!1,bj=0,Cj=500,Y=null,gj=!1,hj=null,jj=null,Dj=!1,Ej=null,Fj=90,Gj=null,Hj=0,Ij=null,Jj=0;function Pg(){return(T&(oj|pj))!==S?1073741821-(cg()/10|0):0!==Jj?Jj:Jj=1073741821-(cg()/10|0)}
function Qg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=dg();if(0===(b&4))return 99===d?1073741823:1073741822;if((T&oj)!==S)return W;if(null!==c)a=lg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=lg(a,150,100);break;case 97:case 96:a=lg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==U&&a===W&&--a;return a}
function Rg(a,b){if(50<Hj)throw Hj=0,Ij=null,Error(u(185));a=Kj(a,b);if(null!==a){var c=dg();1073741823===b?(T&nj)!==S&&(T&(oj|pj))===S?Lj(a):(Z(a),T===S&&jg()):Z(a);(T&4)===S||98!==c&&99!==c||(null===Gj?Gj=new Map([[a,b]]):(c=Gj.get(a),(void 0===c||c>b)&&Gj.set(a,b)))}}
function Kj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(U===e&&(Jg(b),X===uj&&Mj(e,W)),Nj(e,b));return e}
function Oj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Pj(a,b))return b;b=a.lastPingedTime;a=a.nextKnownPendingLevel;return b>a?b:a}
function Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=hg(Lj.bind(null,a));else{var b=Oj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Pg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Xf&&Nf(c)}a.callbackExpirationTime=
b;a.callbackPriority=d;b=1073741823===b?hg(Lj.bind(null,a)):gg(d,Qj.bind(null,a),{timeout:10*(1073741821-b)-cg()});a.callbackNode=b}}}
function Qj(a,b){Jj=0;if(b)return b=Pg(),Rj(a,b),Z(a),null;var c=Oj(a);if(0!==c){b=a.callbackNode;if((T&(oj|pj))!==S)throw Error(u(327));Sj();a===U&&c===W||Tj(a,c);if(null!==V){var d=T;T|=oj;var e=Uj(a);do try{Vj();break}catch(h){Wj(a,h)}while(1);rg();T=d;lj.current=e;if(X===rj)throw b=wj,Tj(a,c),Mj(a,c),Z(a),b;if(null===V)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=X,U=null,d){case qj:case rj:throw Error(u(345));case sj:Rj(a,2<c?2:c);break;case tj:Mj(a,c);d=a.lastSuspendedTime;
c===d&&(a.nextKnownPendingLevel=Xj(e));if(1073741823===xj&&(e=bj+Cj-cg(),10<e)){if(Bj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Tj(a,c);break}}f=Oj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=pe(Yj.bind(null,a),e);break}Yj(a);break;case uj:Mj(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Xj(e));if(Bj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Tj(a,c);break}e=Oj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=
d;break}1073741823!==yj?d=10*(1073741821-yj)-cg():1073741823===xj?d=0:(d=10*(1073741821-xj)-5E3,e=cg(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*kj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=pe(Yj.bind(null,a),d);break}Yj(a);break;case vj:if(1073741823!==xj&&null!==zj){f=xj;var g=zj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=cg()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){Mj(a,c);a.timeoutHandle=
pe(Yj.bind(null,a),d);break}}Yj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Qj.bind(null,a)}}return null}
function Lj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if(a.finishedExpirationTime===b)Yj(a);else{if((T&(oj|pj))!==S)throw Error(u(327));Sj();a===U&&b===W||Tj(a,b);if(null!==V){var c=T;T|=oj;var d=Uj(a);do try{Zj();break}catch(e){Wj(a,e)}while(1);rg();T=c;lj.current=d;if(X===rj)throw c=wj,Tj(a,b),Mj(a,b),Z(a),c;if(null!==V)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;U=null;Yj(a);Z(a)}}return null}
function ak(){if(null!==Gj){var a=Gj;Gj=null;a.forEach(function(a,c){Rj(c,a);Z(c)});jg()}}function bk(a,b){var c=T;T|=1;try{return a(b)}finally{T=c,T===S&&jg()}}function ck(a,b){var c=T;T&=-2;T|=nj;try{return a(b)}finally{T=c,T===S&&jg()}}
function Tj(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,qe(c));if(null!==V)for(c=V.return;null!==c;){var d=c;switch(d.tag){case 1:var e=d.type.childContextTypes;null!==e&&void 0!==e&&Ff(d);break;case 3:nh(d);Gf(d);break;case 5:ph(d);break;case 4:nh(d);break;case 13:G(M,d);break;case 19:G(M,d);break;case 10:tg(d)}c=c.return}U=a;V=ah(a.current,null,b);W=b;X=qj;wj=null;yj=xj=1073741823;zj=null;Aj=0;Bj=!1}
function Wj(a,b){do{try{rg();Mh();if(null===V||null===V.return)return X=rj,wj=b,null;a:{var c=a,d=V.return,e=V,f=b;b=W;e.effectTag|=2048;e.firstEffect=e.lastEffect=null;if(null!==f&&"object"===typeof f&&"function"===typeof f.then){var g=f,h=0!==(M.current&1),k=d;do{var l;if(l=13===k.tag){var m=k.memoizedState;if(null!==m)l=null!==m.dehydrated?!0:!1;else{var C=k.memoizedProps;l=void 0===C.fallback?!1:!0!==C.unstable_avoidThisFallback?!0:h?!1:!0}}if(l){var y=k.updateQueue;if(null===y){var H=new Set;
H.add(g);k.updateQueue=H}else y.add(g);if(0===(k.mode&2)){k.effectTag|=64;e.effectTag&=-2981;if(1===e.tag)if(null===e.alternate)e.tag=17;else{var z=Bg(1073741823,null);z.tag=2;Dg(e,z)}e.expirationTime=1073741823;break a}f=void 0;e=b;var ta=c.pingCache;null===ta?(ta=c.pingCache=new ej,f=new Set,ta.set(g,f)):(f=ta.get(g),void 0===f&&(f=new Set,ta.set(g,f)));if(!f.has(e)){f.add(e);var r=dk.bind(null,c,g,e);g.then(r,r)}k.effectTag|=4096;k.expirationTime=b;break a}k=k.return}while(null!==k);f=Error((Wa(e.type)||
"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+Xa(e))}X!==vj&&(X=sj);f=Ni(f,e);k=d;do{switch(k.tag){case 3:g=f;k.effectTag|=4096;k.expirationTime=b;var x=fj(k,g,b);Eg(k,x);break a;case 1:g=f;var A=k.type,p=k.stateNode;if(0===(k.effectTag&64)&&("function"===typeof A.getDerivedStateFromError||null!==p&&"function"===typeof p.componentDidCatch&&
(null===jj||!jj.has(p)))){k.effectTag|=4096;k.expirationTime=b;var t=ij(k,g,b);Eg(k,t);break a}}k=k.return}while(null!==k)}V=ek(V)}catch(v){b=v;continue}break}while(1)}function Uj(){var a=lj.current;lj.current=Lh;return null===a?Lh:a}function Ig(a,b){a<xj&&2<a&&(xj=a);null!==b&&a<yj&&2<a&&(yj=a,zj=b)}function Jg(a){a>Aj&&(Aj=a)}function Zj(){for(;null!==V;)V=fk(V)}function Vj(){for(;null!==V&&!Of();)V=fk(V)}
function fk(a){var b=gk(a.alternate,a,W);a.memoizedProps=a.pendingProps;null===b&&(b=ek(a));mj.current=null;return b}
function ek(a){V=a;do{var b=V.alternate;a=V.return;if(0===(V.effectTag&2048)){a:{var c=b;b=V;var d=W;var e=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:L(b.type)&&Ff(b);break;case 3:nh(b);Gf(b);e=b.stateNode;e.pendingContext&&(e.context=e.pendingContext,e.pendingContext=null);(null===c||null===c.child)&&ki(b)&&Ci(b);Ii(b);break;case 5:ph(b);d=lh(kh.current);var f=b.type;if(null!==c&&null!=b.stateNode)Ji(c,b,f,e,d),c.ref!==b.ref&&(b.effectTag|=128);else if(e){var g=
lh(ih.current);if(ki(b)){e=b;var h=e.stateNode;c=e.type;var k=e.memoizedProps,l=d;h[ue]=e;h[ve]=k;f=void 0;d=h;switch(c){case "iframe":case "object":case "embed":F("load",d);break;case "video":case "audio":for(h=0;h<cc.length;h++)F(cc[h],d);break;case "source":F("error",d);break;case "img":case "image":case "link":F("error",d);F("load",d);break;case "form":F("reset",d);F("submit",d);break;case "details":F("toggle",d);break;case "input":Bb(d,k);F("invalid",d);$d(l,"onChange");break;case "select":d._wrapperState=
{wasMultiple:!!k.multiple};F("invalid",d);$d(l,"onChange");break;case "textarea":Lb(d,k),F("invalid",d),$d(l,"onChange")}Yd(c,k);h=null;for(f in k)k.hasOwnProperty(f)&&(g=k[f],"children"===f?"string"===typeof g?d.textContent!==g&&(h=["children",g]):"number"===typeof g&&d.textContent!==""+g&&(h=["children",""+g]):ia.hasOwnProperty(f)&&null!=g&&$d(l,f));switch(c){case "input":yb(d);Gb(d,k,!0);break;case "textarea":yb(d);Nb(d,k);break;case "select":case "option":break;default:"function"===typeof k.onClick&&
(d.onclick=ae)}f=h;e.updateQueue=f;e=null!==f?!0:!1;e&&Ci(b)}else{c=b;l=f;k=e;h=9===d.nodeType?d:d.ownerDocument;g===Ob.html&&(g=Pb(l));g===Ob.html?"script"===l?(k=h.createElement("div"),k.innerHTML="<script>\x3c/script>",h=k.removeChild(k.firstChild)):"string"===typeof k.is?h=h.createElement(l,{is:k.is}):(h=h.createElement(l),"select"===l&&(l=h,k.multiple?l.multiple=!0:k.size&&(l.size=k.size))):h=h.createElementNS(g,l);k=h;k[ue]=c;k[ve]=e;Hi(k,b,!1,!1);b.stateNode=k;l=f;c=e;var m=d,C=Zd(l,c);switch(l){case "iframe":case "object":case "embed":F("load",
k);d=c;break;case "video":case "audio":for(d=0;d<cc.length;d++)F(cc[d],k);d=c;break;case "source":F("error",k);d=c;break;case "img":case "image":case "link":F("error",k);F("load",k);d=c;break;case "form":F("reset",k);F("submit",k);d=c;break;case "details":F("toggle",k);d=c;break;case "input":Bb(k,c);d=Ab(k,c);F("invalid",k);$d(m,"onChange");break;case "option":d=Ib(k,c);break;case "select":k._wrapperState={wasMultiple:!!c.multiple};d=n({},c,{value:void 0});F("invalid",k);$d(m,"onChange");break;case "textarea":Lb(k,
c);d=Kb(k,c);F("invalid",k);$d(m,"onChange");break;default:d=c}Yd(l,d);h=void 0;g=l;var y=k,H=d;for(h in H)if(H.hasOwnProperty(h)){var z=H[h];"style"===h?Wd(y,z):"dangerouslySetInnerHTML"===h?(z=z?z.__html:void 0,null!=z&&Sb(y,z)):"children"===h?"string"===typeof z?("textarea"!==g||""!==z)&&Tb(y,z):"number"===typeof z&&Tb(y,""+z):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(ia.hasOwnProperty(h)?null!=z&&$d(m,h):null!=z&&vb(y,h,z,C))}switch(l){case "input":yb(k);
Gb(k,c,!1);break;case "textarea":yb(k);Nb(k,c);break;case "option":null!=c.value&&k.setAttribute("value",""+ub(c.value));break;case "select":d=k;d.multiple=!!c.multiple;k=c.value;null!=k?Jb(d,!!c.multiple,k,!1):null!=c.defaultValue&&Jb(d,!!c.multiple,c.defaultValue,!0);break;default:"function"===typeof d.onClick&&(k.onclick=ae)}(e=ne(f,e))&&Ci(b)}null!==b.ref&&(b.effectTag|=128)}else if(null===b.stateNode)throw Error(u(166));break;case 6:if(c&&null!=b.stateNode)Ki(c,b,c.memoizedProps,e);else{if("string"!==
typeof e&&null===b.stateNode)throw Error(u(166));d=lh(kh.current);lh(ih.current);ki(b)?(e=b,f=e.stateNode,d=e.memoizedProps,f[ue]=e,(e=f.nodeValue!==d)&&Ci(b)):(f=b,e=(9===d.nodeType?d:d.ownerDocument).createTextNode(e),e[ue]=f,b.stateNode=e)}break;case 11:break;case 13:G(M,b);e=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=d;break a}e=null!==e;f=!1;null===c?void 0!==b.memoizedProps.fallback&&ki(b):(d=c.memoizedState,f=null!==d,e||null===d||(d=c.child.sibling,null!==d&&(k=b.firstEffect,
null!==k?(b.firstEffect=d,d.nextEffect=k):(b.firstEffect=b.lastEffect=d,d.nextEffect=null),d.effectTag=8)));if(e&&!f&&0!==(b.mode&2))if(null===c&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))X===qj&&(X=tj);else{if(X===qj||X===tj)X=uj;0!==Aj&&null!==U&&(Mj(U,W),Nj(U,Aj))}if(e||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:nh(b);Ii(b);break;case 10:tg(b);break;case 9:break;case 14:break;case 17:L(b.type)&&Ff(b);break;case 19:G(M,b);e=b.memoizedState;if(null===
e)break;f=0!==(b.effectTag&64);k=e.rendering;if(null===k)if(f)Li(e,!1);else{if(X!==qj||null!==c&&0!==(c.effectTag&64))for(c=b.child;null!==c;){k=qh(c);if(null!==k){b.effectTag|=64;Li(e,!1);f=k.updateQueue;null!==f&&(b.updateQueue=f,b.effectTag|=4);null===e.lastEffect&&(b.firstEffect=null);b.lastEffect=e.lastEffect;e=d;for(f=b.child;null!==f;)d=f,c=e,d.effectTag&=2,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null,k=d.alternate,null===k?(d.childExpirationTime=0,d.expirationTime=c,d.child=null,
d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null):(d.childExpirationTime=k.childExpirationTime,d.expirationTime=k.expirationTime,d.child=k.child,d.memoizedProps=k.memoizedProps,d.memoizedState=k.memoizedState,d.updateQueue=k.updateQueue,c=k.dependencies,d.dependencies=null===c?null:{expirationTime:c.expirationTime,firstContext:c.firstContext,responders:c.responders}),f=f.sibling;I(M,M.current&1|2,b);b=b.child;break a}c=c.sibling}}else{if(!f)if(c=qh(k),null!==c){if(b.effectTag|=
64,f=!0,d=c.updateQueue,null!==d&&(b.updateQueue=d,b.effectTag|=4),Li(e,!0),null===e.tail&&"hidden"===e.tailMode&&!k.alternate){b=b.lastEffect=e.lastEffect;null!==b&&(b.nextEffect=null);break}}else cg()>e.tailExpiration&&1<d&&(b.effectTag|=64,f=!0,Li(e,!1),b.expirationTime=b.childExpirationTime=d-1);e.isBackwards?(k.sibling=b.child,b.child=k):(d=e.last,null!==d?d.sibling=k:b.child=k,e.last=k)}if(null!==e.tail){0===e.tailExpiration&&(e.tailExpiration=cg()+500);d=e.tail;e.rendering=d;e.tail=d.sibling;
e.lastEffect=b.lastEffect;d.sibling=null;e=M.current;e=f?e&1|2:e&1;I(M,e,b);b=d;break a}break;case 20:break;case 21:break;default:throw Error(u(156,b.tag));}b=null}e=V;if(1===W||1!==e.childExpirationTime){f=0;for(d=e.child;null!==d;)c=d.expirationTime,k=d.childExpirationTime,c>f&&(f=c),k>f&&(f=k),d=d.sibling;e.childExpirationTime=f}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=V.firstEffect),null!==V.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=
V.firstEffect),a.lastEffect=V.lastEffect),1<V.effectTag&&(null!==a.lastEffect?a.lastEffect.nextEffect=V:a.firstEffect=V,a.lastEffect=V))}else{b=Mi(V,W);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=V.sibling;if(null!==b)return b;V=a}while(null!==V);X===qj&&(X=vj);return null}function Xj(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Yj(a){var b=dg();fg(99,ik.bind(null,a,b));return null}
function ik(a,b){do Sj();while(null!==Ej);if((T&(oj|pj))!==S)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Xj(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=
d-1);d<=a.lastPingedTime&&(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===U&&(V=U=null,W=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=T;T|=pj;mj.current=null;le=Ld;var g=fe();if(ge(g)){if("selectionStart"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,
m=k.focusNode;k=k.focusOffset;try{h.nodeType,m.nodeType}catch(Db){h=null;break a}var C=0,y=-1,H=-1,z=0,ta=0,r=g,x=null;b:for(;;){for(var A;;){r!==h||0!==l&&3!==r.nodeType||(y=C+l);r!==m||0!==k&&3!==r.nodeType||(H=C+k);3===r.nodeType&&(C+=r.nodeValue.length);if(null===(A=r.firstChild))break;x=r;r=A}for(;;){if(r===g)break b;x===h&&++z===l&&(y=C);x===m&&++ta===k&&(H=C);if(null!==(A=r.nextSibling))break;r=x;x=r.parentNode}r=A}h=-1===y||-1===H?null:{start:y,end:H}}else h=null}h=h||{start:0,end:0}}else h=
null;me={focusedElem:g,selectionRange:h};Ld=!1;Y=e;do try{jk()}catch(Db){if(null===Y)throw Error(u(330));Ri(Y,Db);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var p=Y.effectTag;p&16&&Tb(Y.stateNode,"");if(p&128){var t=Y.alternate;if(null!==t){var v=t.ref;null!==v&&("function"===typeof v?v(null):v.current=null)}}switch(p&1038){case 2:$i(Y);Y.effectTag&=-3;break;case 6:$i(Y);Y.effectTag&=-3;aj(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=-1025;aj(Y.alternate,
Y);break;case 4:aj(Y.alternate,Y);break;case 8:l=Y,Xi(g,l,h),Yi(l)}Y=Y.nextEffect}}catch(Db){if(null===Y)throw Error(u(330));Ri(Y,Db);Y=Y.nextEffect}while(null!==Y);v=me;t=fe();p=v.focusedElem;h=v.selectionRange;if(t!==p&&p&&p.ownerDocument&&ee(p.ownerDocument.documentElement,p)){null!==h&&ge(p)&&(t=h.start,v=h.end,void 0===v&&(v=t),"selectionStart"in p?(p.selectionStart=t,p.selectionEnd=Math.min(v,p.value.length)):(v=(t=p.ownerDocument||document)&&t.defaultView||window,v.getSelection&&(v=v.getSelection(),
l=p.textContent.length,g=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!v.extend&&g>h&&(l=h,h=g,g=l),l=de(p,g),m=de(p,h),l&&m&&(1!==v.rangeCount||v.anchorNode!==l.node||v.anchorOffset!==l.offset||v.focusNode!==m.node||v.focusOffset!==m.offset)&&(t=t.createRange(),t.setStart(l.node,l.offset),v.removeAllRanges(),g>h?(v.addRange(t),v.extend(m.node,m.offset)):(t.setEnd(m.node,m.offset),v.addRange(t))))));t=[];for(v=p;v=v.parentNode;)1===v.nodeType&&t.push({element:v,left:v.scrollLeft,top:v.scrollTop});
"function"===typeof p.focus&&p.focus();for(p=0;p<t.length;p++)v=t[p],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}me=null;Ld=!!le;le=null;a.current=c;Y=e;do try{for(p=d;null!==Y;){var Dh=Y.effectTag;if(Dh&36){var dc=Y.alternate;t=Y;v=p;switch(t.tag){case 0:case 11:case 15:Ui(16,32,t);break;case 1:var fd=t.stateNode;if(t.effectTag&4)if(null===dc)fd.componentDidMount();else{var hk=t.elementType===t.type?dc.memoizedProps:mg(t.type,dc.memoizedProps);fd.componentDidUpdate(hk,dc.memoizedState,
fd.__reactInternalSnapshotBeforeUpdate)}var Eh=t.updateQueue;null!==Eh&&Kg(t,Eh,fd,v);break;case 3:var Fh=t.updateQueue;if(null!==Fh){g=null;if(null!==t.child)switch(t.child.tag){case 5:g=t.child.stateNode;break;case 1:g=t.child.stateNode}Kg(t,Fh,g,v)}break;case 5:var xk=t.stateNode;null===dc&&t.effectTag&4&&ne(t.type,t.memoizedProps)&&xk.focus();break;case 6:break;case 4:break;case 12:break;case 13:if(null===t.memoizedState){var Di=t.alternate;if(null!==Di){var Ei=Di.memoizedState;if(null!==Ei){var Fi=
Ei.dehydrated;null!==Fi&&Lc(Fi)}}}break;case 19:case 17:case 20:case 21:break;default:throw Error(u(163));}}if(Dh&128){t=void 0;var xd=Y.ref;if(null!==xd){var Gi=Y.stateNode;switch(Y.tag){case 5:t=Gi;break;default:t=Gi}"function"===typeof xd?xd(t):xd.current=t}}Y=Y.nextEffect}}catch(Db){if(null===Y)throw Error(u(330));Ri(Y,Db);Y=Y.nextEffect}while(null!==Y);Y=null;Yf();T=f}else a.current=c;if(Dj)Dj=!1,Ej=a,Fj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&
(jj=null);1073741823===b?a===Ij?Hj++:(Hj=0,Ij=a):Hj=0;"function"===typeof kk&&kk(c.stateNode,d);Z(a);if(gj)throw gj=!1,a=hj,hj=null,a;if((T&nj)!==S)return null;jg();return null}function jk(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Ti(Y.alternate,Y);0===(a&512)||Dj||(Dj=!0,gg(97,function(){Sj();return null}));Y=Y.nextEffect}}function Sj(){if(90!==Fj){var a=97<Fj?97:Fj;Fj=90;return fg(a,lk)}}
function lk(){if(null===Ej)return!1;var a=Ej;Ej=null;if((T&(oj|pj))!==S)throw Error(u(331));var b=T;T|=pj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:Ui(128,0,c),Ui(0,64,c)}}catch(d){if(null===a)throw Error(u(330));Ri(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}T=b;jg();return!0}function mk(a,b,c){b=Ni(c,b);b=fj(a,b,1073741823);Dg(a,b);a=Kj(a,1073741823);null!==a&&Z(a)}
function Ri(a,b){if(3===a.tag)mk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){mk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===jj||!jj.has(d))){a=Ni(b,a);a=ij(c,a,1073741823);Dg(c,a);c=Kj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}
function dk(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);U===a&&W===c?X===uj||X===tj&&1073741823===xj&&cg()-bj<Cj?Tj(a,W):Bj=!0:Pj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,a.finishedExpirationTime===c&&(a.finishedExpirationTime=0,a.finishedWork=null),Z(a)))}function dj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Pg(),b=Qg(b,a,null));a=Kj(a,b);null!==a&&Z(a)}var gk;
gk=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)wg=!0;else{if(d<c){wg=!1;switch(b.tag){case 3:wi(b);li();break;case 5:oh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Jf(b);break;case 4:mh(b,b.stateNode.containerInfo);break;case 10:sg(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return yi(a,b,c);I(M,M.current&
1,b);b=oi(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1,b);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return Bi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current,b);if(!d)return null}return oi(a,b,c)}wg=!1}}else wg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Ef(b,J.current);vg(b,c);e=Ih(null,b,d,a,e,c);b.effectTag|=1;if("object"===
typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;Mh();if(L(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;"function"===typeof g&&Og(b,d,g,a);e.updater=Sg;b.stateNode=e;e._reactInternalFiber=b;Wg(b,d,a,c);b=vi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;Va(e);if(1!==e._status)throw e._result;
e=e._result;b.type=e;f=b.tag=nk(e);a=mg(e,a);switch(f){case 0:b=si(null,b,e,a,c);break;case 1:b=ui(null,b,e,a,c);break;case 11:b=ni(null,b,e,a,c);break;case 14:b=pi(null,b,e,mg(e.type,a),d,c);break;default:throw Error(u(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),si(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),ui(a,b,d,e,c);case 3:wi(b);d=b.updateQueue;if(null===d)throw Error(u(282));e=b.memoizedState;e=null!==e?e.element:
null;Hg(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)li(),b=oi(a,b,c);else{if(e=b.stateNode.hydrate)di=re(b.stateNode.containerInfo.firstChild),ci=b,e=ei=!0;if(e)for(c=gh(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),li();b=b.child}return b;case 5:return oh(b),null===a&&ii(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,oe(d,e)?g=null:null!==f&&oe(d,f)&&(b.effectTag|=16),ti(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=
b.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&ii(b),null;case 13:return yi(a,b,c);case 4:return mh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=fh(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),ni(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,b,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;
e=b.pendingProps;g=b.memoizedProps;f=e.value;sg(b,f);if(null!==g){var h=g.value;f=of(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!K.current){b=oi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=Bg(c,null),l.tag=2,Dg(h,l));h.expirationTime<c&&(h.expirationTime=
c);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);ug(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,vg(b,c),e=xg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;
case 14:return e=b.type,f=mg(e,b.pendingProps),f=mg(e.type,f),pi(a,b,e,f,d,c);case 15:return ri(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Jf(b)):a=!1,vg(b,c),Ug(b,d,e,c),Wg(b,d,e,c),vi(null,b,d,!0,a,c);case 19:return Bi(a,b,c)}throw Error(u(156,b.tag));};var kk=null,Wi=null;
function ok(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);kk=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Wi=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}
function pk(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function gi(a,b,c,d){return new pk(a,b,c,d)}
function qi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function nk(a){if("function"===typeof a)return qi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Oa)return 11;if(a===Ra)return 14}return 2}
function ah(a,b){var c=a.alternate;null===c?(c=gi(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,
firstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
function ch(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)qi(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case Ia:return eh(c.children,e,f,b);case Na:g=8;e|=7;break;case Ja:g=8;e|=1;break;case Ka:return a=gi(12,c,b,e|8),a.elementType=Ka,a.type=Ka,a.expirationTime=f,a;case Pa:return a=gi(13,c,b,e),a.type=Pa,a.elementType=Pa,a.expirationTime=f,a;case Qa:return a=gi(19,c,b,e),a.elementType=Qa,a.expirationTime=f,a;default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case La:g=
10;break a;case Ma:g=9;break a;case Oa:g=11;break a;case Ra:g=14;break a;case Sa:g=16;d=null;break a}throw Error(u(130,null==a?a:typeof a,""));}b=gi(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function eh(a,b,c,d){a=gi(7,a,d,b);a.expirationTime=c;return a}function bh(a,b,c){a=gi(6,a,null,b);a.expirationTime=c;return a}
function dh(a,b,c){b=gi(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function qk(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}
function Pj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function Mj(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}
function Nj(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Rj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}
function rk(a,b,c,d){var e=b.current,f=Pg(),g=Mg.suspense;f=Qg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(ec(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=Bg(f,g);b.payload={element:a};d=void 0===
d?null:d;null!==d&&(b.callback=d);Dg(e,b);Rg(e,f);return f}function sk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function tk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function uk(a,b){tk(a,b);(a=a.alternate)&&tk(a,b)}
function vk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new qk(a,b,c),e=gi(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;a[we]=d.current;c&&0!==b&&wc(9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}vk.prototype.render=function(a,b){rk(a,this._internalRoot,null,void 0===b?null:b)};vk.prototype.unmount=function(a){var b=this._internalRoot,c=void 0===a?null:a,d=b.containerInfo;rk(null,b,null,function(){d[we]=null;null!==c&&c()})};
function wk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function yk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new vk(a,0,b?{hydrate:!0}:void 0)}
function zk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if("function"===typeof e){var h=e;e=function(){var a=sk(g);h.call(a)}}rk(b,g,a,e)}else{f=c._reactRootContainer=yk(c,d);g=f._internalRoot;if("function"===typeof e){var k=e;e=function(){var a=sk(g);k.call(a)}}ck(function(){rk(b,g,a,e)})}return sk(g)}function Ak(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ha,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
jc=function(a){if(13===a.tag){var b=lg(Pg(),150,100);Rg(a,b);uk(a,b)}};kc=function(a){if(13===a.tag){Pg();var b=kg++;Rg(a,b);uk(a,b)}};lc=function(a){if(13===a.tag){var b=Pg();b=Qg(b,a,null);Rg(a,b);uk(a,b)}};
Za=function(a,b,c){switch(b){case "input":Eb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=ye(d);if(!e)throw Error(u(90));zb(d);Eb(d,e)}}}break;case "textarea":Mb(a,c);break;case "select":b=c.value,null!=b&&Jb(a,!!c.multiple,b,!1)}};eb=bk;
fb=function(a,b,c,d){var e=T;T|=4;try{return fg(98,a.bind(null,b,c,d))}finally{T=e,T===S&&jg()}};gb=function(){(T&(1|oj|pj))===S&&(ak(),Sj())};hb=function(a,b){var c=T;T|=2;try{return a(b)}finally{T=c,T===S&&jg()}};function Bk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!wk(b))throw Error(u(200));return Ak(a,b,null,c)}
var Ck={createPortal:Bk,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if("function"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=ic(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){if(!wk(b))throw Error(u(200));return zk(null,a,b,!0,c)},render:function(a,b,c){if(!wk(b))throw Error(u(200));return zk(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){if(!wk(c))throw Error(u(200));
if(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return zk(a,b,c,!1,d)},unmountComponentAtNode:function(a){if(!wk(a))throw Error(u(40));return a._reactRootContainer?(ck(function(){zk(null,null,a,!1,function(){a._reactRootContainer=null;a[we]=null})}),!0):!1},unstable_createPortal:function(){return Bk.apply(void 0,arguments)},unstable_batchedUpdates:bk,flushSync:function(a,b){if((T&(oj|pj))!==S)throw Error(u(187));var c=T;T|=1;try{return fg(99,a.bind(null,b))}finally{T=c,jg()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Cc,
xe,ye,Ca.injectEventPluginsByName,fa,Sc,function(a){ya(a,Rc)},cb,db,Pd,Ba,Sj,{current:!1}]}};
(function(a){var b=a.findFiberByHostInstance;return ok(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Ea.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=ic(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:Fc,bundleType:0,version:"16.12.0",
rendererPackageName:"react-dom"});var Dk={default:Ck},Ek=Dk&&Ck||Dk;module.exports=Ek.default||Ek;


/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.12.0
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE);
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
var lowPriorityWarningWithoutStack = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });

    if (typeof console !== 'undefined') {
      console.warn(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarningWithoutStack = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(void 0, [format].concat(args));
    }
  };
}

var lowPriorityWarningWithoutStack$1 = lowPriorityWarningWithoutStack;

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true;
      lowPriorityWarningWithoutStack$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.typeOf = typeOf;
exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isValidElementType = isValidElementType;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
  })();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.12.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

Object.defineProperty(exports,"__esModule",{value:!0});
var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?Symbol.for("react.suspense_list"):
60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.fundamental"):60117,w=b?Symbol.for("react.responder"):60118,x=b?Symbol.for("react.scope"):60119;function y(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function z(a){return y(a)===m}
exports.typeOf=y;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;
exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===v||a.$$typeof===w||a.$$typeof===x)};exports.isAsyncMode=function(a){return z(a)||y(a)===l};exports.isConcurrentMode=z;exports.isContextConsumer=function(a){return y(a)===k};exports.isContextProvider=function(a){return y(a)===h};
exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return y(a)===n};exports.isFragment=function(a){return y(a)===e};exports.isLazy=function(a){return y(a)===t};exports.isMemo=function(a){return y(a)===r};exports.isPortal=function(a){return y(a)===d};exports.isProfiler=function(a){return y(a)===g};exports.isStrictMode=function(a){return y(a)===f};exports.isSuspense=function(a){return y(a)===p};


/***/ }),
/* 371 */
/***/ (function(module, exports) {

module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};


/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

var isarray = __webpack_require__(371)

/**
 * Expose `pathToRegexp`.
 */
module.exports = pathToRegexp
module.exports.parse = parse
module.exports.compile = compile
module.exports.tokensToFunction = tokensToFunction
module.exports.tokensToRegExp = tokensToRegExp

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g')

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = []
  var key = 0
  var index = 0
  var path = ''
  var defaultDelimiter = options && options.delimiter || '/'
  var res

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0]
    var escaped = res[1]
    var offset = res.index
    path += str.slice(index, offset)
    index = offset + m.length

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1]
      continue
    }

    var next = str[index]
    var prefix = res[2]
    var name = res[3]
    var capture = res[4]
    var group = res[5]
    var modifier = res[6]
    var asterisk = res[7]

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path)
      path = ''
    }

    var partial = prefix != null && next != null && next !== prefix
    var repeat = modifier === '+' || modifier === '*'
    var optional = modifier === '?' || modifier === '*'
    var delimiter = res[2] || defaultDelimiter
    var pattern = capture || group

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
    })
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index)
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path)
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options), options)
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens, options) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length)

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))
    }
  }

  return function (obj, opts) {
    var path = ''
    var data = obj || {}
    var options = opts || {}
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i]

      if (typeof token === 'string') {
        path += token

        continue
      }

      var value = data[token.name]
      var segment

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j])

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value)

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options && options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g)

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      })
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = []

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source)
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  var strict = options.strict
  var end = options.end !== false
  var route = ''

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i]

    if (typeof token === 'string') {
      route += escapeString(token)
    } else {
      var prefix = escapeString(token.prefix)
      var capture = '(?:' + token.pattern + ')'

      keys.push(token)

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*'
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?'
        } else {
          capture = prefix + '(' + capture + ')?'
        }
      } else {
        capture = prefix + '(' + capture + ')'
      }

      route += capture
    }
  }

  var delimiter = escapeString(options.delimiter || '/')
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
  }

  if (end) {
    route += '$'
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (isarray(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}


/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.12.0
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var _assign = __webpack_require__(39);
var checkPropTypes = __webpack_require__(85);

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.12.0';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?


var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

// Do not require this module directly! Use normal `invariant` calls with
// template literal strings. The messages will be replaced with error codes
// during build.

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
var lowPriorityWarningWithoutStack = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });

    if (typeof console !== 'undefined') {
      console.warn(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarningWithoutStack = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(void 0, [format].concat(args));
    }
  };
}

var lowPriorityWarningWithoutStack$1 = lowPriorityWarningWithoutStack;

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
var warningWithoutStack = function () {};

{
  warningWithoutStack = function (condition, format) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (format === undefined) {
      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (args.length > 8) {
      // Check before the condition to catch violations early.
      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
    }

    if (condition) {
      return;
    }

    if (typeof console !== 'undefined') {
      var argsWithFormat = args.map(function (item) {
        return '' + item;
      });
      argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
      // breaks IE9: https://github.com/facebook/react/issues/13610

      Function.prototype.apply.call(console.error, console, argsWithFormat);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      throw new Error(message);
    } catch (x) {}
  };
}

var warningWithoutStack$1 = warningWithoutStack;

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + "." + callerName;

    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }

    warningWithoutStack$1(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}
/**
 * This is the abstract API for an update queue.
 */


var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var emptyObject = {};

{
  Object.freeze(emptyObject);
}
/**
 * Base class helpers for the updating state of a component.
 */


function Component(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
  // renderer.

  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};
/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */

Component.prototype.setState = function (partialState, callback) {
  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {
    {
      throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    }
  }

  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};
/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */


Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};
/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */


{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };

  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        lowPriorityWarningWithoutStack$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
        return undefined;
      }
    });
  };

  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}

ComponentDummy.prototype = Component.prototype;
/**
 * Convenience component with default shallow equality check for sCU.
 */

function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

_assign(pureComponentPrototype, Component.prototype);

pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };

  {
    Object.seal(refObject);
  }

  return refObject;
}

/**
 * Keeps track of the current dispatcher.
 */
var ReactCurrentDispatcher = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

/**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */
var ReactCurrentBatchConfig = {
  suspense: null
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var BEFORE_SLASH_RE = /^(.*)[\\\/]/;
var describeComponentFrame = function (name, source, ownerName) {
  var sourceInfo = '';

  if (source) {
    var path = source.fileName;
    var fileName = path.replace(BEFORE_SLASH_RE, '');

    {
      // In DEV, include code for a common special case:
      // prefer "folder/index.js" instead of just "index.js".
      if (/^index\./.test(fileName)) {
        var match = path.match(BEFORE_SLASH_RE);

        if (match) {
          var pathBeforeSlash = match[1];

          if (pathBeforeSlash) {
            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
            fileName = folderName + '/' + fileName;
          }
        }
      }
    }

    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
  } else if (ownerName) {
    sourceInfo = ' (created by ' + ownerName + ')';
  }

  return '\n    in ' + (name || 'Unknown') + sourceInfo;
};

var Resolved = 1;

function refineResolvedLazyComponent(lazyComponent) {
  return lazyComponent._status === Resolved ? lazyComponent._result : null;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return "Profiler";

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return 'Context.Consumer';

      case REACT_PROVIDER_TYPE:
        return 'Context.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        {
          var thenable = type;
          var resolvedThenable = refineResolvedLazyComponent(thenable);

          if (resolvedThenable) {
            return getComponentName(resolvedThenable);
          }

          break;
        }
    }
  }

  return null;
}

var ReactDebugCurrentFrame = {};
var currentlyValidatingElement = null;
function setCurrentlyValidatingElement(element) {
  {
    currentlyValidatingElement = element;
  }
}

{
  // Stack implementation injected by the current renderer.
  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = ''; // Add an extra top frame while an element is being validated

    if (currentlyValidatingElement) {
      var name = getComponentName(currentlyValidatingElement.type);
      var owner = currentlyValidatingElement._owner;
      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));
    } // Delegate to the injected renderer-specific implementation


    var impl = ReactDebugCurrentFrame.getCurrentStack;

    if (impl) {
      stack += impl() || '';
    }

    return stack;
  };
}

/**
 * Used by act() to track whether you're inside an act() scope.
 */
var IsSomeRendererActing = {
  current: false
};

var ReactSharedInternals = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
  ReactCurrentOwner: ReactCurrentOwner,
  IsSomeRendererActing: IsSomeRendererActing,
  // Used by renderers to avoid bundling object-assign twice in UMD bundles:
  assign: _assign
};

{
  _assign(ReactSharedInternals, {
    // These should not be included in production.
    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
    // TODO: remove in React 17.0.
    ReactComponentTreeHook: {}
  });
}

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = warningWithoutStack$1;

{
  warning = function (condition, format) {
    if (condition) {
      return;
    }

    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum(); // eslint-disable-next-line react-internal/warning-and-invariant-args

    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    warningWithoutStack$1.apply(void 0, [false, format + '%s'].concat(args, [stack]));
  };
}

var warning$1 = warning;

var hasOwnProperty = Object.prototype.hasOwnProperty;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown;
var specialPropRefWarningShown;

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };

  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };

  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */



/**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */

function jsxDEV(type, config, maybeKey, source, self) {
  var propName; // Reserved names are extracted

  var props = {};
  var key = null;
  var ref = null; // Currently, key can be spread in as a prop. This causes a potential
  // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
  // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
  // but as an intermediary step, we will use jsxDEV for everything except
  // <div {...props} key="Hi" />, because we aren't currently able to tell if
  // key is explicitly declared to be undefined or not.

  if (maybeKey !== undefined) {
    key = '' + maybeKey;
  }

  if (hasValidKey(config)) {
    key = '' + config.key;
  }

  if (hasValidRef(config)) {
    ref = config.ref;
  } // Remaining properties are added to a new props object


  for (propName in config) {
    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
      props[propName] = config[propName];
    }
  } // Resolve default props


  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;

    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  if (key || ref) {
    var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

    if (key) {
      defineKeyPropWarningGetter(props, displayName);
    }

    if (ref) {
      defineRefPropWarningGetter(props, displayName);
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}
/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */

function createElement(type, config, children) {
  var propName; // Reserved names are extracted

  var props = {};
  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }

    props.children = childArray;
  } // Resolve default props


  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;

    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  {
    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}
/**
 * Return a function that produces ReactElements of a given type.
 * See https://reactjs.org/docs/react-api.html#createfactory
 */


function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
  return newElement;
}
/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */

function cloneElement(element, config, children) {
  if (!!(element === null || element === undefined)) {
    {
      throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
    }
  }

  var propName; // Original props are copied

  var props = _assign({}, element.props); // Reserved names are extracted


  var key = element.key;
  var ref = element.ref; // Self is preserved since the owner is preserved.

  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.

  var source = element._source; // Owner will be preserved, unless ref is overridden

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    } // Remaining properties override existing props


    var defaultProps;

    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';
/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });
  return '$' + escapedString;
}
/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */


var didWarnAboutMaps = false;
var userProvidedKeyEscapeRegex = /\/+/g;

function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

var POOL_SIZE = 10;
var traverseContextPool = [];

function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
  if (traverseContextPool.length) {
    var traverseContext = traverseContextPool.pop();
    traverseContext.result = mapResult;
    traverseContext.keyPrefix = keyPrefix;
    traverseContext.func = mapFunction;
    traverseContext.context = mapContext;
    traverseContext.count = 0;
    return traverseContext;
  } else {
    return {
      result: mapResult,
      keyPrefix: keyPrefix,
      func: mapFunction,
      context: mapContext,
      count: 0
    };
  }
}

function releaseTraverseContext(traverseContext) {
  traverseContext.result = null;
  traverseContext.keyPrefix = null;
  traverseContext.func = null;
  traverseContext.context = null;
  traverseContext.count = 0;

  if (traverseContextPool.length < POOL_SIZE) {
    traverseContextPool.push(traverseContext);
  }
}
/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */


function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;

      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }

    }
  }

  if (invokeCallback) {
    callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.

  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);

    if (typeof iteratorFn === 'function') {
      {
        // Warn about using Maps as children
        if (iteratorFn === children.entries) {
          !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step;
      var ii = 0;

      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';

      {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
      }

      var childrenString = '' + children;

      {
        {
          throw Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + ")." + addendum);
        }
      }
    }
  }

  return subtreeCount;
}
/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */


function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}
/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */


function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof component === 'object' && component !== null && component.key != null) {
    // Explicit key
    return escape(component.key);
  } // Implicit key determined by the index in the set


  return index.toString(36);
}

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;
  func.call(context, child, bookKeeping.count++);
}
/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */


function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }

  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  releaseTraverseContext(traverseContext);
}

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;
  var mappedChild = func.call(context, child, bookKeeping.count++);

  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {
      return c;
    });
  } else if (mappedChild != null) {
    if (isValidElement(mappedChild)) {
      mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }

    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';

  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }

  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  releaseTraverseContext(traverseContext);
}
/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */


function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}
/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */


function countChildren(children) {
  return traverseAllChildren(children, function () {
    return null;
  }, null);
}
/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */


function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {
    return child;
  });
  return result;
}
/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */


function onlyChild(children) {
  if (!isValidElement(children)) {
    {
      throw Error("React.Children.only expected to receive a single React element child.");
    }
  }

  return children;
}

function createContext(defaultValue, calculateChangedBits) {
  if (calculateChangedBits === undefined) {
    calculateChangedBits = null;
  } else {
    {
      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
    }
  }

  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    _calculateChangedBits: calculateChangedBits,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    // Used to track how many concurrent renderers this context currently
    // supports within in a single renderer. Such as parallel server rendering.
    _threadCount: 0,
    // These are circular
    Provider: null,
    Consumer: null
  };
  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  var hasWarnedAboutUsingNestedContextConsumers = false;
  var hasWarnedAboutUsingConsumerProvider = false;

  {
    // A separate object, but proxies back to the original context object for
    // backwards compatibility. It has a different $$typeof, so we can properly
    // warn for the incorrect usage of Context as a Consumer.
    var Consumer = {
      $$typeof: REACT_CONTEXT_TYPE,
      _context: context,
      _calculateChangedBits: context._calculateChangedBits
    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

    Object.defineProperties(Consumer, {
      Provider: {
        get: function () {
          if (!hasWarnedAboutUsingConsumerProvider) {
            hasWarnedAboutUsingConsumerProvider = true;
            warning$1(false, 'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
          }

          return context.Provider;
        },
        set: function (_Provider) {
          context.Provider = _Provider;
        }
      },
      _currentValue: {
        get: function () {
          return context._currentValue;
        },
        set: function (_currentValue) {
          context._currentValue = _currentValue;
        }
      },
      _currentValue2: {
        get: function () {
          return context._currentValue2;
        },
        set: function (_currentValue2) {
          context._currentValue2 = _currentValue2;
        }
      },
      _threadCount: {
        get: function () {
          return context._threadCount;
        },
        set: function (_threadCount) {
          context._threadCount = _threadCount;
        }
      },
      Consumer: {
        get: function () {
          if (!hasWarnedAboutUsingNestedContextConsumers) {
            hasWarnedAboutUsingNestedContextConsumers = true;
            warning$1(false, 'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
          }

          return context.Consumer;
        }
      }
    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

    context.Consumer = Consumer;
  }

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

function lazy(ctor) {
  var lazyType = {
    $$typeof: REACT_LAZY_TYPE,
    _ctor: ctor,
    // React uses these fields to store the result.
    _status: -1,
    _result: null
  };

  {
    // In production, this would just set it on the object.
    var defaultProps;
    var propTypes;
    Object.defineProperties(lazyType, {
      defaultProps: {
        configurable: true,
        get: function () {
          return defaultProps;
        },
        set: function (newDefaultProps) {
          warning$1(false, 'React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
          defaultProps = newDefaultProps; // Match production behavior more closely:

          Object.defineProperty(lazyType, 'defaultProps', {
            enumerable: true
          });
        }
      },
      propTypes: {
        configurable: true,
        get: function () {
          return propTypes;
        },
        set: function (newPropTypes) {
          warning$1(false, 'React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
          propTypes = newPropTypes; // Match production behavior more closely:

          Object.defineProperty(lazyType, 'propTypes', {
            enumerable: true
          });
        }
      }
    });
  }

  return lazyType;
}

function forwardRef(render) {
  {
    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
      warningWithoutStack$1(false, 'forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
    } else if (typeof render !== 'function') {
      warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
    } else {
      !( // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object
      render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;
    }

    if (render != null) {
      !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
    }
  }

  return {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };
}

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE);
}

function memo(type, compare) {
  {
    if (!isValidElementType(type)) {
      warningWithoutStack$1(false, 'memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
    }
  }

  return {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: compare === undefined ? null : compare
  };
}

function resolveDispatcher() {
  var dispatcher = ReactCurrentDispatcher.current;

  if (!(dispatcher !== null)) {
    {
      throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.");
    }
  }

  return dispatcher;
}

function useContext(Context, unstable_observedBits) {
  var dispatcher = resolveDispatcher();

  {
    !(unstable_observedBits === undefined) ? warning$1(false, 'useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '') : void 0; // TODO: add a more generic warning for invalid values.

    if (Context._context !== undefined) {
      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
      // and nobody should be using this in existing code.

      if (realContext.Consumer === Context) {
        warning$1(false, 'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
      } else if (realContext.Provider === Context) {
        warning$1(false, 'Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
      }
    }
  }

  return dispatcher.useContext(Context, unstable_observedBits);
}
function useState(initialState) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useState(initialState);
}
function useReducer(reducer, initialArg, init) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useReducer(reducer, initialArg, init);
}
function useRef(initialValue) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useRef(initialValue);
}
function useEffect(create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useEffect(create, inputs);
}
function useLayoutEffect(create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useLayoutEffect(create, inputs);
}
function useCallback(callback, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useCallback(callback, inputs);
}
function useMemo(create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useMemo(create, inputs);
}
function useImperativeHandle(ref, create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useImperativeHandle(ref, create, inputs);
}
function useDebugValue(value, formatterFn) {
  {
    var dispatcher = resolveDispatcher();
    return dispatcher.useDebugValue(value, formatterFn);
  }
}
var emptyObject$1 = {};
function useResponder(responder, listenerProps) {
  var dispatcher = resolveDispatcher();

  {
    if (responder == null || responder.$$typeof !== REACT_RESPONDER_TYPE) {
      warning$1(false, 'useResponder: invalid first argument. Expected an event responder, but instead got %s', responder);
      return;
    }
  }

  return dispatcher.useResponder(responder, listenerProps || emptyObject$1);
}
function useTransition(config) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useTransition(config);
}
function useDeferredValue(value, config) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useDeferredValue(value, config);
}

function withSuspenseConfig(scope, config) {
  var previousConfig = ReactCurrentBatchConfig.suspense;
  ReactCurrentBatchConfig.suspense = config === undefined ? null : config;

  try {
    scope();
  } finally {
    ReactCurrentBatchConfig.suspense = previousConfig;
  }
}

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */
var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}

var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current.type);

    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }

  return '';
}

function getSourceInfoErrorAddendum(source) {
  if (source !== undefined) {
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }

  return '';
}

function getSourceInfoErrorAddendumForProps(elementProps) {
  if (elementProps !== null && elementProps !== undefined) {
    return getSourceInfoErrorAddendum(elementProps.__source);
  }

  return '';
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

    if (parentName) {
      info = "\n\nCheck the top-level render call using <" + parentName + ">.";
    }
  }

  return info;
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }

  element._store.validated = true;
  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }

  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.

  var childOwner = '';

  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
  }

  setCurrentlyValidatingElement(element);

  {
    warning$1(false, 'Each child in a list should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);
  }

  setCurrentlyValidatingElement(null);
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }

  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];

      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);

    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;

        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  var type = element.type;

  if (type === null || type === undefined || typeof type === 'string') {
    return;
  }

  var name = getComponentName(type);
  var propTypes;

  if (typeof type === 'function') {
    propTypes = type.propTypes;
  } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
  // Inner props are checked in the reconciler.
  type.$$typeof === REACT_MEMO_TYPE)) {
    propTypes = type.propTypes;
  } else {
    return;
  }

  if (propTypes) {
    setCurrentlyValidatingElement(element);
    checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);
    setCurrentlyValidatingElement(null);
  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
    propTypesMisspellWarningShown = true;
    warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
  }

  if (typeof type.getDefaultProps === 'function') {
    !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  setCurrentlyValidatingElement(fragment);
  var keys = Object.keys(fragment.props);

  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];

    if (key !== 'children' && key !== 'key') {
      warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
      break;
    }
  }

  if (fragment.ref !== null) {
    warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');
  }

  setCurrentlyValidatingElement(null);
}

function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.

  if (!validType) {
    var info = '';

    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendum(source);

    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString;

    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    warning$1(false, 'React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
  }

  var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.

  if (element == null) {
    return element;
  } // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)


  if (validType) {
    var children = props.children;

    if (children !== undefined) {
      if (isStaticChildren) {
        if (Array.isArray(children)) {
          for (var i = 0; i < children.length; i++) {
            validateChildKeys(children[i], type);
          }

          if (Object.freeze) {
            Object.freeze(children);
          }
        } else {
          warning$1(false, 'React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
        }
      } else {
        validateChildKeys(children, type);
      }
    }
  }

  if (hasOwnProperty$1.call(props, 'key')) {
    warning$1(false, 'React.jsx: Spreading a key to JSX is a deprecated pattern. ' + 'Explicitly pass a key after spreading props in your JSX call. ' + 'E.g. <ComponentName {...props} key={key} />');
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
} // These two functions exist to still get child warnings in dev
// even with the prod transform. This means that jsxDEV is purely
// opt-in behavior for better messages but that we won't stop
// giving you warnings if you use production apis.

function jsxWithValidationStatic(type, props, key) {
  return jsxWithValidation(type, props, key, true);
}
function jsxWithValidationDynamic(type, props, key) {
  return jsxWithValidation(type, props, key, false);
}
function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.

  if (!validType) {
    var info = '';

    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendumForProps(props);

    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString;

    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
  }

  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.

  if (element == null) {
    return element;
  } // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)


  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}
function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type; // Legacy hook: remove it

  {
    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        lowPriorityWarningWithoutStack$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}
function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);

  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }

  validatePropTypes(newElement);
  return newElement;
}

var hasBadMapPolyfill;

{
  hasBadMapPolyfill = false;

  try {
    var frozenObject = Object.freeze({});
    var testMap = new Map([[frozenObject, null]]);
    var testSet = new Set([frozenObject]); // This is necessary for Rollup to not consider these unused.
    // https://github.com/rollup/rollup/issues/1771
    // TODO: we can remove these if Rollup fixes the bug.

    testMap.set(0, 0);
    testSet.add(0);
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

function createFundamentalComponent(impl) {
  // We use responder as a Map key later on. When we have a bad
  // polyfill, then we can't use it as a key as the polyfill tries
  // to add a property to the object.
  if (true && !hasBadMapPolyfill) {
    Object.freeze(impl);
  }

  var fundamantalComponent = {
    $$typeof: REACT_FUNDAMENTAL_TYPE,
    impl: impl
  };

  {
    Object.freeze(fundamantalComponent);
  }

  return fundamantalComponent;
}

function createEventResponder(displayName, responderConfig) {
  var getInitialState = responderConfig.getInitialState,
      onEvent = responderConfig.onEvent,
      onMount = responderConfig.onMount,
      onUnmount = responderConfig.onUnmount,
      onRootEvent = responderConfig.onRootEvent,
      rootEventTypes = responderConfig.rootEventTypes,
      targetEventTypes = responderConfig.targetEventTypes,
      targetPortalPropagation = responderConfig.targetPortalPropagation;
  var eventResponder = {
    $$typeof: REACT_RESPONDER_TYPE,
    displayName: displayName,
    getInitialState: getInitialState || null,
    onEvent: onEvent || null,
    onMount: onMount || null,
    onRootEvent: onRootEvent || null,
    onUnmount: onUnmount || null,
    rootEventTypes: rootEventTypes || null,
    targetEventTypes: targetEventTypes || null,
    targetPortalPropagation: targetPortalPropagation || false
  }; // We use responder as a Map key later on. When we have a bad
  // polyfill, then we can't use it as a key as the polyfill tries
  // to add a property to the object.

  if (true && !hasBadMapPolyfill) {
    Object.freeze(eventResponder);
  }

  return eventResponder;
}

function createScope() {
  var scopeComponent = {
    $$typeof: REACT_SCOPE_TYPE
  };

  {
    Object.freeze(scopeComponent);
  }

  return scopeComponent;
}

// Helps identify side effects in render-phase lifecycle hooks and setState
// reducers by double invoking them in Strict Mode.

 // To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.

 // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:

 // Gather advanced timing metrics for Profiler subtrees.

 // Trace which interactions trigger each commit.

 // SSR experiments


 // Only used in www builds.

 // Only used in www builds.

 // Disable javascript: URL strings in href for XSS protection.

 // React Fire: prevent the value and checked attributes from syncing
// with their related DOM properties

 // These APIs will no longer be "unstable" in the upcoming 16.7 release,
// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.

var exposeConcurrentModeAPIs = false;
 // Experimental React Flare event system and event components support.

var enableFlareAPI = false; // Experimental Host Component support.

var enableFundamentalAPI = false; // Experimental Scope support.

var enableScopeAPI = false; // New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107

var enableJSXTransformAPI = false; // We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)
// Till then, we warn about the missing mock, but still fallback to a legacy mode compatible version

 // For tests, we flush suspense fallbacks in an act scope;
// *except* in some of our own tests, where we test incremental loading states.

 // Add a callback property to suspense to notify which promises are currently
// in the update queue. This allows reporting and tracing of what is causing
// the user to see a loading state.
// Also allows hydration callbacks to fire when a dehydrated boundary gets
// hydrated or deleted.

 // Part of the simplification of React.createElement so we can eventually move
// from React.createElement to React.jsx
// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md





 // Flag to turn event.target and event.currentTarget in ReactNative from a reactTag to a component instance

var React = {
  Children: {
    map: mapChildren,
    forEach: forEachChildren,
    count: countChildren,
    toArray: toArray,
    only: onlyChild
  },
  createRef: createRef,
  Component: Component,
  PureComponent: PureComponent,
  createContext: createContext,
  forwardRef: forwardRef,
  lazy: lazy,
  memo: memo,
  useCallback: useCallback,
  useContext: useContext,
  useEffect: useEffect,
  useImperativeHandle: useImperativeHandle,
  useDebugValue: useDebugValue,
  useLayoutEffect: useLayoutEffect,
  useMemo: useMemo,
  useReducer: useReducer,
  useRef: useRef,
  useState: useState,
  Fragment: REACT_FRAGMENT_TYPE,
  Profiler: REACT_PROFILER_TYPE,
  StrictMode: REACT_STRICT_MODE_TYPE,
  Suspense: REACT_SUSPENSE_TYPE,
  createElement: createElementWithValidation,
  cloneElement: cloneElementWithValidation,
  createFactory: createFactoryWithValidation,
  isValidElement: isValidElement,
  version: ReactVersion,
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals
};

if (exposeConcurrentModeAPIs) {
  React.useTransition = useTransition;
  React.useDeferredValue = useDeferredValue;
  React.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
  React.unstable_withSuspenseConfig = withSuspenseConfig;
}

if (enableFlareAPI) {
  React.unstable_useResponder = useResponder;
  React.unstable_createResponder = createEventResponder;
}

if (enableFundamentalAPI) {
  React.unstable_createFundamental = createFundamentalComponent;
}

if (enableScopeAPI) {
  React.unstable_createScope = createScope;
} // Note: some APIs are added with feature flags.
// Make sure that stable builds for open source
// don't modify the React object to avoid deopts.
// Also let's not expose their names in stable builds.


if (enableJSXTransformAPI) {
  {
    React.jsxDEV = jsxWithValidation;
    React.jsx = jsxWithValidationDynamic;
    React.jsxs = jsxWithValidationStatic;
  }
}



var React$2 = Object.freeze({
	default: React
});

var React$3 = ( React$2 && React ) || React$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.


var react = React$3.default || React$3;

module.exports = react;
  })();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.12.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var h=__webpack_require__(39),n="function"===typeof Symbol&&Symbol.for,p=n?Symbol.for("react.element"):60103,q=n?Symbol.for("react.portal"):60106,r=n?Symbol.for("react.fragment"):60107,t=n?Symbol.for("react.strict_mode"):60108,u=n?Symbol.for("react.profiler"):60114,v=n?Symbol.for("react.provider"):60109,w=n?Symbol.for("react.context"):60110,x=n?Symbol.for("react.forward_ref"):60112,y=n?Symbol.for("react.suspense"):60113;n&&Symbol.for("react.suspense_list");
var z=n?Symbol.for("react.memo"):60115,aa=n?Symbol.for("react.lazy"):60116;n&&Symbol.for("react.fundamental");n&&Symbol.for("react.responder");n&&Symbol.for("react.scope");var A="function"===typeof Symbol&&Symbol.iterator;
function B(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};
function E(a,b,c){this.props=a;this.context=b;this.refs=D;this.updater=c||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error(B(85));this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function F(){}F.prototype=E.prototype;function G(a,b,c){this.props=a;this.context=b;this.refs=D;this.updater=c||C}var H=G.prototype=new F;
H.constructor=G;h(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};
function M(a,b,c){var e,d={},g=null,l=null;if(null!=b)for(e in void 0!==b.ref&&(l=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var k=Array(f),m=0;m<f;m++)k[m]=arguments[m+2];d.children=k}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:l,props:d,_owner:J.current}}
function ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return"object"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\/+/g,P=[];function Q(a,b,c,e){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}
function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}
function S(a,b,c,e){var d=typeof a;if("undefined"===d||"boolean"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,""===b?"."+T(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var l=0;l<a.length;l++){d=a[l];var f=b+T(d,l);g+=S(d,f,c,e)}else if(null===a||"object"!==typeof a?f=null:(f=A&&a[A]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=f.call(a),l=
0;!(d=a.next()).done;)d=d.value,f=b+T(d,l++),g+=S(d,f,c,e);else if("object"===d)throw c=""+a,Error(B(31,"[object Object]"===c?"object with keys {"+Object.keys(a).join(", ")+"}":c,""));return g}function U(a,b,c){return null==a?0:S(a,"",b,c)}function T(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}
function da(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,e,c,function(a){return a}):null!=a&&(N(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(O,"$&/")+"/")+c)),e.push(a))}function V(a,b,c,e,d){var g="";null!=c&&(g=(""+c).replace(O,"$&/")+"/");b=Q(b,g,e,d);U(a,da,b);R(b)}function W(){var a=I.current;if(null===a)throw Error(B(321));return a}
var X={Children:{map:function(a,b,c){if(null==a)return a;var e=[];V(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=Q(null,null,b,c);U(a,ca,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){if(!N(a))throw Error(B(143));return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,
_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:x,render:a}},lazy:function(a){return{$$typeof:aa,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,
b,c){return W().useImperativeHandle(a,b,c)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,c){return W().useReducer(a,b,c)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,Profiler:u,StrictMode:t,Suspense:y,createElement:M,cloneElement:function(a,b,c){if(null===a||void 0===a)throw Error(B(267,a));var e=h({},a.props),d=a.key,g=a.ref,l=a._owner;
if(null!=b){void 0!==b.ref&&(g=b.ref,l=J.current);void 0!==b.key&&(d=""+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(k in b)K.call(b,k)&&!L.hasOwnProperty(k)&&(e[k]=void 0===b[k]&&void 0!==f?f[k]:b[k])}var k=arguments.length-2;if(1===k)e.children=c;else if(1<k){f=Array(k);for(var m=0;m<k;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,key:d,ref:g,props:e,_owner:l}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:"16.12.0",
__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:h}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;


/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() { return this })() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(376);

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}


/***/ }),
/* 376 */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() { return this })() || Function("return this")()
);


/***/ }),
/* 377 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function isAbsolute(pathname) {
  return pathname.charAt(0) === '/';
}

// About 1.5x faster than the two-arg version of Array#splice()
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
    list[i] = list[k];
  }

  list.pop();
}

// This implementation is based heavily on node's url.parse
function resolvePathname(to, from) {
  if (from === undefined) from = '';

  var toParts = (to && to.split('/')) || [];
  var fromParts = (from && from.split('/')) || [];

  var isToAbs = to && isAbsolute(to);
  var isFromAbs = from && isAbsolute(from);
  var mustEndAbs = isToAbs || isFromAbs;

  if (to && isAbsolute(to)) {
    // to is absolute
    fromParts = toParts;
  } else if (toParts.length) {
    // to is relative, drop the filename
    fromParts.pop();
    fromParts = fromParts.concat(toParts);
  }

  if (!fromParts.length) return '/';

  var hasTrailingSlash;
  if (fromParts.length) {
    var last = fromParts[fromParts.length - 1];
    hasTrailingSlash = last === '.' || last === '..' || last === '';
  } else {
    hasTrailingSlash = false;
  }

  var up = 0;
  for (var i = fromParts.length; i >= 0; i--) {
    var part = fromParts[i];

    if (part === '.') {
      spliceOne(fromParts, i);
    } else if (part === '..') {
      spliceOne(fromParts, i);
      up++;
    } else if (up) {
      spliceOne(fromParts, i);
      up--;
    }
  }

  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');

  if (
    mustEndAbs &&
    fromParts[0] !== '' &&
    (!fromParts[0] || !isAbsolute(fromParts[0]))
  )
    fromParts.unshift('');

  var result = fromParts.join('/');

  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';

  return result;
}

/* harmony default export */ __webpack_exports__["a"] = (resolvePathname);


/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v0.18.0
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

// Helps identify side effects in render-phase lifecycle hooks and setState
// reducers by double invoking them in Strict Mode.

 // To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.

 // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:

 // Gather advanced timing metrics for Profiler subtrees.

 // Trace which interactions trigger each commit.

var enableSchedulerTracing = true; // SSR experiments


 // Only used in www builds.

 // Only used in www builds.

 // Disable javascript: URL strings in href for XSS protection.

 // React Fire: prevent the value and checked attributes from syncing
// with their related DOM properties

 // These APIs will no longer be "unstable" in the upcoming 16.7 release,
// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.


 // Experimental React Flare event system and event components support.

 // Experimental Host Component support.

 // Experimental Scope support.

 // New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107

 // We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)
// Till then, we warn about the missing mock, but still fallback to a legacy mode compatible version

 // For tests, we flush suspense fallbacks in an act scope;
// *except* in some of our own tests, where we test incremental loading states.

 // Add a callback property to suspense to notify which promises are currently
// in the update queue. This allows reporting and tracing of what is causing
// the user to see a loading state.
// Also allows hydration callbacks to fire when a dehydrated boundary gets
// hydrated or deleted.

 // Part of the simplification of React.createElement so we can eventually move
// from React.createElement to React.jsx
// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md





 // Flag to turn event.target and event.currentTarget in ReactNative from a reactTag to a component instance

var DEFAULT_THREAD_ID = 0; // Counters used to generate unique IDs.

var interactionIDCounter = 0;
var threadIDCounter = 0; // Set of currently traced interactions.
// Interactions "stack"–
// Meaning that newly traced interactions are appended to the previously active set.
// When an interaction goes out of scope, the previous set (if any) is restored.

exports.__interactionsRef = null; // Listener(s) to notify when interactions begin and end.

exports.__subscriberRef = null;

if (enableSchedulerTracing) {
  exports.__interactionsRef = {
    current: new Set()
  };
  exports.__subscriberRef = {
    current: null
  };
}

function unstable_clear(callback) {
  if (!enableSchedulerTracing) {
    return callback();
  }

  var prevInteractions = exports.__interactionsRef.current;
  exports.__interactionsRef.current = new Set();

  try {
    return callback();
  } finally {
    exports.__interactionsRef.current = prevInteractions;
  }
}
function unstable_getCurrent() {
  if (!enableSchedulerTracing) {
    return null;
  } else {
    return exports.__interactionsRef.current;
  }
}
function unstable_getThreadID() {
  return ++threadIDCounter;
}
function unstable_trace(name, timestamp, callback) {
  var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;

  if (!enableSchedulerTracing) {
    return callback();
  }

  var interaction = {
    __count: 1,
    id: interactionIDCounter++,
    name: name,
    timestamp: timestamp
  };
  var prevInteractions = exports.__interactionsRef.current; // Traced interactions should stack/accumulate.
  // To do that, clone the current interactions.
  // The previous set will be restored upon completion.

  var interactions = new Set(prevInteractions);
  interactions.add(interaction);
  exports.__interactionsRef.current = interactions;
  var subscriber = exports.__subscriberRef.current;
  var returnValue;

  try {
    if (subscriber !== null) {
      subscriber.onInteractionTraced(interaction);
    }
  } finally {
    try {
      if (subscriber !== null) {
        subscriber.onWorkStarted(interactions, threadID);
      }
    } finally {
      try {
        returnValue = callback();
      } finally {
        exports.__interactionsRef.current = prevInteractions;

        try {
          if (subscriber !== null) {
            subscriber.onWorkStopped(interactions, threadID);
          }
        } finally {
          interaction.__count--; // If no async work was scheduled for this interaction,
          // Notify subscribers that it's completed.

          if (subscriber !== null && interaction.__count === 0) {
            subscriber.onInteractionScheduledWorkCompleted(interaction);
          }
        }
      }
    }
  }

  return returnValue;
}
function unstable_wrap(callback) {
  var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;

  if (!enableSchedulerTracing) {
    return callback;
  }

  var wrappedInteractions = exports.__interactionsRef.current;
  var subscriber = exports.__subscriberRef.current;

  if (subscriber !== null) {
    subscriber.onWorkScheduled(wrappedInteractions, threadID);
  } // Update the pending async work count for the current interactions.
  // Update after calling subscribers in case of error.


  wrappedInteractions.forEach(function (interaction) {
    interaction.__count++;
  });
  var hasRun = false;

  function wrapped() {
    var prevInteractions = exports.__interactionsRef.current;
    exports.__interactionsRef.current = wrappedInteractions;
    subscriber = exports.__subscriberRef.current;

    try {
      var returnValue;

      try {
        if (subscriber !== null) {
          subscriber.onWorkStarted(wrappedInteractions, threadID);
        }
      } finally {
        try {
          returnValue = callback.apply(undefined, arguments);
        } finally {
          exports.__interactionsRef.current = prevInteractions;

          if (subscriber !== null) {
            subscriber.onWorkStopped(wrappedInteractions, threadID);
          }
        }
      }

      return returnValue;
    } finally {
      if (!hasRun) {
        // We only expect a wrapped function to be executed once,
        // But in the event that it's executed more than once–
        // Only decrement the outstanding interaction counts once.
        hasRun = true; // Update pending async counts for all wrapped interactions.
        // If this was the last scheduled async work for any of them,
        // Mark them as completed.

        wrappedInteractions.forEach(function (interaction) {
          interaction.__count--;

          if (subscriber !== null && interaction.__count === 0) {
            subscriber.onInteractionScheduledWorkCompleted(interaction);
          }
        });
      }
    }
  }

  wrapped.cancel = function cancel() {
    subscriber = exports.__subscriberRef.current;

    try {
      if (subscriber !== null) {
        subscriber.onWorkCanceled(wrappedInteractions, threadID);
      }
    } finally {
      // Update pending async counts for all wrapped interactions.
      // If this was the last scheduled async work for any of them,
      // Mark them as completed.
      wrappedInteractions.forEach(function (interaction) {
        interaction.__count--;

        if (subscriber && interaction.__count === 0) {
          subscriber.onInteractionScheduledWorkCompleted(interaction);
        }
      });
    }
  };

  return wrapped;
}

var subscribers = null;

if (enableSchedulerTracing) {
  subscribers = new Set();
}

function unstable_subscribe(subscriber) {
  if (enableSchedulerTracing) {
    subscribers.add(subscriber);

    if (subscribers.size === 1) {
      exports.__subscriberRef.current = {
        onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
        onInteractionTraced: onInteractionTraced,
        onWorkCanceled: onWorkCanceled,
        onWorkScheduled: onWorkScheduled,
        onWorkStarted: onWorkStarted,
        onWorkStopped: onWorkStopped
      };
    }
  }
}
function unstable_unsubscribe(subscriber) {
  if (enableSchedulerTracing) {
    subscribers.delete(subscriber);

    if (subscribers.size === 0) {
      exports.__subscriberRef.current = null;
    }
  }
}

function onInteractionTraced(interaction) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onInteractionTraced(interaction);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onInteractionScheduledWorkCompleted(interaction) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onInteractionScheduledWorkCompleted(interaction);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkScheduled(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkScheduled(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkStarted(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkStarted(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkStopped(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkStopped(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkCanceled(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkCanceled(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

exports.unstable_clear = unstable_clear;
exports.unstable_getCurrent = unstable_getCurrent;
exports.unstable_getThreadID = unstable_getThreadID;
exports.unstable_trace = unstable_trace;
exports.unstable_wrap = unstable_wrap;
exports.unstable_subscribe = unstable_subscribe;
exports.unstable_unsubscribe = unstable_unsubscribe;
  })();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v0.18.0
 * scheduler-tracing.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

Object.defineProperty(exports,"__esModule",{value:!0});var b=0;exports.__interactionsRef=null;exports.__subscriberRef=null;exports.unstable_clear=function(a){return a()};exports.unstable_getCurrent=function(){return null};exports.unstable_getThreadID=function(){return++b};exports.unstable_trace=function(a,d,c){return c()};exports.unstable_wrap=function(a){return a};exports.unstable_subscribe=function(){};exports.unstable_unsubscribe=function(){};


/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v0.18.0
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var enableSchedulerDebugging = false;
var enableIsInputPending = false;
var enableProfiling = true;

var requestHostCallback;

var requestHostTimeout;
var cancelHostTimeout;
var shouldYieldToHost;
var requestPaint;



if ( // If Scheduler runs in a non-DOM environment, it falls back to a naive
// implementation using setTimeout.
typeof window === 'undefined' || // Check if MessageChannel is supported, too.
typeof MessageChannel !== 'function') {
  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,
  // fallback to a naive implementation.
  var _callback = null;
  var _timeoutID = null;

  var _flushCallback = function () {
    if (_callback !== null) {
      try {
        var currentTime = exports.unstable_now();
        var hasRemainingTime = true;

        _callback(hasRemainingTime, currentTime);

        _callback = null;
      } catch (e) {
        setTimeout(_flushCallback, 0);
        throw e;
      }
    }
  };

  var initialTime = Date.now();

  exports.unstable_now = function () {
    return Date.now() - initialTime;
  };

  requestHostCallback = function (cb) {
    if (_callback !== null) {
      // Protect against re-entrancy.
      setTimeout(requestHostCallback, 0, cb);
    } else {
      _callback = cb;
      setTimeout(_flushCallback, 0);
    }
  };

  requestHostTimeout = function (cb, ms) {
    _timeoutID = setTimeout(cb, ms);
  };

  cancelHostTimeout = function () {
    clearTimeout(_timeoutID);
  };

  shouldYieldToHost = function () {
    return false;
  };

  requestPaint = exports.unstable_forceFrameRate = function () {};
} else {
  // Capture local references to native APIs, in case a polyfill overrides them.
  var performance = window.performance;
  var _Date = window.Date;
  var _setTimeout = window.setTimeout;
  var _clearTimeout = window.clearTimeout;

  if (typeof console !== 'undefined') {
    // TODO: Scheduler no longer requires these methods to be polyfilled. But
    // maybe we want to continue warning if they don't exist, to preserve the
    // option to rely on it in the future?
    var requestAnimationFrame = window.requestAnimationFrame;
    var cancelAnimationFrame = window.cancelAnimationFrame; // TODO: Remove fb.me link

    if (typeof requestAnimationFrame !== 'function') {
      console.error("This browser doesn't support requestAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
    }

    if (typeof cancelAnimationFrame !== 'function') {
      console.error("This browser doesn't support cancelAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
    }
  }

  if (typeof performance === 'object' && typeof performance.now === 'function') {
    exports.unstable_now = function () {
      return performance.now();
    };
  } else {
    var _initialTime = _Date.now();

    exports.unstable_now = function () {
      return _Date.now() - _initialTime;
    };
  }

  var isMessageLoopRunning = false;
  var scheduledHostCallback = null;
  var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
  // thread, like user events. By default, it yields multiple times per frame.
  // It does not attempt to align with frame boundaries, since most tasks don't
  // need to be frame aligned; for those that do, use requestAnimationFrame.

  var yieldInterval = 5;
  var deadline = 0; // TODO: Make this configurable
  // TODO: Adjust this based on priority?

  var maxYieldInterval = 300;
  var needsPaint = false;

  if (enableIsInputPending && navigator !== undefined && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined) {
    var scheduling = navigator.scheduling;

    shouldYieldToHost = function () {
      var currentTime = exports.unstable_now();

      if (currentTime >= deadline) {
        // There's no time left. We may want to yield control of the main
        // thread, so the browser can perform high priority tasks. The main ones
        // are painting and user input. If there's a pending paint or a pending
        // input, then we should yield. But if there's neither, then we can
        // yield less often while remaining responsive. We'll eventually yield
        // regardless, since there could be a pending paint that wasn't
        // accompanied by a call to `requestPaint`, or other main thread tasks
        // like network events.
        if (needsPaint || scheduling.isInputPending()) {
          // There is either a pending paint or a pending input.
          return true;
        } // There's no pending input. Only yield if we've reached the max
        // yield interval.


        return currentTime >= maxYieldInterval;
      } else {
        // There's still time left in the frame.
        return false;
      }
    };

    requestPaint = function () {
      needsPaint = true;
    };
  } else {
    // `isInputPending` is not available. Since we have no way of knowing if
    // there's pending input, always yield at the end of the frame.
    shouldYieldToHost = function () {
      return exports.unstable_now() >= deadline;
    }; // Since we yield every frame regardless, `requestPaint` has no effect.


    requestPaint = function () {};
  }

  exports.unstable_forceFrameRate = function (fps) {
    if (fps < 0 || fps > 125) {
      console.error('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing framerates higher than 125 fps is not unsupported');
      return;
    }

    if (fps > 0) {
      yieldInterval = Math.floor(1000 / fps);
    } else {
      // reset the framerate
      yieldInterval = 5;
    }
  };

  var performWorkUntilDeadline = function () {
    if (scheduledHostCallback !== null) {
      var currentTime = exports.unstable_now(); // Yield after `yieldInterval` ms, regardless of where we are in the vsync
      // cycle. This means there's always time remaining at the beginning of
      // the message event.

      deadline = currentTime + yieldInterval;
      var hasTimeRemaining = true;

      try {
        var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);

        if (!hasMoreWork) {
          isMessageLoopRunning = false;
          scheduledHostCallback = null;
        } else {
          // If there's more work, schedule the next message event at the end
          // of the preceding one.
          port.postMessage(null);
        }
      } catch (error) {
        // If a scheduler task throws, exit the current browser task so the
        // error can be observed.
        port.postMessage(null);
        throw error;
      }
    } else {
      isMessageLoopRunning = false;
    } // Yielding to the browser will give it a chance to paint, so we can
    // reset this.


    needsPaint = false;
  };

  var channel = new MessageChannel();
  var port = channel.port2;
  channel.port1.onmessage = performWorkUntilDeadline;

  requestHostCallback = function (callback) {
    scheduledHostCallback = callback;

    if (!isMessageLoopRunning) {
      isMessageLoopRunning = true;
      port.postMessage(null);
    }
  };

  requestHostTimeout = function (callback, ms) {
    taskTimeoutID = _setTimeout(function () {
      callback(exports.unstable_now());
    }, ms);
  };

  cancelHostTimeout = function () {
    _clearTimeout(taskTimeoutID);

    taskTimeoutID = -1;
  };
}

function push(heap, node) {
  var index = heap.length;
  heap.push(node);
  siftUp(heap, node, index);
}
function peek(heap) {
  var first = heap[0];
  return first === undefined ? null : first;
}
function pop(heap) {
  var first = heap[0];

  if (first !== undefined) {
    var last = heap.pop();

    if (last !== first) {
      heap[0] = last;
      siftDown(heap, last, 0);
    }

    return first;
  } else {
    return null;
  }
}

function siftUp(heap, node, i) {
  var index = i;

  while (true) {
    var parentIndex = Math.floor((index - 1) / 2);
    var parent = heap[parentIndex];

    if (parent !== undefined && compare(parent, node) > 0) {
      // The parent is larger. Swap positions.
      heap[parentIndex] = node;
      heap[index] = parent;
      index = parentIndex;
    } else {
      // The parent is smaller. Exit.
      return;
    }
  }
}

function siftDown(heap, node, i) {
  var index = i;
  var length = heap.length;

  while (index < length) {
    var leftIndex = (index + 1) * 2 - 1;
    var left = heap[leftIndex];
    var rightIndex = leftIndex + 1;
    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.

    if (left !== undefined && compare(left, node) < 0) {
      if (right !== undefined && compare(right, left) < 0) {
        heap[index] = right;
        heap[rightIndex] = node;
        index = rightIndex;
      } else {
        heap[index] = left;
        heap[leftIndex] = node;
        index = leftIndex;
      }
    } else if (right !== undefined && compare(right, node) < 0) {
      heap[index] = right;
      heap[rightIndex] = node;
      index = rightIndex;
    } else {
      // Neither child is smaller. Exit.
      return;
    }
  }
}

function compare(a, b) {
  // Compare sort index first, then task id.
  var diff = a.sortIndex - b.sortIndex;
  return diff !== 0 ? diff : a.id - b.id;
}

// TODO: Use symbols?
var NoPriority = 0;
var ImmediatePriority = 1;
var UserBlockingPriority = 2;
var NormalPriority = 3;
var LowPriority = 4;
var IdlePriority = 5;

var runIdCounter = 0;
var mainThreadIdCounter = 0;
var profilingStateSize = 4;
var sharedProfilingBuffer = enableProfiling ? // $FlowFixMe Flow doesn't know about SharedArrayBuffer
typeof SharedArrayBuffer === 'function' ? new SharedArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : // $FlowFixMe Flow doesn't know about ArrayBuffer
typeof ArrayBuffer === 'function' ? new ArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : null // Don't crash the init path on IE9
: null;
var profilingState = enableProfiling && sharedProfilingBuffer !== null ? new Int32Array(sharedProfilingBuffer) : []; // We can't read this but it helps save bytes for null checks

var PRIORITY = 0;
var CURRENT_TASK_ID = 1;
var CURRENT_RUN_ID = 2;
var QUEUE_SIZE = 3;

if (enableProfiling) {
  profilingState[PRIORITY] = NoPriority; // This is maintained with a counter, because the size of the priority queue
  // array might include canceled tasks.

  profilingState[QUEUE_SIZE] = 0;
  profilingState[CURRENT_TASK_ID] = 0;
} // Bytes per element is 4


var INITIAL_EVENT_LOG_SIZE = 131072;
var MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes

var eventLogSize = 0;
var eventLogBuffer = null;
var eventLog = null;
var eventLogIndex = 0;
var TaskStartEvent = 1;
var TaskCompleteEvent = 2;
var TaskErrorEvent = 3;
var TaskCancelEvent = 4;
var TaskRunEvent = 5;
var TaskYieldEvent = 6;
var SchedulerSuspendEvent = 7;
var SchedulerResumeEvent = 8;

function logEvent(entries) {
  if (eventLog !== null) {
    var offset = eventLogIndex;
    eventLogIndex += entries.length;

    if (eventLogIndex + 1 > eventLogSize) {
      eventLogSize *= 2;

      if (eventLogSize > MAX_EVENT_LOG_SIZE) {
        console.error("Scheduler Profiling: Event log exceeded maximum size. Don't " + 'forget to call `stopLoggingProfilingEvents()`.');
        stopLoggingProfilingEvents();
        return;
      }

      var newEventLog = new Int32Array(eventLogSize * 4);
      newEventLog.set(eventLog);
      eventLogBuffer = newEventLog.buffer;
      eventLog = newEventLog;
    }

    eventLog.set(entries, offset);
  }
}

function startLoggingProfilingEvents() {
  eventLogSize = INITIAL_EVENT_LOG_SIZE;
  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);
  eventLog = new Int32Array(eventLogBuffer);
  eventLogIndex = 0;
}
function stopLoggingProfilingEvents() {
  var buffer = eventLogBuffer;
  eventLogSize = 0;
  eventLogBuffer = null;
  eventLog = null;
  eventLogIndex = 0;
  return buffer;
}
function markTaskStart(task, ms) {
  if (enableProfiling) {
    profilingState[QUEUE_SIZE]++;

    if (eventLog !== null) {
      // performance.now returns a float, representing milliseconds. When the
      // event is logged, it's coerced to an int. Convert to microseconds to
      // maintain extra degrees of precision.
      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);
    }
  }
}
function markTaskCompleted(task, ms) {
  if (enableProfiling) {
    profilingState[PRIORITY] = NoPriority;
    profilingState[CURRENT_TASK_ID] = 0;
    profilingState[QUEUE_SIZE]--;

    if (eventLog !== null) {
      logEvent([TaskCompleteEvent, ms * 1000, task.id]);
    }
  }
}
function markTaskCanceled(task, ms) {
  if (enableProfiling) {
    profilingState[QUEUE_SIZE]--;

    if (eventLog !== null) {
      logEvent([TaskCancelEvent, ms * 1000, task.id]);
    }
  }
}
function markTaskErrored(task, ms) {
  if (enableProfiling) {
    profilingState[PRIORITY] = NoPriority;
    profilingState[CURRENT_TASK_ID] = 0;
    profilingState[QUEUE_SIZE]--;

    if (eventLog !== null) {
      logEvent([TaskErrorEvent, ms * 1000, task.id]);
    }
  }
}
function markTaskRun(task, ms) {
  if (enableProfiling) {
    runIdCounter++;
    profilingState[PRIORITY] = task.priorityLevel;
    profilingState[CURRENT_TASK_ID] = task.id;
    profilingState[CURRENT_RUN_ID] = runIdCounter;

    if (eventLog !== null) {
      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);
    }
  }
}
function markTaskYield(task, ms) {
  if (enableProfiling) {
    profilingState[PRIORITY] = NoPriority;
    profilingState[CURRENT_TASK_ID] = 0;
    profilingState[CURRENT_RUN_ID] = 0;

    if (eventLog !== null) {
      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);
    }
  }
}
function markSchedulerSuspended(ms) {
  if (enableProfiling) {
    mainThreadIdCounter++;

    if (eventLog !== null) {
      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);
    }
  }
}
function markSchedulerUnsuspended(ms) {
  if (enableProfiling) {
    if (eventLog !== null) {
      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);
    }
  }
}

/* eslint-disable no-var */
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111

var maxSigned31BitInt = 1073741823; // Times out immediately

var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

var USER_BLOCKING_PRIORITY = 250;
var NORMAL_PRIORITY_TIMEOUT = 5000;
var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

var IDLE_PRIORITY = maxSigned31BitInt; // Tasks are stored on a min heap

var taskQueue = [];
var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.

var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.

var isSchedulerPaused = false;
var currentTask = null;
var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.

var isPerformingWork = false;
var isHostCallbackScheduled = false;
var isHostTimeoutScheduled = false;

function advanceTimers(currentTime) {
  // Check for tasks that are no longer delayed and add them to the queue.
  var timer = peek(timerQueue);

  while (timer !== null) {
    if (timer.callback === null) {
      // Timer was cancelled.
      pop(timerQueue);
    } else if (timer.startTime <= currentTime) {
      // Timer fired. Transfer to the task queue.
      pop(timerQueue);
      timer.sortIndex = timer.expirationTime;
      push(taskQueue, timer);

      if (enableProfiling) {
        markTaskStart(timer, currentTime);
        timer.isQueued = true;
      }
    } else {
      // Remaining timers are pending.
      return;
    }

    timer = peek(timerQueue);
  }
}

function handleTimeout(currentTime) {
  isHostTimeoutScheduled = false;
  advanceTimers(currentTime);

  if (!isHostCallbackScheduled) {
    if (peek(taskQueue) !== null) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    } else {
      var firstTimer = peek(timerQueue);

      if (firstTimer !== null) {
        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
      }
    }
  }
}

function flushWork(hasTimeRemaining, initialTime) {
  if (enableProfiling) {
    markSchedulerUnsuspended(initialTime);
  } // We'll need a host callback the next time work is scheduled.


  isHostCallbackScheduled = false;

  if (isHostTimeoutScheduled) {
    // We scheduled a timeout but it's no longer needed. Cancel it.
    isHostTimeoutScheduled = false;
    cancelHostTimeout();
  }

  isPerformingWork = true;
  var previousPriorityLevel = currentPriorityLevel;

  try {
    if (enableProfiling) {
      try {
        return workLoop(hasTimeRemaining, initialTime);
      } catch (error) {
        if (currentTask !== null) {
          var currentTime = exports.unstable_now();
          markTaskErrored(currentTask, currentTime);
          currentTask.isQueued = false;
        }

        throw error;
      }
    } else {
      // No catch in prod codepath.
      return workLoop(hasTimeRemaining, initialTime);
    }
  } finally {
    currentTask = null;
    currentPriorityLevel = previousPriorityLevel;
    isPerformingWork = false;

    if (enableProfiling) {
      var _currentTime = exports.unstable_now();

      markSchedulerSuspended(_currentTime);
    }
  }
}

function workLoop(hasTimeRemaining, initialTime) {
  var currentTime = initialTime;
  advanceTimers(currentTime);
  currentTask = peek(taskQueue);

  while (currentTask !== null && !(enableSchedulerDebugging && isSchedulerPaused)) {
    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
      // This currentTask hasn't expired, and we've reached the deadline.
      break;
    }

    var callback = currentTask.callback;

    if (callback !== null) {
      currentTask.callback = null;
      currentPriorityLevel = currentTask.priorityLevel;
      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
      markTaskRun(currentTask, currentTime);
      var continuationCallback = callback(didUserCallbackTimeout);
      currentTime = exports.unstable_now();

      if (typeof continuationCallback === 'function') {
        currentTask.callback = continuationCallback;
        markTaskYield(currentTask, currentTime);
      } else {
        if (enableProfiling) {
          markTaskCompleted(currentTask, currentTime);
          currentTask.isQueued = false;
        }

        if (currentTask === peek(taskQueue)) {
          pop(taskQueue);
        }
      }

      advanceTimers(currentTime);
    } else {
      pop(taskQueue);
    }

    currentTask = peek(taskQueue);
  } // Return whether there's additional work


  if (currentTask !== null) {
    return true;
  } else {
    var firstTimer = peek(timerQueue);

    if (firstTimer !== null) {
      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
    }

    return false;
  }
}

function unstable_runWithPriority(priorityLevel, eventHandler) {
  switch (priorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
    case LowPriority:
    case IdlePriority:
      break;

    default:
      priorityLevel = NormalPriority;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_next(eventHandler) {
  var priorityLevel;

  switch (currentPriorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
      // Shift down to normal priority
      priorityLevel = NormalPriority;
      break;

    default:
      // Anything lower than normal priority should remain at the current level.
      priorityLevel = currentPriorityLevel;
      break;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_wrapCallback(callback) {
  var parentPriorityLevel = currentPriorityLevel;
  return function () {
    // This is a fork of runWithPriority, inlined for performance.
    var previousPriorityLevel = currentPriorityLevel;
    currentPriorityLevel = parentPriorityLevel;

    try {
      return callback.apply(this, arguments);
    } finally {
      currentPriorityLevel = previousPriorityLevel;
    }
  };
}

function timeoutForPriorityLevel(priorityLevel) {
  switch (priorityLevel) {
    case ImmediatePriority:
      return IMMEDIATE_PRIORITY_TIMEOUT;

    case UserBlockingPriority:
      return USER_BLOCKING_PRIORITY;

    case IdlePriority:
      return IDLE_PRIORITY;

    case LowPriority:
      return LOW_PRIORITY_TIMEOUT;

    case NormalPriority:
    default:
      return NORMAL_PRIORITY_TIMEOUT;
  }
}

function unstable_scheduleCallback(priorityLevel, callback, options) {
  var currentTime = exports.unstable_now();
  var startTime;
  var timeout;

  if (typeof options === 'object' && options !== null) {
    var delay = options.delay;

    if (typeof delay === 'number' && delay > 0) {
      startTime = currentTime + delay;
    } else {
      startTime = currentTime;
    }

    timeout = typeof options.timeout === 'number' ? options.timeout : timeoutForPriorityLevel(priorityLevel);
  } else {
    timeout = timeoutForPriorityLevel(priorityLevel);
    startTime = currentTime;
  }

  var expirationTime = startTime + timeout;
  var newTask = {
    id: taskIdCounter++,
    callback: callback,
    priorityLevel: priorityLevel,
    startTime: startTime,
    expirationTime: expirationTime,
    sortIndex: -1
  };

  if (enableProfiling) {
    newTask.isQueued = false;
  }

  if (startTime > currentTime) {
    // This is a delayed task.
    newTask.sortIndex = startTime;
    push(timerQueue, newTask);

    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
      // All tasks are delayed, and this is the task with the earliest delay.
      if (isHostTimeoutScheduled) {
        // Cancel an existing timeout.
        cancelHostTimeout();
      } else {
        isHostTimeoutScheduled = true;
      } // Schedule a timeout.


      requestHostTimeout(handleTimeout, startTime - currentTime);
    }
  } else {
    newTask.sortIndex = expirationTime;
    push(taskQueue, newTask);

    if (enableProfiling) {
      markTaskStart(newTask, currentTime);
      newTask.isQueued = true;
    } // Schedule a host callback, if needed. If we're already performing work,
    // wait until the next time we yield.


    if (!isHostCallbackScheduled && !isPerformingWork) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    }
  }

  return newTask;
}

function unstable_pauseExecution() {
  isSchedulerPaused = true;
}

function unstable_continueExecution() {
  isSchedulerPaused = false;

  if (!isHostCallbackScheduled && !isPerformingWork) {
    isHostCallbackScheduled = true;
    requestHostCallback(flushWork);
  }
}

function unstable_getFirstCallbackNode() {
  return peek(taskQueue);
}

function unstable_cancelCallback(task) {
  if (enableProfiling) {
    if (task.isQueued) {
      var currentTime = exports.unstable_now();
      markTaskCanceled(task, currentTime);
      task.isQueued = false;
    }
  } // Null out the callback to indicate the task has been canceled. (Can't
  // remove from the queue because you can't remove arbitrary nodes from an
  // array based heap, only the first one.)


  task.callback = null;
}

function unstable_getCurrentPriorityLevel() {
  return currentPriorityLevel;
}

function unstable_shouldYield() {
  var currentTime = exports.unstable_now();
  advanceTimers(currentTime);
  var firstTask = peek(taskQueue);
  return firstTask !== currentTask && currentTask !== null && firstTask !== null && firstTask.callback !== null && firstTask.startTime <= currentTime && firstTask.expirationTime < currentTask.expirationTime || shouldYieldToHost();
}

var unstable_requestPaint = requestPaint;
var unstable_Profiling = enableProfiling ? {
  startLoggingProfilingEvents: startLoggingProfilingEvents,
  stopLoggingProfilingEvents: stopLoggingProfilingEvents,
  sharedProfilingBuffer: sharedProfilingBuffer
} : null;

exports.unstable_ImmediatePriority = ImmediatePriority;
exports.unstable_UserBlockingPriority = UserBlockingPriority;
exports.unstable_NormalPriority = NormalPriority;
exports.unstable_IdlePriority = IdlePriority;
exports.unstable_LowPriority = LowPriority;
exports.unstable_runWithPriority = unstable_runWithPriority;
exports.unstable_next = unstable_next;
exports.unstable_scheduleCallback = unstable_scheduleCallback;
exports.unstable_cancelCallback = unstable_cancelCallback;
exports.unstable_wrapCallback = unstable_wrapCallback;
exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
exports.unstable_shouldYield = unstable_shouldYield;
exports.unstable_requestPaint = unstable_requestPaint;
exports.unstable_continueExecution = unstable_continueExecution;
exports.unstable_pauseExecution = unstable_pauseExecution;
exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
exports.unstable_Profiling = unstable_Profiling;
  })();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v0.18.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

Object.defineProperty(exports,"__esModule",{value:!0});var f,g,h,k,l;
if("undefined"===typeof window||"function"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,
y=window.setTimeout,z=window.clearTimeout;if("undefined"!==typeof console){var A=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");"function"!==typeof A&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===
typeof w&&"function"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=
function(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=Math.floor((c-1)/2),e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}
function M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;
function V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}
function X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}
function Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};
exports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};
exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if("object"===typeof c&&null!==c){var e=c.delay;e="number"===typeof e&&0<e?d+e:d;c="number"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};exports.unstable_cancelCallback=function(a){a.callback=null};
exports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};exports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_requestPaint=Z;exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};
exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_Profiling=null;


/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(379);
} else {
  module.exports = __webpack_require__(378);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(245);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(7)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(246);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(7)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(247);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(7)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(249);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(7)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(250);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(7)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(252);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(7)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(255);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(7)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--1!./styles.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(256);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(7)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../node_modules/css-loader/index.js??ref--1!./styles.css", function() {
			var newContent = require("!!../node_modules/css-loader/index.js??ref--1!./styles.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 391 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function valueOf(obj) {
  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);
}

function valueEqual(a, b) {
  // Test for strict equality first.
  if (a === b) return true;

  // Otherwise, if either of them == null they are not equal.
  if (a == null || b == null) return false;

  if (Array.isArray(a)) {
    return (
      Array.isArray(b) &&
      a.length === b.length &&
      a.every(function(item, index) {
        return valueEqual(item, b[index]);
      })
    );
  }

  if (typeof a === 'object' || typeof b === 'object') {
    var aValue = valueOf(a);
    var bValue = valueOf(b);

    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);

    return Object.keys(Object.assign({}, a, b)).every(function(key) {
      return valueEqual(a[key], b[key]);
    });
  }

  return false;
}

/* harmony default export */ __webpack_exports__["a"] = (valueEqual);


/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js

;(function (global, factory) {
     true ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks () {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback (callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return (Object.getOwnPropertyNames(obj).length === 0);
        } else {
            var k;
            for (k in obj) {
                if (obj.hasOwnProperty(k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty           : false,
            unusedTokens    : [],
            unusedInput     : [],
            overflow        : -2,
            charsLeftOver   : 0,
            nullInput       : false,
            invalidMonth    : null,
            invalidFormat   : false,
            userInvalidated : false,
            iso             : false,
            parsedDateParts : [],
            meridiem        : null,
            rfc2822         : false,
            weekdayMismatch : false
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this);
            var len = t.length >>> 0;

            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.weekdayMismatch &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated &&
                (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid = isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            }
            else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid (flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        }
        else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment (obj) {
        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
    }

    function absFloor (number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false &&
                (typeof console !==  'undefined') && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (var key in arguments[0]) {
                            arg += key + ': ' + arguments[0][key] + ', ';
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    function set (config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' + (/\d{1,2}/).source);
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) &&
                    !hasOwnProp(childConfig, prop) &&
                    isObject(parentConfig[prop])) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i, res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    };

    function calendar (key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS  : 'h:mm:ss A',
        LT   : 'h:mm A',
        L    : 'MM/DD/YYYY',
        LL   : 'MMMM D, YYYY',
        LLL  : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat (key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate () {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal (number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future : 'in %s',
        past   : '%s ago',
        s  : 'a few seconds',
        ss : '%d seconds',
        m  : 'a minute',
        mm : '%d minutes',
        h  : 'an hour',
        hh : '%d hours',
        d  : 'a day',
        dd : '%d days',
        M  : 'a month',
        MM : '%d months',
        y  : 'a year',
        yy : '%d years'
    };

    function relativeTime (number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return (isFunction(output)) ?
            output(number, withoutSuffix, string, isFuture) :
            output.replace(/%d/i, number);
    }

    function pastFuture (diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias (unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({unit: u, priority: priorities[u]});
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken (token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '', i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1         = /\d/;            //       0 - 9
    var match2         = /\d\d/;          //      00 - 99
    var match3         = /\d{3}/;         //     000 - 999
    var match4         = /\d{4}/;         //    0000 - 9999
    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
    var match1to2      = /\d\d?/;         //       0 - 99
    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
    var match1to3      = /\d{1,3}/;       //       0 - 999
    var match1to4      = /\d{1,4}/;       //       0 - 9999
    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

    var matchUnsigned  = /\d+/;           //       0 - inf
    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

    // any word (or two) characters or numbers including two/three word month in arabic.
    // includes scottish gaelic two word and hyphenated months
    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

    var regexes = {};

    function addRegexToken (token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
            return (isStrict && strictRegex) ? strictRegex : regex;
        };
    }

    function getParseRegexForToken (token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }));
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken (token, callback) {
        var i, func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken (token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY',   4],       0, 'year');
    addFormatToken(0, ['YYYYY',  5],       0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y',      matchSigned);
    addRegexToken('YY',     match1to2, match2);
    addRegexToken('YYYY',   match1to4, match4);
    addRegexToken('YYYYY',  match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear () {
        return isLeapYear(this.year());
    }

    function makeGetSet (unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get (mom, unit) {
        return mom.isValid() ?
            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
    }

    function set$1 (mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
            }
            else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet (units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }


    function stringSet (units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M',    match1to2);
    addRegexToken('MM',   match1to2, match2);
    addRegexToken('MMM',  function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths (m, format) {
        if (!m) {
            return isArray(this._months) ? this._months :
                this._months['standalone'];
        }
        return isArray(this._months) ? this._months[m.month()] :
            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort (m, format) {
        if (!m) {
            return isArray(this._monthsShort) ? this._monthsShort :
                this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse (monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth (mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth (value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth () {
        return daysInMonth(this.year(), this.month());
    }

    var defaultMonthsShortRegex = matchWord;
    function monthsShortRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ?
                this._monthsShortStrictRegex : this._monthsShortRegex;
        }
    }

    var defaultMonthsRegex = matchWord;
    function monthsRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ?
                this._monthsStrictRegex : this._monthsRegex;
        }
    }

    function computeMonthsParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    }

    function createDate (y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate (y) {
        var date;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            var args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear, resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek, resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w',  match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W',  match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek (mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek () {
        return this._week.dow;
    }

    function localeFirstDayOfYear () {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek (input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek (input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d',    match1to2);
    addRegexToken('e',    match1to2);
    addRegexToken('E',    match1to2);
    addRegexToken('dd',   function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd',   function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd',   function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays (ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays (m, format) {
        var weekdays = isArray(this._weekdays) ? this._weekdays :
            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];
        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)
            : (m) ? weekdays[m.day()] : weekdays;
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse (weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
            }
            if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    var defaultWeekdaysRegex = matchWord;
    function weekdaysRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ?
                this._weekdaysStrictRegex : this._weekdaysRegex;
        }
    }

    var defaultWeekdaysShortRegex = matchWord;
    function weekdaysShortRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ?
                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
    }

    var defaultWeekdaysMinRegex = matchWord;
    function weekdaysMinRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ?
                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
    }


    function computeWeekdaysParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom, minp, shortp, longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = this.weekdaysMin(mom, '');
            shortp = this.weekdaysShort(mom, '');
            longp = this.weekdays(mom, '');
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    function meridiem (token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem (isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a',  matchMeridiem);
    addRegexToken('A',  matchMeridiem);
    addRegexToken('H',  match1to2);
    addRegexToken('h',  match1to2);
    addRegexToken('k',  match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM (input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return ((input + '').toLowerCase().charAt(0) === 'p');
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }


    // MOMENTS

    // Setting the hour should keep the time, because the user explicitly
    // specified which hour they want. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    var getSetHour = makeGetSet('Hours', true);

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse
    };

    // internal storage for locale config files
    var locales = {};
    var localeFamilies = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null;
        // TODO: Find a better way to register and load all the locales in Node
        if (!locales[name] && (typeof module !== 'undefined') &&
                module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                var aliasedRequire = require;
                __webpack_require__(551)("./" + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {}
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale (key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            }
            else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            }
            else {
                if ((typeof console !==  'undefined') && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale (name, config) {
        if (config !== null) {
            var locale, parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride',
                        'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);


            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale, tmpLocale, parentConfig = baseConfig;
            // MERGE
            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
                parentConfig = tmpLocale._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow (m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray (config) {
        var i, date, input = [], currentDate, expectedWeekday, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            var curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

    var isoDates = [
        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
        ['YYYY-DDD', /\d{4}-\d{3}/],
        ['YYYY-MM', /\d{4}-\d\d/, false],
        ['YYYYYYMMDD', /[+-]\d{10}/],
        ['YYYYMMDD', /\d{8}/],
        // YYYYMM is NOT allowed by the standard
        ['GGGG[W]WWE', /\d{4}W\d{3}/],
        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
        ['YYYYDDD', /\d{7}/]
    ];

    // iso time formats and regexes
    var isoTimes = [
        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
        ['HH:mm', /\d\d:\d\d/],
        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
        ['HHmmss', /\d\d\d\d\d\d/],
        ['HHmm', /\d\d\d\d/],
        ['HH', /\d\d/]
    ];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    // date from iso format
    function configFromISO(config) {
        var i, l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime, dateFormat, timeFormat, tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10)
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
    };

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10);
            var m = hm % 100, h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));
        if (match) {
            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        // Final attempt, use Input Fallback
        hooks.createFromInputFallback(config);
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
        'discouraged and will be removed in an upcoming major release. Please refer to ' +
        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            // console.log('token', token, 'parsedInput', parsedInput,
            //         'regex', getParseRegexForToken(token, config));
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                }
                else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }


    function meridiemFixWrap (locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
            return obj && parseInt(obj, 10);
        });

        configFromArray(config);
    }

    function createFromConfig (config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig (config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        }  else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC (input, format, locale, strict, isUTC) {
        var c = {};

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if ((isObject(input) && isObjectEmpty(input)) ||
                (isArray(input) && input.length === 0)) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    var prototypeMax = deprecate(
        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +(new Date());
    };

    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

    function isDurationValid(m) {
        for (var key in m) {
            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                return false;
            }
        }

        var unitHasDecimal = false;
        for (var i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration (duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration (obj) {
        return obj instanceof Duration;
    }

    function absRound (number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // FORMATTING

    function offset (token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z',  matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher);

        if (matches === null) {
            return null;
        }

        var chunk   = matches[matches.length - 1] || [];
        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ?
          0 :
          parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset (m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset (input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone (input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC (keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal (keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset () {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            }
            else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset (input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime () {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted () {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted = this.isValid() &&
                compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal () {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset () {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc () {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    // and further modified to allow for strings containing both week and day
    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms : input._milliseconds,
                d  : input._days,
                M  : input._months
            };
        } else if (isNumber(input)) {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y  : 0,
                d  : toInt(match[DATE])                         * sign,
                h  : toInt(match[HOUR])                         * sign,
                m  : toInt(match[MINUTE])                       * sign,
                s  : toInt(match[SECOND])                       * sign,
                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
            };
        } else if (!!(match = isoRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y : parseIso(match[2], sign),
                M : parseIso(match[3], sign),
                w : parseIso(match[4], sign),
                d : parseIso(match[5], sign),
                h : parseIso(match[6], sign),
                m : parseIso(match[7], sign),
                s : parseIso(match[8], sign)
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso (inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return {milliseconds: 0, months: 0};
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract (mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add      = createAdder(1, 'add');
    var subtract = createAdder(-1, 'subtract');

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
    }

    function calendar$1 (time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse';

        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
    }

    function clone () {
        return new Moment(this);
    }

    function isAfter (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween (from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
    }

    function isSame (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
    }

    function isSameOrAfter (input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore (input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff (input, units, asFloat) {
        var that,
            zoneDelta,
            output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year': output = monthDiff(this, that) / 12; break;
            case 'month': output = monthDiff(this, that); break;
            case 'quarter': output = monthDiff(this, that) / 3; break;
            case 'second': output = (this - that) / 1e3; break; // 1000
            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default: output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff (a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString () {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true;
        var m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect () {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment';
        var zone = '';
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        var prefix = '[' + func + '("]';
        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
        var suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format (inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow (withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow (withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale (key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData () {
        return this._locale;
    }

    var MS_PER_SECOND = 1000;
    var MS_PER_MINUTE = 60 * MS_PER_SECOND;
    var MS_PER_HOUR = 60 * MS_PER_MINUTE;
    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return (dividend % divisor + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf () {
        return this._d.valueOf() - ((this._offset || 0) * 60000);
    }

    function unix () {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate () {
        return new Date(this.valueOf());
    }

    function toArray () {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject () {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function toJSON () {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2 () {
        return isValid(this);
    }

    function parsingFlags () {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt () {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        };
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken (token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg',     'weekYear');
    addWeekYearFormatToken('ggggg',    'weekYear');
    addWeekYearFormatToken('GGGG',  'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);


    // PARSING

    addRegexToken('G',      matchSigned);
    addRegexToken('g',      matchSigned);
    addRegexToken('GG',     match1to2, match2);
    addRegexToken('gg',     match1to2, match2);
    addRegexToken('GGGG',   match1to4, match4);
    addRegexToken('gggg',   match1to4, match4);
    addRegexToken('GGGGG',  match1to6, match6);
    addRegexToken('ggggg',  match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy);
    }

    function getSetISOWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input, this.isoWeek(), this.isoWeekday(), 1, 4);
    }

    function getISOWeeksInYear () {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear () {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter (input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D',  match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict ?
          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
          locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD',  match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear (input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m',  match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s',  match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });


    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S',    match1to3, match1);
    addRegexToken('SS',   match1to3, match2);
    addRegexToken('SSS',  match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }
    // MOMENTS

    var getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z',  0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr () {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName () {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add               = add;
    proto.calendar          = calendar$1;
    proto.clone             = clone;
    proto.diff              = diff;
    proto.endOf             = endOf;
    proto.format            = format;
    proto.from              = from;
    proto.fromNow           = fromNow;
    proto.to                = to;
    proto.toNow             = toNow;
    proto.get               = stringGet;
    proto.invalidAt         = invalidAt;
    proto.isAfter           = isAfter;
    proto.isBefore          = isBefore;
    proto.isBetween         = isBetween;
    proto.isSame            = isSame;
    proto.isSameOrAfter     = isSameOrAfter;
    proto.isSameOrBefore    = isSameOrBefore;
    proto.isValid           = isValid$2;
    proto.lang              = lang;
    proto.locale            = locale;
    proto.localeData        = localeData;
    proto.max               = prototypeMax;
    proto.min               = prototypeMin;
    proto.parsingFlags      = parsingFlags;
    proto.set               = stringSet;
    proto.startOf           = startOf;
    proto.subtract          = subtract;
    proto.toArray           = toArray;
    proto.toObject          = toObject;
    proto.toDate            = toDate;
    proto.toISOString       = toISOString;
    proto.inspect           = inspect;
    proto.toJSON            = toJSON;
    proto.toString          = toString;
    proto.unix              = unix;
    proto.valueOf           = valueOf;
    proto.creationData      = creationData;
    proto.year       = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear    = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month       = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week           = proto.weeks        = getSetWeek;
    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
    proto.weeksInYear    = getWeeksInYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.date       = getSetDayOfMonth;
    proto.day        = proto.days             = getSetDayOfWeek;
    proto.weekday    = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear  = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset            = getSetOffset;
    proto.utc                  = setOffsetToUTC;
    proto.local                = setOffsetToLocal;
    proto.parseZone            = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST                = isDaylightSavingTime;
    proto.isLocal              = isLocal;
    proto.isUtcOffset          = isUtcOffset;
    proto.isUtc                = isUtc;
    proto.isUTC                = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

    function createUnix (input) {
        return createLocal(input * 1000);
    }

    function createInZone () {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat (string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar        = calendar;
    proto$1.longDateFormat  = longDateFormat;
    proto$1.invalidDate     = invalidDate;
    proto$1.ordinal         = ordinal;
    proto$1.preparse        = preParsePostFormat;
    proto$1.postformat      = preParsePostFormat;
    proto$1.relativeTime    = relativeTime;
    proto$1.pastFuture      = pastFuture;
    proto$1.set             = set;

    proto$1.months            =        localeMonths;
    proto$1.monthsShort       =        localeMonthsShort;
    proto$1.monthsParse       =        localeMonthsParse;
    proto$1.monthsRegex       = monthsRegex;
    proto$1.monthsShortRegex  = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays       =        localeWeekdays;
    proto$1.weekdaysMin    =        localeWeekdaysMin;
    proto$1.weekdaysShort  =        localeWeekdaysShort;
    proto$1.weekdaysParse  =        localeWeekdaysParse;

    proto$1.weekdaysRegex       =        weekdaysRegex;
    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1 (format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl (format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl (localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths (format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort (format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    // Side effect imports

    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

    var mathAbs = Math.abs;

    function abs () {
        var data           = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days         = mathAbs(this._days);
        this._months       = mathAbs(this._months);

        data.milliseconds  = mathAbs(data.milliseconds);
        data.seconds       = mathAbs(data.seconds);
        data.minutes       = mathAbs(data.minutes);
        data.hours         = mathAbs(data.hours);
        data.months        = mathAbs(data.months);
        data.years         = mathAbs(data.years);

        return this;
    }

    function addSubtract$1 (duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days         += direction * other._days;
        duration._months       += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1 (input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1 (input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil (number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble () {
        var milliseconds = this._milliseconds;
        var days         = this._days;
        var months       = this._months;
        var data         = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0))) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds           = absFloor(milliseconds / 1000);
        data.seconds      = seconds % 60;

        minutes           = absFloor(seconds / 60);
        data.minutes      = minutes % 60;

        hours             = absFloor(minutes / 60);
        data.hours        = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days   = days;
        data.months = months;
        data.years  = years;

        return this;
    }

    function daysToMonths (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
    }

    function monthsToDays (months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
    }

    function as (units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':   return months;
                case 'quarter': return months / 3;
                case 'year':    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week'   : return days / 7     + milliseconds / 6048e5;
                case 'day'    : return days         + milliseconds / 864e5;
                case 'hour'   : return days * 24    + milliseconds / 36e5;
                case 'minute' : return days * 1440  + milliseconds / 6e4;
                case 'second' : return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                default: throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1 () {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs (alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds      = makeAs('s');
    var asMinutes      = makeAs('m');
    var asHours        = makeAs('h');
    var asDays         = makeAs('d');
    var asWeeks        = makeAs('w');
    var asMonths       = makeAs('M');
    var asQuarters     = makeAs('Q');
    var asYears        = makeAs('y');

    function clone$1 () {
        return createDuration(this);
    }

    function get$2 (units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds      = makeGetter('seconds');
    var minutes      = makeGetter('minutes');
    var hours        = makeGetter('hours');
    var days         = makeGetter('days');
    var months       = makeGetter('months');
    var years        = makeGetter('years');

    function weeks () {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        ss: 44,         // a few seconds to seconds
        s : 45,         // seconds to minute
        m : 45,         // minutes to hour
        h : 22,         // hours to day
        d : 26,         // days to month
        M : 11          // months to year
    };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds  = round(duration.as('s'));
        var minutes  = round(duration.as('m'));
        var hours    = round(duration.as('h'));
        var days     = round(duration.as('d'));
        var months   = round(duration.as('M'));
        var years    = round(duration.as('y'));

        var a = seconds <= thresholds.ss && ['s', seconds]  ||
                seconds < thresholds.s   && ['ss', seconds] ||
                minutes <= 1             && ['m']           ||
                minutes < thresholds.m   && ['mm', minutes] ||
                hours   <= 1             && ['h']           ||
                hours   < thresholds.h   && ['hh', hours]   ||
                days    <= 1             && ['d']           ||
                days    < thresholds.d   && ['dd', days]    ||
                months  <= 1             && ['M']           ||
                months  < thresholds.M   && ['MM', months]  ||
                years   <= 1             && ['y']           || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding (roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof(roundingFunction) === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold (threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize (withSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return ((x > 0) - (x < 0)) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000;
        var days         = abs$1(this._days);
        var months       = abs$1(this._months);
        var minutes, hours, years;

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes           = absFloor(seconds / 60);
        hours             = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years  = absFloor(months / 12);
        months %= 12;


        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
        var total = this.asSeconds();

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        var totalSign = total < 0 ? '-' : '';
        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return totalSign + 'P' +
            (Y ? ymSign + Y + 'Y' : '') +
            (M ? ymSign + M + 'M' : '') +
            (D ? daysSign + D + 'D' : '') +
            ((h || m || s) ? 'T' : '') +
            (h ? hmsSign + h + 'H' : '') +
            (m ? hmsSign + m + 'M' : '') +
            (s ? hmsSign + s + 'S' : '');
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid        = isValid$1;
    proto$2.abs            = abs;
    proto$2.add            = add$1;
    proto$2.subtract       = subtract$1;
    proto$2.as             = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds      = asSeconds;
    proto$2.asMinutes      = asMinutes;
    proto$2.asHours        = asHours;
    proto$2.asDays         = asDays;
    proto$2.asWeeks        = asWeeks;
    proto$2.asMonths       = asMonths;
    proto$2.asQuarters     = asQuarters;
    proto$2.asYears        = asYears;
    proto$2.valueOf        = valueOf$1;
    proto$2._bubble        = bubble;
    proto$2.clone          = clone$1;
    proto$2.get            = get$2;
    proto$2.milliseconds   = milliseconds;
    proto$2.seconds        = seconds;
    proto$2.minutes        = minutes;
    proto$2.hours          = hours;
    proto$2.days           = days;
    proto$2.weeks          = weeks;
    proto$2.months         = months;
    proto$2.years          = years;
    proto$2.humanize       = humanize;
    proto$2.toISOString    = toISOString$1;
    proto$2.toString       = toISOString$1;
    proto$2.toJSON         = toISOString$1;
    proto$2.locale         = locale;
    proto$2.localeData     = localeData;

    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
    proto$2.lang = lang;

    // Side effect imports

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    // Side effect imports


    hooks.version = '2.24.0';

    setHookCallback(createLocal);

    hooks.fn                    = proto;
    hooks.min                   = min;
    hooks.max                   = max;
    hooks.now                   = now;
    hooks.utc                   = createUTC;
    hooks.unix                  = createUnix;
    hooks.months                = listMonths;
    hooks.isDate                = isDate;
    hooks.locale                = getSetGlobalLocale;
    hooks.invalid               = createInvalid;
    hooks.duration              = createDuration;
    hooks.isMoment              = isMoment;
    hooks.weekdays              = listWeekdays;
    hooks.parseZone             = createInZone;
    hooks.localeData            = getLocale;
    hooks.isDuration            = isDuration;
    hooks.monthsShort           = listMonthsShort;
    hooks.weekdaysMin           = listWeekdaysMin;
    hooks.defineLocale          = defineLocale;
    hooks.updateLocale          = updateLocale;
    hooks.locales               = listLocales;
    hooks.weekdaysShort         = listWeekdaysShort;
    hooks.normalizeUnits        = normalizeUnits;
    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat        = getCalendarFormat;
    hooks.prototype             = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD',                             // <input type="date" />
        TIME: 'HH:mm',                                  // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW',                             // <input type="week" />
        MONTH: 'YYYY-MM'                                // <input type="month" />
    };

    return hooks;

})));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(146)(module)))

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = whitespace

var fromCode = String.fromCharCode
var re = /\s/

// Check if the given character code, or the character code at the first
// character, is a whitespace character.
function whitespace(character) {
  return re.test(
    typeof character === 'number' ? fromCode(character) : character.charAt(0)
  )
}


/***/ }),
/* 394 */
/***/ (function(module, exports) {

module.exports = extend

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}


/***/ }),
/* 395 */
/***/ (function(module, exports) {


exports = module.exports = trim;

function trim(str){
  return str.replace(/^\s*|\s*$/g, '');
}

exports.left = function(str){
  return str.replace(/^\s*/, '');
};

exports.right = function(str){
  return str.replace(/\s*$/, '');
};


/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = decimal

// Check if the given character code, or the character code at the first
// character, is decimal.
function decimal(character) {
  var code = typeof character === 'string' ? character.charCodeAt(0) : character

  return code >= 48 && code <= 57 /* 0-9 */
}


/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = visit

var visitParents = __webpack_require__(612)

var CONTINUE = visitParents.CONTINUE
var SKIP = visitParents.SKIP
var EXIT = visitParents.EXIT

visit.CONTINUE = CONTINUE
visit.SKIP = SKIP
visit.EXIT = EXIT

function visit(tree, test, visitor, reverse) {
  if (typeof test === 'function' && typeof visitor !== 'function') {
    reverse = visitor
    visitor = test
    test = null
  }

  visitParents(tree, test, overload, reverse)

  function overload(node, parents) {
    var parent = parents[parents.length - 1]
    var index = parent ? parent.children.indexOf(node) : null
    return visitor(node, index, parent)
  }
}


/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var legacy = __webpack_require__(546)
var invalid = __webpack_require__(547)
var decimal = __webpack_require__(396)
var hexadecimal = __webpack_require__(543)
var alphanumerical = __webpack_require__(541)
var decodeEntity = __webpack_require__(552)

module.exports = parseEntities

var own = {}.hasOwnProperty
var fromCharCode = String.fromCharCode
var noop = Function.prototype

// Default settings.
var defaults = {
  warning: null,
  reference: null,
  text: null,
  warningContext: null,
  referenceContext: null,
  textContext: null,
  position: {},
  additional: null,
  attribute: false,
  nonTerminated: true
}

// Characters.
var tab = 9 // '\t'
var lineFeed = 10 // '\n'
var formFeed = 12 //  '\f'
var space = 32 // ' '
var ampersand = 38 //  '&'
var semicolon = 59 //  ';'
var lessThan = 60 //  '<'
var equalsTo = 61 //  '='
var numberSign = 35 //  '#'
var uppercaseX = 88 //  'X'
var lowercaseX = 120 //  'x'
var replacementCharacter = 65533 // '�'

// Reference types.
var name = 'named'
var hexa = 'hexadecimal'
var deci = 'decimal'

// Map of bases.
var bases = {}

bases[hexa] = 16
bases[deci] = 10

// Map of types to tests.
// Each type of character reference accepts different characters.
// This test is used to detect whether a reference has ended (as the semicolon
// is not strictly needed).
var tests = {}

tests[name] = alphanumerical
tests[deci] = decimal
tests[hexa] = hexadecimal

// Warning types.
var namedNotTerminated = 1
var numericNotTerminated = 2
var namedEmpty = 3
var numericEmpty = 4
var namedUnknown = 5
var numericDisallowed = 6
var numericProhibited = 7

// Warning messages.
var messages = {}

messages[namedNotTerminated] =
  'Named character references must be terminated by a semicolon'
messages[numericNotTerminated] =
  'Numeric character references must be terminated by a semicolon'
messages[namedEmpty] = 'Named character references cannot be empty'
messages[numericEmpty] = 'Numeric character references cannot be empty'
messages[namedUnknown] = 'Named character references must be known'
messages[numericDisallowed] =
  'Numeric character references cannot be disallowed'
messages[numericProhibited] =
  'Numeric character references cannot be outside the permissible Unicode range'

// Wrap to ensure clean parameters are given to `parse`.
function parseEntities(value, options) {
  var settings = {}
  var option
  var key

  if (!options) {
    options = {}
  }

  for (key in defaults) {
    option = options[key]
    settings[key] =
      option === null || option === undefined ? defaults[key] : option
  }

  if (settings.position.indent || settings.position.start) {
    settings.indent = settings.position.indent || []
    settings.position = settings.position.start
  }

  return parse(value, settings)
}

// Parse entities.
// eslint-disable-next-line complexity
function parse(value, settings) {
  var additional = settings.additional
  var nonTerminated = settings.nonTerminated
  var handleText = settings.text
  var handleReference = settings.reference
  var handleWarning = settings.warning
  var textContext = settings.textContext
  var referenceContext = settings.referenceContext
  var warningContext = settings.warningContext
  var pos = settings.position
  var indent = settings.indent || []
  var length = value.length
  var index = 0
  var lines = -1
  var column = pos.column || 1
  var line = pos.line || 1
  var queue = ''
  var result = []
  var entityCharacters
  var namedEntity
  var terminated
  var characters
  var character
  var reference
  var following
  var warning
  var reason
  var output
  var entity
  var begin
  var start
  var type
  var test
  var prev
  var next
  var diff
  var end

  if (typeof additional === 'string') {
    additional = additional.charCodeAt(0)
  }

  // Cache the current point.
  prev = now()

  // Wrap `handleWarning`.
  warning = handleWarning ? parseError : noop

  // Ensure the algorithm walks over the first character and the end (inclusive).
  index--
  length++

  while (++index < length) {
    // If the previous character was a newline.
    if (character === lineFeed) {
      column = indent[lines] || 1
    }

    character = value.charCodeAt(index)

    if (character === ampersand) {
      following = value.charCodeAt(index + 1)

      // The behaviour depends on the identity of the next character.
      if (
        following === tab ||
        following === lineFeed ||
        following === formFeed ||
        following === space ||
        following === ampersand ||
        following === lessThan ||
        following !== following ||
        (additional && following === additional)
      ) {
        // Not a character reference.
        // No characters are consumed, and nothing is returned.
        // This is not an error, either.
        queue += fromCharCode(character)
        column++

        continue
      }

      start = index + 1
      begin = start
      end = start

      if (following === numberSign) {
        // Numerical entity.
        end = ++begin

        // The behaviour further depends on the next character.
        following = value.charCodeAt(end)

        if (following === uppercaseX || following === lowercaseX) {
          // ASCII hex digits.
          type = hexa
          end = ++begin
        } else {
          // ASCII digits.
          type = deci
        }
      } else {
        // Named entity.
        type = name
      }

      entityCharacters = ''
      entity = ''
      characters = ''
      test = tests[type]
      end--

      while (++end < length) {
        following = value.charCodeAt(end)

        if (!test(following)) {
          break
        }

        characters += fromCharCode(following)

        // Check if we can match a legacy named reference.
        // If so, we cache that as the last viable named reference.
        // This ensures we do not need to walk backwards later.
        if (type === name && own.call(legacy, characters)) {
          entityCharacters = characters
          entity = legacy[characters]
        }
      }

      terminated = value.charCodeAt(end) === semicolon

      if (terminated) {
        end++

        namedEntity = type === name ? decodeEntity(characters) : false

        if (namedEntity) {
          entityCharacters = characters
          entity = namedEntity
        }
      }

      diff = 1 + end - start

      if (!terminated && !nonTerminated) {
        // Empty.
      } else if (!characters) {
        // An empty (possible) entity is valid, unless it’s numeric (thus an
        // ampersand followed by an octothorp).
        if (type !== name) {
          warning(numericEmpty, diff)
        }
      } else if (type === name) {
        // An ampersand followed by anything unknown, and not terminated, is
        // invalid.
        if (terminated && !entity) {
          warning(namedUnknown, 1)
        } else {
          // If theres something after an entity name which is not known, cap
          // the reference.
          if (entityCharacters !== characters) {
            end = begin + entityCharacters.length
            diff = 1 + end - begin
            terminated = false
          }

          // If the reference is not terminated, warn.
          if (!terminated) {
            reason = entityCharacters ? namedNotTerminated : namedEmpty

            if (settings.attribute) {
              following = value.charCodeAt(end)

              if (following === equalsTo) {
                warning(reason, diff)
                entity = null
              } else if (alphanumerical(following)) {
                entity = null
              } else {
                warning(reason, diff)
              }
            } else {
              warning(reason, diff)
            }
          }
        }

        reference = entity
      } else {
        if (!terminated) {
          // All non-terminated numeric entities are not rendered, and trigger a
          // warning.
          warning(numericNotTerminated, diff)
        }

        // When terminated and number, parse as either hexadecimal or decimal.
        reference = parseInt(characters, bases[type])

        // Trigger a warning when the parsed number is prohibited, and replace
        // with replacement character.
        if (prohibited(reference)) {
          warning(numericProhibited, diff)
          reference = fromCharCode(replacementCharacter)
        } else if (reference in invalid) {
          // Trigger a warning when the parsed number is disallowed, and replace
          // by an alternative.
          warning(numericDisallowed, diff)
          reference = invalid[reference]
        } else {
          // Parse the number.
          output = ''

          // Trigger a warning when the parsed number should not be used.
          if (disallowed(reference)) {
            warning(numericDisallowed, diff)
          }

          // Stringify the number.
          if (reference > 0xffff) {
            reference -= 0x10000
            output += fromCharCode((reference >>> (10 & 0x3ff)) | 0xd800)
            reference = 0xdc00 | (reference & 0x3ff)
          }

          reference = output + fromCharCode(reference)
        }
      }

      // Found it!
      // First eat the queued characters as normal text, then eat an entity.
      if (reference) {
        flush()

        prev = now()
        index = end - 1
        column += end - start + 1
        result.push(reference)
        next = now()
        next.offset++

        if (handleReference) {
          handleReference.call(
            referenceContext,
            reference,
            {start: prev, end: next},
            value.slice(start - 1, end)
          )
        }

        prev = next
      } else {
        // If we could not find a reference, queue the checked characters (as
        // normal characters), and move the pointer to their end.
        // This is possible because we can be certain neither newlines nor
        // ampersands are included.
        characters = value.slice(start - 1, end)
        queue += characters
        column += characters.length
        index = end - 1
      }
    } else {
      // Handle anything other than an ampersand, including newlines and EOF.
      if (
        character === 10 // Line feed
      ) {
        line++
        lines++
        column = 0
      }

      if (character === character) {
        queue += fromCharCode(character)
        column++
      } else {
        flush()
      }
    }
  }

  // Return the reduced nodes, and any possible warnings.
  return result.join('')

  // Get current position.
  function now() {
    return {
      line: line,
      column: column,
      offset: index + (pos.offset || 0)
    }
  }

  // “Throw” a parse-error: a warning.
  function parseError(code, offset) {
    var position = now()

    position.column += offset
    position.offset += offset

    handleWarning.call(warningContext, messages[code], position, code)
  }

  // Flush `queue` (normal text).
  // Macro invoked before each entity and at the end of `value`.
  // Does nothing when `queue` is empty.
  function flush() {
    if (queue) {
      result.push(queue)

      if (handleText) {
        handleText.call(textContext, queue, {start: prev, end: now()})
      }

      queue = ''
    }
  }
}

// Check if `character` is outside the permissible unicode range.
function prohibited(code) {
  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff
}

// Check if `character` is disallowed.
function disallowed(code) {
  return (
    (code >= 0x0001 && code <= 0x0008) ||
    code === 0x000b ||
    (code >= 0x000d && code <= 0x001f) ||
    (code >= 0x007f && code <= 0x009f) ||
    (code >= 0xfdd0 && code <= 0xfdef) ||
    (code & 0xffff) === 0xffff ||
    (code & 0xffff) === 0xfffe
  )
}


/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = interrupt;

function interrupt(interruptors, tokenizers, ctx, params) {
  var bools = ['pedantic', 'commonmark'];
  var count = bools.length;
  var length = interruptors.length;
  var index = -1;
  var interruptor;
  var config;
  var fn;
  var offset;
  var bool;
  var ignore;

  while (++index < length) {
    interruptor = interruptors[index];
    config = interruptor[1] || {};
    fn = interruptor[0];
    offset = -1;
    ignore = false;

    while (++offset < count) {
      bool = bools[offset];

      if (config[bool] !== undefined && config[bool] !== ctx.options[bool]) {
        ignore = true;
        break;
      }
    }

    if (ignore) {
      continue;
    }

    if (tokenizers[fn].apply(ctx, params)) {
      return true;
    }
  }

  return false;
}


/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var collapseWhiteSpace = __webpack_require__(538);

module.exports = normalize;

/* Normalize an identifier.  Collapses multiple white space
 * characters into a single space, and removes casing. */
function normalize(value) {
  return collapseWhiteSpace(value).toLowerCase();
}


/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * repeat-string <https://github.com/jonschlinkert/repeat-string>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */



/**
 * Results cache
 */

var res = '';
var cache;

/**
 * Expose `repeat`
 */

module.exports = repeat;

/**
 * Repeat the given `string` the specified `number`
 * of times.
 *
 * **Example:**
 *
 * ```js
 * var repeat = require('repeat-string');
 * repeat('A', 5);
 * //=> AAAAA
 * ```
 *
 * @param {String} `string` The string to repeat
 * @param {Number} `number` The number of times to repeat the string
 * @return {String} Repeated string
 * @api public
 */

function repeat(str, num) {
  if (typeof str !== 'string') {
    throw new TypeError('expected a string');
  }

  // cover common, quick use cases
  if (num === 1) return str;
  if (num === 2) return str + str;

  var max = str.length * num;
  if (cache !== str || typeof cache === 'undefined') {
    cache = str;
    res = '';
  } else if (res.length >= max) {
    return res.substr(0, max);
  }

  while (max > res.length && num > 1) {
    if (num & 1) {
      res += str;
    }

    num >>= 1;
    str += str;
  }

  res += str;
  res = res.substr(0, max);
  return res;
}


/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = trimTrailingLines

var line = '\n'

// Remove final newline characters from `value`.
function trimTrailingLines(value) {
  var val = String(value)
  var index = val.length

  while (val.charAt(--index) === line) {
    // Empty
  }

  return val.slice(0, index + 1)
}


/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = alphabetical

// Check if the given character code, or the character code at the first
// character, is alphabetical.
function alphabetical(character) {
  var code = typeof character === 'string' ? character.charCodeAt(0) : character

  return (
    (code >= 97 && code <= 122) /* a-z */ ||
    (code >= 65 && code <= 90) /* A-Z */
  )
}


/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var af = moment.defineLocale('af', {
        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
        meridiemParse: /vm|nm/i,
        isPM : function (input) {
            return /^nm$/i.test(input);
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'vm' : 'VM';
            } else {
                return isLower ? 'nm' : 'NM';
            }
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Vandag om] LT',
            nextDay : '[Môre om] LT',
            nextWeek : 'dddd [om] LT',
            lastDay : '[Gister om] LT',
            lastWeek : '[Laas] dddd [om] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'oor %s',
            past : '%s gelede',
            s : '\'n paar sekondes',
            ss : '%d sekondes',
            m : '\'n minuut',
            mm : '%d minute',
            h : '\'n uur',
            hh : '%d ure',
            d : '\'n dag',
            dd : '%d dae',
            M : '\'n maand',
            MM : '%d maande',
            y : '\'n jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
        },
        week : {
            dow : 1, // Maandag is die eerste dag van die week.
            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
        }
    });

    return af;

})));


/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arDz = moment.defineLocale('ar-dz', {
        months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return arDz;

})));


/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arKw = moment.defineLocale('ar-kw', {
        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return arKw;

})));


/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '1',
        '2': '2',
        '3': '3',
        '4': '4',
        '5': '5',
        '6': '6',
        '7': '7',
        '8': '8',
        '9': '9',
        '0': '0'
    }, pluralForm = function (n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    }, plurals = {
        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    }, pluralize = function (u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    }, months = [
        'يناير',
        'فبراير',
        'مارس',
        'أبريل',
        'مايو',
        'يونيو',
        'يوليو',
        'أغسطس',
        'سبتمبر',
        'أكتوبر',
        'نوفمبر',
        'ديسمبر'
    ];

    var arLy = moment.defineLocale('ar-ly', {
        months : months,
        monthsShort : months,
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/\u200FM/\u200FYYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'بعد %s',
            past : 'منذ %s',
            s : pluralize('s'),
            ss : pluralize('s'),
            m : pluralize('m'),
            mm : pluralize('m'),
            h : pluralize('h'),
            hh : pluralize('h'),
            d : pluralize('d'),
            dd : pluralize('d'),
            M : pluralize('M'),
            MM : pluralize('M'),
            y : pluralize('y'),
            yy : pluralize('y')
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return arLy;

})));


/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arMa = moment.defineLocale('ar-ma', {
        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return arMa;

})));


/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    };

    var arSa = moment.defineLocale('ar-sa', {
        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return arSa;

})));


/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arTn = moment.defineLocale('ar-tn', {
        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss : '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return arTn;

})));


/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    }, pluralForm = function (n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    }, plurals = {
        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    }, pluralize = function (u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    }, months = [
        'يناير',
        'فبراير',
        'مارس',
        'أبريل',
        'مايو',
        'يونيو',
        'يوليو',
        'أغسطس',
        'سبتمبر',
        'أكتوبر',
        'نوفمبر',
        'ديسمبر'
    ];

    var ar = moment.defineLocale('ar', {
        months : months,
        monthsShort : months,
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/\u200FM/\u200FYYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'بعد %s',
            past : 'منذ %s',
            s : pluralize('s'),
            ss : pluralize('s'),
            m : pluralize('m'),
            mm : pluralize('m'),
            h : pluralize('h'),
            hh : pluralize('h'),
            d : pluralize('d'),
            dd : pluralize('d'),
            M : pluralize('M'),
            MM : pluralize('M'),
            y : pluralize('y'),
            yy : pluralize('y')
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return ar;

})));


/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        1: '-inci',
        5: '-inci',
        8: '-inci',
        70: '-inci',
        80: '-inci',
        2: '-nci',
        7: '-nci',
        20: '-nci',
        50: '-nci',
        3: '-üncü',
        4: '-üncü',
        100: '-üncü',
        6: '-ncı',
        9: '-uncu',
        10: '-uncu',
        30: '-uncu',
        60: '-ıncı',
        90: '-ıncı'
    };

    var az = moment.defineLocale('az', {
        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[bugün saat] LT',
            nextDay : '[sabah saat] LT',
            nextWeek : '[gələn həftə] dddd [saat] LT',
            lastDay : '[dünən] LT',
            lastWeek : '[keçən həftə] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s sonra',
            past : '%s əvvəl',
            s : 'birneçə saniyə',
            ss : '%d saniyə',
            m : 'bir dəqiqə',
            mm : '%d dəqiqə',
            h : 'bir saat',
            hh : '%d saat',
            d : 'bir gün',
            dd : '%d gün',
            M : 'bir ay',
            MM : '%d ay',
            y : 'bir il',
            yy : '%d il'
        },
        meridiemParse: /gecə|səhər|gündüz|axşam/,
        isPM : function (input) {
            return /^(gündüz|axşam)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'gecə';
            } else if (hour < 12) {
                return 'səhər';
            } else if (hour < 17) {
                return 'gündüz';
            } else {
                return 'axşam';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
        ordinal : function (number) {
            if (number === 0) {  // special case for zero
                return number + '-ıncı';
            }
            var a = number % 10,
                b = number % 100 - a,
                c = number >= 100 ? 100 : null;
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return az;

})));


/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
            'dd': 'дзень_дні_дзён',
            'MM': 'месяц_месяцы_месяцаў',
            'yy': 'год_гады_гадоў'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвіліна' : 'хвіліну';
        }
        else if (key === 'h') {
            return withoutSuffix ? 'гадзіна' : 'гадзіну';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }

    var be = moment.defineLocale('be', {
        months : {
            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
        },
        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
        weekdays : {
            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
            isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/
        },
        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY г.',
            LLL : 'D MMMM YYYY г., HH:mm',
            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
        },
        calendar : {
            sameDay: '[Сёння ў] LT',
            nextDay: '[Заўтра ў] LT',
            lastDay: '[Учора ў] LT',
            nextWeek: function () {
                return '[У] dddd [ў] LT';
            },
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return '[У мінулую] dddd [ў] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[У мінулы] dddd [ў] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'праз %s',
            past : '%s таму',
            s : 'некалькі секунд',
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : relativeTimeWithPlural,
            hh : relativeTimeWithPlural,
            d : 'дзень',
            dd : relativeTimeWithPlural,
            M : 'месяц',
            MM : relativeTimeWithPlural,
            y : 'год',
            yy : relativeTimeWithPlural
        },
        meridiemParse: /ночы|раніцы|дня|вечара/,
        isPM : function (input) {
            return /^(дня|вечара)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночы';
            } else if (hour < 12) {
                return 'раніцы';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечара';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
                case 'D':
                    return number + '-га';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return be;

})));


/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var bg = moment.defineLocale('bg', {
        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'D.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay : '[Днес в] LT',
            nextDay : '[Утре в] LT',
            nextWeek : 'dddd [в] LT',
            lastDay : '[Вчера в] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[В изминалата] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[В изминалия] dddd [в] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'след %s',
            past : 'преди %s',
            s : 'няколко секунди',
            ss : '%d секунди',
            m : 'минута',
            mm : '%d минути',
            h : 'час',
            hh : '%d часа',
            d : 'ден',
            dd : '%d дни',
            M : 'месец',
            MM : '%d месеца',
            y : 'година',
            yy : '%d години'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal : function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return bg;

})));


/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var bm = moment.defineLocale('bm', {
        months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
        monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
        weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
        weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
        weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'MMMM [tile] D [san] YYYY',
            LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
            LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
        },
        calendar : {
            sameDay : '[Bi lɛrɛ] LT',
            nextDay : '[Sini lɛrɛ] LT',
            nextWeek : 'dddd [don lɛrɛ] LT',
            lastDay : '[Kunu lɛrɛ] LT',
            lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s kɔnɔ',
            past : 'a bɛ %s bɔ',
            s : 'sanga dama dama',
            ss : 'sekondi %d',
            m : 'miniti kelen',
            mm : 'miniti %d',
            h : 'lɛrɛ kelen',
            hh : 'lɛrɛ %d',
            d : 'tile kelen',
            dd : 'tile %d',
            M : 'kalo kelen',
            MM : 'kalo %d',
            y : 'san kelen',
            yy : 'san %d'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return bm;

})));


/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '১',
        '2': '২',
        '3': '৩',
        '4': '৪',
        '5': '৫',
        '6': '৬',
        '7': '৭',
        '8': '৮',
        '9': '৯',
        '0': '০'
    },
    numberMap = {
        '১': '1',
        '২': '2',
        '৩': '3',
        '৪': '4',
        '৫': '5',
        '৬': '6',
        '৭': '7',
        '৮': '8',
        '৯': '9',
        '০': '0'
    };

    var bn = moment.defineLocale('bn', {
        months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
        monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
        weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
        longDateFormat : {
            LT : 'A h:mm সময়',
            LTS : 'A h:mm:ss সময়',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm সময়',
            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
        },
        calendar : {
            sameDay : '[আজ] LT',
            nextDay : '[আগামীকাল] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[গতকাল] LT',
            lastWeek : '[গত] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s পরে',
            past : '%s আগে',
            s : 'কয়েক সেকেন্ড',
            ss : '%d সেকেন্ড',
            m : 'এক মিনিট',
            mm : '%d মিনিট',
            h : 'এক ঘন্টা',
            hh : '%d ঘন্টা',
            d : 'এক দিন',
            dd : '%d দিন',
            M : 'এক মাস',
            MM : '%d মাস',
            y : 'এক বছর',
            yy : '%d বছর'
        },
        preparse: function (string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'রাত' && hour >= 4) ||
                    (meridiem === 'দুপুর' && hour < 5) ||
                    meridiem === 'বিকাল') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'রাত';
            } else if (hour < 10) {
                return 'সকাল';
            } else if (hour < 17) {
                return 'দুপুর';
            } else if (hour < 20) {
                return 'বিকাল';
            } else {
                return 'রাত';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return bn;

})));


/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '༡',
        '2': '༢',
        '3': '༣',
        '4': '༤',
        '5': '༥',
        '6': '༦',
        '7': '༧',
        '8': '༨',
        '9': '༩',
        '0': '༠'
    },
    numberMap = {
        '༡': '1',
        '༢': '2',
        '༣': '3',
        '༤': '4',
        '༥': '5',
        '༦': '6',
        '༧': '7',
        '༨': '8',
        '༩': '9',
        '༠': '0'
    };

    var bo = moment.defineLocale('bo', {
        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[དི་རིང] LT',
            nextDay : '[སང་ཉིན] LT',
            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
            lastDay : '[ཁ་སང] LT',
            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ལ་',
            past : '%s སྔན་ལ',
            s : 'ལམ་སང',
            ss : '%d སྐར་ཆ།',
            m : 'སྐར་མ་གཅིག',
            mm : '%d སྐར་མ',
            h : 'ཆུ་ཚོད་གཅིག',
            hh : '%d ཆུ་ཚོད',
            d : 'ཉིན་གཅིག',
            dd : '%d ཉིན་',
            M : 'ཟླ་བ་གཅིག',
            MM : '%d ཟླ་བ',
            y : 'ལོ་གཅིག',
            yy : '%d ལོ'
        },
        preparse: function (string) {
            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
                    (meridiem === 'ཉིན་གུང' && hour < 5) ||
                    meridiem === 'དགོང་དག') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'མཚན་མོ';
            } else if (hour < 10) {
                return 'ཞོགས་ཀས';
            } else if (hour < 17) {
                return 'ཉིན་གུང';
            } else if (hour < 20) {
                return 'དགོང་དག';
            } else {
                return 'མཚན་མོ';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return bo;

})));


/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function relativeTimeWithMutation(number, withoutSuffix, key) {
        var format = {
            'mm': 'munutenn',
            'MM': 'miz',
            'dd': 'devezh'
        };
        return number + ' ' + mutation(format[key], number);
    }
    function specialMutationForYears(number) {
        switch (lastNumber(number)) {
            case 1:
            case 3:
            case 4:
            case 5:
            case 9:
                return number + ' bloaz';
            default:
                return number + ' vloaz';
        }
    }
    function lastNumber(number) {
        if (number > 9) {
            return lastNumber(number % 10);
        }
        return number;
    }
    function mutation(text, number) {
        if (number === 2) {
            return softMutation(text);
        }
        return text;
    }
    function softMutation(text) {
        var mutationTable = {
            'm': 'v',
            'b': 'v',
            'd': 'z'
        };
        if (mutationTable[text.charAt(0)] === undefined) {
            return text;
        }
        return mutationTable[text.charAt(0)] + text.substring(1);
    }

    var br = moment.defineLocale('br', {
        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h[e]mm A',
            LTS : 'h[e]mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D [a viz] MMMM YYYY',
            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
        },
        calendar : {
            sameDay : '[Hiziv da] LT',
            nextDay : '[Warc\'hoazh da] LT',
            nextWeek : 'dddd [da] LT',
            lastDay : '[Dec\'h da] LT',
            lastWeek : 'dddd [paset da] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'a-benn %s',
            past : '%s \'zo',
            s : 'un nebeud segondennoù',
            ss : '%d eilenn',
            m : 'ur vunutenn',
            mm : relativeTimeWithMutation,
            h : 'un eur',
            hh : '%d eur',
            d : 'un devezh',
            dd : relativeTimeWithMutation,
            M : 'ur miz',
            MM : relativeTimeWithMutation,
            y : 'ur bloaz',
            yy : specialMutationForYears
        },
        dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
        ordinal : function (number) {
            var output = (number === 1) ? 'añ' : 'vet';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return br;

})));


/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var bs = moment.defineLocale('bs', {
        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danas u] LT',
            nextDay  : '[sutra u] LT',
            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[jučer u] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'par sekundi',
            ss     : translate,
            m      : translate,
            mm     : translate,
            h      : translate,
            hh     : translate,
            d      : 'dan',
            dd     : translate,
            M      : 'mjesec',
            MM     : translate,
            y      : 'godinu',
            yy     : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return bs;

})));


/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ca = moment.defineLocale('ca', {
        months : {
            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
            format: 'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
            isFormat: /D[oD]?(\s)+MMMM/
        },
        monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
        monthsParseExact : true,
        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
        weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM [de] YYYY',
            ll : 'D MMM YYYY',
            LLL : 'D MMMM [de] YYYY [a les] H:mm',
            lll : 'D MMM YYYY, H:mm',
            LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',
            llll : 'ddd D MMM YYYY, H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            nextDay : function () {
                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            lastDay : function () {
                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'd\'aquí %s',
            past : 'fa %s',
            s : 'uns segons',
            ss : '%d segons',
            m : 'un minut',
            mm : '%d minuts',
            h : 'una hora',
            hh : '%d hores',
            d : 'un dia',
            dd : '%d dies',
            M : 'un mes',
            MM : '%d mesos',
            y : 'un any',
            yy : '%d anys'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
        ordinal : function (number, period) {
            var output = (number === 1) ? 'r' :
                (number === 2) ? 'n' :
                (number === 3) ? 'r' :
                (number === 4) ? 't' : 'è';
            if (period === 'w' || period === 'W') {
                output = 'a';
            }
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ca;

})));


/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');

    var monthsParse = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i];
    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
    var monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;

    function plural(n) {
        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':  // a few seconds / in a few seconds / a few seconds ago
                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekund');
                } else {
                    return result + 'sekundami';
                }
                break;
            case 'm':  // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minuty' : 'minut');
                } else {
                    return result + 'minutami';
                }
                break;
            case 'h':  // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodin');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':  // a day / in a day / a day ago
                return (withoutSuffix || isFuture) ? 'den' : 'dnem';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dny' : 'dní');
                } else {
                    return result + 'dny';
                }
                break;
            case 'M':  // a month / in a month / a month ago
                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'měsíce' : 'měsíců');
                } else {
                    return result + 'měsíci';
                }
                break;
            case 'y':  // a year / in a year / a year ago
                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'let');
                } else {
                    return result + 'lety';
                }
                break;
        }
    }

    var cs = moment.defineLocale('cs', {
        months : months,
        monthsShort : monthsShort,
        monthsRegex : monthsRegex,
        monthsShortRegex : monthsRegex,
        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
        monthsStrictRegex : /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
        monthsShortStrictRegex : /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,
        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
        longDateFormat : {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd D. MMMM YYYY H:mm',
            l : 'D. M. YYYY'
        },
        calendar : {
            sameDay: '[dnes v] LT',
            nextDay: '[zítra v] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v neděli v] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [v] LT';
                    case 3:
                        return '[ve středu v] LT';
                    case 4:
                        return '[ve čtvrtek v] LT';
                    case 5:
                        return '[v pátek v] LT';
                    case 6:
                        return '[v sobotu v] LT';
                }
            },
            lastDay: '[včera v] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulou neděli v] LT';
                    case 1:
                    case 2:
                        return '[minulé] dddd [v] LT';
                    case 3:
                        return '[minulou středu v] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [v] LT';
                    case 6:
                        return '[minulou sobotu v] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : 'před %s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse : /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return cs;

})));


/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var cv = moment.defineLocale('cv', {
        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
        },
        calendar : {
            sameDay: '[Паян] LT [сехетре]',
            nextDay: '[Ыран] LT [сехетре]',
            lastDay: '[Ӗнер] LT [сехетре]',
            nextWeek: '[Ҫитес] dddd LT [сехетре]',
            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
            sameElse: 'L'
        },
        relativeTime : {
            future : function (output) {
                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
                return output + affix;
            },
            past : '%s каялла',
            s : 'пӗр-ик ҫеккунт',
            ss : '%d ҫеккунт',
            m : 'пӗр минут',
            mm : '%d минут',
            h : 'пӗр сехет',
            hh : '%d сехет',
            d : 'пӗр кун',
            dd : '%d кун',
            M : 'пӗр уйӑх',
            MM : '%d уйӑх',
            y : 'пӗр ҫул',
            yy : '%d ҫул'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
        ordinal : '%d-мӗш',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return cv;

})));


/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var cy = moment.defineLocale('cy', {
        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
        weekdaysParseExact : true,
        // time formats are the same as en-gb
        longDateFormat: {
            LT: 'HH:mm',
            LTS : 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Heddiw am] LT',
            nextDay: '[Yfory am] LT',
            nextWeek: 'dddd [am] LT',
            lastDay: '[Ddoe am] LT',
            lastWeek: 'dddd [diwethaf am] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'mewn %s',
            past: '%s yn ôl',
            s: 'ychydig eiliadau',
            ss: '%d eiliad',
            m: 'munud',
            mm: '%d munud',
            h: 'awr',
            hh: '%d awr',
            d: 'diwrnod',
            dd: '%d diwrnod',
            M: 'mis',
            MM: '%d mis',
            y: 'blwyddyn',
            yy: '%d flynedd'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
        ordinal: function (number) {
            var b = number,
                output = '',
                lookup = [
                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
                ];
            if (b > 20) {
                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                    output = 'fed'; // not 30ain, 70ain or 90ain
                } else {
                    output = 'ain';
                }
            } else if (b > 0) {
                output = lookup[b];
            }
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return cy;

})));


/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var da = moment.defineLocale('da', {
        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay : '[i dag kl.] LT',
            nextDay : '[i morgen kl.] LT',
            nextWeek : 'på dddd [kl.] LT',
            lastDay : '[i går kl.] LT',
            lastWeek : '[i] dddd[s kl.] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s siden',
            s : 'få sekunder',
            ss : '%d sekunder',
            m : 'et minut',
            mm : '%d minutter',
            h : 'en time',
            hh : '%d timer',
            d : 'en dag',
            dd : '%d dage',
            M : 'en måned',
            MM : '%d måneder',
            y : 'et år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return da;

})));


/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deAt = moment.defineLocale('de-at', {
        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return deAt;

})));


/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deCh = moment.defineLocale('de-ch', {
        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return deCh;

})));


/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var de = moment.defineLocale('de', {
        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return de;

})));


/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'ޖެނުއަރީ',
        'ފެބްރުއަރީ',
        'މާރިޗު',
        'އޭޕްރީލު',
        'މޭ',
        'ޖޫން',
        'ޖުލައި',
        'އޯގަސްޓު',
        'ސެޕްޓެމްބަރު',
        'އޮކްޓޯބަރު',
        'ނޮވެމްބަރު',
        'ޑިސެމްބަރު'
    ], weekdays = [
        'އާދިއްތަ',
        'ހޯމަ',
        'އަންގާރަ',
        'ބުދަ',
        'ބުރާސްފަތި',
        'ހުކުރު',
        'ހޮނިހިރު'
    ];

    var dv = moment.defineLocale('dv', {
        months : months,
        monthsShort : months,
        weekdays : weekdays,
        weekdaysShort : weekdays,
        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
        longDateFormat : {

            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/M/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /މކ|މފ/,
        isPM : function (input) {
            return 'މފ' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'މކ';
            } else {
                return 'މފ';
            }
        },
        calendar : {
            sameDay : '[މިއަދު] LT',
            nextDay : '[މާދަމާ] LT',
            nextWeek : 'dddd LT',
            lastDay : '[އިއްޔެ] LT',
            lastWeek : '[ފާއިތުވި] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ތެރޭގައި %s',
            past : 'ކުރިން %s',
            s : 'ސިކުންތުކޮޅެއް',
            ss : 'd% ސިކުންތު',
            m : 'މިނިޓެއް',
            mm : 'މިނިޓު %d',
            h : 'ގަޑިއިރެއް',
            hh : 'ގަޑިއިރު %d',
            d : 'ދުވަހެއް',
            dd : 'ދުވަސް %d',
            M : 'މަހެއް',
            MM : 'މަސް %d',
            y : 'އަހަރެއް',
            yy : 'އަހަރު %d'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 7,  // Sunday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return dv;

})));


/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }


    var el = moment.defineLocale('el', {
        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
        months : function (momentToFormat, format) {
            if (!momentToFormat) {
                return this._monthsNominativeEl;
            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
                return this._monthsGenitiveEl[momentToFormat.month()];
            } else {
                return this._monthsNominativeEl[momentToFormat.month()];
            }
        },
        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'μμ' : 'ΜΜ';
            } else {
                return isLower ? 'πμ' : 'ΠΜ';
            }
        },
        isPM : function (input) {
            return ((input + '').toLowerCase()[0] === 'μ');
        },
        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendarEl : {
            sameDay : '[Σήμερα {}] LT',
            nextDay : '[Αύριο {}] LT',
            nextWeek : 'dddd [{}] LT',
            lastDay : '[Χθες {}] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 6:
                        return '[το προηγούμενο] dddd [{}] LT';
                    default:
                        return '[την προηγούμενη] dddd [{}] LT';
                }
            },
            sameElse : 'L'
        },
        calendar : function (key, mom) {
            var output = this._calendarEl[key],
                hours = mom && mom.hours();
            if (isFunction(output)) {
                output = output.apply(mom);
            }
            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
        },
        relativeTime : {
            future : 'σε %s',
            past : '%s πριν',
            s : 'λίγα δευτερόλεπτα',
            ss : '%d δευτερόλεπτα',
            m : 'ένα λεπτό',
            mm : '%d λεπτά',
            h : 'μία ώρα',
            hh : '%d ώρες',
            d : 'μία μέρα',
            dd : '%d μέρες',
            M : 'ένας μήνας',
            MM : '%d μήνες',
            y : 'ένας χρόνος',
            yy : '%d χρόνια'
        },
        dayOfMonthOrdinalParse: /\d{1,2}η/,
        ordinal: '%dη',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4st is the first week of the year.
        }
    });

    return el;

})));


/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enSG = moment.defineLocale('en-SG', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enSG;

})));


/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enAu = moment.defineLocale('en-au', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enAu;

})));


/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enCa = moment.defineLocale('en-ca', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'YYYY-MM-DD',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY h:mm A',
            LLLL : 'dddd, MMMM D, YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    return enCa;

})));


/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enGb = moment.defineLocale('en-gb', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enGb;

})));


/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enIe = moment.defineLocale('en-ie', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enIe;

})));


/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enIl = moment.defineLocale('en-il', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    return enIl;

})));


/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enNz = moment.defineLocale('en-nz', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enNz;

})));


/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var eo = moment.defineLocale('eo', {
        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
        weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
        weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
        weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D[-a de] MMMM, YYYY',
            LLL : 'D[-a de] MMMM, YYYY HH:mm',
            LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
        },
        meridiemParse: /[ap]\.t\.m/i,
        isPM: function (input) {
            return input.charAt(0).toLowerCase() === 'p';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'p.t.m.' : 'P.T.M.';
            } else {
                return isLower ? 'a.t.m.' : 'A.T.M.';
            }
        },
        calendar : {
            sameDay : '[Hodiaŭ je] LT',
            nextDay : '[Morgaŭ je] LT',
            nextWeek : 'dddd [je] LT',
            lastDay : '[Hieraŭ je] LT',
            lastWeek : '[pasinta] dddd [je] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'post %s',
            past : 'antaŭ %s',
            s : 'sekundoj',
            ss : '%d sekundoj',
            m : 'minuto',
            mm : '%d minutoj',
            h : 'horo',
            hh : '%d horoj',
            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
            dd : '%d tagoj',
            M : 'monato',
            MM : '%d monatoj',
            y : 'jaro',
            yy : '%d jaroj'
        },
        dayOfMonthOrdinalParse: /\d{1,2}a/,
        ordinal : '%da',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return eo;

})));


/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esDo = moment.defineLocale('es-do', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY h:mm A',
            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return esDo;

})));


/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esUs = moment.defineLocale('es-us', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'MM/DD/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY h:mm A',
            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return esUs;

})));


/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var es = moment.defineLocale('es', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex : monthsRegex,
        monthsShortRegex : monthsRegex,
        monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex : /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY H:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return es;

})));


/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
            'ss': [number + 'sekundi', number + 'sekundit'],
            'm' : ['ühe minuti', 'üks minut'],
            'mm': [number + ' minuti', number + ' minutit'],
            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
            'hh': [number + ' tunni', number + ' tundi'],
            'd' : ['ühe päeva', 'üks päev'],
            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
            'MM': [number + ' kuu', number + ' kuud'],
            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
            'yy': [number + ' aasta', number + ' aastat']
        };
        if (withoutSuffix) {
            return format[key][2] ? format[key][2] : format[key][1];
        }
        return isFuture ? format[key][0] : format[key][1];
    }

    var et = moment.defineLocale('et', {
        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
        longDateFormat : {
            LT   : 'H:mm',
            LTS : 'H:mm:ss',
            L    : 'DD.MM.YYYY',
            LL   : 'D. MMMM YYYY',
            LLL  : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[Täna,] LT',
            nextDay  : '[Homme,] LT',
            nextWeek : '[Järgmine] dddd LT',
            lastDay  : '[Eile,] LT',
            lastWeek : '[Eelmine] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s pärast',
            past   : '%s tagasi',
            s      : processRelativeTime,
            ss     : processRelativeTime,
            m      : processRelativeTime,
            mm     : processRelativeTime,
            h      : processRelativeTime,
            hh     : processRelativeTime,
            d      : processRelativeTime,
            dd     : '%d päeva',
            M      : processRelativeTime,
            MM     : processRelativeTime,
            y      : processRelativeTime,
            yy     : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return et;

})));


/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var eu = moment.defineLocale('eu', {
        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
        monthsParseExact : true,
        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY[ko] MMMM[ren] D[a]',
            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
            l : 'YYYY-M-D',
            ll : 'YYYY[ko] MMM D[a]',
            lll : 'YYYY[ko] MMM D[a] HH:mm',
            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
        },
        calendar : {
            sameDay : '[gaur] LT[etan]',
            nextDay : '[bihar] LT[etan]',
            nextWeek : 'dddd LT[etan]',
            lastDay : '[atzo] LT[etan]',
            lastWeek : '[aurreko] dddd LT[etan]',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s barru',
            past : 'duela %s',
            s : 'segundo batzuk',
            ss : '%d segundo',
            m : 'minutu bat',
            mm : '%d minutu',
            h : 'ordu bat',
            hh : '%d ordu',
            d : 'egun bat',
            dd : '%d egun',
            M : 'hilabete bat',
            MM : '%d hilabete',
            y : 'urte bat',
            yy : '%d urte'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return eu;

})));


/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '۱',
        '2': '۲',
        '3': '۳',
        '4': '۴',
        '5': '۵',
        '6': '۶',
        '7': '۷',
        '8': '۸',
        '9': '۹',
        '0': '۰'
    }, numberMap = {
        '۱': '1',
        '۲': '2',
        '۳': '3',
        '۴': '4',
        '۵': '5',
        '۶': '6',
        '۷': '7',
        '۸': '8',
        '۹': '9',
        '۰': '0'
    };

    var fa = moment.defineLocale('fa', {
        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /قبل از ظهر|بعد از ظهر/,
        isPM: function (input) {
            return /بعد از ظهر/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'قبل از ظهر';
            } else {
                return 'بعد از ظهر';
            }
        },
        calendar : {
            sameDay : '[امروز ساعت] LT',
            nextDay : '[فردا ساعت] LT',
            nextWeek : 'dddd [ساعت] LT',
            lastDay : '[دیروز ساعت] LT',
            lastWeek : 'dddd [پیش] [ساعت] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'در %s',
            past : '%s پیش',
            s : 'چند ثانیه',
            ss : 'ثانیه d%',
            m : 'یک دقیقه',
            mm : '%d دقیقه',
            h : 'یک ساعت',
            hh : '%d ساعت',
            d : 'یک روز',
            dd : '%d روز',
            M : 'یک ماه',
            MM : '%d ماه',
            y : 'یک سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/[۰-۹]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        dayOfMonthOrdinalParse: /\d{1,2}م/,
        ordinal : '%dم',
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12 // The week that contains Jan 12th is the first week of the year.
        }
    });

    return fa;

})));


/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
        numbersFuture = [
            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
            numbersPast[7], numbersPast[8], numbersPast[9]
        ];
    function translate(number, withoutSuffix, key, isFuture) {
        var result = '';
        switch (key) {
            case 's':
                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
            case 'ss':
                return isFuture ? 'sekunnin' : 'sekuntia';
            case 'm':
                return isFuture ? 'minuutin' : 'minuutti';
            case 'mm':
                result = isFuture ? 'minuutin' : 'minuuttia';
                break;
            case 'h':
                return isFuture ? 'tunnin' : 'tunti';
            case 'hh':
                result = isFuture ? 'tunnin' : 'tuntia';
                break;
            case 'd':
                return isFuture ? 'päivän' : 'päivä';
            case 'dd':
                result = isFuture ? 'päivän' : 'päivää';
                break;
            case 'M':
                return isFuture ? 'kuukauden' : 'kuukausi';
            case 'MM':
                result = isFuture ? 'kuukauden' : 'kuukautta';
                break;
            case 'y':
                return isFuture ? 'vuoden' : 'vuosi';
            case 'yy':
                result = isFuture ? 'vuoden' : 'vuotta';
                break;
        }
        result = verbalNumber(number, isFuture) + ' ' + result;
        return result;
    }
    function verbalNumber(number, isFuture) {
        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
    }

    var fi = moment.defineLocale('fi', {
        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD.MM.YYYY',
            LL : 'Do MMMM[ta] YYYY',
            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
            l : 'D.M.YYYY',
            ll : 'Do MMM YYYY',
            lll : 'Do MMM YYYY, [klo] HH.mm',
            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
        },
        calendar : {
            sameDay : '[tänään] [klo] LT',
            nextDay : '[huomenna] [klo] LT',
            nextWeek : 'dddd [klo] LT',
            lastDay : '[eilen] [klo] LT',
            lastWeek : '[viime] dddd[na] [klo] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s päästä',
            past : '%s sitten',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fi;

})));


/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var fo = moment.defineLocale('fo', {
        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D. MMMM, YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Í dag kl.] LT',
            nextDay : '[Í morgin kl.] LT',
            nextWeek : 'dddd [kl.] LT',
            lastDay : '[Í gjár kl.] LT',
            lastWeek : '[síðstu] dddd [kl] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'um %s',
            past : '%s síðani',
            s : 'fá sekund',
            ss : '%d sekundir',
            m : 'ein minuttur',
            mm : '%d minuttir',
            h : 'ein tími',
            hh : '%d tímar',
            d : 'ein dagur',
            dd : '%d dagar',
            M : 'ein mánaður',
            MM : '%d mánaðir',
            y : 'eitt ár',
            yy : '%d ár'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fo;

})));


/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var frCa = moment.defineLocale('fr-ca', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal : function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        }
    });

    return frCa;

})));


/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var frCh = moment.defineLocale('fr-ch', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal : function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return frCh;

})));


/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var fr = moment.defineLocale('fr', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
        ordinal : function (number, period) {
            switch (period) {
                // TODO: Return 'e' when day of month > 1. Move this case inside
                // block for masculine words below.
                // See https://github.com/moment/moment/issues/3375
                case 'D':
                    return number + (number === 1 ? 'er' : '');

                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fr;

})));


/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

    var fy = moment.defineLocale('fy', {
        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },
        monthsParseExact : true,
        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[hjoed om] LT',
            nextDay: '[moarn om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[juster om] LT',
            lastWeek: '[ôfrûne] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'oer %s',
            past : '%s lyn',
            s : 'in pear sekonden',
            ss : '%d sekonden',
            m : 'ien minút',
            mm : '%d minuten',
            h : 'ien oere',
            hh : '%d oeren',
            d : 'ien dei',
            dd : '%d dagen',
            M : 'ien moanne',
            MM : '%d moannen',
            y : 'ien jier',
            yy : '%d jierren'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fy;

})));


/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';



    var months = [
        'Eanáir', 'Feabhra', 'Márta', 'Aibreán', 'Bealtaine', 'Méitheamh', 'Iúil', 'Lúnasa', 'Meán Fómhair', 'Deaireadh Fómhair', 'Samhain', 'Nollaig'
    ];

    var monthsShort = ['Eaná', 'Feab', 'Márt', 'Aibr', 'Beal', 'Méit', 'Iúil', 'Lúna', 'Meán', 'Deai', 'Samh', 'Noll'];

    var weekdays = ['Dé Domhnaigh', 'Dé Luain', 'Dé Máirt', 'Dé Céadaoin', 'Déardaoin', 'Dé hAoine', 'Dé Satharn'];

    var weekdaysShort = ['Dom', 'Lua', 'Mái', 'Céa', 'Déa', 'hAo', 'Sat'];

    var weekdaysMin = ['Do', 'Lu', 'Má', 'Ce', 'Dé', 'hA', 'Sa'];

    var ga = moment.defineLocale('ga', {
        months: months,
        monthsShort: monthsShort,
        monthsParseExact: true,
        weekdays: weekdays,
        weekdaysShort: weekdaysShort,
        weekdaysMin: weekdaysMin,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Inniu ag] LT',
            nextDay: '[Amárach ag] LT',
            nextWeek: 'dddd [ag] LT',
            lastDay: '[Inné aig] LT',
            lastWeek: 'dddd [seo caite] [ag] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'i %s',
            past: '%s ó shin',
            s: 'cúpla soicind',
            ss: '%d soicind',
            m: 'nóiméad',
            mm: '%d nóiméad',
            h: 'uair an chloig',
            hh: '%d uair an chloig',
            d: 'lá',
            dd: '%d lá',
            M: 'mí',
            MM: '%d mí',
            y: 'bliain',
            yy: '%d bliain'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
        ordinal: function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ga;

})));


/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
    ];

    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

    var gd = moment.defineLocale('gd', {
        months : months,
        monthsShort : monthsShort,
        monthsParseExact : true,
        weekdays : weekdays,
        weekdaysShort : weekdaysShort,
        weekdaysMin : weekdaysMin,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[An-diugh aig] LT',
            nextDay : '[A-màireach aig] LT',
            nextWeek : 'dddd [aig] LT',
            lastDay : '[An-dè aig] LT',
            lastWeek : 'dddd [seo chaidh] [aig] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ann an %s',
            past : 'bho chionn %s',
            s : 'beagan diogan',
            ss : '%d diogan',
            m : 'mionaid',
            mm : '%d mionaidean',
            h : 'uair',
            hh : '%d uairean',
            d : 'latha',
            dd : '%d latha',
            M : 'mìos',
            MM : '%d mìosan',
            y : 'bliadhna',
            yy : '%d bliadhna'
        },
        dayOfMonthOrdinalParse : /\d{1,2}(d|na|mh)/,
        ordinal : function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return gd;

})));


/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var gl = moment.defineLocale('gl', {
        months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
        monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY H:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
            },
            nextDay : function () {
                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
            },
            lastDay : function () {
                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
            },
            lastWeek : function () {
                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : function (str) {
                if (str.indexOf('un') === 0) {
                    return 'n' + str;
                }
                return 'en ' + str;
            },
            past : 'hai %s',
            s : 'uns segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'unha hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return gl;

})));


/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['thodde secondanim', 'thodde second'],
            'ss': [number + ' secondanim', number + ' second'],
            'm': ['eka mintan', 'ek minute'],
            'mm': [number + ' mintanim', number + ' mintam'],
            'h': ['eka voran', 'ek vor'],
            'hh': [number + ' voranim', number + ' voram'],
            'd': ['eka disan', 'ek dis'],
            'dd': [number + ' disanim', number + ' dis'],
            'M': ['eka mhoinean', 'ek mhoino'],
            'MM': [number + ' mhoineanim', number + ' mhoine'],
            'y': ['eka vorsan', 'ek voros'],
            'yy': [number + ' vorsanim', number + ' vorsam']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var gomLatn = moment.defineLocale('gom-latn', {
        months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
        monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
        weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
        weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'A h:mm [vazta]',
            LTS : 'A h:mm:ss [vazta]',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY A h:mm [vazta]',
            LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
        },
        calendar : {
            sameDay: '[Aiz] LT',
            nextDay: '[Faleam] LT',
            nextWeek: '[Ieta to] dddd[,] LT',
            lastDay: '[Kal] LT',
            lastWeek: '[Fatlo] dddd[,] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s',
            past : '%s adim',
            s : processRelativeTime,
            ss : processRelativeTime,
            m : processRelativeTime,
            mm : processRelativeTime,
            h : processRelativeTime,
            hh : processRelativeTime,
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse : /\d{1,2}(er)/,
        ordinal : function (number, period) {
            switch (period) {
                // the ordinal 'er' only applies to day of the month
                case 'D':
                    return number + 'er';
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                case 'w':
                case 'W':
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        },
        meridiemParse: /rati|sokalli|donparam|sanje/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'rati') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'sokalli') {
                return hour;
            } else if (meridiem === 'donparam') {
                return hour > 12 ? hour : hour + 12;
            } else if (meridiem === 'sanje') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'rati';
            } else if (hour < 12) {
                return 'sokalli';
            } else if (hour < 16) {
                return 'donparam';
            } else if (hour < 20) {
                return 'sanje';
            } else {
                return 'rati';
            }
        }
    });

    return gomLatn;

})));


/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
            '1': '૧',
            '2': '૨',
            '3': '૩',
            '4': '૪',
            '5': '૫',
            '6': '૬',
            '7': '૭',
            '8': '૮',
            '9': '૯',
            '0': '૦'
        },
        numberMap = {
            '૧': '1',
            '૨': '2',
            '૩': '3',
            '૪': '4',
            '૫': '5',
            '૬': '6',
            '૭': '7',
            '૮': '8',
            '૯': '9',
            '૦': '0'
        };

    var gu = moment.defineLocale('gu', {
        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
        monthsParseExact: true,
        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm વાગ્યે',
            LTS: 'A h:mm:ss વાગ્યે',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'
        },
        calendar: {
            sameDay: '[આજ] LT',
            nextDay: '[કાલે] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ગઇકાલે] LT',
            lastWeek: '[પાછલા] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s મા',
            past: '%s પેહલા',
            s: 'અમુક પળો',
            ss: '%d સેકંડ',
            m: 'એક મિનિટ',
            mm: '%d મિનિટ',
            h: 'એક કલાક',
            hh: '%d કલાક',
            d: 'એક દિવસ',
            dd: '%d દિવસ',
            M: 'એક મહિનો',
            MM: '%d મહિનો',
            y: 'એક વર્ષ',
            yy: '%d વર્ષ'
        },
        preparse: function (string) {
            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'રાત') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'સવાર') {
                return hour;
            } else if (meridiem === 'બપોર') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'સાંજ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'રાત';
            } else if (hour < 10) {
                return 'સવાર';
            } else if (hour < 17) {
                return 'બપોર';
            } else if (hour < 20) {
                return 'સાંજ';
            } else {
                return 'રાત';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.
        }
    });

    return gu;

})));


/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var he = moment.defineLocale('he', {
        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [ב]MMMM YYYY',
            LLL : 'D [ב]MMMM YYYY HH:mm',
            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
            l : 'D/M/YYYY',
            ll : 'D MMM YYYY',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd, D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[היום ב־]LT',
            nextDay : '[מחר ב־]LT',
            nextWeek : 'dddd [בשעה] LT',
            lastDay : '[אתמול ב־]LT',
            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'בעוד %s',
            past : 'לפני %s',
            s : 'מספר שניות',
            ss : '%d שניות',
            m : 'דקה',
            mm : '%d דקות',
            h : 'שעה',
            hh : function (number) {
                if (number === 2) {
                    return 'שעתיים';
                }
                return number + ' שעות';
            },
            d : 'יום',
            dd : function (number) {
                if (number === 2) {
                    return 'יומיים';
                }
                return number + ' ימים';
            },
            M : 'חודש',
            MM : function (number) {
                if (number === 2) {
                    return 'חודשיים';
                }
                return number + ' חודשים';
            },
            y : 'שנה',
            yy : function (number) {
                if (number === 2) {
                    return 'שנתיים';
                } else if (number % 10 === 0 && number !== 10) {
                    return number + ' שנה';
                }
                return number + ' שנים';
            }
        },
        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
        isPM : function (input) {
            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 5) {
                return 'לפנות בוקר';
            } else if (hour < 10) {
                return 'בבוקר';
            } else if (hour < 12) {
                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
            } else if (hour < 18) {
                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
            } else {
                return 'בערב';
            }
        }
    });

    return he;

})));


/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var hi = moment.defineLocale('hi', {
        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
        monthsParseExact: true,
        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat : {
            LT : 'A h:mm बजे',
            LTS : 'A h:mm:ss बजे',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm बजे',
            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[कल] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[कल] LT',
            lastWeek : '[पिछले] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s में',
            past : '%s पहले',
            s : 'कुछ ही क्षण',
            ss : '%d सेकंड',
            m : 'एक मिनट',
            mm : '%d मिनट',
            h : 'एक घंटा',
            hh : '%d घंटे',
            d : 'एक दिन',
            dd : '%d दिन',
            M : 'एक महीने',
            MM : '%d महीने',
            y : 'एक वर्ष',
            yy : '%d वर्ष'
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
        meridiemParse: /रात|सुबह|दोपहर|शाम/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सुबह') {
                return hour;
            } else if (meridiem === 'दोपहर') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'शाम') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात';
            } else if (hour < 10) {
                return 'सुबह';
            } else if (hour < 17) {
                return 'दोपहर';
            } else if (hour < 20) {
                return 'शाम';
            } else {
                return 'रात';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return hi;

})));


/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var hr = moment.defineLocale('hr', {
        months : {
            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
        },
        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danas u] LT',
            nextDay  : '[sutra u] LT',
            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[jučer u] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'par sekundi',
            ss     : translate,
            m      : translate,
            mm     : translate,
            h      : translate,
            hh     : translate,
            d      : 'dan',
            dd     : translate,
            M      : 'mjesec',
            MM     : translate,
            y      : 'godinu',
            yy     : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return hr;

})));


/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
    function translate(number, withoutSuffix, key, isFuture) {
        var num = number;
        switch (key) {
            case 's':
                return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
            case 'ss':
                return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';
            case 'm':
                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'mm':
                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'h':
                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'hh':
                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'd':
                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'dd':
                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'M':
                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'MM':
                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'y':
                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
            case 'yy':
                return num + (isFuture || withoutSuffix ? ' év' : ' éve');
        }
        return '';
    }
    function week(isFuture) {
        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
    }

    var hu = moment.defineLocale('hu', {
        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'YYYY.MM.DD.',
            LL : 'YYYY. MMMM D.',
            LLL : 'YYYY. MMMM D. H:mm',
            LLLL : 'YYYY. MMMM D., dddd H:mm'
        },
        meridiemParse: /de|du/i,
        isPM: function (input) {
            return input.charAt(1).toLowerCase() === 'u';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower === true ? 'de' : 'DE';
            } else {
                return isLower === true ? 'du' : 'DU';
            }
        },
        calendar : {
            sameDay : '[ma] LT[-kor]',
            nextDay : '[holnap] LT[-kor]',
            nextWeek : function () {
                return week.call(this, true);
            },
            lastDay : '[tegnap] LT[-kor]',
            lastWeek : function () {
                return week.call(this, false);
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s múlva',
            past : '%s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return hu;

})));


/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var hyAm = moment.defineLocale('hy-am', {
        months : {
            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
        },
        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY թ.',
            LLL : 'D MMMM YYYY թ., HH:mm',
            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
        },
        calendar : {
            sameDay: '[այսօր] LT',
            nextDay: '[վաղը] LT',
            lastDay: '[երեկ] LT',
            nextWeek: function () {
                return 'dddd [օրը ժամը] LT';
            },
            lastWeek: function () {
                return '[անցած] dddd [օրը ժամը] LT';
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s հետո',
            past : '%s առաջ',
            s : 'մի քանի վայրկյան',
            ss : '%d վայրկյան',
            m : 'րոպե',
            mm : '%d րոպե',
            h : 'ժամ',
            hh : '%d ժամ',
            d : 'օր',
            dd : '%d օր',
            M : 'ամիս',
            MM : '%d ամիս',
            y : 'տարի',
            yy : '%d տարի'
        },
        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
        isPM: function (input) {
            return /^(ցերեկվա|երեկոյան)$/.test(input);
        },
        meridiem : function (hour) {
            if (hour < 4) {
                return 'գիշերվա';
            } else if (hour < 12) {
                return 'առավոտվա';
            } else if (hour < 17) {
                return 'ցերեկվա';
            } else {
                return 'երեկոյան';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'DDD':
                case 'w':
                case 'W':
                case 'DDDo':
                    if (number === 1) {
                        return number + '-ին';
                    }
                    return number + '-րդ';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return hyAm;

})));


/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var id = moment.defineLocale('id', {
        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|siang|sore|malam/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'siang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sore' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'siang';
            } else if (hours < 19) {
                return 'sore';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Besok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kemarin pukul] LT',
            lastWeek : 'dddd [lalu pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lalu',
            s : 'beberapa detik',
            ss : '%d detik',
            m : 'semenit',
            mm : '%d menit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return id;

})));


/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(n) {
        if (n % 100 === 11) {
            return true;
        } else if (n % 10 === 1) {
            return false;
        }
        return true;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
            case 'ss':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');
                }
                return result + 'sekúnda';
            case 'm':
                return withoutSuffix ? 'mínúta' : 'mínútu';
            case 'mm':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
                } else if (withoutSuffix) {
                    return result + 'mínúta';
                }
                return result + 'mínútu';
            case 'hh':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
                }
                return result + 'klukkustund';
            case 'd':
                if (withoutSuffix) {
                    return 'dagur';
                }
                return isFuture ? 'dag' : 'degi';
            case 'dd':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'dagar';
                    }
                    return result + (isFuture ? 'daga' : 'dögum');
                } else if (withoutSuffix) {
                    return result + 'dagur';
                }
                return result + (isFuture ? 'dag' : 'degi');
            case 'M':
                if (withoutSuffix) {
                    return 'mánuður';
                }
                return isFuture ? 'mánuð' : 'mánuði';
            case 'MM':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'mánuðir';
                    }
                    return result + (isFuture ? 'mánuði' : 'mánuðum');
                } else if (withoutSuffix) {
                    return result + 'mánuður';
                }
                return result + (isFuture ? 'mánuð' : 'mánuði');
            case 'y':
                return withoutSuffix || isFuture ? 'ár' : 'ári';
            case 'yy':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
                }
                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
        }
    }

    var is = moment.defineLocale('is', {
        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] H:mm',
            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
        },
        calendar : {
            sameDay : '[í dag kl.] LT',
            nextDay : '[á morgun kl.] LT',
            nextWeek : 'dddd [kl.] LT',
            lastDay : '[í gær kl.] LT',
            lastWeek : '[síðasta] dddd [kl.] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'eftir %s',
            past : 'fyrir %s síðan',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : 'klukkustund',
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return is;

})));


/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var itCh = moment.defineLocale('it-ch', {
        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[la scorsa] dddd [alle] LT';
                    default:
                        return '[lo scorso] dddd [alle] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : function (s) {
                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past : '%s fa',
            s : 'alcuni secondi',
            ss : '%d secondi',
            m : 'un minuto',
            mm : '%d minuti',
            h : 'un\'ora',
            hh : '%d ore',
            d : 'un giorno',
            dd : '%d giorni',
            M : 'un mese',
            MM : '%d mesi',
            y : 'un anno',
            yy : '%d anni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return itCh;

})));


/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var it = moment.defineLocale('it', {
        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[la scorsa] dddd [alle] LT';
                    default:
                        return '[lo scorso] dddd [alle] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : function (s) {
                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past : '%s fa',
            s : 'alcuni secondi',
            ss : '%d secondi',
            m : 'un minuto',
            mm : '%d minuti',
            h : 'un\'ora',
            hh : '%d ore',
            d : 'un giorno',
            dd : '%d giorni',
            M : 'un mese',
            MM : '%d mesi',
            y : 'un anno',
            yy : '%d anni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return it;

})));


/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ja = moment.defineLocale('ja', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日 dddd HH:mm',
            l : 'YYYY/MM/DD',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日(ddd) HH:mm'
        },
        meridiemParse: /午前|午後/i,
        isPM : function (input) {
            return input === '午後';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return '午前';
            } else {
                return '午後';
            }
        },
        calendar : {
            sameDay : '[今日] LT',
            nextDay : '[明日] LT',
            nextWeek : function (now) {
                if (now.week() < this.week()) {
                    return '[来週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            lastDay : '[昨日] LT',
            lastWeek : function (now) {
                if (this.week() < now.week()) {
                    return '[先週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse : /\d{1,2}日/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                default:
                    return number;
            }
        },
        relativeTime : {
            future : '%s後',
            past : '%s前',
            s : '数秒',
            ss : '%d秒',
            m : '1分',
            mm : '%d分',
            h : '1時間',
            hh : '%d時間',
            d : '1日',
            dd : '%d日',
            M : '1ヶ月',
            MM : '%dヶ月',
            y : '1年',
            yy : '%d年'
        }
    });

    return ja;

})));


/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var jv = moment.defineLocale('jv', {
        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /enjing|siyang|sonten|ndalu/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'enjing') {
                return hour;
            } else if (meridiem === 'siyang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'enjing';
            } else if (hours < 15) {
                return 'siyang';
            } else if (hours < 19) {
                return 'sonten';
            } else {
                return 'ndalu';
            }
        },
        calendar : {
            sameDay : '[Dinten puniko pukul] LT',
            nextDay : '[Mbenjang pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kala wingi pukul] LT',
            lastWeek : 'dddd [kepengker pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'wonten ing %s',
            past : '%s ingkang kepengker',
            s : 'sawetawis detik',
            ss : '%d detik',
            m : 'setunggal menit',
            mm : '%d menit',
            h : 'setunggal jam',
            hh : '%d jam',
            d : 'sedinten',
            dd : '%d dinten',
            M : 'sewulan',
            MM : '%d wulan',
            y : 'setaun',
            yy : '%d taun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return jv;

})));


/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ka = moment.defineLocale('ka', {
        months : {
            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
        },
        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
        weekdays : {
            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
            isFormat: /(წინა|შემდეგ)/
        },
        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[დღეს] LT[-ზე]',
            nextDay : '[ხვალ] LT[-ზე]',
            lastDay : '[გუშინ] LT[-ზე]',
            nextWeek : '[შემდეგ] dddd LT[-ზე]',
            lastWeek : '[წინა] dddd LT-ზე',
            sameElse : 'L'
        },
        relativeTime : {
            future : function (s) {
                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
                    s.replace(/ი$/, 'ში') :
                    s + 'ში';
            },
            past : function (s) {
                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
                    return s.replace(/(ი|ე)$/, 'ის წინ');
                }
                if ((/წელი/).test(s)) {
                    return s.replace(/წელი$/, 'წლის წინ');
                }
            },
            s : 'რამდენიმე წამი',
            ss : '%d წამი',
            m : 'წუთი',
            mm : '%d წუთი',
            h : 'საათი',
            hh : '%d საათი',
            d : 'დღე',
            dd : '%d დღე',
            M : 'თვე',
            MM : '%d თვე',
            y : 'წელი',
            yy : '%d წელი'
        },
        dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
        ordinal : function (number) {
            if (number === 0) {
                return number;
            }
            if (number === 1) {
                return number + '-ლი';
            }
            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
                return 'მე-' + number;
            }
            return number + '-ე';
        },
        week : {
            dow : 1,
            doy : 7
        }
    });

    return ka;

})));


/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-ші',
        1: '-ші',
        2: '-ші',
        3: '-ші',
        4: '-ші',
        5: '-ші',
        6: '-шы',
        7: '-ші',
        8: '-ші',
        9: '-шы',
        10: '-шы',
        20: '-шы',
        30: '-шы',
        40: '-шы',
        50: '-ші',
        60: '-шы',
        70: '-ші',
        80: '-ші',
        90: '-шы',
        100: '-ші'
    };

    var kk = moment.defineLocale('kk', {
        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Бүгін сағат] LT',
            nextDay : '[Ертең сағат] LT',
            nextWeek : 'dddd [сағат] LT',
            lastDay : '[Кеше сағат] LT',
            lastWeek : '[Өткен аптаның] dddd [сағат] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ішінде',
            past : '%s бұрын',
            s : 'бірнеше секунд',
            ss : '%d секунд',
            m : 'бір минут',
            mm : '%d минут',
            h : 'бір сағат',
            hh : '%d сағат',
            d : 'бір күн',
            dd : '%d күн',
            M : 'бір ай',
            MM : '%d ай',
            y : 'бір жыл',
            yy : '%d жыл'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
        ordinal : function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return kk;

})));


/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '១',
        '2': '២',
        '3': '៣',
        '4': '៤',
        '5': '៥',
        '6': '៦',
        '7': '៧',
        '8': '៨',
        '9': '៩',
        '0': '០'
    }, numberMap = {
        '១': '1',
        '២': '2',
        '៣': '3',
        '៤': '4',
        '៥': '5',
        '៦': '6',
        '៧': '7',
        '៨': '8',
        '៩': '9',
        '០': '0'
    };

    var km = moment.defineLocale('km', {
        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /ព្រឹក|ល្ងាច/,
        isPM: function (input) {
            return input === 'ល្ងាច';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ព្រឹក';
            } else {
                return 'ល្ងាច';
            }
        },
        calendar: {
            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
            nextDay: '[ស្អែក ម៉ោង] LT',
            nextWeek: 'dddd [ម៉ោង] LT',
            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%sទៀត',
            past: '%sមុន',
            s: 'ប៉ុន្មានវិនាទី',
            ss: '%d វិនាទី',
            m: 'មួយនាទី',
            mm: '%d នាទី',
            h: 'មួយម៉ោង',
            hh: '%d ម៉ោង',
            d: 'មួយថ្ងៃ',
            dd: '%d ថ្ងៃ',
            M: 'មួយខែ',
            MM: '%d ខែ',
            y: 'មួយឆ្នាំ',
            yy: '%d ឆ្នាំ'
        },
        dayOfMonthOrdinalParse : /ទី\d{1,2}/,
        ordinal : 'ទី%d',
        preparse: function (string) {
            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return km;

})));


/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '೧',
        '2': '೨',
        '3': '೩',
        '4': '೪',
        '5': '೫',
        '6': '೬',
        '7': '೭',
        '8': '೮',
        '9': '೯',
        '0': '೦'
    },
    numberMap = {
        '೧': '1',
        '೨': '2',
        '೩': '3',
        '೪': '4',
        '೫': '5',
        '೬': '6',
        '೭': '7',
        '೮': '8',
        '೯': '9',
        '೦': '0'
    };

    var kn = moment.defineLocale('kn', {
        months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
        monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),
        monthsParseExact: true,
        weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
        weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
        weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[ಇಂದು] LT',
            nextDay : '[ನಾಳೆ] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[ನಿನ್ನೆ] LT',
            lastWeek : '[ಕೊನೆಯ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ನಂತರ',
            past : '%s ಹಿಂದೆ',
            s : 'ಕೆಲವು ಕ್ಷಣಗಳು',
            ss : '%d ಸೆಕೆಂಡುಗಳು',
            m : 'ಒಂದು ನಿಮಿಷ',
            mm : '%d ನಿಮಿಷ',
            h : 'ಒಂದು ಗಂಟೆ',
            hh : '%d ಗಂಟೆ',
            d : 'ಒಂದು ದಿನ',
            dd : '%d ದಿನ',
            M : 'ಒಂದು ತಿಂಗಳು',
            MM : '%d ತಿಂಗಳು',
            y : 'ಒಂದು ವರ್ಷ',
            yy : '%d ವರ್ಷ'
        },
        preparse: function (string) {
            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ರಾತ್ರಿ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
                return hour;
            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ಸಂಜೆ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ರಾತ್ರಿ';
            } else if (hour < 10) {
                return 'ಬೆಳಿಗ್ಗೆ';
            } else if (hour < 17) {
                return 'ಮಧ್ಯಾಹ್ನ';
            } else if (hour < 20) {
                return 'ಸಂಜೆ';
            } else {
                return 'ರಾತ್ರಿ';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
        ordinal : function (number) {
            return number + 'ನೇ';
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return kn;

})));


/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ko = moment.defineLocale('ko', {
        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'YYYY.MM.DD.',
            LL : 'YYYY년 MMMM D일',
            LLL : 'YYYY년 MMMM D일 A h:mm',
            LLLL : 'YYYY년 MMMM D일 dddd A h:mm',
            l : 'YYYY.MM.DD.',
            ll : 'YYYY년 MMMM D일',
            lll : 'YYYY년 MMMM D일 A h:mm',
            llll : 'YYYY년 MMMM D일 dddd A h:mm'
        },
        calendar : {
            sameDay : '오늘 LT',
            nextDay : '내일 LT',
            nextWeek : 'dddd LT',
            lastDay : '어제 LT',
            lastWeek : '지난주 dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s 후',
            past : '%s 전',
            s : '몇 초',
            ss : '%d초',
            m : '1분',
            mm : '%d분',
            h : '한 시간',
            hh : '%d시간',
            d : '하루',
            dd : '%d일',
            M : '한 달',
            MM : '%d달',
            y : '일 년',
            yy : '%d년'
        },
        dayOfMonthOrdinalParse : /\d{1,2}(일|월|주)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '일';
                case 'M':
                    return number + '월';
                case 'w':
                case 'W':
                    return number + '주';
                default:
                    return number;
            }
        },
        meridiemParse : /오전|오후/,
        isPM : function (token) {
            return token === '오후';
        },
        meridiem : function (hour, minute, isUpper) {
            return hour < 12 ? '오전' : '오후';
        }
    });

    return ko;

})));


/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    },
    months = [
        'کانونی دووەم',
        'شوبات',
        'ئازار',
        'نیسان',
        'ئایار',
        'حوزەیران',
        'تەمموز',
        'ئاب',
        'ئەیلوول',
        'تشرینی یەكەم',
        'تشرینی دووەم',
        'كانونی یەکەم'
    ];


    var ku = moment.defineLocale('ku', {
        months : months,
        monthsShort : months,
        weekdays : 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split('_'),
        weekdaysShort : 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'),
        weekdaysMin : 'ی_د_س_چ_پ_ه_ش'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /ئێواره‌|به‌یانی/,
        isPM: function (input) {
            return /ئێواره‌/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'به‌یانی';
            } else {
                return 'ئێواره‌';
            }
        },
        calendar : {
            sameDay : '[ئه‌مرۆ كاتژمێر] LT',
            nextDay : '[به‌یانی كاتژمێر] LT',
            nextWeek : 'dddd [كاتژمێر] LT',
            lastDay : '[دوێنێ كاتژمێر] LT',
            lastWeek : 'dddd [كاتژمێر] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'له‌ %s',
            past : '%s',
            s : 'چه‌ند چركه‌یه‌ك',
            ss : 'چركه‌ %d',
            m : 'یه‌ك خوله‌ك',
            mm : '%d خوله‌ك',
            h : 'یه‌ك كاتژمێر',
            hh : '%d كاتژمێر',
            d : 'یه‌ك ڕۆژ',
            dd : '%d ڕۆژ',
            M : 'یه‌ك مانگ',
            MM : '%d مانگ',
            y : 'یه‌ك ساڵ',
            yy : '%d ساڵ'
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12 // The week that contains Jan 12th is the first week of the year.
        }
    });

    return ku;

})));


/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-чү',
        1: '-чи',
        2: '-чи',
        3: '-чү',
        4: '-чү',
        5: '-чи',
        6: '-чы',
        7: '-чи',
        8: '-чи',
        9: '-чу',
        10: '-чу',
        20: '-чы',
        30: '-чу',
        40: '-чы',
        50: '-чү',
        60: '-чы',
        70: '-чи',
        80: '-чи',
        90: '-чу',
        100: '-чү'
    };

    var ky = moment.defineLocale('ky', {
        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Бүгүн саат] LT',
            nextDay : '[Эртең саат] LT',
            nextWeek : 'dddd [саат] LT',
            lastDay : '[Кечээ саат] LT',
            lastWeek : '[Өткөн аптанын] dddd [күнү] [саат] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ичинде',
            past : '%s мурун',
            s : 'бирнече секунд',
            ss : '%d секунд',
            m : 'бир мүнөт',
            mm : '%d мүнөт',
            h : 'бир саат',
            hh : '%d саат',
            d : 'бир күн',
            dd : '%d күн',
            M : 'бир ай',
            MM : '%d ай',
            y : 'бир жыл',
            yy : '%d жыл'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
        ordinal : function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return ky;

})));


/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eng Minutt', 'enger Minutt'],
            'h': ['eng Stonn', 'enger Stonn'],
            'd': ['een Dag', 'engem Dag'],
            'M': ['ee Mount', 'engem Mount'],
            'y': ['ee Joer', 'engem Joer']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }
    function processFutureTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'a ' + string;
        }
        return 'an ' + string;
    }
    function processPastTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'viru ' + string;
        }
        return 'virun ' + string;
    }
    /**
     * Returns true if the word before the given number loses the '-n' ending.
     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
     *
     * @param number {integer}
     * @returns {boolean}
     */
    function eifelerRegelAppliesToNumber(number) {
        number = parseInt(number, 10);
        if (isNaN(number)) {
            return false;
        }
        if (number < 0) {
            // Negative Number --> always true
            return true;
        } else if (number < 10) {
            // Only 1 digit
            if (4 <= number && number <= 7) {
                return true;
            }
            return false;
        } else if (number < 100) {
            // 2 digits
            var lastDigit = number % 10, firstDigit = number / 10;
            if (lastDigit === 0) {
                return eifelerRegelAppliesToNumber(firstDigit);
            }
            return eifelerRegelAppliesToNumber(lastDigit);
        } else if (number < 10000) {
            // 3 or 4 digits --> recursively check first digit
            while (number >= 10) {
                number = number / 10;
            }
            return eifelerRegelAppliesToNumber(number);
        } else {
            // Anything larger than 4 digits: recursively check first n-3 digits
            number = number / 1000;
            return eifelerRegelAppliesToNumber(number);
        }
    }

    var lb = moment.defineLocale('lb', {
        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm [Auer]',
            LTS: 'H:mm:ss [Auer]',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm [Auer]',
            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
        },
        calendar: {
            sameDay: '[Haut um] LT',
            sameElse: 'L',
            nextDay: '[Muer um] LT',
            nextWeek: 'dddd [um] LT',
            lastDay: '[Gëschter um] LT',
            lastWeek: function () {
                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
                switch (this.day()) {
                    case 2:
                    case 4:
                        return '[Leschten] dddd [um] LT';
                    default:
                        return '[Leschte] dddd [um] LT';
                }
            }
        },
        relativeTime : {
            future : processFutureTime,
            past : processPastTime,
            s : 'e puer Sekonnen',
            ss : '%d Sekonnen',
            m : processRelativeTime,
            mm : '%d Minutten',
            h : processRelativeTime,
            hh : '%d Stonnen',
            d : processRelativeTime,
            dd : '%d Deeg',
            M : processRelativeTime,
            MM : '%d Méint',
            y : processRelativeTime,
            yy : '%d Joer'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lb;

})));


/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var lo = moment.defineLocale('lo', {
        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
        isPM: function (input) {
            return input === 'ຕອນແລງ';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ຕອນເຊົ້າ';
            } else {
                return 'ຕອນແລງ';
            }
        },
        calendar : {
            sameDay : '[ມື້ນີ້ເວລາ] LT',
            nextDay : '[ມື້ອື່ນເວລາ] LT',
            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
            lastDay : '[ມື້ວານນີ້ເວລາ] LT',
            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ອີກ %s',
            past : '%sຜ່ານມາ',
            s : 'ບໍ່ເທົ່າໃດວິນາທີ',
            ss : '%d ວິນາທີ' ,
            m : '1 ນາທີ',
            mm : '%d ນາທີ',
            h : '1 ຊົ່ວໂມງ',
            hh : '%d ຊົ່ວໂມງ',
            d : '1 ມື້',
            dd : '%d ມື້',
            M : '1 ເດືອນ',
            MM : '%d ເດືອນ',
            y : '1 ປີ',
            yy : '%d ປີ'
        },
        dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
        ordinal : function (number) {
            return 'ທີ່' + number;
        }
    });

    return lo;

})));


/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var units = {
        'ss' : 'sekundė_sekundžių_sekundes',
        'm' : 'minutė_minutės_minutę',
        'mm': 'minutės_minučių_minutes',
        'h' : 'valanda_valandos_valandą',
        'hh': 'valandos_valandų_valandas',
        'd' : 'diena_dienos_dieną',
        'dd': 'dienos_dienų_dienas',
        'M' : 'mėnuo_mėnesio_mėnesį',
        'MM': 'mėnesiai_mėnesių_mėnesius',
        'y' : 'metai_metų_metus',
        'yy': 'metai_metų_metus'
    };
    function translateSeconds(number, withoutSuffix, key, isFuture) {
        if (withoutSuffix) {
            return 'kelios sekundės';
        } else {
            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
        }
    }
    function translateSingular(number, withoutSuffix, key, isFuture) {
        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
    }
    function special(number) {
        return number % 10 === 0 || (number > 10 && number < 20);
    }
    function forms(key) {
        return units[key].split('_');
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        if (number === 1) {
            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
        } else if (withoutSuffix) {
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
        } else {
            if (isFuture) {
                return result + forms(key)[1];
            } else {
                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
            }
        }
    }
    var lt = moment.defineLocale('lt', {
        months : {
            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
        },
        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
        weekdays : {
            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
            isFormat: /dddd HH:mm/
        },
        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY [m.] MMMM D [d.]',
            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
            l : 'YYYY-MM-DD',
            ll : 'YYYY [m.] MMMM D [d.]',
            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
        },
        calendar : {
            sameDay : '[Šiandien] LT',
            nextDay : '[Rytoj] LT',
            nextWeek : 'dddd LT',
            lastDay : '[Vakar] LT',
            lastWeek : '[Praėjusį] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'po %s',
            past : 'prieš %s',
            s : translateSeconds,
            ss : translate,
            m : translateSingular,
            mm : translate,
            h : translateSingular,
            hh : translate,
            d : translateSingular,
            dd : translate,
            M : translateSingular,
            MM : translate,
            y : translateSingular,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}-oji/,
        ordinal : function (number) {
            return number + '-oji';
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lt;

})));


/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var units = {
        'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'h': 'stundas_stundām_stunda_stundas'.split('_'),
        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
        'd': 'dienas_dienām_diena_dienas'.split('_'),
        'dd': 'dienas_dienām_diena_dienas'.split('_'),
        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'y': 'gada_gadiem_gads_gadi'.split('_'),
        'yy': 'gada_gadiem_gads_gadi'.split('_')
    };
    /**
     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
     */
    function format(forms, number, withoutSuffix) {
        if (withoutSuffix) {
            // E.g. "21 minūte", "3 minūtes".
            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
        } else {
            // E.g. "21 minūtes" as in "pēc 21 minūtes".
            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
        }
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        return number + ' ' + format(units[key], number, withoutSuffix);
    }
    function relativeTimeWithSingular(number, withoutSuffix, key) {
        return format(units[key], number, withoutSuffix);
    }
    function relativeSeconds(number, withoutSuffix) {
        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
    }

    var lv = moment.defineLocale('lv', {
        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY.',
            LL : 'YYYY. [gada] D. MMMM',
            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
        },
        calendar : {
            sameDay : '[Šodien pulksten] LT',
            nextDay : '[Rīt pulksten] LT',
            nextWeek : 'dddd [pulksten] LT',
            lastDay : '[Vakar pulksten] LT',
            lastWeek : '[Pagājušā] dddd [pulksten] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'pēc %s',
            past : 'pirms %s',
            s : relativeSeconds,
            ss : relativeTimeWithPlural,
            m : relativeTimeWithSingular,
            mm : relativeTimeWithPlural,
            h : relativeTimeWithSingular,
            hh : relativeTimeWithPlural,
            d : relativeTimeWithSingular,
            dd : relativeTimeWithPlural,
            M : relativeTimeWithSingular,
            MM : relativeTimeWithPlural,
            y : relativeTimeWithSingular,
            yy : relativeTimeWithPlural
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lv;

})));


/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['sekund', 'sekunda', 'sekundi'],
            m: ['jedan minut', 'jednog minuta'],
            mm: ['minut', 'minuta', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mjesec', 'mjeseca', 'mjeseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var me = moment.defineLocale('me', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact : true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sjutra u] LT',

            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[juče u] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[prošle] [nedjelje] [u] LT',
                    '[prošlog] [ponedjeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srijede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'nekoliko sekundi',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'dan',
            dd     : translator.translate,
            M      : 'mjesec',
            MM     : translator.translate,
            y      : 'godinu',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return me;

})));


/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mi = moment.defineLocale('mi', {
        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [i] HH:mm',
            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
        },
        calendar: {
            sameDay: '[i teie mahana, i] LT',
            nextDay: '[apopo i] LT',
            nextWeek: 'dddd [i] LT',
            lastDay: '[inanahi i] LT',
            lastWeek: 'dddd [whakamutunga i] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'i roto i %s',
            past: '%s i mua',
            s: 'te hēkona ruarua',
            ss: '%d hēkona',
            m: 'he meneti',
            mm: '%d meneti',
            h: 'te haora',
            hh: '%d haora',
            d: 'he ra',
            dd: '%d ra',
            M: 'he marama',
            MM: '%d marama',
            y: 'he tau',
            yy: '%d tau'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return mi;

})));


/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mk = moment.defineLocale('mk', {
        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'D.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay : '[Денес во] LT',
            nextDay : '[Утре во] LT',
            nextWeek : '[Во] dddd [во] LT',
            lastDay : '[Вчера во] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[Изминатата] dddd [во] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[Изминатиот] dddd [во] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'после %s',
            past : 'пред %s',
            s : 'неколку секунди',
            ss : '%d секунди',
            m : 'минута',
            mm : '%d минути',
            h : 'час',
            hh : '%d часа',
            d : 'ден',
            dd : '%d дена',
            M : 'месец',
            MM : '%d месеци',
            y : 'година',
            yy : '%d години'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal : function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return mk;

})));


/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ml = moment.defineLocale('ml', {
        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
        monthsParseExact : true,
        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm -നു',
            LTS : 'A h:mm:ss -നു',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm -നു',
            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
        },
        calendar : {
            sameDay : '[ഇന്ന്] LT',
            nextDay : '[നാളെ] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[ഇന്നലെ] LT',
            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s കഴിഞ്ഞ്',
            past : '%s മുൻപ്',
            s : 'അൽപ നിമിഷങ്ങൾ',
            ss : '%d സെക്കൻഡ്',
            m : 'ഒരു മിനിറ്റ്',
            mm : '%d മിനിറ്റ്',
            h : 'ഒരു മണിക്കൂർ',
            hh : '%d മണിക്കൂർ',
            d : 'ഒരു ദിവസം',
            dd : '%d ദിവസം',
            M : 'ഒരു മാസം',
            MM : '%d മാസം',
            y : 'ഒരു വർഷം',
            yy : '%d വർഷം'
        },
        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'രാത്രി' && hour >= 4) ||
                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                    meridiem === 'വൈകുന്നേരം') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'രാത്രി';
            } else if (hour < 12) {
                return 'രാവിലെ';
            } else if (hour < 17) {
                return 'ഉച്ച കഴിഞ്ഞ്';
            } else if (hour < 20) {
                return 'വൈകുന്നേരം';
            } else {
                return 'രാത്രി';
            }
        }
    });

    return ml;

})));


/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key, isFuture) {
        switch (key) {
            case 's':
                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';
            case 'ss':
                return number + (withoutSuffix ? ' секунд' : ' секундын');
            case 'm':
            case 'mm':
                return number + (withoutSuffix ? ' минут' : ' минутын');
            case 'h':
            case 'hh':
                return number + (withoutSuffix ? ' цаг' : ' цагийн');
            case 'd':
            case 'dd':
                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');
            case 'M':
            case 'MM':
                return number + (withoutSuffix ? ' сар' : ' сарын');
            case 'y':
            case 'yy':
                return number + (withoutSuffix ? ' жил' : ' жилийн');
            default:
                return number;
        }
    }

    var mn = moment.defineLocale('mn', {
        months : 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),
        monthsShort : '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),
        monthsParseExact : true,
        weekdays : 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
        weekdaysShort : 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
        weekdaysMin : 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY оны MMMMын D',
            LLL : 'YYYY оны MMMMын D HH:mm',
            LLLL : 'dddd, YYYY оны MMMMын D HH:mm'
        },
        meridiemParse: /ҮӨ|ҮХ/i,
        isPM : function (input) {
            return input === 'ҮХ';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ҮӨ';
            } else {
                return 'ҮХ';
            }
        },
        calendar : {
            sameDay : '[Өнөөдөр] LT',
            nextDay : '[Маргааш] LT',
            nextWeek : '[Ирэх] dddd LT',
            lastDay : '[Өчигдөр] LT',
            lastWeek : '[Өнгөрсөн] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s дараа',
            past : '%s өмнө',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + ' өдөр';
                default:
                    return number;
            }
        }
    });

    return mn;

})));


/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    function relativeTimeMr(number, withoutSuffix, string, isFuture)
    {
        var output = '';
        if (withoutSuffix) {
            switch (string) {
                case 's': output = 'काही सेकंद'; break;
                case 'ss': output = '%d सेकंद'; break;
                case 'm': output = 'एक मिनिट'; break;
                case 'mm': output = '%d मिनिटे'; break;
                case 'h': output = 'एक तास'; break;
                case 'hh': output = '%d तास'; break;
                case 'd': output = 'एक दिवस'; break;
                case 'dd': output = '%d दिवस'; break;
                case 'M': output = 'एक महिना'; break;
                case 'MM': output = '%d महिने'; break;
                case 'y': output = 'एक वर्ष'; break;
                case 'yy': output = '%d वर्षे'; break;
            }
        }
        else {
            switch (string) {
                case 's': output = 'काही सेकंदां'; break;
                case 'ss': output = '%d सेकंदां'; break;
                case 'm': output = 'एका मिनिटा'; break;
                case 'mm': output = '%d मिनिटां'; break;
                case 'h': output = 'एका तासा'; break;
                case 'hh': output = '%d तासां'; break;
                case 'd': output = 'एका दिवसा'; break;
                case 'dd': output = '%d दिवसां'; break;
                case 'M': output = 'एका महिन्या'; break;
                case 'MM': output = '%d महिन्यां'; break;
                case 'y': output = 'एका वर्षा'; break;
                case 'yy': output = '%d वर्षां'; break;
            }
        }
        return output.replace(/%d/i, number);
    }

    var mr = moment.defineLocale('mr', {
        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
        monthsParseExact : true,
        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat : {
            LT : 'A h:mm वाजता',
            LTS : 'A h:mm:ss वाजता',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm वाजता',
            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[उद्या] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[काल] LT',
            lastWeek: '[मागील] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future: '%sमध्ये',
            past: '%sपूर्वी',
            s: relativeTimeMr,
            ss: relativeTimeMr,
            m: relativeTimeMr,
            mm: relativeTimeMr,
            h: relativeTimeMr,
            hh: relativeTimeMr,
            d: relativeTimeMr,
            dd: relativeTimeMr,
            M: relativeTimeMr,
            MM: relativeTimeMr,
            y: relativeTimeMr,
            yy: relativeTimeMr
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात्री') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सकाळी') {
                return hour;
            } else if (meridiem === 'दुपारी') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'सायंकाळी') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात्री';
            } else if (hour < 10) {
                return 'सकाळी';
            } else if (hour < 17) {
                return 'दुपारी';
            } else if (hour < 20) {
                return 'सायंकाळी';
            } else {
                return 'रात्री';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return mr;

})));


/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var msMy = moment.defineLocale('ms-my', {
        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Esok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kelmarin pukul] LT',
            lastWeek : 'dddd [lepas pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lepas',
            s : 'beberapa saat',
            ss : '%d saat',
            m : 'seminit',
            mm : '%d minit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return msMy;

})));


/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ms = moment.defineLocale('ms', {
        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Esok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kelmarin pukul] LT',
            lastWeek : 'dddd [lepas pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lepas',
            s : 'beberapa saat',
            ss : '%d saat',
            m : 'seminit',
            mm : '%d minit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return ms;

})));


/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mt = moment.defineLocale('mt', {
        months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),
        monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
        weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),
        weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
        weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Illum fil-]LT',
            nextDay : '[Għada fil-]LT',
            nextWeek : 'dddd [fil-]LT',
            lastDay : '[Il-bieraħ fil-]LT',
            lastWeek : 'dddd [li għadda] [fil-]LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'f’ %s',
            past : '%s ilu',
            s : 'ftit sekondi',
            ss : '%d sekondi',
            m : 'minuta',
            mm : '%d minuti',
            h : 'siegħa',
            hh : '%d siegħat',
            d : 'ġurnata',
            dd : '%d ġranet',
            M : 'xahar',
            MM : '%d xhur',
            y : 'sena',
            yy : '%d sni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return mt;

})));


/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '၁',
        '2': '၂',
        '3': '၃',
        '4': '၄',
        '5': '၅',
        '6': '၆',
        '7': '၇',
        '8': '၈',
        '9': '၉',
        '0': '၀'
    }, numberMap = {
        '၁': '1',
        '၂': '2',
        '၃': '3',
        '၄': '4',
        '၅': '5',
        '၆': '6',
        '၇': '7',
        '၈': '8',
        '၉': '9',
        '၀': '0'
    };

    var my = moment.defineLocale('my', {
        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[ယနေ.] LT [မှာ]',
            nextDay: '[မနက်ဖြန်] LT [မှာ]',
            nextWeek: 'dddd LT [မှာ]',
            lastDay: '[မနေ.က] LT [မှာ]',
            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'လာမည့် %s မှာ',
            past: 'လွန်ခဲ့သော %s က',
            s: 'စက္ကန်.အနည်းငယ်',
            ss : '%d စက္ကန့်',
            m: 'တစ်မိနစ်',
            mm: '%d မိနစ်',
            h: 'တစ်နာရီ',
            hh: '%d နာရီ',
            d: 'တစ်ရက်',
            dd: '%d ရက်',
            M: 'တစ်လ',
            MM: '%d လ',
            y: 'တစ်နှစ်',
            yy: '%d နှစ်'
        },
        preparse: function (string) {
            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return my;

})));


/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var nb = moment.defineLocale('nb', {
        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
        monthsParseExact : true,
        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] HH:mm',
            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[forrige] dddd [kl.] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s siden',
            s : 'noen sekunder',
            ss : '%d sekunder',
            m : 'ett minutt',
            mm : '%d minutter',
            h : 'en time',
            hh : '%d timer',
            d : 'en dag',
            dd : '%d dager',
            M : 'en måned',
            MM : '%d måneder',
            y : 'ett år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nb;

})));


/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var ne = moment.defineLocale('ne', {
        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
        monthsParseExact : true,
        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'Aको h:mm बजे',
            LTS : 'Aको h:mm:ss बजे',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, Aको h:mm बजे',
            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'राति') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'बिहान') {
                return hour;
            } else if (meridiem === 'दिउँसो') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'साँझ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 3) {
                return 'राति';
            } else if (hour < 12) {
                return 'बिहान';
            } else if (hour < 16) {
                return 'दिउँसो';
            } else if (hour < 20) {
                return 'साँझ';
            } else {
                return 'राति';
            }
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[भोलि] LT',
            nextWeek : '[आउँदो] dddd[,] LT',
            lastDay : '[हिजो] LT',
            lastWeek : '[गएको] dddd[,] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%sमा',
            past : '%s अगाडि',
            s : 'केही क्षण',
            ss : '%d सेकेण्ड',
            m : 'एक मिनेट',
            mm : '%d मिनेट',
            h : 'एक घण्टा',
            hh : '%d घण्टा',
            d : 'एक दिन',
            dd : '%d दिन',
            M : 'एक महिना',
            MM : '%d महिना',
            y : 'एक बर्ष',
            yy : '%d बर्ष'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return ne;

})));


/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nlBe = moment.defineLocale('nl-be', {
        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'over %s',
            past : '%s geleden',
            s : 'een paar seconden',
            ss : '%d seconden',
            m : 'één minuut',
            mm : '%d minuten',
            h : 'één uur',
            hh : '%d uur',
            d : 'één dag',
            dd : '%d dagen',
            M : 'één maand',
            MM : '%d maanden',
            y : 'één jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nlBe;

})));


/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nl = moment.defineLocale('nl', {
        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'over %s',
            past : '%s geleden',
            s : 'een paar seconden',
            ss : '%d seconden',
            m : 'één minuut',
            mm : '%d minuten',
            h : 'één uur',
            hh : '%d uur',
            d : 'één dag',
            dd : '%d dagen',
            M : 'één maand',
            MM : '%d maanden',
            y : 'één jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nl;

})));


/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var nn = moment.defineLocale('nn', {
        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] H:mm',
            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay: '[I dag klokka] LT',
            nextDay: '[I morgon klokka] LT',
            nextWeek: 'dddd [klokka] LT',
            lastDay: '[I går klokka] LT',
            lastWeek: '[Føregåande] dddd [klokka] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s sidan',
            s : 'nokre sekund',
            ss : '%d sekund',
            m : 'eit minutt',
            mm : '%d minutt',
            h : 'ein time',
            hh : '%d timar',
            d : 'ein dag',
            dd : '%d dagar',
            M : 'ein månad',
            MM : '%d månader',
            y : 'eit år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nn;

})));


/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '੧',
        '2': '੨',
        '3': '੩',
        '4': '੪',
        '5': '੫',
        '6': '੬',
        '7': '੭',
        '8': '੮',
        '9': '੯',
        '0': '੦'
    },
    numberMap = {
        '੧': '1',
        '੨': '2',
        '੩': '3',
        '੪': '4',
        '੫': '5',
        '੬': '6',
        '੭': '7',
        '੮': '8',
        '੯': '9',
        '੦': '0'
    };

    var paIn = moment.defineLocale('pa-in', {
        // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.
        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm ਵਜੇ',
            LTS : 'A h:mm:ss ਵਜੇ',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
        },
        calendar : {
            sameDay : '[ਅਜ] LT',
            nextDay : '[ਕਲ] LT',
            nextWeek : '[ਅਗਲਾ] dddd, LT',
            lastDay : '[ਕਲ] LT',
            lastWeek : '[ਪਿਛਲੇ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ਵਿੱਚ',
            past : '%s ਪਿਛਲੇ',
            s : 'ਕੁਝ ਸਕਿੰਟ',
            ss : '%d ਸਕਿੰਟ',
            m : 'ਇਕ ਮਿੰਟ',
            mm : '%d ਮਿੰਟ',
            h : 'ਇੱਕ ਘੰਟਾ',
            hh : '%d ਘੰਟੇ',
            d : 'ਇੱਕ ਦਿਨ',
            dd : '%d ਦਿਨ',
            M : 'ਇੱਕ ਮਹੀਨਾ',
            MM : '%d ਮਹੀਨੇ',
            y : 'ਇੱਕ ਸਾਲ',
            yy : '%d ਸਾਲ'
        },
        preparse: function (string) {
            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ਰਾਤ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ਸਵੇਰ') {
                return hour;
            } else if (meridiem === 'ਦੁਪਹਿਰ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ਸ਼ਾਮ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ਰਾਤ';
            } else if (hour < 10) {
                return 'ਸਵੇਰ';
            } else if (hour < 17) {
                return 'ਦੁਪਹਿਰ';
            } else if (hour < 20) {
                return 'ਸ਼ਾਮ';
            } else {
                return 'ਰਾਤ';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return paIn;

})));


/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
    function plural(n) {
        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
    }
    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                return result + (plural(number) ? 'sekundy' : 'sekund');
            case 'm':
                return withoutSuffix ? 'minuta' : 'minutę';
            case 'mm':
                return result + (plural(number) ? 'minuty' : 'minut');
            case 'h':
                return withoutSuffix  ? 'godzina'  : 'godzinę';
            case 'hh':
                return result + (plural(number) ? 'godziny' : 'godzin');
            case 'MM':
                return result + (plural(number) ? 'miesiące' : 'miesięcy');
            case 'yy':
                return result + (plural(number) ? 'lata' : 'lat');
        }
    }

    var pl = moment.defineLocale('pl', {
        months : function (momentToFormat, format) {
            if (!momentToFormat) {
                return monthsNominative;
            } else if (format === '') {
                // Hack: if format empty we know this is used to generate
                // RegExp by moment. Give then back both valid forms of months
                // in RegExp ready format.
                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
            } else if (/D MMMM/.test(format)) {
                return monthsSubjective[momentToFormat.month()];
            } else {
                return monthsNominative[momentToFormat.month()];
            }
        },
        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
        weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Dziś o] LT',
            nextDay: '[Jutro o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W niedzielę o] LT';

                    case 2:
                        return '[We wtorek o] LT';

                    case 3:
                        return '[W środę o] LT';

                    case 6:
                        return '[W sobotę o] LT';

                    default:
                        return '[W] dddd [o] LT';
                }
            },
            lastDay: '[Wczoraj o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W zeszłą niedzielę o] LT';
                    case 3:
                        return '[W zeszłą środę o] LT';
                    case 6:
                        return '[W zeszłą sobotę o] LT';
                    default:
                        return '[W zeszły] dddd [o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : '%s temu',
            s : 'kilka sekund',
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : '1 dzień',
            dd : '%d dni',
            M : 'miesiąc',
            MM : translate,
            y : 'rok',
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return pl;

})));


/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ptBr = moment.defineLocale('pt-br', {
        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
        },
        calendar : {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return (this.day() === 0 || this.day() === 6) ?
                    '[Último] dddd [às] LT' : // Saturday + Sunday
                    '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'em %s',
            past : 'há %s',
            s : 'poucos segundos',
            ss : '%d segundos',
            m : 'um minuto',
            mm : '%d minutos',
            h : 'uma hora',
            hh : '%d horas',
            d : 'um dia',
            dd : '%d dias',
            M : 'um mês',
            MM : '%d meses',
            y : 'um ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal : '%dº'
    });

    return ptBr;

})));


/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var pt = moment.defineLocale('pt', {
        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY HH:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return (this.day() === 0 || this.day() === 6) ?
                    '[Último] dddd [às] LT' : // Saturday + Sunday
                    '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'em %s',
            past : 'há %s',
            s : 'segundos',
            ss : '%d segundos',
            m : 'um minuto',
            mm : '%d minutos',
            h : 'uma hora',
            hh : '%d horas',
            d : 'um dia',
            dd : '%d dias',
            M : 'um mês',
            MM : '%d meses',
            y : 'um ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return pt;

})));


/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
                'ss': 'secunde',
                'mm': 'minute',
                'hh': 'ore',
                'dd': 'zile',
                'MM': 'luni',
                'yy': 'ani'
            },
            separator = ' ';
        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
            separator = ' de ';
        }
        return number + separator + format[key];
    }

    var ro = moment.defineLocale('ro', {
        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay: '[azi la] LT',
            nextDay: '[mâine la] LT',
            nextWeek: 'dddd [la] LT',
            lastDay: '[ieri la] LT',
            lastWeek: '[fosta] dddd [la] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'peste %s',
            past : '%s în urmă',
            s : 'câteva secunde',
            ss : relativeTimeWithPlural,
            m : 'un minut',
            mm : relativeTimeWithPlural,
            h : 'o oră',
            hh : relativeTimeWithPlural,
            d : 'o zi',
            dd : relativeTimeWithPlural,
            M : 'o lună',
            MM : relativeTimeWithPlural,
            y : 'un an',
            yy : relativeTimeWithPlural
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return ro;

})));


/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
            'hh': 'час_часа_часов',
            'dd': 'день_дня_дней',
            'MM': 'месяц_месяца_месяцев',
            'yy': 'год_года_лет'
        };
        if (key === 'm') {
            return withoutSuffix ? 'минута' : 'минуту';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

    // http://new.gramota.ru/spravka/rules/139-prop : § 103
    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
    var ru = moment.defineLocale('ru', {
        months : {
            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
        },
        monthsShort : {
            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
        },
        weekdays : {
            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
        },
        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
        monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // копия предыдущего
        monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // полные названия с падежами
        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

        // Выражение, которое соотвествует только сокращённым формам
        monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY г.',
            LLL : 'D MMMM YYYY г., H:mm',
            LLLL : 'dddd, D MMMM YYYY г., H:mm'
        },
        calendar : {
            sameDay: '[Сегодня, в] LT',
            nextDay: '[Завтра, в] LT',
            lastDay: '[Вчера, в] LT',
            nextWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В следующее] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В следующий] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В следующую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            lastWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В прошлое] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В прошлый] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В прошлую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'через %s',
            past : '%s назад',
            s : 'несколько секунд',
            ss : relativeTimeWithPlural,
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : 'час',
            hh : relativeTimeWithPlural,
            d : 'день',
            dd : relativeTimeWithPlural,
            M : 'месяц',
            MM : relativeTimeWithPlural,
            y : 'год',
            yy : relativeTimeWithPlural
        },
        meridiemParse: /ночи|утра|дня|вечера/i,
        isPM : function (input) {
            return /^(дня|вечера)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночи';
            } else if (hour < 12) {
                return 'утра';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечера';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                case 'w':
                case 'W':
                    return number + '-я';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ru;

})));


/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'جنوري',
        'فيبروري',
        'مارچ',
        'اپريل',
        'مئي',
        'جون',
        'جولاءِ',
        'آگسٽ',
        'سيپٽمبر',
        'آڪٽوبر',
        'نومبر',
        'ڊسمبر'
    ];
    var days = [
        'آچر',
        'سومر',
        'اڱارو',
        'اربع',
        'خميس',
        'جمع',
        'ڇنڇر'
    ];

    var sd = moment.defineLocale('sd', {
        months : months,
        monthsShort : months,
        weekdays : days,
        weekdaysShort : days,
        weekdaysMin : days,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd، D MMMM YYYY HH:mm'
        },
        meridiemParse: /صبح|شام/,
        isPM : function (input) {
            return 'شام' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar : {
            sameDay : '[اڄ] LT',
            nextDay : '[سڀاڻي] LT',
            nextWeek : 'dddd [اڳين هفتي تي] LT',
            lastDay : '[ڪالهه] LT',
            lastWeek : '[گزريل هفتي] dddd [تي] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s پوء',
            past : '%s اڳ',
            s : 'چند سيڪنڊ',
            ss : '%d سيڪنڊ',
            m : 'هڪ منٽ',
            mm : '%d منٽ',
            h : 'هڪ ڪلاڪ',
            hh : '%d ڪلاڪ',
            d : 'هڪ ڏينهن',
            dd : '%d ڏينهن',
            M : 'هڪ مهينو',
            MM : '%d مهينا',
            y : 'هڪ سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sd;

})));


/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var se = moment.defineLocale('se', {
        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'MMMM D. [b.] YYYY',
            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
        },
        calendar : {
            sameDay: '[otne ti] LT',
            nextDay: '[ihttin ti] LT',
            nextWeek: 'dddd [ti] LT',
            lastDay: '[ikte ti] LT',
            lastWeek: '[ovddit] dddd [ti] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s geažes',
            past : 'maŋit %s',
            s : 'moadde sekunddat',
            ss: '%d sekunddat',
            m : 'okta minuhta',
            mm : '%d minuhtat',
            h : 'okta diimmu',
            hh : '%d diimmut',
            d : 'okta beaivi',
            dd : '%d beaivvit',
            M : 'okta mánnu',
            MM : '%d mánut',
            y : 'okta jahki',
            yy : '%d jagit'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return se;

})));


/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    /*jshint -W100*/
    var si = moment.defineLocale('si', {
        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'a h:mm',
            LTS : 'a h:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY MMMM D',
            LLL : 'YYYY MMMM D, a h:mm',
            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
        },
        calendar : {
            sameDay : '[අද] LT[ට]',
            nextDay : '[හෙට] LT[ට]',
            nextWeek : 'dddd LT[ට]',
            lastDay : '[ඊයේ] LT[ට]',
            lastWeek : '[පසුගිය] dddd LT[ට]',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%sකින්',
            past : '%sකට පෙර',
            s : 'තත්පර කිහිපය',
            ss : 'තත්පර %d',
            m : 'මිනිත්තුව',
            mm : 'මිනිත්තු %d',
            h : 'පැය',
            hh : 'පැය %d',
            d : 'දිනය',
            dd : 'දින %d',
            M : 'මාසය',
            MM : 'මාස %d',
            y : 'වසර',
            yy : 'වසර %d'
        },
        dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
        ordinal : function (number) {
            return number + ' වැනි';
        },
        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
        isPM : function (input) {
            return input === 'ප.ව.' || input === 'පස් වරු';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'ප.ව.' : 'පස් වරු';
            } else {
                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
            }
        }
    });

    return si;

})));


/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
    function plural(n) {
        return (n > 1) && (n < 5);
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':  // a few seconds / in a few seconds / a few seconds ago
                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekúnd');
                } else {
                    return result + 'sekundami';
                }
                break;
            case 'm':  // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minúty' : 'minút');
                } else {
                    return result + 'minútami';
                }
                break;
            case 'h':  // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodín');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':  // a day / in a day / a day ago
                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dni' : 'dní');
                } else {
                    return result + 'dňami';
                }
                break;
            case 'M':  // a month / in a month / a month ago
                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'mesiace' : 'mesiacov');
                } else {
                    return result + 'mesiacmi';
                }
                break;
            case 'y':  // a year / in a year / a year ago
                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'rokov');
                } else {
                    return result + 'rokmi';
                }
                break;
        }
    }

    var sk = moment.defineLocale('sk', {
        months : months,
        monthsShort : monthsShort,
        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
        longDateFormat : {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay: '[dnes o] LT',
            nextDay: '[zajtra o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [o] LT';
                    case 3:
                        return '[v stredu o] LT';
                    case 4:
                        return '[vo štvrtok o] LT';
                    case 5:
                        return '[v piatok o] LT';
                    case 6:
                        return '[v sobotu o] LT';
                }
            },
            lastDay: '[včera o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulú nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[minulý] dddd [o] LT';
                    case 3:
                        return '[minulú stredu o] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [o] LT';
                    case 6:
                        return '[minulú sobotu o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : 'pred %s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sk;

})));


/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
            case 'ss':
                if (number === 1) {
                    result += withoutSuffix ? 'sekundo' : 'sekundi';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
                } else {
                    result += 'sekund';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'ena minuta' : 'eno minuto';
            case 'mm':
                if (number === 1) {
                    result += withoutSuffix ? 'minuta' : 'minuto';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';
                } else {
                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'ena ura' : 'eno uro';
            case 'hh':
                if (number === 1) {
                    result += withoutSuffix ? 'ura' : 'uro';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'uri' : 'urama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'ure' : 'urami';
                } else {
                    result += withoutSuffix || isFuture ? 'ur' : 'urami';
                }
                return result;
            case 'd':
                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
            case 'dd':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
                } else {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
                }
                return result;
            case 'M':
                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
            case 'MM':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
                } else {
                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
                }
                return result;
            case 'y':
                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
            case 'yy':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'leto' : 'letom';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'leta' : 'leti';
                } else {
                    result += withoutSuffix || isFuture ? 'let' : 'leti';
                }
                return result;
        }
    }

    var sl = moment.defineLocale('sl', {
        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danes ob] LT',
            nextDay  : '[jutri ob] LT',

            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[v] [nedeljo] [ob] LT';
                    case 3:
                        return '[v] [sredo] [ob] LT';
                    case 6:
                        return '[v] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[v] dddd [ob] LT';
                }
            },
            lastDay  : '[včeraj ob] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[prejšnjo] [nedeljo] [ob] LT';
                    case 3:
                        return '[prejšnjo] [sredo] [ob] LT';
                    case 6:
                        return '[prejšnjo] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prejšnji] dddd [ob] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'čez %s',
            past   : 'pred %s',
            s      : processRelativeTime,
            ss     : processRelativeTime,
            m      : processRelativeTime,
            mm     : processRelativeTime,
            h      : processRelativeTime,
            hh     : processRelativeTime,
            d      : processRelativeTime,
            dd     : processRelativeTime,
            M      : processRelativeTime,
            MM     : processRelativeTime,
            y      : processRelativeTime,
            yy     : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return sl;

})));


/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sq = moment.defineLocale('sq', {
        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
        weekdaysParseExact : true,
        meridiemParse: /PD|MD/,
        isPM: function (input) {
            return input.charAt(0) === 'M';
        },
        meridiem : function (hours, minutes, isLower) {
            return hours < 12 ? 'PD' : 'MD';
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Sot në] LT',
            nextDay : '[Nesër në] LT',
            nextWeek : 'dddd [në] LT',
            lastDay : '[Dje në] LT',
            lastWeek : 'dddd [e kaluar në] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'në %s',
            past : '%s më parë',
            s : 'disa sekonda',
            ss : '%d sekonda',
            m : 'një minutë',
            mm : '%d minuta',
            h : 'një orë',
            hh : '%d orë',
            d : 'një ditë',
            dd : '%d ditë',
            M : 'një muaj',
            MM : '%d muaj',
            y : 'një vit',
            yy : '%d vite'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sq;

})));


/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['секунда', 'секунде', 'секунди'],
            m: ['један минут', 'једне минуте'],
            mm: ['минут', 'минуте', 'минута'],
            h: ['један сат', 'једног сата'],
            hh: ['сат', 'сата', 'сати'],
            dd: ['дан', 'дана', 'дана'],
            MM: ['месец', 'месеца', 'месеци'],
            yy: ['година', 'године', 'година']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var srCyrl = moment.defineLocale('sr-cyrl', {
        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
        monthsParseExact: true,
        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[данас у] LT',
            nextDay: '[сутра у] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[у] [недељу] [у] LT';
                    case 3:
                        return '[у] [среду] [у] LT';
                    case 6:
                        return '[у] [суботу] [у] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[у] dddd [у] LT';
                }
            },
            lastDay  : '[јуче у] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[прошле] [недеље] [у] LT',
                    '[прошлог] [понедељка] [у] LT',
                    '[прошлог] [уторка] [у] LT',
                    '[прошле] [среде] [у] LT',
                    '[прошлог] [четвртка] [у] LT',
                    '[прошлог] [петка] [у] LT',
                    '[прошле] [суботе] [у] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'за %s',
            past   : 'пре %s',
            s      : 'неколико секунди',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'дан',
            dd     : translator.translate,
            M      : 'месец',
            MM     : translator.translate,
            y      : 'годину',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return srCyrl;

})));


/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['sekunda', 'sekunde', 'sekundi'],
            m: ['jedan minut', 'jedne minute'],
            mm: ['minut', 'minute', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mesec', 'meseca', 'meseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var sr = moment.defineLocale('sr', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedelju] [u] LT';
                    case 3:
                        return '[u] [sredu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[juče u] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[prošle] [nedelje] [u] LT',
                    '[prošlog] [ponedeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'pre %s',
            s      : 'nekoliko sekundi',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'dan',
            dd     : translator.translate,
            M      : 'mesec',
            MM     : translator.translate,
            y      : 'godinu',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return sr;

})));


/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ss = moment.defineLocale('ss', {
        months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Namuhla nga] LT',
            nextDay : '[Kusasa nga] LT',
            nextWeek : 'dddd [nga] LT',
            lastDay : '[Itolo nga] LT',
            lastWeek : 'dddd [leliphelile] [nga] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'nga %s',
            past : 'wenteka nga %s',
            s : 'emizuzwana lomcane',
            ss : '%d mzuzwana',
            m : 'umzuzu',
            mm : '%d emizuzu',
            h : 'lihora',
            hh : '%d emahora',
            d : 'lilanga',
            dd : '%d emalanga',
            M : 'inyanga',
            MM : '%d tinyanga',
            y : 'umnyaka',
            yy : '%d iminyaka'
        },
        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'ekuseni';
            } else if (hours < 15) {
                return 'emini';
            } else if (hours < 19) {
                return 'entsambama';
            } else {
                return 'ebusuku';
            }
        },
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ekuseni') {
                return hour;
            } else if (meridiem === 'emini') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
                if (hour === 0) {
                    return 0;
                }
                return hour + 12;
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : '%d',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ss;

})));


/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sv = moment.defineLocale('sv', {
        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [kl.] HH:mm',
            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Idag] LT',
            nextDay: '[Imorgon] LT',
            lastDay: '[Igår] LT',
            nextWeek: '[På] dddd LT',
            lastWeek: '[I] dddd[s] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : 'för %s sedan',
            s : 'några sekunder',
            ss : '%d sekunder',
            m : 'en minut',
            mm : '%d minuter',
            h : 'en timme',
            hh : '%d timmar',
            d : 'en dag',
            dd : '%d dagar',
            M : 'en månad',
            MM : '%d månader',
            y : 'ett år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'e' :
                (b === 1) ? 'a' :
                (b === 2) ? 'a' :
                (b === 3) ? 'e' : 'e';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sv;

})));


/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sw = moment.defineLocale('sw', {
        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[leo saa] LT',
            nextDay : '[kesho saa] LT',
            nextWeek : '[wiki ijayo] dddd [saat] LT',
            lastDay : '[jana] LT',
            lastWeek : '[wiki iliyopita] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s baadaye',
            past : 'tokea %s',
            s : 'hivi punde',
            ss : 'sekunde %d',
            m : 'dakika moja',
            mm : 'dakika %d',
            h : 'saa limoja',
            hh : 'masaa %d',
            d : 'siku moja',
            dd : 'masiku %d',
            M : 'mwezi mmoja',
            MM : 'miezi %d',
            y : 'mwaka mmoja',
            yy : 'miaka %d'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return sw;

})));


/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '௧',
        '2': '௨',
        '3': '௩',
        '4': '௪',
        '5': '௫',
        '6': '௬',
        '7': '௭',
        '8': '௮',
        '9': '௯',
        '0': '௦'
    }, numberMap = {
        '௧': '1',
        '௨': '2',
        '௩': '3',
        '௪': '4',
        '௫': '5',
        '௬': '6',
        '௭': '7',
        '௮': '8',
        '௯': '9',
        '௦': '0'
    };

    var ta = moment.defineLocale('ta', {
        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, HH:mm',
            LLLL : 'dddd, D MMMM YYYY, HH:mm'
        },
        calendar : {
            sameDay : '[இன்று] LT',
            nextDay : '[நாளை] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[நேற்று] LT',
            lastWeek : '[கடந்த வாரம்] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s இல்',
            past : '%s முன்',
            s : 'ஒரு சில விநாடிகள்',
            ss : '%d விநாடிகள்',
            m : 'ஒரு நிமிடம்',
            mm : '%d நிமிடங்கள்',
            h : 'ஒரு மணி நேரம்',
            hh : '%d மணி நேரம்',
            d : 'ஒரு நாள்',
            dd : '%d நாட்கள்',
            M : 'ஒரு மாதம்',
            MM : '%d மாதங்கள்',
            y : 'ஒரு வருடம்',
            yy : '%d ஆண்டுகள்'
        },
        dayOfMonthOrdinalParse: /\d{1,2}வது/,
        ordinal : function (number) {
            return number + 'வது';
        },
        preparse: function (string) {
            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // refer http://ta.wikipedia.org/s/1er1
        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
        meridiem : function (hour, minute, isLower) {
            if (hour < 2) {
                return ' யாமம்';
            } else if (hour < 6) {
                return ' வைகறை';  // வைகறை
            } else if (hour < 10) {
                return ' காலை'; // காலை
            } else if (hour < 14) {
                return ' நண்பகல்'; // நண்பகல்
            } else if (hour < 18) {
                return ' எற்பாடு'; // எற்பாடு
            } else if (hour < 22) {
                return ' மாலை'; // மாலை
            } else {
                return ' யாமம்';
            }
        },
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'யாமம்') {
                return hour < 2 ? hour : hour + 12;
            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
                return hour;
            } else if (meridiem === 'நண்பகல்') {
                return hour >= 10 ? hour : hour + 12;
            } else {
                return hour + 12;
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return ta;

})));


/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var te = moment.defineLocale('te', {
        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
        monthsParseExact : true,
        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[నేడు] LT',
            nextDay : '[రేపు] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[నిన్న] LT',
            lastWeek : '[గత] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s లో',
            past : '%s క్రితం',
            s : 'కొన్ని క్షణాలు',
            ss : '%d సెకన్లు',
            m : 'ఒక నిమిషం',
            mm : '%d నిమిషాలు',
            h : 'ఒక గంట',
            hh : '%d గంటలు',
            d : 'ఒక రోజు',
            dd : '%d రోజులు',
            M : 'ఒక నెల',
            MM : '%d నెలలు',
            y : 'ఒక సంవత్సరం',
            yy : '%d సంవత్సరాలు'
        },
        dayOfMonthOrdinalParse : /\d{1,2}వ/,
        ordinal : '%dవ',
        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'రాత్రి') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ఉదయం') {
                return hour;
            } else if (meridiem === 'మధ్యాహ్నం') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'సాయంత్రం') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'రాత్రి';
            } else if (hour < 10) {
                return 'ఉదయం';
            } else if (hour < 17) {
                return 'మధ్యాహ్నం';
            } else if (hour < 20) {
                return 'సాయంత్రం';
            } else {
                return 'రాత్రి';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return te;

})));


/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tet = moment.defineLocale('tet', {
        months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
        weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
        weekdaysMin : 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Ohin iha] LT',
            nextDay: '[Aban iha] LT',
            nextWeek: 'dddd [iha] LT',
            lastDay: '[Horiseik iha] LT',
            lastWeek: 'dddd [semana kotuk] [iha] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'iha %s',
            past : '%s liuba',
            s : 'minutu balun',
            ss : 'minutu %d',
            m : 'minutu ida',
            mm : 'minutu %d',
            h : 'oras ida',
            hh : 'oras %d',
            d : 'loron ida',
            dd : 'loron %d',
            M : 'fulan ida',
            MM : 'fulan %d',
            y : 'tinan ida',
            yy : 'tinan %d'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tet;

})));


/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-ум',
        1: '-ум',
        2: '-юм',
        3: '-юм',
        4: '-ум',
        5: '-ум',
        6: '-ум',
        7: '-ум',
        8: '-ум',
        9: '-ум',
        10: '-ум',
        12: '-ум',
        13: '-ум',
        20: '-ум',
        30: '-юм',
        40: '-ум',
        50: '-ум',
        60: '-ум',
        70: '-ум',
        80: '-ум',
        90: '-ум',
        100: '-ум'
    };

    var tg = moment.defineLocale('tg', {
        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),
        weekdaysShort : 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
        weekdaysMin : 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Имрӯз соати] LT',
            nextDay : '[Пагоҳ соати] LT',
            lastDay : '[Дирӯз соати] LT',
            nextWeek : 'dddd[и] [ҳафтаи оянда соати] LT',
            lastWeek : 'dddd[и] [ҳафтаи гузашта соати] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'баъди %s',
            past : '%s пеш',
            s : 'якчанд сония',
            m : 'як дақиқа',
            mm : '%d дақиқа',
            h : 'як соат',
            hh : '%d соат',
            d : 'як рӯз',
            dd : '%d рӯз',
            M : 'як моҳ',
            MM : '%d моҳ',
            y : 'як сол',
            yy : '%d сол'
        },
        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'шаб') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'субҳ') {
                return hour;
            } else if (meridiem === 'рӯз') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'бегоҳ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'шаб';
            } else if (hour < 11) {
                return 'субҳ';
            } else if (hour < 16) {
                return 'рӯз';
            } else if (hour < 19) {
                return 'бегоҳ';
            } else {
                return 'шаб';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
        ordinal: function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1th is the first week of the year.
        }
    });

    return tg;

})));


/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var th = moment.defineLocale('th', {
        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
        monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
        monthsParseExact: true,
        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY เวลา H:mm',
            LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
        },
        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
        isPM: function (input) {
            return input === 'หลังเที่ยง';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ก่อนเที่ยง';
            } else {
                return 'หลังเที่ยง';
            }
        },
        calendar : {
            sameDay : '[วันนี้ เวลา] LT',
            nextDay : '[พรุ่งนี้ เวลา] LT',
            nextWeek : 'dddd[หน้า เวลา] LT',
            lastDay : '[เมื่อวานนี้ เวลา] LT',
            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'อีก %s',
            past : '%sที่แล้ว',
            s : 'ไม่กี่วินาที',
            ss : '%d วินาที',
            m : '1 นาที',
            mm : '%d นาที',
            h : '1 ชั่วโมง',
            hh : '%d ชั่วโมง',
            d : '1 วัน',
            dd : '%d วัน',
            M : '1 เดือน',
            MM : '%d เดือน',
            y : '1 ปี',
            yy : '%d ปี'
        }
    });

    return th;

})));


/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tlPh = moment.defineLocale('tl-ph', {
        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'MM/D/YYYY',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY HH:mm',
            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
        },
        calendar : {
            sameDay: 'LT [ngayong araw]',
            nextDay: '[Bukas ng] LT',
            nextWeek: 'LT [sa susunod na] dddd',
            lastDay: 'LT [kahapon]',
            lastWeek: 'LT [noong nakaraang] dddd',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'sa loob ng %s',
            past : '%s ang nakalipas',
            s : 'ilang segundo',
            ss : '%d segundo',
            m : 'isang minuto',
            mm : '%d minuto',
            h : 'isang oras',
            hh : '%d oras',
            d : 'isang araw',
            dd : '%d araw',
            M : 'isang buwan',
            MM : '%d buwan',
            y : 'isang taon',
            yy : '%d taon'
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : function (number) {
            return number;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tlPh;

})));


/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

    function translateFuture(output) {
        var time = output;
        time = (output.indexOf('jaj') !== -1) ?
        time.slice(0, -3) + 'leS' :
        (output.indexOf('jar') !== -1) ?
        time.slice(0, -3) + 'waQ' :
        (output.indexOf('DIS') !== -1) ?
        time.slice(0, -3) + 'nem' :
        time + ' pIq';
        return time;
    }

    function translatePast(output) {
        var time = output;
        time = (output.indexOf('jaj') !== -1) ?
        time.slice(0, -3) + 'Hu’' :
        (output.indexOf('jar') !== -1) ?
        time.slice(0, -3) + 'wen' :
        (output.indexOf('DIS') !== -1) ?
        time.slice(0, -3) + 'ben' :
        time + ' ret';
        return time;
    }

    function translate(number, withoutSuffix, string, isFuture) {
        var numberNoun = numberAsNoun(number);
        switch (string) {
            case 'ss':
                return numberNoun + ' lup';
            case 'mm':
                return numberNoun + ' tup';
            case 'hh':
                return numberNoun + ' rep';
            case 'dd':
                return numberNoun + ' jaj';
            case 'MM':
                return numberNoun + ' jar';
            case 'yy':
                return numberNoun + ' DIS';
        }
    }

    function numberAsNoun(number) {
        var hundred = Math.floor((number % 1000) / 100),
        ten = Math.floor((number % 100) / 10),
        one = number % 10,
        word = '';
        if (hundred > 0) {
            word += numbersNouns[hundred] + 'vatlh';
        }
        if (ten > 0) {
            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
        }
        if (one > 0) {
            word += ((word !== '') ? ' ' : '') + numbersNouns[one];
        }
        return (word === '') ? 'pagh' : word;
    }

    var tlh = moment.defineLocale('tlh', {
        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
        monthsParseExact : true,
        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[DaHjaj] LT',
            nextDay: '[wa’leS] LT',
            nextWeek: 'LLL',
            lastDay: '[wa’Hu’] LT',
            lastWeek: 'LLL',
            sameElse: 'L'
        },
        relativeTime : {
            future : translateFuture,
            past : translatePast,
            s : 'puS lup',
            ss : translate,
            m : 'wa’ tup',
            mm : translate,
            h : 'wa’ rep',
            hh : translate,
            d : 'wa’ jaj',
            dd : translate,
            M : 'wa’ jar',
            MM : translate,
            y : 'wa’ DIS',
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tlh;

})));


/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {


;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    var suffixes = {
        1: '\'inci',
        5: '\'inci',
        8: '\'inci',
        70: '\'inci',
        80: '\'inci',
        2: '\'nci',
        7: '\'nci',
        20: '\'nci',
        50: '\'nci',
        3: '\'üncü',
        4: '\'üncü',
        100: '\'üncü',
        6: '\'ncı',
        9: '\'uncu',
        10: '\'uncu',
        30: '\'uncu',
        60: '\'ıncı',
        90: '\'ıncı'
    };

    var tr = moment.defineLocale('tr', {
        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[bugün saat] LT',
            nextDay : '[yarın saat] LT',
            nextWeek : '[gelecek] dddd [saat] LT',
            lastDay : '[dün] LT',
            lastWeek : '[geçen] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s sonra',
            past : '%s önce',
            s : 'birkaç saniye',
            ss : '%d saniye',
            m : 'bir dakika',
            mm : '%d dakika',
            h : 'bir saat',
            hh : '%d saat',
            d : 'bir gün',
            dd : '%d gün',
            M : 'bir ay',
            MM : '%d ay',
            y : 'bir yıl',
            yy : '%d yıl'
        },
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'Do':
                case 'DD':
                    return number;
                default:
                    if (number === 0) {  // special case for zero
                        return number + '\'ıncı';
                    }
                    var a = number % 10,
                        b = number % 100 - a,
                        c = number >= 100 ? 100 : null;
                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return tr;

})));


/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
    // This is currently too difficult (maybe even impossible) to add.
    var tzl = moment.defineLocale('tzl', {
        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM [dallas] YYYY',
            LLL : 'D. MMMM [dallas] YYYY HH.mm',
            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
        },
        meridiemParse: /d\'o|d\'a/i,
        isPM : function (input) {
            return 'd\'o' === input.toLowerCase();
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'd\'o' : 'D\'O';
            } else {
                return isLower ? 'd\'a' : 'D\'A';
            }
        },
        calendar : {
            sameDay : '[oxhi à] LT',
            nextDay : '[demà à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[ieiri à] LT',
            lastWeek : '[sür el] dddd [lasteu à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'osprei %s',
            past : 'ja%s',
            s : processRelativeTime,
            ss : processRelativeTime,
            m : processRelativeTime,
            mm : processRelativeTime,
            h : processRelativeTime,
            hh : processRelativeTime,
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['viensas secunds', '\'iensas secunds'],
            'ss': [number + ' secunds', '' + number + ' secunds'],
            'm': ['\'n míut', '\'iens míut'],
            'mm': [number + ' míuts', '' + number + ' míuts'],
            'h': ['\'n þora', '\'iensa þora'],
            'hh': [number + ' þoras', '' + number + ' þoras'],
            'd': ['\'n ziua', '\'iensa ziua'],
            'dd': [number + ' ziuas', '' + number + ' ziuas'],
            'M': ['\'n mes', '\'iens mes'],
            'MM': [number + ' mesen', '' + number + ' mesen'],
            'y': ['\'n ar', '\'iens ar'],
            'yy': [number + ' ars', '' + number + ' ars']
        };
        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
    }

    return tzl;

})));


/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tzmLatn = moment.defineLocale('tzm-latn', {
        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[asdkh g] LT',
            nextDay: '[aska g] LT',
            nextWeek: 'dddd [g] LT',
            lastDay: '[assant g] LT',
            lastWeek: 'dddd [g] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'dadkh s yan %s',
            past : 'yan %s',
            s : 'imik',
            ss : '%d imik',
            m : 'minuḍ',
            mm : '%d minuḍ',
            h : 'saɛa',
            hh : '%d tassaɛin',
            d : 'ass',
            dd : '%d ossan',
            M : 'ayowr',
            MM : '%d iyyirn',
            y : 'asgas',
            yy : '%d isgasn'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return tzmLatn;

})));


/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tzm = moment.defineLocale('tzm', {
        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
            nextWeek: 'dddd [ⴴ] LT',
            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
            lastWeek: 'dddd [ⴴ] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
            past : 'ⵢⴰⵏ %s',
            s : 'ⵉⵎⵉⴽ',
            ss : '%d ⵉⵎⵉⴽ',
            m : 'ⵎⵉⵏⵓⴺ',
            mm : '%d ⵎⵉⵏⵓⴺ',
            h : 'ⵙⴰⵄⴰ',
            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
            d : 'ⴰⵙⵙ',
            dd : '%d oⵙⵙⴰⵏ',
            M : 'ⴰⵢoⵓⵔ',
            MM : '%d ⵉⵢⵢⵉⵔⵏ',
            y : 'ⴰⵙⴳⴰⵙ',
            yy : '%d ⵉⵙⴳⴰⵙⵏ'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return tzm;

})));


/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js language configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ugCn = moment.defineLocale('ug-cn', {
        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
            '_'
        ),
        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'
        },
        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (
                meridiem === 'يېرىم كېچە' ||
                meridiem === 'سەھەر' ||
                meridiem === 'چۈشتىن بۇرۇن'
            ) {
                return hour;
            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
                return hour + 12;
            } else {
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return 'يېرىم كېچە';
            } else if (hm < 900) {
                return 'سەھەر';
            } else if (hm < 1130) {
                return 'چۈشتىن بۇرۇن';
            } else if (hm < 1230) {
                return 'چۈش';
            } else if (hm < 1800) {
                return 'چۈشتىن كېيىن';
            } else {
                return 'كەچ';
            }
        },
        calendar: {
            sameDay: '[بۈگۈن سائەت] LT',
            nextDay: '[ئەتە سائەت] LT',
            nextWeek: '[كېلەركى] dddd [سائەت] LT',
            lastDay: '[تۆنۈگۈن] LT',
            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s كېيىن',
            past: '%s بۇرۇن',
            s: 'نەچچە سېكونت',
            ss: '%d سېكونت',
            m: 'بىر مىنۇت',
            mm: '%d مىنۇت',
            h: 'بىر سائەت',
            hh: '%d سائەت',
            d: 'بىر كۈن',
            dd: '%d كۈن',
            M: 'بىر ئاي',
            MM: '%d ئاي',
            y: 'بىر يىل',
            yy: '%d يىل'
        },

        dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '-كۈنى';
                case 'w':
                case 'W':
                    return number + '-ھەپتە';
                default:
                    return number;
            }
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
        }
    });

    return ugCn;

})));


/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
            'dd': 'день_дні_днів',
            'MM': 'місяць_місяці_місяців',
            'yy': 'рік_роки_років'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвилина' : 'хвилину';
        }
        else if (key === 'h') {
            return withoutSuffix ? 'година' : 'годину';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    function weekdaysCaseReplace(m, format) {
        var weekdays = {
            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
        };

        if (m === true) {
            return weekdays['nominative'].slice(1, 7).concat(weekdays['nominative'].slice(0, 1));
        }
        if (!m) {
            return weekdays['nominative'];
        }

        var nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
            'accusative' :
            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
                'genitive' :
                'nominative');
        return weekdays[nounCase][m.day()];
    }
    function processHoursFunction(str) {
        return function () {
            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
        };
    }

    var uk = moment.defineLocale('uk', {
        months : {
            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
        },
        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
        weekdays : weekdaysCaseReplace,
        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY р.',
            LLL : 'D MMMM YYYY р., HH:mm',
            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
        },
        calendar : {
            sameDay: processHoursFunction('[Сьогодні '),
            nextDay: processHoursFunction('[Завтра '),
            lastDay: processHoursFunction('[Вчора '),
            nextWeek: processHoursFunction('[У] dddd ['),
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return processHoursFunction('[Минулої] dddd [').call(this);
                    case 1:
                    case 2:
                    case 4:
                        return processHoursFunction('[Минулого] dddd [').call(this);
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'за %s',
            past : '%s тому',
            s : 'декілька секунд',
            ss : relativeTimeWithPlural,
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : 'годину',
            hh : relativeTimeWithPlural,
            d : 'день',
            dd : relativeTimeWithPlural,
            M : 'місяць',
            MM : relativeTimeWithPlural,
            y : 'рік',
            yy : relativeTimeWithPlural
        },
        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
        meridiemParse: /ночі|ранку|дня|вечора/,
        isPM: function (input) {
            return /^(дня|вечора)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночі';
            } else if (hour < 12) {
                return 'ранку';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечора';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return uk;

})));


/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'جنوری',
        'فروری',
        'مارچ',
        'اپریل',
        'مئی',
        'جون',
        'جولائی',
        'اگست',
        'ستمبر',
        'اکتوبر',
        'نومبر',
        'دسمبر'
    ];
    var days = [
        'اتوار',
        'پیر',
        'منگل',
        'بدھ',
        'جمعرات',
        'جمعہ',
        'ہفتہ'
    ];

    var ur = moment.defineLocale('ur', {
        months : months,
        monthsShort : months,
        weekdays : days,
        weekdaysShort : days,
        weekdaysMin : days,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd، D MMMM YYYY HH:mm'
        },
        meridiemParse: /صبح|شام/,
        isPM : function (input) {
            return 'شام' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar : {
            sameDay : '[آج بوقت] LT',
            nextDay : '[کل بوقت] LT',
            nextWeek : 'dddd [بوقت] LT',
            lastDay : '[گذشتہ روز بوقت] LT',
            lastWeek : '[گذشتہ] dddd [بوقت] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s بعد',
            past : '%s قبل',
            s : 'چند سیکنڈ',
            ss : '%d سیکنڈ',
            m : 'ایک منٹ',
            mm : '%d منٹ',
            h : 'ایک گھنٹہ',
            hh : '%d گھنٹے',
            d : 'ایک دن',
            dd : '%d دن',
            M : 'ایک ماہ',
            MM : '%d ماہ',
            y : 'ایک سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ur;

})));


/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var uzLatn = moment.defineLocale('uz-latn', {
        months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
        monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
        weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
        weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
        weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'D MMMM YYYY, dddd HH:mm'
        },
        calendar : {
            sameDay : '[Bugun soat] LT [da]',
            nextDay : '[Ertaga] LT [da]',
            nextWeek : 'dddd [kuni soat] LT [da]',
            lastDay : '[Kecha soat] LT [da]',
            lastWeek : '[O\'tgan] dddd [kuni soat] LT [da]',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'Yaqin %s ichida',
            past : 'Bir necha %s oldin',
            s : 'soniya',
            ss : '%d soniya',
            m : 'bir daqiqa',
            mm : '%d daqiqa',
            h : 'bir soat',
            hh : '%d soat',
            d : 'bir kun',
            dd : '%d kun',
            M : 'bir oy',
            MM : '%d oy',
            y : 'bir yil',
            yy : '%d yil'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return uzLatn;

})));


/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var uz = moment.defineLocale('uz', {
        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'D MMMM YYYY, dddd HH:mm'
        },
        calendar : {
            sameDay : '[Бугун соат] LT [да]',
            nextDay : '[Эртага] LT [да]',
            nextWeek : 'dddd [куни соат] LT [да]',
            lastDay : '[Кеча соат] LT [да]',
            lastWeek : '[Утган] dddd [куни соат] LT [да]',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'Якин %s ичида',
            past : 'Бир неча %s олдин',
            s : 'фурсат',
            ss : '%d фурсат',
            m : 'бир дакика',
            mm : '%d дакика',
            h : 'бир соат',
            hh : '%d соат',
            d : 'бир кун',
            dd : '%d кун',
            M : 'бир ой',
            MM : '%d ой',
            y : 'бир йил',
            yy : '%d йил'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return uz;

})));


/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var vi = moment.defineLocale('vi', {
        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
        monthsParseExact : true,
        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysParseExact : true,
        meridiemParse: /sa|ch/i,
        isPM : function (input) {
            return /^ch$/i.test(input);
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'sa' : 'SA';
            } else {
                return isLower ? 'ch' : 'CH';
            }
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM [năm] YYYY',
            LLL : 'D MMMM [năm] YYYY HH:mm',
            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
            l : 'DD/M/YYYY',
            ll : 'D MMM YYYY',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd, D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Hôm nay lúc] LT',
            nextDay: '[Ngày mai lúc] LT',
            nextWeek: 'dddd [tuần tới lúc] LT',
            lastDay: '[Hôm qua lúc] LT',
            lastWeek: 'dddd [tuần rồi lúc] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s tới',
            past : '%s trước',
            s : 'vài giây',
            ss : '%d giây' ,
            m : 'một phút',
            mm : '%d phút',
            h : 'một giờ',
            hh : '%d giờ',
            d : 'một ngày',
            dd : '%d ngày',
            M : 'một tháng',
            MM : '%d tháng',
            y : 'một năm',
            yy : '%d năm'
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : function (number) {
            return number;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return vi;

})));


/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var xPseudo = moment.defineLocale('x-pseudo', {
        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
        monthsParseExact : true,
        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[T~ódá~ý át] LT',
            nextDay : '[T~ómó~rró~w át] LT',
            nextWeek : 'dddd [át] LT',
            lastDay : '[Ý~ést~érdá~ý át] LT',
            lastWeek : '[L~ást] dddd [át] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'í~ñ %s',
            past : '%s á~gó',
            s : 'á ~féw ~sécó~ñds',
            ss : '%d s~écóñ~ds',
            m : 'á ~míñ~úté',
            mm : '%d m~íñú~tés',
            h : 'á~ñ hó~úr',
            hh : '%d h~óúrs',
            d : 'á ~dáý',
            dd : '%d d~áýs',
            M : 'á ~móñ~th',
            MM : '%d m~óñt~hs',
            y : 'á ~ýéár',
            yy : '%d ý~éárs'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return xPseudo;

})));


/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var yo = moment.defineLocale('yo', {
        months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
        monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
        weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
        weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
        weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Ònì ni] LT',
            nextDay : '[Ọ̀la ni] LT',
            nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
            lastDay : '[Àna ni] LT',
            lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ní %s',
            past : '%s kọjá',
            s : 'ìsẹjú aayá die',
            ss :'aayá %d',
            m : 'ìsẹjú kan',
            mm : 'ìsẹjú %d',
            h : 'wákati kan',
            hh : 'wákati %d',
            d : 'ọjọ́ kan',
            dd : 'ọjọ́ %d',
            M : 'osù kan',
            MM : 'osù %d',
            y : 'ọdún kan',
            yy : 'ọdún %d'
        },
        dayOfMonthOrdinalParse : /ọjọ́\s\d{1,2}/,
        ordinal : 'ọjọ́ %d',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return yo;

})));


/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhCn = moment.defineLocale('zh-cn', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日Ah点mm分',
            LLLL : 'YYYY年M月D日ddddAh点mm分',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' ||
                    meridiem === '上午') {
                return hour;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            } else {
                // '中午'
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天]LT',
            nextDay : '[明天]LT',
            nextWeek : '[下]ddddLT',
            lastDay : '[昨天]LT',
            lastWeek : '[上]ddddLT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '周';
                default:
                    return number;
            }
        },
        relativeTime : {
            future : '%s内',
            past : '%s前',
            s : '几秒',
            ss : '%d 秒',
            m : '1 分钟',
            mm : '%d 分钟',
            h : '1 小时',
            hh : '%d 小时',
            d : '1 天',
            dd : '%d 天',
            M : '1 个月',
            MM : '%d 个月',
            y : '1 年',
            yy : '%d 年'
        },
        week : {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return zhCn;

})));


/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhHk = moment.defineLocale('zh-hk', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日dddd HH:mm',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天]LT',
            nextDay : '[明天]LT',
            nextWeek : '[下]ddddLT',
            lastDay : '[昨天]LT',
            lastWeek : '[上]ddddLT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd' :
                case 'D' :
                case 'DDD' :
                    return number + '日';
                case 'M' :
                    return number + '月';
                case 'w' :
                case 'W' :
                    return number + '週';
                default :
                    return number;
            }
        },
        relativeTime : {
            future : '%s內',
            past : '%s前',
            s : '幾秒',
            ss : '%d 秒',
            m : '1 分鐘',
            mm : '%d 分鐘',
            h : '1 小時',
            hh : '%d 小時',
            d : '1 天',
            dd : '%d 天',
            M : '1 個月',
            MM : '%d 個月',
            y : '1 年',
            yy : '%d 年'
        }
    });

    return zhHk;

})));


/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(392)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhTw = moment.defineLocale('zh-tw', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日dddd HH:mm',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天] LT',
            nextDay : '[明天] LT',
            nextWeek : '[下]dddd LT',
            lastDay : '[昨天] LT',
            lastWeek : '[上]dddd LT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd' :
                case 'D' :
                case 'DDD' :
                    return number + '日';
                case 'M' :
                    return number + '月';
                case 'w' :
                case 'W' :
                    return number + '週';
                default :
                    return number;
            }
        },
        relativeTime : {
            future : '%s內',
            past : '%s前',
            s : '幾秒',
            ss : '%d 秒',
            m : '1 分鐘',
            mm : '%d 分鐘',
            h : '1 小時',
            hh : '%d 小時',
            d : '1 天',
            dd : '%d 天',
            M : '1 個月',
            MM : '%d 個月',
            y : '1 年',
            yy : '%d 年'
        }
    });

    return zhTw;

})));


/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,
// backported and transplited with Babel, with backwards-compat fixes

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function (path) {
  if (typeof path !== 'string') path = path + '';
  if (path.length === 0) return '.';
  var code = path.charCodeAt(0);
  var hasRoot = code === 47 /*/*/;
  var end = -1;
  var matchedSlash = true;
  for (var i = path.length - 1; i >= 1; --i) {
    code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
      // We saw the first non-path separator
      matchedSlash = false;
    }
  }

  if (end === -1) return hasRoot ? '/' : '.';
  if (hasRoot && end === 1) {
    // return '//';
    // Backwards-compat fix:
    return '/';
  }
  return path.slice(0, end);
};

function basename(path) {
  if (typeof path !== 'string') path = path + '';

  var start = 0;
  var end = -1;
  var matchedSlash = true;
  var i;

  for (i = path.length - 1; i >= 0; --i) {
    if (path.charCodeAt(i) === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          start = i + 1;
          break;
        }
      } else if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // path component
      matchedSlash = false;
      end = i + 1;
    }
  }

  if (end === -1) return '';
  return path.slice(start, end);
}

// Uses a mixed approach for backwards-compatibility, as ext behavior changed
// in new Node.js versions, so only basename() above is backported here
exports.basename = function (path, ext) {
  var f = basename(path);
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};

exports.extname = function (path) {
  if (typeof path !== 'string') path = path + '';
  var startDot = -1;
  var startPart = 0;
  var end = -1;
  var matchedSlash = true;
  // Track the state of characters (if any) we see before our first dot and
  // after any path separator we find
  var preDotState = 0;
  for (var i = path.length - 1; i >= 0; --i) {
    var code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
    if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // extension
      matchedSlash = false;
      end = i + 1;
    }
    if (code === 46 /*.*/) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
    } else if (startDot !== -1) {
      // We saw a non-dot and non-path separator before our dot, so we should
      // have a good chance at having a non-empty extension
      preDotState = -1;
    }
  }

  if (startDot === -1 || end === -1 ||
      // We saw a non-dot character immediately before the dot
      preDotState === 0 ||
      // The (right-most) trimmed path component is exactly '..'
      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
    return '';
  }
  return path.slice(startDot, end);
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  position: true,
  gfm: true,
  commonmark: false,
  footnotes: false,
  pedantic: false,
  blocks: __webpack_require__(548)
};


/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = locate;

function locate(value, fromIndex) {
  var link = value.indexOf('[', fromIndex);
  var image = value.indexOf('![', fromIndex);

  if (image === -1) {
    return link;
  }

  /* Link can never be `-1` if an image is found, so we don’t need
   * to check for that :) */
  return link < image ? link : image;
}


/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = locate;

function locate(value, fromIndex) {
  return value.indexOf('<', fromIndex);
}


/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = indentation;

/* Map of characters, and their column length,
 * which can be used as indentation. */
var characters = {' ': 1, '\t': 4};

/* Gets indentation information for a line. */
function indentation(value) {
  var index = 0;
  var indent = 0;
  var character = value.charAt(index);
  var stops = {};
  var size;

  while (character in characters) {
    size = characters[character];

    indent += size;

    if (size > 1) {
      indent = Math.floor(indent / size) * size;
    }

    stops[indent] = index;

    character = value.charAt(++index);
  }

  return {indent: indent, stops: stops};
}


/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var attributeName = '[a-zA-Z_:][a-zA-Z0-9:._-]*';
var unquoted = '[^"\'=<>`\\u0000-\\u0020]+';
var singleQuoted = '\'[^\']*\'';
var doubleQuoted = '"[^"]*"';
var attributeValue = '(?:' + unquoted + '|' + singleQuoted + '|' + doubleQuoted + ')';
var attribute = '(?:\\s+' + attributeName + '(?:\\s*=\\s*' + attributeValue + ')?)';
var openTag = '<[A-Za-z][A-Za-z0-9\\-]*' + attribute + '*\\s*\\/?>';
var closeTag = '<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>';
var comment = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';
var processing = '<[?].*?[?]>';
var declaration = '<![A-Za-z]+\\s+[^>]*>';
var cdata = '<!\\[CDATA\\[[\\s\\S]*?\\]\\]>';

exports.openCloseTag = new RegExp('^(?:' + openTag + '|' + closeTag + ')');

exports.tag = new RegExp('^(?:' +
  openTag + '|' +
  closeTag + '|' +
  comment + '|' +
  processing + '|' +
  declaration + '|' +
  cdata +
')');


/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = bail

function bail(err) {
  if (err) {
    throw err
  }
}


/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = collapse

// `collapse(' \t\nbar \nbaz\t') // ' bar baz '`
function collapse(value) {
  return String(value).replace(/\s+/g, ' ')
}


/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hasOwn = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;
var defineProperty = Object.defineProperty;
var gOPD = Object.getOwnPropertyDescriptor;

var isArray = function isArray(arr) {
	if (typeof Array.isArray === 'function') {
		return Array.isArray(arr);
	}

	return toStr.call(arr) === '[object Array]';
};

var isPlainObject = function isPlainObject(obj) {
	if (!obj || toStr.call(obj) !== '[object Object]') {
		return false;
	}

	var hasOwnConstructor = hasOwn.call(obj, 'constructor');
	var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
	// Not own constructor property must be Object
	if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
		return false;
	}

	// Own properties are enumerated firstly, so to speed up,
	// if last one is own, then all properties are own.
	var key;
	for (key in obj) { /**/ }

	return typeof key === 'undefined' || hasOwn.call(obj, key);
};

// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target
var setProperty = function setProperty(target, options) {
	if (defineProperty && options.name === '__proto__') {
		defineProperty(target, options.name, {
			enumerable: true,
			configurable: true,
			value: options.newValue,
			writable: true
		});
	} else {
		target[options.name] = options.newValue;
	}
};

// Return undefined instead of __proto__ if '__proto__' is not an own property
var getProperty = function getProperty(obj, name) {
	if (name === '__proto__') {
		if (!hasOwn.call(obj, name)) {
			return void 0;
		} else if (gOPD) {
			// In early versions of node, obj['__proto__'] is buggy when obj has
			// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.
			return gOPD(obj, name).value;
		}
	}

	return obj[name];
};

module.exports = function extend() {
	var options, name, src, copy, copyIsArray, clone;
	var target = arguments[0];
	var i = 1;
	var length = arguments.length;
	var deep = false;

	// Handle a deep copy situation
	if (typeof target === 'boolean') {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}
	if (target == null || (typeof target !== 'object' && typeof target !== 'function')) {
		target = {};
	}

	for (; i < length; ++i) {
		options = arguments[i];
		// Only deal with non-null/undefined values
		if (options != null) {
			// Extend the base object
			for (name in options) {
				src = getProperty(target, name);
				copy = getProperty(options, name);

				// Prevent never-ending loop
				if (target !== copy) {
					// Recurse if we're merging plain objects or arrays
					if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
						if (copyIsArray) {
							copyIsArray = false;
							clone = src && isArray(src) ? src : [];
						} else {
							clone = src && isPlainObject(src) ? src : {};
						}

						// Never move original objects, clone them
						setProperty(target, { name: name, newValue: extend(deep, clone, copy) });

					// Don't bring in undefined values
					} else if (typeof copy !== 'undefined') {
						setProperty(target, { name: name, newValue: copy });
					}
				}
			}
		}
	}

	// Return the modified object
	return target;
};


/***/ }),
/* 540 */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var alphabetical = __webpack_require__(403)
var decimal = __webpack_require__(396)

module.exports = alphanumerical

// Check if the given character code, or the character code at the first
// character, is alphanumerical.
function alphanumerical(character) {
  return alphabetical(character) || decimal(character)
}


/***/ }),
/* 542 */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = hexadecimal

// Check if the given character code, or the character code at the first
// character, is hexadecimal.
function hexadecimal(character) {
  var code = typeof character === 'string' ? character.charCodeAt(0) : character

  return (
    (code >= 97 /* a */ && code <= 102) /* z */ ||
    (code >= 65 /* A */ && code <= 70) /* Z */ ||
    (code >= 48 /* A */ && code <= 57) /* Z */
  )
}


/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toString = Object.prototype.toString;

module.exports = function (x) {
	var prototype;
	return toString.call(x) === '[object Object]' && (prototype = Object.getPrototypeOf(x), prototype === null || prototype === Object.getPrototypeOf({}));
};


/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = wordCharacter

var fromCode = String.fromCharCode
var re = /\w/

// Check if the given character code, or the character code at the first
// character, is a word character.
function wordCharacter(character) {
  return re.test(
    typeof character === 'number' ? fromCode(character) : character.charAt(0)
  )
}


/***/ }),
/* 546 */
/***/ (function(module, exports) {

module.exports = {"AElig":"Æ","AMP":"&","Aacute":"Á","Acirc":"Â","Agrave":"À","Aring":"Å","Atilde":"Ã","Auml":"Ä","COPY":"©","Ccedil":"Ç","ETH":"Ð","Eacute":"É","Ecirc":"Ê","Egrave":"È","Euml":"Ë","GT":">","Iacute":"Í","Icirc":"Î","Igrave":"Ì","Iuml":"Ï","LT":"<","Ntilde":"Ñ","Oacute":"Ó","Ocirc":"Ô","Ograve":"Ò","Oslash":"Ø","Otilde":"Õ","Ouml":"Ö","QUOT":"\"","REG":"®","THORN":"Þ","Uacute":"Ú","Ucirc":"Û","Ugrave":"Ù","Uuml":"Ü","Yacute":"Ý","aacute":"á","acirc":"â","acute":"´","aelig":"æ","agrave":"à","amp":"&","aring":"å","atilde":"ã","auml":"ä","brvbar":"¦","ccedil":"ç","cedil":"¸","cent":"¢","copy":"©","curren":"¤","deg":"°","divide":"÷","eacute":"é","ecirc":"ê","egrave":"è","eth":"ð","euml":"ë","frac12":"½","frac14":"¼","frac34":"¾","gt":">","iacute":"í","icirc":"î","iexcl":"¡","igrave":"ì","iquest":"¿","iuml":"ï","laquo":"«","lt":"<","macr":"¯","micro":"µ","middot":"·","nbsp":" ","not":"¬","ntilde":"ñ","oacute":"ó","ocirc":"ô","ograve":"ò","ordf":"ª","ordm":"º","oslash":"ø","otilde":"õ","ouml":"ö","para":"¶","plusmn":"±","pound":"£","quot":"\"","raquo":"»","reg":"®","sect":"§","shy":"­","sup1":"¹","sup2":"²","sup3":"³","szlig":"ß","thorn":"þ","times":"×","uacute":"ú","ucirc":"û","ugrave":"ù","uml":"¨","uuml":"ü","yacute":"ý","yen":"¥","yuml":"ÿ"}

/***/ }),
/* 547 */
/***/ (function(module, exports) {

module.exports = {"0":"�","128":"€","130":"‚","131":"ƒ","132":"„","133":"…","134":"†","135":"‡","136":"ˆ","137":"‰","138":"Š","139":"‹","140":"Œ","142":"Ž","145":"‘","146":"’","147":"“","148":"”","149":"•","150":"–","151":"—","152":"˜","153":"™","154":"š","155":"›","156":"œ","158":"ž","159":"Ÿ"}

/***/ }),
/* 548 */
/***/ (function(module, exports) {

module.exports = ["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","legend","li","link","main","menu","menuitem","meta","nav","noframes","ol","optgroup","option","p","param","pre","section","source","title","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"]

/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = escapes

var defaults = [
  '\\',
  '`',
  '*',
  '{',
  '}',
  '[',
  ']',
  '(',
  ')',
  '#',
  '+',
  '-',
  '.',
  '!',
  '_',
  '>'
]

var gfm = defaults.concat(['~', '|'])

var commonmark = gfm.concat([
  '\n',
  '"',
  '$',
  '%',
  '&',
  "'",
  ',',
  '/',
  ':',
  ';',
  '<',
  '=',
  '?',
  '@',
  '^'
])

escapes.default = defaults
escapes.gfm = gfm
escapes.commonmark = commonmark

// Get markdown escapes.
function escapes(options) {
  var settings = options || {}

  if (settings.commonmark) {
    return commonmark
  }

  return settings.gfm ? gfm : defaults
}


/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

var visitWithParents = __webpack_require__(611);

function addListMetadata() {
  return function (ast) {
    visitWithParents(ast, 'list', function (listNode, parents) {
      var depth = 0, i, n;
      for (i = 0, n = parents.length; i < n; i++) {
        if (parents[i].type === 'list') depth += 1;
      }
      for (i = 0, n = listNode.children.length; i < n; i++) {
        var child = listNode.children[i];
        child.index = i;
        child.ordered = listNode.ordered;
      }
      listNode.depth = depth;
    });
    return ast;
  };
}

module.exports = addListMetadata;


/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 404,
	"./af.js": 404,
	"./ar": 411,
	"./ar-dz": 405,
	"./ar-dz.js": 405,
	"./ar-kw": 406,
	"./ar-kw.js": 406,
	"./ar-ly": 407,
	"./ar-ly.js": 407,
	"./ar-ma": 408,
	"./ar-ma.js": 408,
	"./ar-sa": 409,
	"./ar-sa.js": 409,
	"./ar-tn": 410,
	"./ar-tn.js": 410,
	"./ar.js": 411,
	"./az": 412,
	"./az.js": 412,
	"./be": 413,
	"./be.js": 413,
	"./bg": 414,
	"./bg.js": 414,
	"./bm": 415,
	"./bm.js": 415,
	"./bn": 416,
	"./bn.js": 416,
	"./bo": 417,
	"./bo.js": 417,
	"./br": 418,
	"./br.js": 418,
	"./bs": 419,
	"./bs.js": 419,
	"./ca": 420,
	"./ca.js": 420,
	"./cs": 421,
	"./cs.js": 421,
	"./cv": 422,
	"./cv.js": 422,
	"./cy": 423,
	"./cy.js": 423,
	"./da": 424,
	"./da.js": 424,
	"./de": 427,
	"./de-at": 425,
	"./de-at.js": 425,
	"./de-ch": 426,
	"./de-ch.js": 426,
	"./de.js": 427,
	"./dv": 428,
	"./dv.js": 428,
	"./el": 429,
	"./el.js": 429,
	"./en-SG": 430,
	"./en-SG.js": 430,
	"./en-au": 431,
	"./en-au.js": 431,
	"./en-ca": 432,
	"./en-ca.js": 432,
	"./en-gb": 433,
	"./en-gb.js": 433,
	"./en-ie": 434,
	"./en-ie.js": 434,
	"./en-il": 435,
	"./en-il.js": 435,
	"./en-nz": 436,
	"./en-nz.js": 436,
	"./eo": 437,
	"./eo.js": 437,
	"./es": 440,
	"./es-do": 438,
	"./es-do.js": 438,
	"./es-us": 439,
	"./es-us.js": 439,
	"./es.js": 440,
	"./et": 441,
	"./et.js": 441,
	"./eu": 442,
	"./eu.js": 442,
	"./fa": 443,
	"./fa.js": 443,
	"./fi": 444,
	"./fi.js": 444,
	"./fo": 445,
	"./fo.js": 445,
	"./fr": 448,
	"./fr-ca": 446,
	"./fr-ca.js": 446,
	"./fr-ch": 447,
	"./fr-ch.js": 447,
	"./fr.js": 448,
	"./fy": 449,
	"./fy.js": 449,
	"./ga": 450,
	"./ga.js": 450,
	"./gd": 451,
	"./gd.js": 451,
	"./gl": 452,
	"./gl.js": 452,
	"./gom-latn": 453,
	"./gom-latn.js": 453,
	"./gu": 454,
	"./gu.js": 454,
	"./he": 455,
	"./he.js": 455,
	"./hi": 456,
	"./hi.js": 456,
	"./hr": 457,
	"./hr.js": 457,
	"./hu": 458,
	"./hu.js": 458,
	"./hy-am": 459,
	"./hy-am.js": 459,
	"./id": 460,
	"./id.js": 460,
	"./is": 461,
	"./is.js": 461,
	"./it": 463,
	"./it-ch": 462,
	"./it-ch.js": 462,
	"./it.js": 463,
	"./ja": 464,
	"./ja.js": 464,
	"./jv": 465,
	"./jv.js": 465,
	"./ka": 466,
	"./ka.js": 466,
	"./kk": 467,
	"./kk.js": 467,
	"./km": 468,
	"./km.js": 468,
	"./kn": 469,
	"./kn.js": 469,
	"./ko": 470,
	"./ko.js": 470,
	"./ku": 471,
	"./ku.js": 471,
	"./ky": 472,
	"./ky.js": 472,
	"./lb": 473,
	"./lb.js": 473,
	"./lo": 474,
	"./lo.js": 474,
	"./lt": 475,
	"./lt.js": 475,
	"./lv": 476,
	"./lv.js": 476,
	"./me": 477,
	"./me.js": 477,
	"./mi": 478,
	"./mi.js": 478,
	"./mk": 479,
	"./mk.js": 479,
	"./ml": 480,
	"./ml.js": 480,
	"./mn": 481,
	"./mn.js": 481,
	"./mr": 482,
	"./mr.js": 482,
	"./ms": 484,
	"./ms-my": 483,
	"./ms-my.js": 483,
	"./ms.js": 484,
	"./mt": 485,
	"./mt.js": 485,
	"./my": 486,
	"./my.js": 486,
	"./nb": 487,
	"./nb.js": 487,
	"./ne": 488,
	"./ne.js": 488,
	"./nl": 490,
	"./nl-be": 489,
	"./nl-be.js": 489,
	"./nl.js": 490,
	"./nn": 491,
	"./nn.js": 491,
	"./pa-in": 492,
	"./pa-in.js": 492,
	"./pl": 493,
	"./pl.js": 493,
	"./pt": 495,
	"./pt-br": 494,
	"./pt-br.js": 494,
	"./pt.js": 495,
	"./ro": 496,
	"./ro.js": 496,
	"./ru": 497,
	"./ru.js": 497,
	"./sd": 498,
	"./sd.js": 498,
	"./se": 499,
	"./se.js": 499,
	"./si": 500,
	"./si.js": 500,
	"./sk": 501,
	"./sk.js": 501,
	"./sl": 502,
	"./sl.js": 502,
	"./sq": 503,
	"./sq.js": 503,
	"./sr": 505,
	"./sr-cyrl": 504,
	"./sr-cyrl.js": 504,
	"./sr.js": 505,
	"./ss": 506,
	"./ss.js": 506,
	"./sv": 507,
	"./sv.js": 507,
	"./sw": 508,
	"./sw.js": 508,
	"./ta": 509,
	"./ta.js": 509,
	"./te": 510,
	"./te.js": 510,
	"./tet": 511,
	"./tet.js": 511,
	"./tg": 512,
	"./tg.js": 512,
	"./th": 513,
	"./th.js": 513,
	"./tl-ph": 514,
	"./tl-ph.js": 514,
	"./tlh": 515,
	"./tlh.js": 515,
	"./tr": 516,
	"./tr.js": 516,
	"./tzl": 517,
	"./tzl.js": 517,
	"./tzm": 519,
	"./tzm-latn": 518,
	"./tzm-latn.js": 518,
	"./tzm.js": 519,
	"./ug-cn": 520,
	"./ug-cn.js": 520,
	"./uk": 521,
	"./uk.js": 521,
	"./ur": 522,
	"./ur.js": 522,
	"./uz": 524,
	"./uz-latn": 523,
	"./uz-latn.js": 523,
	"./uz.js": 524,
	"./vi": 525,
	"./vi.js": 525,
	"./x-pseudo": 526,
	"./x-pseudo.js": 526,
	"./yo": 527,
	"./yo.js": 527,
	"./zh-cn": 528,
	"./zh-cn.js": 528,
	"./zh-hk": 529,
	"./zh-hk.js": 529,
	"./zh-tw": 530,
	"./zh-tw.js": 530
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 551;

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint-env browser */

var el

var semicolon = 59 //  ';'

module.exports = decodeEntity

function decodeEntity(characters) {
  var entity = '&' + characters + ';'
  var char

  el = el || document.createElement('i')
  el.innerHTML = entity
  char = el.textContent

  // Some entities do not require the closing semicolon (`&not` - for instance),
  // which leads to situations where parsing the assumed entity of &notit; will
  // result in the string `¬it;`.  When we encounter a trailing semicolon after
  // parsing and the entity to decode was not a semicolon (`&semi;`), we can
  // assume that the matching was incomplete
  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {
    return false
  }

  // If the decoded string is equal to the input, the entity was not valid
  return char === entity ? false : char
}


/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var React = __webpack_require__(0);

var xtend = __webpack_require__(394);

var ReactIs = __webpack_require__(54);

var defaultNodePosition = {
  start: {
    line: 1,
    column: 1,
    offset: 0
  },
  end: {
    line: 1,
    column: 1,
    offset: 0
  }
};

function astToReact(node, options) {
  var parent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
  var renderer = options.renderers[node.type]; // nodes generated by plugins may not have position data
  // much of the code after this point will attempt to access properties of the node.position
  // this will set the node position to the parent node's position to prevent errors

  if (node.position === undefined) {
    node.position = parent.node && parent.node.position || defaultNodePosition;
  }

  var pos = node.position.start;
  var key = [node.type, pos.line, pos.column, index].join('-');

  if (!ReactIs.isValidElementType(renderer)) {
    throw new Error("Renderer for type `".concat(node.type, "` not defined or is not renderable"));
  }

  var nodeProps = getNodeProps(node, key, options, renderer, parent, index);
  return React.createElement(renderer, nodeProps, nodeProps.children || resolveChildren() || undefined);

  function resolveChildren() {
    return node.children && node.children.map(function (childNode, i) {
      return astToReact(childNode, options, {
        node: node,
        props: nodeProps
      }, i);
    });
  }
} // eslint-disable-next-line max-params, complexity


function getNodeProps(node, key, opts, renderer, parent, index) {
  var props = {
    key: key
  };
  var isTagRenderer = typeof renderer === 'string'; // `sourcePos` is true if the user wants source information (line/column info from markdown source)

  if (opts.sourcePos && node.position) {
    props['data-sourcepos'] = flattenPosition(node.position);
  }

  if (opts.rawSourcePos && !isTagRenderer) {
    props.sourcePosition = node.position;
  } // If `includeNodeIndex` is true, pass node index info to all non-tag renderers


  if (opts.includeNodeIndex && parent.node && parent.node.children && !isTagRenderer) {
    props.index = parent.node.children.indexOf(node);
    props.parentChildCount = parent.node.children.length;
  }

  var ref = node.identifier !== null && node.identifier !== undefined ? opts.definitions[node.identifier] || {} : null;

  switch (node.type) {
    case 'root':
      assignDefined(props, {
        className: opts.className
      });
      break;

    case 'text':
      props.nodeKey = key;
      props.children = node.value;
      break;

    case 'heading':
      props.level = node.depth;
      break;

    case 'list':
      props.start = node.start;
      props.ordered = node.ordered;
      props.tight = !node.loose;
      props.depth = node.depth;
      break;

    case 'listItem':
      props.checked = node.checked;
      props.tight = !node.loose;
      props.ordered = node.ordered;
      props.index = node.index;
      props.children = getListItemChildren(node, parent).map(function (childNode, i) {
        return astToReact(childNode, opts, {
          node: node,
          props: props
        }, i);
      });
      break;

    case 'definition':
      assignDefined(props, {
        identifier: node.identifier,
        title: node.title,
        url: node.url
      });
      break;

    case 'code':
      assignDefined(props, {
        language: node.lang && node.lang.split(/\s/, 1)[0]
      });
      break;

    case 'inlineCode':
      props.children = node.value;
      props.inline = true;
      break;

    case 'link':
      assignDefined(props, {
        title: node.title || undefined,
        target: typeof opts.linkTarget === 'function' ? opts.linkTarget(node.url, node.children, node.title) : opts.linkTarget,
        href: opts.transformLinkUri ? opts.transformLinkUri(node.url, node.children, node.title) : node.url
      });
      break;

    case 'image':
      assignDefined(props, {
        alt: node.alt || undefined,
        title: node.title || undefined,
        src: opts.transformImageUri ? opts.transformImageUri(node.url, node.children, node.title, node.alt) : node.url
      });
      break;

    case 'linkReference':
      assignDefined(props, xtend(ref, {
        href: opts.transformLinkUri ? opts.transformLinkUri(ref.href) : ref.href
      }));
      break;

    case 'imageReference':
      assignDefined(props, {
        src: opts.transformImageUri && ref.href ? opts.transformImageUri(ref.href, node.children, ref.title, node.alt) : ref.href,
        title: ref.title || undefined,
        alt: node.alt || undefined
      });
      break;

    case 'table':
    case 'tableHead':
    case 'tableBody':
      props.columnAlignment = node.align;
      break;

    case 'tableRow':
      props.isHeader = parent.node.type === 'tableHead';
      props.columnAlignment = parent.props.columnAlignment;
      break;

    case 'tableCell':
      assignDefined(props, {
        isHeader: parent.props.isHeader,
        align: parent.props.columnAlignment[index]
      });
      break;

    case 'virtualHtml':
      props.tag = node.tag;
      break;

    case 'html':
      // @todo find a better way than this
      props.isBlock = node.position.start.line !== node.position.end.line;
      props.escapeHtml = opts.escapeHtml;
      props.skipHtml = opts.skipHtml;
      break;

    case 'parsedHtml':
      {
        var parsedChildren;

        if (node.children) {
          parsedChildren = node.children.map(function (child, i) {
            return astToReact(child, opts, {
              node: node,
              props: props
            }, i);
          });
        }

        props.escapeHtml = opts.escapeHtml;
        props.skipHtml = opts.skipHtml;
        props.element = mergeNodeChildren(node, parsedChildren);
        break;
      }

    default:
      assignDefined(props, xtend(node, {
        type: undefined,
        position: undefined,
        children: undefined
      }));
  }

  if (!isTagRenderer && node.value) {
    props.value = node.value;
  }

  return props;
}

function assignDefined(target, attrs) {
  for (var key in attrs) {
    if (typeof attrs[key] !== 'undefined') {
      target[key] = attrs[key];
    }
  }
}

function mergeNodeChildren(node, parsedChildren) {
  var el = node.element;

  if (Array.isArray(el)) {
    var Fragment = React.Fragment || 'div';
    return React.createElement(Fragment, null, el);
  }

  if (el.props.children || parsedChildren) {
    var children = React.Children.toArray(el.props.children).concat(parsedChildren);
    return React.cloneElement(el, null, children);
  }

  return React.cloneElement(el, null);
}

function flattenPosition(pos) {
  return [pos.start.line, ':', pos.start.column, '-', pos.end.line, ':', pos.end.column].map(String).join('');
}

function getListItemChildren(node, parent) {
  if (node.loose) {
    return node.children;
  }

  if (parent.node && node.index > 0 && parent.node.children[node.index - 1].loose) {
    return node.children;
  }

  return unwrapParagraphs(node);
}

function unwrapParagraphs(node) {
  return node.children.reduce(function (array, child) {
    return array.concat(child.type === 'paragraph' ? child.children || [] : [child]);
  }, []);
}

module.exports = astToReact;

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function getDefinitions(node) {
  var defs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return (node.children || []).reduce(function (definitions, child) {
    if (child.type === 'definition') {
      definitions[child.identifier] = {
        href: child.url,
        title: child.title
      };
    }

    return getDefinitions(child, definitions);
  }, defs);
};

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var visit = __webpack_require__(397);

exports.ofType = function (types, mode) {
  return function (node) {
    types.forEach(function (type) {
      return visit(node, type, disallow, true);
    });
    return node;
  };

  function disallow(node, index, parent) {
    if (parent) {
      untangle(node, index, parent, mode);
    }
  }
};

exports.ifNotMatch = function (allowNode, mode) {
  return function (node) {
    visit(node, disallow, true);
    return node;
  };

  function disallow(node, index, parent) {
    if (parent && !allowNode(node, index, parent)) {
      untangle(node, index, parent, mode);
    }
  }
};

function untangle(node, index, parent, mode) {
  if (mode === 'remove') {
    parent.children.splice(index, 1);
  } else if (mode === 'unwrap') {
    var args = [index, 1];

    if (node.children) {
      args = args.concat(node.children);
    }

    Array.prototype.splice.apply(parent.children, args);
  }
}

/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Naive, simple plugin to match inline nodes without attributes
 * This allows say <strong>foo</strong>, but not <strong class="very">foo</strong>
 * For proper HTML support, you'll want a different plugin
 **/
var visit = __webpack_require__(397);

var type = 'virtualHtml';
var selfClosingRe = /^<(area|base|br|col|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)\s*\/?>$/i;
var simpleTagRe = /^<(\/?)([a-z]+)\s*>$/;

module.exports = function (tree) {
  var open;
  var currentParent;
  visit(tree, 'html', function (node, index, parent) {
    if (currentParent !== parent) {
      open = [];
      currentParent = parent;
    }

    var selfClosing = getSelfClosing(node);

    if (selfClosing) {
      parent.children.splice(index, 1, {
        type: type,
        tag: selfClosing,
        position: node.position
      });
      return true;
    }

    var current = getSimpleTag(node, parent);

    if (!current) {
      return true;
    }

    var matching = findAndPull(open, current.tag);

    if (matching) {
      parent.children.splice(index, 0, virtual(current, matching, parent));
    } else if (!current.opening) {
      open.push(current);
    }

    return true;
  }, true // Iterate in reverse
  );
  return tree;
};

function findAndPull(open, matchingTag) {
  var i = open.length;

  while (i--) {
    if (open[i].tag === matchingTag) {
      return open.splice(i, 1)[0];
    }
  }

  return false;
}

function getSimpleTag(node, parent) {
  var match = node.value.match(simpleTagRe);
  return match ? {
    tag: match[2],
    opening: !match[1],
    node: node
  } : false;
}

function getSelfClosing(node) {
  var match = node.value.match(selfClosingRe);
  return match ? match[1] : false;
}

function virtual(fromNode, toNode, parent) {
  var fromIndex = parent.children.indexOf(fromNode.node);
  var toIndex = parent.children.indexOf(toNode.node);
  var extracted = parent.children.splice(fromIndex, toIndex - fromIndex + 1);
  var children = extracted.slice(1, -1);
  return {
    type: type,
    children: children,
    tag: fromNode.tag,
    position: {
      start: fromNode.node.position.start,
      end: toNode.node.position.end,
      indent: []
    }
  };
}

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var xtend = __webpack_require__(394);

var unified = __webpack_require__(607);

var parse = __webpack_require__(562);

var PropTypes = __webpack_require__(86);

var addListMetadata = __webpack_require__(550);

var naiveHtml = __webpack_require__(556);

var disallowNode = __webpack_require__(555);

var astToReact = __webpack_require__(553);

var wrapTableRows = __webpack_require__(561);

var getDefinitions = __webpack_require__(554);

var uriTransformer = __webpack_require__(560);

var defaultRenderers = __webpack_require__(558);

var symbols = __webpack_require__(559);

var allTypes = Object.keys(defaultRenderers);

var ReactMarkdown = function ReactMarkdown(props) {
  var src = props.source || props.children || '';
  var parserOptions = props.parserOptions;

  if (props.allowedTypes && props.disallowedTypes) {
    throw new Error('Only one of `allowedTypes` and `disallowedTypes` should be defined');
  }

  var renderers = xtend(defaultRenderers, props.renderers);
  var plugins = [[parse, parserOptions]].concat(props.plugins || []);
  var parser = plugins.reduce(applyParserPlugin, unified());
  var rawAst = parser.parse(src);
  var renderProps = xtend(props, {
    renderers: renderers,
    definitions: getDefinitions(rawAst)
  });
  var astPlugins = determineAstPlugins(props); // eslint-disable-next-line no-sync

  var transformedAst = parser.runSync(rawAst);
  var ast = astPlugins.reduce(function (node, plugin) {
    return plugin(node, renderProps);
  }, transformedAst);
  return astToReact(ast, renderProps);
};

function applyParserPlugin(parser, plugin) {
  return Array.isArray(plugin) ? parser.use.apply(parser, _toConsumableArray(plugin)) : parser.use(plugin);
}

function determineAstPlugins(props) {
  var plugins = [wrapTableRows, addListMetadata()];
  var disallowedTypes = props.disallowedTypes;

  if (props.allowedTypes) {
    disallowedTypes = allTypes.filter(function (type) {
      return type !== 'root' && props.allowedTypes.indexOf(type) === -1;
    });
  }

  var removalMethod = props.unwrapDisallowed ? 'unwrap' : 'remove';

  if (disallowedTypes && disallowedTypes.length > 0) {
    plugins.push(disallowNode.ofType(disallowedTypes, removalMethod));
  }

  if (props.allowNode) {
    plugins.push(disallowNode.ifNotMatch(props.allowNode, removalMethod));
  }

  var renderHtml = !props.escapeHtml && !props.skipHtml;
  var hasHtmlParser = (props.astPlugins || []).some(function (item) {
    var plugin = Array.isArray(item) ? item[0] : item;
    return plugin.identity === symbols.HtmlParser;
  });

  if (renderHtml && !hasHtmlParser) {
    plugins.push(naiveHtml);
  }

  return props.astPlugins ? plugins.concat(props.astPlugins) : plugins;
}

ReactMarkdown.defaultProps = {
  renderers: {},
  escapeHtml: true,
  skipHtml: false,
  sourcePos: false,
  rawSourcePos: false,
  transformLinkUri: uriTransformer,
  astPlugins: [],
  plugins: [],
  parserOptions: {}
};
ReactMarkdown.propTypes = {
  className: PropTypes.string,
  source: PropTypes.string,
  children: PropTypes.string,
  sourcePos: PropTypes.bool,
  rawSourcePos: PropTypes.bool,
  escapeHtml: PropTypes.bool,
  skipHtml: PropTypes.bool,
  allowNode: PropTypes.func,
  allowedTypes: PropTypes.arrayOf(PropTypes.oneOf(allTypes)),
  disallowedTypes: PropTypes.arrayOf(PropTypes.oneOf(allTypes)),
  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),
  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),
  transformImageUri: PropTypes.func,
  astPlugins: PropTypes.arrayOf(PropTypes.func),
  unwrapDisallowed: PropTypes.bool,
  renderers: PropTypes.object,
  plugins: PropTypes.array,
  parserOptions: PropTypes.object
};
ReactMarkdown.types = allTypes;
ReactMarkdown.renderers = defaultRenderers;
ReactMarkdown.uriTransformer = uriTransformer;
module.exports = ReactMarkdown;

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* eslint-disable react/prop-types, react/no-multi-comp */


var xtend = __webpack_require__(394);

var React = __webpack_require__(0);

var supportsStringRender = parseInt((React.version || '16').slice(0, 2), 10) >= 16;
var createElement = React.createElement;
module.exports = {
  break: 'br',
  paragraph: 'p',
  emphasis: 'em',
  strong: 'strong',
  thematicBreak: 'hr',
  blockquote: 'blockquote',
  delete: 'del',
  link: 'a',
  image: 'img',
  linkReference: 'a',
  imageReference: 'img',
  table: SimpleRenderer.bind(null, 'table'),
  tableHead: SimpleRenderer.bind(null, 'thead'),
  tableBody: SimpleRenderer.bind(null, 'tbody'),
  tableRow: SimpleRenderer.bind(null, 'tr'),
  tableCell: TableCell,
  root: Root,
  text: TextRenderer,
  list: List,
  listItem: ListItem,
  definition: NullRenderer,
  heading: Heading,
  inlineCode: InlineCode,
  code: CodeBlock,
  html: Html,
  virtualHtml: VirtualHtml,
  parsedHtml: ParsedHtml
};

function TextRenderer(props) {
  return supportsStringRender ? props.children : createElement('span', null, props.children);
}

function Root(props) {
  var useFragment = !props.className;
  var root = useFragment ? React.Fragment || 'div' : 'div';
  return createElement(root, useFragment ? null : props, props.children);
}

function SimpleRenderer(tag, props) {
  return createElement(tag, getCoreProps(props), props.children);
}

function TableCell(props) {
  var style = props.align ? {
    textAlign: props.align
  } : undefined;
  var coreProps = getCoreProps(props);
  return createElement(props.isHeader ? 'th' : 'td', style ? xtend({
    style: style
  }, coreProps) : coreProps, props.children);
}

function Heading(props) {
  return createElement("h".concat(props.level), getCoreProps(props), props.children);
}

function List(props) {
  var attrs = getCoreProps(props);

  if (props.start !== null && props.start !== 1 && props.start !== undefined) {
    attrs.start = props.start.toString();
  }

  return createElement(props.ordered ? 'ol' : 'ul', attrs, props.children);
}

function ListItem(props) {
  var checkbox = null;

  if (props.checked !== null && props.checked !== undefined) {
    var checked = props.checked;
    checkbox = createElement('input', {
      type: 'checkbox',
      checked: checked,
      readOnly: true
    });
  }

  return createElement('li', getCoreProps(props), checkbox, props.children);
}

function CodeBlock(props) {
  var className = props.language && "language-".concat(props.language);
  var code = createElement('code', className ? {
    className: className
  } : null, props.value);
  return createElement('pre', getCoreProps(props), code);
}

function InlineCode(props) {
  return createElement('code', getCoreProps(props), props.children);
}

function Html(props) {
  if (props.skipHtml) {
    return null;
  }

  var tag = props.isBlock ? 'div' : 'span';

  if (props.escapeHtml) {
    var comp = React.Fragment || tag;
    return createElement(comp, null, props.value);
  }

  var nodeProps = {
    dangerouslySetInnerHTML: {
      __html: props.value
    }
  };
  return createElement(tag, nodeProps);
}

function ParsedHtml(props) {
  return props['data-sourcepos'] ? React.cloneElement(props.element, {
    'data-sourcepos': props['data-sourcepos']
  }) : props.element;
}

function VirtualHtml(props) {
  return createElement(props.tag, getCoreProps(props), props.children);
}

function NullRenderer() {
  return null;
}

function getCoreProps(props) {
  return props['data-sourcepos'] ? {
    'data-sourcepos': props['data-sourcepos']
  } : {};
}

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var HtmlParser = '__RMD_HTML_PARSER__';
exports.HtmlParser = typeof Symbol === 'undefined' ? HtmlParser : Symbol(HtmlParser);

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var protocols = ['http', 'https', 'mailto', 'tel'];

module.exports = function uriTransformer(uri) {
  var url = (uri || '').trim();
  var first = url.charAt(0);

  if (first === '#' || first === '/') {
    return url;
  }

  var colon = url.indexOf(':');

  if (colon === -1) {
    return url;
  }

  var length = protocols.length;
  var index = -1;

  while (++index < length) {
    var protocol = protocols[index];

    if (colon === protocol.length && url.slice(0, protocol.length).toLowerCase() === protocol) {
      return url;
    }
  }

  index = url.indexOf('?');

  if (index !== -1 && colon > index) {
    return url;
  }

  index = url.indexOf('#');

  if (index !== -1 && colon > index) {
    return url;
  } // eslint-disable-next-line no-script-url


  return 'javascript:void(0)';
};

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var visit = __webpack_require__(397);

module.exports = function (node) {
  visit(node, 'table', wrap);
  return node;
};

function wrap(table) {
  var children = table.children;
  table.children = [{
    type: 'tableHead',
    align: table.align,
    children: [children[0]],
    position: children[0].position
  }];

  if (children.length > 1) {
    table.children.push({
      type: 'tableBody',
      align: table.align,
      children: children.slice(1),
      position: {
        start: children[1].position.start,
        end: children[children.length - 1].position.end
      }
    });
  }
}

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var unherit = __webpack_require__(606);
var xtend = __webpack_require__(394);
var Parser = __webpack_require__(572);

module.exports = parse;
parse.Parser = Parser;

function parse(options) {
  var Local = unherit(Parser);
  Local.prototype.options = xtend(Local.prototype.options, this.data('settings'), options);
  this.Parser = Local;
}


/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var xtend = __webpack_require__(394);
var entities = __webpack_require__(398);

module.exports = factory;

/* Factory to create an entity decoder. */
function factory(ctx) {
  decoder.raw = decodeRaw;

  return decoder;

  /* Normalize `position` to add an `indent`. */
  function normalize(position) {
    var offsets = ctx.offset;
    var line = position.line;
    var result = [];

    while (++line) {
      if (!(line in offsets)) {
        break;
      }

      result.push((offsets[line] || 0) + 1);
    }

    return {
      start: position,
      indent: result
    };
  }

  /* Handle a warning.
   * See https://github.com/wooorm/parse-entities
   * for the warnings. */
  function handleWarning(reason, position, code) {
    if (code === 3) {
      return;
    }

    ctx.file.message(reason, position);
  }

  /* Decode `value` (at `position`) into text-nodes. */
  function decoder(value, position, handler) {
    entities(value, {
      position: normalize(position),
      warning: handleWarning,
      text: handler,
      reference: handler,
      textContext: ctx,
      referenceContext: ctx
    });
  }

  /* Decode `value` (at `position`) into a string. */
  function decodeRaw(value, position, options) {
    return entities(value, xtend(options, {
      position: normalize(position),
      warning: handleWarning
    }));
  }
}


/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = locate;

function locate(value, fromIndex) {
  var index = value.indexOf('\n', fromIndex);

  while (index > fromIndex) {
    if (value.charAt(index - 1) !== ' ') {
      break;
    }

    index--;
  }

  return index;
}


/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = locate;

function locate(value, fromIndex) {
  return value.indexOf('`', fromIndex);
}


/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = locate;

function locate(value, fromIndex) {
  return value.indexOf('~~', fromIndex);
}


/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = locate;

function locate(value, fromIndex) {
  var asterisk = value.indexOf('*', fromIndex);
  var underscore = value.indexOf('_', fromIndex);

  if (underscore === -1) {
    return asterisk;
  }

  if (asterisk === -1) {
    return underscore;
  }

  return underscore < asterisk ? underscore : asterisk;
}


/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = locate;

function locate(value, fromIndex) {
  return value.indexOf('\\', fromIndex);
}


/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = locate;

function locate(value, fromIndex) {
  var asterisk = value.indexOf('**', fromIndex);
  var underscore = value.indexOf('__', fromIndex);

  if (underscore === -1) {
    return asterisk;
  }

  if (asterisk === -1) {
    return underscore;
  }

  return underscore < asterisk ? underscore : asterisk;
}


/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = locate;

var PROTOCOLS = ['https://', 'http://', 'mailto:'];

function locate(value, fromIndex) {
  var length = PROTOCOLS.length;
  var index = -1;
  var min = -1;
  var position;

  if (!this.options.gfm) {
    return -1;
  }

  while (++index < length) {
    position = value.indexOf(PROTOCOLS[index], fromIndex);

    if (position !== -1 && (position < min || min === -1)) {
      min = position;
    }
  }

  return min;
}


/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var xtend = __webpack_require__(394);
var removePosition = __webpack_require__(609);

module.exports = parse;

var C_NEWLINE = '\n';
var EXPRESSION_LINE_BREAKS = /\r\n|\r/g;

/* Parse the bound file. */
function parse() {
  var self = this;
  var value = String(self.file);
  var start = {line: 1, column: 1, offset: 0};
  var content = xtend(start);
  var node;

  /* Clean non-unix newlines: `\r\n` and `\r` are all
   * changed to `\n`.  This should not affect positional
   * information. */
  value = value.replace(EXPRESSION_LINE_BREAKS, C_NEWLINE);

  if (value.charCodeAt(0) === 0xFEFF) {
    value = value.slice(1);

    content.column++;
    content.offset++;
  }

  node = {
    type: 'root',
    children: self.tokenizeBlock(value, content),
    position: {
      start: start,
      end: self.eof || xtend(start)
    }
  };

  if (!self.options.position) {
    removePosition(node, true);
  }

  return node;
}


/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var xtend = __webpack_require__(394);
var toggle = __webpack_require__(603);
var vfileLocation = __webpack_require__(613);
var unescape = __webpack_require__(600);
var decode = __webpack_require__(563);
var tokenizer = __webpack_require__(599);

module.exports = Parser;

function Parser(doc, file) {
  this.file = file;
  this.offset = {};
  this.options = xtend(this.options);
  this.setOptions({});

  this.inList = false;
  this.inBlock = false;
  this.inLink = false;
  this.atStart = true;

  this.toOffset = vfileLocation(file).toOffset;
  this.unescape = unescape(this, 'escape');
  this.decode = decode(this);
}

var proto = Parser.prototype;

/* Expose core. */
proto.setOptions = __webpack_require__(573);
proto.parse = __webpack_require__(571);

/* Expose `defaults`. */
proto.options = __webpack_require__(532);

/* Enter and exit helpers. */
proto.exitStart = toggle('atStart', true);
proto.enterList = toggle('inList', false);
proto.enterLink = toggle('inLink', false);
proto.enterBlock = toggle('inBlock', false);

/* Nodes that can interupt a paragraph:
 *
 * ```markdown
 * A paragraph, followed by a thematic break.
 * ___
 * ```
 *
 * In the above example, the thematic break “interupts”
 * the paragraph. */
proto.interruptParagraph = [
  ['thematicBreak'],
  ['atxHeading'],
  ['fencedCode'],
  ['blockquote'],
  ['html'],
  ['setextHeading', {commonmark: false}],
  ['definition', {commonmark: false}],
  ['footnote', {commonmark: false}]
];

/* Nodes that can interupt a list:
 *
 * ```markdown
 * - One
 * ___
 * ```
 *
 * In the above example, the thematic break “interupts”
 * the list. */
proto.interruptList = [
  ['atxHeading', {pedantic: false}],
  ['fencedCode', {pedantic: false}],
  ['thematicBreak', {pedantic: false}],
  ['definition', {commonmark: false}],
  ['footnote', {commonmark: false}]
];

/* Nodes that can interupt a blockquote:
 *
 * ```markdown
 * > A paragraph.
 * ___
 * ```
 *
 * In the above example, the thematic break “interupts”
 * the blockquote. */
proto.interruptBlockquote = [
  ['indentedCode', {commonmark: true}],
  ['fencedCode', {commonmark: true}],
  ['atxHeading', {commonmark: true}],
  ['setextHeading', {commonmark: true}],
  ['thematicBreak', {commonmark: true}],
  ['html', {commonmark: true}],
  ['list', {commonmark: true}],
  ['definition', {commonmark: false}],
  ['footnote', {commonmark: false}]
];

/* Handlers. */
proto.blockTokenizers = {
  newline: __webpack_require__(591),
  indentedCode: __webpack_require__(578),
  fencedCode: __webpack_require__(577),
  blockquote: __webpack_require__(575),
  atxHeading: __webpack_require__(585),
  thematicBreak: __webpack_require__(597),
  list: __webpack_require__(590),
  setextHeading: __webpack_require__(586),
  html: __webpack_require__(587),
  footnote: __webpack_require__(584),
  definition: __webpack_require__(580),
  table: __webpack_require__(595),
  paragraph: __webpack_require__(592)
};

proto.inlineTokenizers = {
  escape: __webpack_require__(583),
  autoLink: __webpack_require__(574),
  url: __webpack_require__(598),
  html: __webpack_require__(588),
  link: __webpack_require__(589),
  reference: __webpack_require__(593),
  strong: __webpack_require__(594),
  emphasis: __webpack_require__(582),
  deletion: __webpack_require__(581),
  code: __webpack_require__(579),
  break: __webpack_require__(576),
  text: __webpack_require__(596)
};

/* Expose precedence. */
proto.blockMethods = keys(proto.blockTokenizers);
proto.inlineMethods = keys(proto.inlineTokenizers);

/* Tokenizers. */
proto.tokenizeBlock = tokenizer('block');
proto.tokenizeInline = tokenizer('inline');
proto.tokenizeFactory = tokenizer;

/* Get all keys in `value`. */
function keys(value) {
  var result = [];
  var key;

  for (key in value) {
    result.push(key);
  }

  return result;
}


/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var xtend = __webpack_require__(394);
var escapes = __webpack_require__(549);
var defaults = __webpack_require__(532);

module.exports = setOptions;

function setOptions(options) {
  var self = this;
  var current = self.options;
  var key;
  var value;

  if (options == null) {
    options = {};
  } else if (typeof options === 'object') {
    options = xtend(options);
  } else {
    throw new Error(
      'Invalid value `' + options + '` ' +
      'for setting `options`'
    );
  }

  for (key in defaults) {
    value = options[key];

    if (value == null) {
      value = current[key];
    }

    if (
      (key !== 'blocks' && typeof value !== 'boolean') ||
      (key === 'blocks' && typeof value !== 'object')
    ) {
      throw new Error('Invalid value `' + value + '` for setting `options.' + key + '`');
    }

    options[key] = value;
  }

  self.options = options;
  self.escape = escapes(options);

  return self;
}


/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var whitespace = __webpack_require__(393);
var decode = __webpack_require__(398);
var locate = __webpack_require__(534);

module.exports = autoLink;
autoLink.locator = locate;
autoLink.notInLink = true;

var C_LT = '<';
var C_GT = '>';
var C_AT_SIGN = '@';
var C_SLASH = '/';
var MAILTO = 'mailto:';
var MAILTO_LENGTH = MAILTO.length;

/* Tokenise a link. */
function autoLink(eat, value, silent) {
  var self;
  var subvalue;
  var length;
  var index;
  var queue;
  var character;
  var hasAtCharacter;
  var link;
  var now;
  var content;
  var tokenizers;
  var exit;

  if (value.charAt(0) !== C_LT) {
    return;
  }

  self = this;
  subvalue = '';
  length = value.length;
  index = 0;
  queue = '';
  hasAtCharacter = false;
  link = '';

  index++;
  subvalue = C_LT;

  while (index < length) {
    character = value.charAt(index);

    if (
      whitespace(character) ||
      character === C_GT ||
      character === C_AT_SIGN ||
      (character === ':' && value.charAt(index + 1) === C_SLASH)
    ) {
      break;
    }

    queue += character;
    index++;
  }

  if (!queue) {
    return;
  }

  link += queue;
  queue = '';

  character = value.charAt(index);
  link += character;
  index++;

  if (character === C_AT_SIGN) {
    hasAtCharacter = true;
  } else {
    if (
      character !== ':' ||
      value.charAt(index + 1) !== C_SLASH
    ) {
      return;
    }

    link += C_SLASH;
    index++;
  }

  while (index < length) {
    character = value.charAt(index);

    if (whitespace(character) || character === C_GT) {
      break;
    }

    queue += character;
    index++;
  }

  character = value.charAt(index);

  if (!queue || character !== C_GT) {
    return;
  }

  /* istanbul ignore if - never used (yet) */
  if (silent) {
    return true;
  }

  link += queue;
  content = link;
  subvalue += link + character;
  now = eat.now();
  now.column++;
  now.offset++;

  if (hasAtCharacter) {
    if (link.slice(0, MAILTO_LENGTH).toLowerCase() === MAILTO) {
      content = content.substr(MAILTO_LENGTH);
      now.column += MAILTO_LENGTH;
      now.offset += MAILTO_LENGTH;
    } else {
      link = MAILTO + link;
    }
  }

  /* Temporarily remove all tokenizers except text in autolinks. */
  tokenizers = self.inlineTokenizers;
  self.inlineTokenizers = {text: tokenizers.text};

  exit = self.enterLink();

  content = self.tokenizeInline(content, now);

  self.inlineTokenizers = tokenizers;
  exit();

  return eat(subvalue)({
    type: 'link',
    title: null,
    url: decode(link, {nonTerminated: false}),
    children: content
  });
}


/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var trim = __webpack_require__(395);
var interrupt = __webpack_require__(399);

module.exports = blockquote;

var C_NEWLINE = '\n';
var C_TAB = '\t';
var C_SPACE = ' ';
var C_GT = '>';

/* Tokenise a blockquote. */
function blockquote(eat, value, silent) {
  var self = this;
  var offsets = self.offset;
  var tokenizers = self.blockTokenizers;
  var interruptors = self.interruptBlockquote;
  var now = eat.now();
  var currentLine = now.line;
  var length = value.length;
  var values = [];
  var contents = [];
  var indents = [];
  var add;
  var index = 0;
  var character;
  var rest;
  var nextIndex;
  var content;
  var line;
  var startIndex;
  var prefixed;
  var exit;

  while (index < length) {
    character = value.charAt(index);

    if (character !== C_SPACE && character !== C_TAB) {
      break;
    }

    index++;
  }

  if (value.charAt(index) !== C_GT) {
    return;
  }

  if (silent) {
    return true;
  }

  index = 0;

  while (index < length) {
    nextIndex = value.indexOf(C_NEWLINE, index);
    startIndex = index;
    prefixed = false;

    if (nextIndex === -1) {
      nextIndex = length;
    }

    while (index < length) {
      character = value.charAt(index);

      if (character !== C_SPACE && character !== C_TAB) {
        break;
      }

      index++;
    }

    if (value.charAt(index) === C_GT) {
      index++;
      prefixed = true;

      if (value.charAt(index) === C_SPACE) {
        index++;
      }
    } else {
      index = startIndex;
    }

    content = value.slice(index, nextIndex);

    if (!prefixed && !trim(content)) {
      index = startIndex;
      break;
    }

    if (!prefixed) {
      rest = value.slice(index);

      /* Check if the following code contains a possible
       * block. */
      if (interrupt(interruptors, tokenizers, self, [eat, rest, true])) {
        break;
      }
    }

    line = startIndex === index ? content : value.slice(startIndex, nextIndex);

    indents.push(index - startIndex);
    values.push(line);
    contents.push(content);

    index = nextIndex + 1;
  }

  index = -1;
  length = indents.length;
  add = eat(values.join(C_NEWLINE));

  while (++index < length) {
    offsets[currentLine] = (offsets[currentLine] || 0) + indents[index];
    currentLine++;
  }

  exit = self.enterBlock();
  contents = self.tokenizeBlock(contents.join(C_NEWLINE), now);
  exit();

  return add({
    type: 'blockquote',
    children: contents
  });
}


/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var locate = __webpack_require__(564);

module.exports = hardBreak;
hardBreak.locator = locate;

var MIN_BREAK_LENGTH = 2;

function hardBreak(eat, value, silent) {
  var length = value.length;
  var index = -1;
  var queue = '';
  var character;

  while (++index < length) {
    character = value.charAt(index);

    if (character === '\n') {
      if (index < MIN_BREAK_LENGTH) {
        return;
      }

      /* istanbul ignore if - never used (yet) */
      if (silent) {
        return true;
      }

      queue += character;

      return eat(queue)({type: 'break'});
    }

    if (character !== ' ') {
      return;
    }

    queue += character;
  }
}


/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var trim = __webpack_require__(402);

module.exports = fencedCode;

var C_NEWLINE = '\n';
var C_TAB = '\t';
var C_SPACE = ' ';
var C_TILDE = '~';
var C_TICK = '`';

var MIN_FENCE_COUNT = 3;
var CODE_INDENT_COUNT = 4;

function fencedCode(eat, value, silent) {
  var self = this;
  var settings = self.options;
  var length = value.length + 1;
  var index = 0;
  var subvalue = '';
  var fenceCount;
  var marker;
  var character;
  var flag;
  var queue;
  var content;
  var exdentedContent;
  var closing;
  var exdentedClosing;
  var indent;
  var now;

  if (!settings.gfm) {
    return;
  }

  /* Eat initial spacing. */
  while (index < length) {
    character = value.charAt(index);

    if (character !== C_SPACE && character !== C_TAB) {
      break;
    }

    subvalue += character;
    index++;
  }

  indent = index;

  /* Eat the fence. */
  character = value.charAt(index);

  if (character !== C_TILDE && character !== C_TICK) {
    return;
  }

  index++;
  marker = character;
  fenceCount = 1;
  subvalue += character;

  while (index < length) {
    character = value.charAt(index);

    if (character !== marker) {
      break;
    }

    subvalue += character;
    fenceCount++;
    index++;
  }

  if (fenceCount < MIN_FENCE_COUNT) {
    return;
  }

  /* Eat spacing before flag. */
  while (index < length) {
    character = value.charAt(index);

    if (character !== C_SPACE && character !== C_TAB) {
      break;
    }

    subvalue += character;
    index++;
  }

  /* Eat flag. */
  flag = '';
  queue = '';

  while (index < length) {
    character = value.charAt(index);

    if (
      character === C_NEWLINE ||
      character === C_TILDE ||
      character === C_TICK
    ) {
      break;
    }

    if (character === C_SPACE || character === C_TAB) {
      queue += character;
    } else {
      flag += queue + character;
      queue = '';
    }

    index++;
  }

  character = value.charAt(index);

  if (character && character !== C_NEWLINE) {
    return;
  }

  if (silent) {
    return true;
  }

  now = eat.now();
  now.column += subvalue.length;
  now.offset += subvalue.length;

  subvalue += flag;
  flag = self.decode.raw(self.unescape(flag), now);

  if (queue) {
    subvalue += queue;
  }

  queue = '';
  closing = '';
  exdentedClosing = '';
  content = '';
  exdentedContent = '';

  /* Eat content. */
  while (index < length) {
    character = value.charAt(index);
    content += closing;
    exdentedContent += exdentedClosing;
    closing = '';
    exdentedClosing = '';

    if (character !== C_NEWLINE) {
      content += character;
      exdentedClosing += character;
      index++;
      continue;
    }

    /* Add the newline to `subvalue` if its the first
     * character.  Otherwise, add it to the `closing`
     * queue. */
    if (content) {
      closing += character;
      exdentedClosing += character;
    } else {
      subvalue += character;
    }

    queue = '';
    index++;

    while (index < length) {
      character = value.charAt(index);

      if (character !== C_SPACE) {
        break;
      }

      queue += character;
      index++;
    }

    closing += queue;
    exdentedClosing += queue.slice(indent);

    if (queue.length >= CODE_INDENT_COUNT) {
      continue;
    }

    queue = '';

    while (index < length) {
      character = value.charAt(index);

      if (character !== marker) {
        break;
      }

      queue += character;
      index++;
    }

    closing += queue;
    exdentedClosing += queue;

    if (queue.length < fenceCount) {
      continue;
    }

    queue = '';

    while (index < length) {
      character = value.charAt(index);

      if (character !== C_SPACE && character !== C_TAB) {
        break;
      }

      closing += character;
      exdentedClosing += character;
      index++;
    }

    if (!character || character === C_NEWLINE) {
      break;
    }
  }

  subvalue += content + closing;

  return eat(subvalue)({
    type: 'code',
    lang: flag || null,
    value: trim(exdentedContent)
  });
}


/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var repeat = __webpack_require__(401);
var trim = __webpack_require__(402);

module.exports = indentedCode;

var C_NEWLINE = '\n';
var C_TAB = '\t';
var C_SPACE = ' ';

var CODE_INDENT_COUNT = 4;
var CODE_INDENT = repeat(C_SPACE, CODE_INDENT_COUNT);

/* Tokenise indented code. */
function indentedCode(eat, value, silent) {
  var index = -1;
  var length = value.length;
  var subvalue = '';
  var content = '';
  var subvalueQueue = '';
  var contentQueue = '';
  var character;
  var blankQueue;
  var indent;

  while (++index < length) {
    character = value.charAt(index);

    if (indent) {
      indent = false;

      subvalue += subvalueQueue;
      content += contentQueue;
      subvalueQueue = '';
      contentQueue = '';

      if (character === C_NEWLINE) {
        subvalueQueue = character;
        contentQueue = character;
      } else {
        subvalue += character;
        content += character;

        while (++index < length) {
          character = value.charAt(index);

          if (!character || character === C_NEWLINE) {
            contentQueue = character;
            subvalueQueue = character;
            break;
          }

          subvalue += character;
          content += character;
        }
      }
    } else if (
      character === C_SPACE &&
      value.charAt(index + 1) === character &&
      value.charAt(index + 2) === character &&
      value.charAt(index + 3) === character
    ) {
      subvalueQueue += CODE_INDENT;
      index += 3;
      indent = true;
    } else if (character === C_TAB) {
      subvalueQueue += character;
      indent = true;
    } else {
      blankQueue = '';

      while (character === C_TAB || character === C_SPACE) {
        blankQueue += character;
        character = value.charAt(++index);
      }

      if (character !== C_NEWLINE) {
        break;
      }

      subvalueQueue += blankQueue + character;
      contentQueue += character;
    }
  }

  if (content) {
    if (silent) {
      return true;
    }

    return eat(subvalue)({
      type: 'code',
      lang: null,
      value: trim(content)
    });
  }
}


/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var whitespace = __webpack_require__(393);
var locate = __webpack_require__(565);

module.exports = inlineCode;
inlineCode.locator = locate;

var C_TICK = '`';

/* Tokenise inline code. */
function inlineCode(eat, value, silent) {
  var length = value.length;
  var index = 0;
  var queue = '';
  var tickQueue = '';
  var contentQueue;
  var subqueue;
  var count;
  var openingCount;
  var subvalue;
  var character;
  var found;
  var next;

  while (index < length) {
    if (value.charAt(index) !== C_TICK) {
      break;
    }

    queue += C_TICK;
    index++;
  }

  if (!queue) {
    return;
  }

  subvalue = queue;
  openingCount = index;
  queue = '';
  next = value.charAt(index);
  count = 0;

  while (index < length) {
    character = next;
    next = value.charAt(index + 1);

    if (character === C_TICK) {
      count++;
      tickQueue += character;
    } else {
      count = 0;
      queue += character;
    }

    if (count && next !== C_TICK) {
      if (count === openingCount) {
        subvalue += queue + tickQueue;
        found = true;
        break;
      }

      queue += tickQueue;
      tickQueue = '';
    }

    index++;
  }

  if (!found) {
    if (openingCount % 2 !== 0) {
      return;
    }

    queue = '';
  }

  /* istanbul ignore if - never used (yet) */
  if (silent) {
    return true;
  }

  contentQueue = '';
  subqueue = '';
  length = queue.length;
  index = -1;

  while (++index < length) {
    character = queue.charAt(index);

    if (whitespace(character)) {
      subqueue += character;
      continue;
    }

    if (subqueue) {
      if (contentQueue) {
        contentQueue += subqueue;
      }

      subqueue = '';
    }

    contentQueue += character;
  }

  return eat(subvalue)({
    type: 'inlineCode',
    value: contentQueue
  });
}


/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var whitespace = __webpack_require__(393);
var normalize = __webpack_require__(400);

module.exports = definition;
definition.notInList = true;
definition.notInBlock = true;

var C_DOUBLE_QUOTE = '"';
var C_SINGLE_QUOTE = '\'';
var C_BACKSLASH = '\\';
var C_NEWLINE = '\n';
var C_TAB = '\t';
var C_SPACE = ' ';
var C_BRACKET_OPEN = '[';
var C_BRACKET_CLOSE = ']';
var C_PAREN_OPEN = '(';
var C_PAREN_CLOSE = ')';
var C_COLON = ':';
var C_LT = '<';
var C_GT = '>';

function definition(eat, value, silent) {
  var self = this;
  var commonmark = self.options.commonmark;
  var index = 0;
  var length = value.length;
  var subvalue = '';
  var beforeURL;
  var beforeTitle;
  var queue;
  var character;
  var test;
  var identifier;
  var url;
  var title;

  while (index < length) {
    character = value.charAt(index);

    if (character !== C_SPACE && character !== C_TAB) {
      break;
    }

    subvalue += character;
    index++;
  }

  character = value.charAt(index);

  if (character !== C_BRACKET_OPEN) {
    return;
  }

  index++;
  subvalue += character;
  queue = '';

  while (index < length) {
    character = value.charAt(index);

    if (character === C_BRACKET_CLOSE) {
      break;
    } else if (character === C_BACKSLASH) {
      queue += character;
      index++;
      character = value.charAt(index);
    }

    queue += character;
    index++;
  }

  if (
    !queue ||
    value.charAt(index) !== C_BRACKET_CLOSE ||
    value.charAt(index + 1) !== C_COLON
  ) {
    return;
  }

  identifier = queue;
  subvalue += queue + C_BRACKET_CLOSE + C_COLON;
  index = subvalue.length;
  queue = '';

  while (index < length) {
    character = value.charAt(index);

    if (
      character !== C_TAB &&
      character !== C_SPACE &&
      character !== C_NEWLINE
    ) {
      break;
    }

    subvalue += character;
    index++;
  }

  character = value.charAt(index);
  queue = '';
  beforeURL = subvalue;

  if (character === C_LT) {
    index++;

    while (index < length) {
      character = value.charAt(index);

      if (!isEnclosedURLCharacter(character)) {
        break;
      }

      queue += character;
      index++;
    }

    character = value.charAt(index);

    if (character === isEnclosedURLCharacter.delimiter) {
      subvalue += C_LT + queue + character;
      index++;
    } else {
      if (commonmark) {
        return;
      }

      index -= queue.length + 1;
      queue = '';
    }
  }

  if (!queue) {
    while (index < length) {
      character = value.charAt(index);

      if (!isUnclosedURLCharacter(character)) {
        break;
      }

      queue += character;
      index++;
    }

    subvalue += queue;
  }

  if (!queue) {
    return;
  }

  url = queue;
  queue = '';

  while (index < length) {
    character = value.charAt(index);

    if (
      character !== C_TAB &&
      character !== C_SPACE &&
      character !== C_NEWLINE
    ) {
      break;
    }

    queue += character;
    index++;
  }

  character = value.charAt(index);
  test = null;

  if (character === C_DOUBLE_QUOTE) {
    test = C_DOUBLE_QUOTE;
  } else if (character === C_SINGLE_QUOTE) {
    test = C_SINGLE_QUOTE;
  } else if (character === C_PAREN_OPEN) {
    test = C_PAREN_CLOSE;
  }

  if (!test) {
    queue = '';
    index = subvalue.length;
  } else if (queue) {
    subvalue += queue + character;
    index = subvalue.length;
    queue = '';

    while (index < length) {
      character = value.charAt(index);

      if (character === test) {
        break;
      }

      if (character === C_NEWLINE) {
        index++;
        character = value.charAt(index);

        if (character === C_NEWLINE || character === test) {
          return;
        }

        queue += C_NEWLINE;
      }

      queue += character;
      index++;
    }

    character = value.charAt(index);

    if (character !== test) {
      return;
    }

    beforeTitle = subvalue;
    subvalue += queue + character;
    index++;
    title = queue;
    queue = '';
  } else {
    return;
  }

  while (index < length) {
    character = value.charAt(index);

    if (character !== C_TAB && character !== C_SPACE) {
      break;
    }

    subvalue += character;
    index++;
  }

  character = value.charAt(index);

  if (!character || character === C_NEWLINE) {
    if (silent) {
      return true;
    }

    beforeURL = eat(beforeURL).test().end;
    url = self.decode.raw(self.unescape(url), beforeURL, {nonTerminated: false});

    if (title) {
      beforeTitle = eat(beforeTitle).test().end;
      title = self.decode.raw(self.unescape(title), beforeTitle);
    }

    return eat(subvalue)({
      type: 'definition',
      identifier: normalize(identifier),
      title: title || null,
      url: url
    });
  }
}

/* Check if `character` can be inside an enclosed URI. */
function isEnclosedURLCharacter(character) {
  return character !== C_GT &&
    character !== C_BRACKET_OPEN &&
    character !== C_BRACKET_CLOSE;
}

isEnclosedURLCharacter.delimiter = C_GT;

/* Check if `character` can be inside an unclosed URI. */
function isUnclosedURLCharacter(character) {
  return character !== C_BRACKET_OPEN &&
    character !== C_BRACKET_CLOSE &&
    !whitespace(character);
}


/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var whitespace = __webpack_require__(393);
var locate = __webpack_require__(566);

module.exports = strikethrough;
strikethrough.locator = locate;

var C_TILDE = '~';
var DOUBLE = '~~';

function strikethrough(eat, value, silent) {
  var self = this;
  var character = '';
  var previous = '';
  var preceding = '';
  var subvalue = '';
  var index;
  var length;
  var now;

  if (
    !self.options.gfm ||
    value.charAt(0) !== C_TILDE ||
    value.charAt(1) !== C_TILDE ||
    whitespace(value.charAt(2))
  ) {
    return;
  }

  index = 1;
  length = value.length;
  now = eat.now();
  now.column += 2;
  now.offset += 2;

  while (++index < length) {
    character = value.charAt(index);

    if (
      character === C_TILDE &&
      previous === C_TILDE &&
      (!preceding || !whitespace(preceding))
    ) {
      /* istanbul ignore if - never used (yet) */
      if (silent) {
        return true;
      }

      return eat(DOUBLE + subvalue + DOUBLE)({
        type: 'delete',
        children: self.tokenizeInline(subvalue, now)
      });
    }

    subvalue += previous;
    preceding = previous;
    previous = character;
  }
}


/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var trim = __webpack_require__(395);
var word = __webpack_require__(545);
var whitespace = __webpack_require__(393);
var locate = __webpack_require__(567);

module.exports = emphasis;
emphasis.locator = locate;

var C_ASTERISK = '*';
var C_UNDERSCORE = '_';

function emphasis(eat, value, silent) {
  var self = this;
  var index = 0;
  var character = value.charAt(index);
  var now;
  var pedantic;
  var marker;
  var queue;
  var subvalue;
  var length;
  var prev;

  if (character !== C_ASTERISK && character !== C_UNDERSCORE) {
    return;
  }

  pedantic = self.options.pedantic;
  subvalue = character;
  marker = character;
  length = value.length;
  index++;
  queue = '';
  character = '';

  if (pedantic && whitespace(value.charAt(index))) {
    return;
  }

  while (index < length) {
    prev = character;
    character = value.charAt(index);

    if (character === marker && (!pedantic || !whitespace(prev))) {
      character = value.charAt(++index);

      if (character !== marker) {
        if (!trim(queue) || prev === marker) {
          return;
        }

        if (!pedantic && marker === C_UNDERSCORE && word(character)) {
          queue += marker;
          continue;
        }

        /* istanbul ignore if - never used (yet) */
        if (silent) {
          return true;
        }

        now = eat.now();
        now.column++;
        now.offset++;

        return eat(subvalue + queue + marker)({
          type: 'emphasis',
          children: self.tokenizeInline(queue, now)
        });
      }

      queue += marker;
    }

    if (!pedantic && character === '\\') {
      queue += character;
      character = value.charAt(++index);
    }

    queue += character;
    index++;
  }
}


/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var locate = __webpack_require__(568);

module.exports = escape;
escape.locator = locate;

function escape(eat, value, silent) {
  var self = this;
  var character;
  var node;

  if (value.charAt(0) === '\\') {
    character = value.charAt(1);

    if (self.escape.indexOf(character) !== -1) {
      /* istanbul ignore if - never used (yet) */
      if (silent) {
        return true;
      }

      if (character === '\n') {
        node = {type: 'break'};
      } else {
        node = {
          type: 'text',
          value: character
        };
      }

      return eat('\\' + character)(node);
    }
  }
}


/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var whitespace = __webpack_require__(393);
var normalize = __webpack_require__(400);

module.exports = footnoteDefinition;
footnoteDefinition.notInList = true;
footnoteDefinition.notInBlock = true;

var C_BACKSLASH = '\\';
var C_NEWLINE = '\n';
var C_TAB = '\t';
var C_SPACE = ' ';
var C_BRACKET_OPEN = '[';
var C_BRACKET_CLOSE = ']';
var C_CARET = '^';
var C_COLON = ':';

var EXPRESSION_INITIAL_TAB = /^( {4}|\t)?/gm;

function footnoteDefinition(eat, value, silent) {
  var self = this;
  var offsets = self.offset;
  var index;
  var length;
  var subvalue;
  var now;
  var currentLine;
  var content;
  var queue;
  var subqueue;
  var character;
  var identifier;
  var add;
  var exit;

  if (!self.options.footnotes) {
    return;
  }

  index = 0;
  length = value.length;
  subvalue = '';
  now = eat.now();
  currentLine = now.line;

  while (index < length) {
    character = value.charAt(index);

    if (!whitespace(character)) {
      break;
    }

    subvalue += character;
    index++;
  }

  if (
    value.charAt(index) !== C_BRACKET_OPEN ||
    value.charAt(index + 1) !== C_CARET
  ) {
    return;
  }

  subvalue += C_BRACKET_OPEN + C_CARET;
  index = subvalue.length;
  queue = '';

  while (index < length) {
    character = value.charAt(index);

    if (character === C_BRACKET_CLOSE) {
      break;
    } else if (character === C_BACKSLASH) {
      queue += character;
      index++;
      character = value.charAt(index);
    }

    queue += character;
    index++;
  }

  if (
    !queue ||
    value.charAt(index) !== C_BRACKET_CLOSE ||
    value.charAt(index + 1) !== C_COLON
  ) {
    return;
  }

  if (silent) {
    return true;
  }

  identifier = normalize(queue);
  subvalue += queue + C_BRACKET_CLOSE + C_COLON;
  index = subvalue.length;

  while (index < length) {
    character = value.charAt(index);

    if (character !== C_TAB && character !== C_SPACE) {
      break;
    }

    subvalue += character;
    index++;
  }

  now.column += subvalue.length;
  now.offset += subvalue.length;
  queue = '';
  content = '';
  subqueue = '';

  while (index < length) {
    character = value.charAt(index);

    if (character === C_NEWLINE) {
      subqueue = character;
      index++;

      while (index < length) {
        character = value.charAt(index);

        if (character !== C_NEWLINE) {
          break;
        }

        subqueue += character;
        index++;
      }

      queue += subqueue;
      subqueue = '';

      while (index < length) {
        character = value.charAt(index);

        if (character !== C_SPACE) {
          break;
        }

        subqueue += character;
        index++;
      }

      if (subqueue.length === 0) {
        break;
      }

      queue += subqueue;
    }

    if (queue) {
      content += queue;
      queue = '';
    }

    content += character;
    index++;
  }

  subvalue += content;

  content = content.replace(EXPRESSION_INITIAL_TAB, function (line) {
    offsets[currentLine] = (offsets[currentLine] || 0) + line.length;
    currentLine++;

    return '';
  });

  add = eat(subvalue);

  exit = self.enterBlock();
  content = self.tokenizeBlock(content, now);
  exit();

  return add({
    type: 'footnoteDefinition',
    identifier: identifier,
    children: content
  });
}


/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = atxHeading;

var C_NEWLINE = '\n';
var C_TAB = '\t';
var C_SPACE = ' ';
var C_HASH = '#';

var MAX_ATX_COUNT = 6;

function atxHeading(eat, value, silent) {
  var self = this;
  var settings = self.options;
  var length = value.length + 1;
  var index = -1;
  var now = eat.now();
  var subvalue = '';
  var content = '';
  var character;
  var queue;
  var depth;

  /* Eat initial spacing. */
  while (++index < length) {
    character = value.charAt(index);

    if (character !== C_SPACE && character !== C_TAB) {
      index--;
      break;
    }

    subvalue += character;
  }

  /* Eat hashes. */
  depth = 0;

  while (++index <= length) {
    character = value.charAt(index);

    if (character !== C_HASH) {
      index--;
      break;
    }

    subvalue += character;
    depth++;
  }

  if (depth > MAX_ATX_COUNT) {
    return;
  }

  if (
    !depth ||
    (!settings.pedantic && value.charAt(index + 1) === C_HASH)
  ) {
    return;
  }

  length = value.length + 1;

  /* Eat intermediate white-space. */
  queue = '';

  while (++index < length) {
    character = value.charAt(index);

    if (character !== C_SPACE && character !== C_TAB) {
      index--;
      break;
    }

    queue += character;
  }

  /* Exit when not in pedantic mode without spacing. */
  if (
    !settings.pedantic &&
    queue.length === 0 &&
    character &&
    character !== C_NEWLINE
  ) {
    return;
  }

  if (silent) {
    return true;
  }

  /* Eat content. */
  subvalue += queue;
  queue = '';
  content = '';

  while (++index < length) {
    character = value.charAt(index);

    if (!character || character === C_NEWLINE) {
      break;
    }

    if (
      character !== C_SPACE &&
      character !== C_TAB &&
      character !== C_HASH
    ) {
      content += queue + character;
      queue = '';
      continue;
    }

    while (character === C_SPACE || character === C_TAB) {
      queue += character;
      character = value.charAt(++index);
    }

    while (character === C_HASH) {
      queue += character;
      character = value.charAt(++index);
    }

    while (character === C_SPACE || character === C_TAB) {
      queue += character;
      character = value.charAt(++index);
    }

    index--;
  }

  now.column += subvalue.length;
  now.offset += subvalue.length;
  subvalue += content + queue;

  return eat(subvalue)({
    type: 'heading',
    depth: depth,
    children: self.tokenizeInline(content, now)
  });
}


/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = setextHeading;

var C_NEWLINE = '\n';
var C_TAB = '\t';
var C_SPACE = ' ';
var C_EQUALS = '=';
var C_DASH = '-';

var MAX_HEADING_INDENT = 3;

/* Map of characters which can be used to mark setext
 * headers, mapping to their corresponding depth. */
var SETEXT_MARKERS = {};

SETEXT_MARKERS[C_EQUALS] = 1;
SETEXT_MARKERS[C_DASH] = 2;

function setextHeading(eat, value, silent) {
  var self = this;
  var now = eat.now();
  var length = value.length;
  var index = -1;
  var subvalue = '';
  var content;
  var queue;
  var character;
  var marker;
  var depth;

  /* Eat initial indentation. */
  while (++index < length) {
    character = value.charAt(index);

    if (character !== C_SPACE || index >= MAX_HEADING_INDENT) {
      index--;
      break;
    }

    subvalue += character;
  }

  /* Eat content. */
  content = '';
  queue = '';

  while (++index < length) {
    character = value.charAt(index);

    if (character === C_NEWLINE) {
      index--;
      break;
    }

    if (character === C_SPACE || character === C_TAB) {
      queue += character;
    } else {
      content += queue + character;
      queue = '';
    }
  }

  now.column += subvalue.length;
  now.offset += subvalue.length;
  subvalue += content + queue;

  /* Ensure the content is followed by a newline and a
   * valid marker. */
  character = value.charAt(++index);
  marker = value.charAt(++index);

  if (character !== C_NEWLINE || !SETEXT_MARKERS[marker]) {
    return;
  }

  subvalue += character;

  /* Eat Setext-line. */
  queue = marker;
  depth = SETEXT_MARKERS[marker];

  while (++index < length) {
    character = value.charAt(index);

    if (character !== marker) {
      if (character !== C_NEWLINE) {
        return;
      }

      index--;
      break;
    }

    queue += character;
  }

  if (silent) {
    return true;
  }

  return eat(subvalue + queue)({
    type: 'heading',
    depth: depth,
    children: self.tokenizeInline(content, now)
  });
}


/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var openCloseTag = __webpack_require__(536).openCloseTag;

module.exports = blockHTML;

var C_TAB = '\t';
var C_SPACE = ' ';
var C_NEWLINE = '\n';
var C_LT = '<';

function blockHTML(eat, value, silent) {
  var self = this;
  var blocks = self.options.blocks;
  var length = value.length;
  var index = 0;
  var next;
  var line;
  var offset;
  var character;
  var count;
  var sequence;
  var subvalue;

  var sequences = [
    [/^<(script|pre|style)(?=(\s|>|$))/i, /<\/(script|pre|style)>/i, true],
    [/^<!--/, /-->/, true],
    [/^<\?/, /\?>/, true],
    [/^<![A-Za-z]/, />/, true],
    [/^<!\[CDATA\[/, /\]\]>/, true],
    [new RegExp('^</?(' + blocks.join('|') + ')(?=(\\s|/?>|$))', 'i'), /^$/, true],
    [new RegExp(openCloseTag.source + '\\s*$'), /^$/, false]
  ];

  /* Eat initial spacing. */
  while (index < length) {
    character = value.charAt(index);

    if (character !== C_TAB && character !== C_SPACE) {
      break;
    }

    index++;
  }

  if (value.charAt(index) !== C_LT) {
    return;
  }

  next = value.indexOf(C_NEWLINE, index + 1);
  next = next === -1 ? length : next;
  line = value.slice(index, next);
  offset = -1;
  count = sequences.length;

  while (++offset < count) {
    if (sequences[offset][0].test(line)) {
      sequence = sequences[offset];
      break;
    }
  }

  if (!sequence) {
    return;
  }

  if (silent) {
    return sequence[2];
  }

  index = next;

  if (!sequence[1].test(line)) {
    while (index < length) {
      next = value.indexOf(C_NEWLINE, index + 1);
      next = next === -1 ? length : next;
      line = value.slice(index + 1, next);

      if (sequence[1].test(line)) {
        if (line) {
          index = next;
        }

        break;
      }

      index = next;
    }
  }

  subvalue = value.slice(0, index);

  return eat(subvalue)({type: 'html', value: subvalue});
}


/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var alphabetical = __webpack_require__(403);
var locate = __webpack_require__(534);
var tag = __webpack_require__(536).tag;

module.exports = inlineHTML;
inlineHTML.locator = locate;

var EXPRESSION_HTML_LINK_OPEN = /^<a /i;
var EXPRESSION_HTML_LINK_CLOSE = /^<\/a>/i;

function inlineHTML(eat, value, silent) {
  var self = this;
  var length = value.length;
  var character;
  var subvalue;

  if (value.charAt(0) !== '<' || length < 3) {
    return;
  }

  character = value.charAt(1);

  if (
    !alphabetical(character) &&
    character !== '?' &&
    character !== '!' &&
    character !== '/'
  ) {
    return;
  }

  subvalue = value.match(tag);

  if (!subvalue) {
    return;
  }

  /* istanbul ignore if - not used yet. */
  if (silent) {
    return true;
  }

  subvalue = subvalue[0];

  if (!self.inLink && EXPRESSION_HTML_LINK_OPEN.test(subvalue)) {
    self.inLink = true;
  } else if (self.inLink && EXPRESSION_HTML_LINK_CLOSE.test(subvalue)) {
    self.inLink = false;
  }

  return eat(subvalue)({type: 'html', value: subvalue});
}


/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var whitespace = __webpack_require__(393);
var locate = __webpack_require__(533);

module.exports = link;
link.locator = locate;

var own = {}.hasOwnProperty;

var C_BACKSLASH = '\\';
var C_BRACKET_OPEN = '[';
var C_BRACKET_CLOSE = ']';
var C_PAREN_OPEN = '(';
var C_PAREN_CLOSE = ')';
var C_LT = '<';
var C_GT = '>';
var C_TICK = '`';
var C_DOUBLE_QUOTE = '"';
var C_SINGLE_QUOTE = '\'';

/* Map of characters, which can be used to mark link
 * and image titles. */
var LINK_MARKERS = {};

LINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;
LINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;

/* Map of characters, which can be used to mark link
 * and image titles in commonmark-mode. */
var COMMONMARK_LINK_MARKERS = {};

COMMONMARK_LINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;
COMMONMARK_LINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;
COMMONMARK_LINK_MARKERS[C_PAREN_OPEN] = C_PAREN_CLOSE;

function link(eat, value, silent) {
  var self = this;
  var subvalue = '';
  var index = 0;
  var character = value.charAt(0);
  var pedantic = self.options.pedantic;
  var commonmark = self.options.commonmark;
  var gfm = self.options.gfm;
  var closed;
  var count;
  var opening;
  var beforeURL;
  var beforeTitle;
  var subqueue;
  var hasMarker;
  var markers;
  var isImage;
  var content;
  var marker;
  var length;
  var title;
  var depth;
  var queue;
  var url;
  var now;
  var exit;
  var node;

  /* Detect whether this is an image. */
  if (character === '!') {
    isImage = true;
    subvalue = character;
    character = value.charAt(++index);
  }

  /* Eat the opening. */
  if (character !== C_BRACKET_OPEN) {
    return;
  }

  /* Exit when this is a link and we’re already inside
   * a link. */
  if (!isImage && self.inLink) {
    return;
  }

  subvalue += character;
  queue = '';
  index++;

  /* Eat the content. */
  length = value.length;
  now = eat.now();
  depth = 0;

  now.column += index;
  now.offset += index;

  while (index < length) {
    character = value.charAt(index);
    subqueue = character;

    if (character === C_TICK) {
      /* Inline-code in link content. */
      count = 1;

      while (value.charAt(index + 1) === C_TICK) {
        subqueue += character;
        index++;
        count++;
      }

      if (!opening) {
        opening = count;
      } else if (count >= opening) {
        opening = 0;
      }
    } else if (character === C_BACKSLASH) {
      /* Allow brackets to be escaped. */
      index++;
      subqueue += value.charAt(index);
    /* In GFM mode, brackets in code still count.
     * In all other modes, they don’t.  This empty
     * block prevents the next statements are
     * entered. */
    } else if ((!opening || gfm) && character === C_BRACKET_OPEN) {
      depth++;
    } else if ((!opening || gfm) && character === C_BRACKET_CLOSE) {
      if (depth) {
        depth--;
      } else {
        /* Allow white-space between content and
         * url in GFM mode. */
        if (!pedantic) {
          while (index < length) {
            character = value.charAt(index + 1);

            if (!whitespace(character)) {
              break;
            }

            subqueue += character;
            index++;
          }
        }

        if (value.charAt(index + 1) !== C_PAREN_OPEN) {
          return;
        }

        subqueue += C_PAREN_OPEN;
        closed = true;
        index++;

        break;
      }
    }

    queue += subqueue;
    subqueue = '';
    index++;
  }

  /* Eat the content closing. */
  if (!closed) {
    return;
  }

  content = queue;
  subvalue += queue + subqueue;
  index++;

  /* Eat white-space. */
  while (index < length) {
    character = value.charAt(index);

    if (!whitespace(character)) {
      break;
    }

    subvalue += character;
    index++;
  }

  /* Eat the URL. */
  character = value.charAt(index);
  markers = commonmark ? COMMONMARK_LINK_MARKERS : LINK_MARKERS;
  queue = '';
  beforeURL = subvalue;

  if (character === C_LT) {
    index++;
    beforeURL += C_LT;

    while (index < length) {
      character = value.charAt(index);

      if (character === C_GT) {
        break;
      }

      if (commonmark && character === '\n') {
        return;
      }

      queue += character;
      index++;
    }

    if (value.charAt(index) !== C_GT) {
      return;
    }

    subvalue += C_LT + queue + C_GT;
    url = queue;
    index++;
  } else {
    character = null;
    subqueue = '';

    while (index < length) {
      character = value.charAt(index);

      if (subqueue && own.call(markers, character)) {
        break;
      }

      if (whitespace(character)) {
        if (!pedantic) {
          break;
        }

        subqueue += character;
      } else {
        if (character === C_PAREN_OPEN) {
          depth++;
        } else if (character === C_PAREN_CLOSE) {
          if (depth === 0) {
            break;
          }

          depth--;
        }

        queue += subqueue;
        subqueue = '';

        if (character === C_BACKSLASH) {
          queue += C_BACKSLASH;
          character = value.charAt(++index);
        }

        queue += character;
      }

      index++;
    }

    subvalue += queue;
    url = queue;
    index = subvalue.length;
  }

  /* Eat white-space. */
  queue = '';

  while (index < length) {
    character = value.charAt(index);

    if (!whitespace(character)) {
      break;
    }

    queue += character;
    index++;
  }

  character = value.charAt(index);
  subvalue += queue;

  /* Eat the title. */
  if (queue && own.call(markers, character)) {
    index++;
    subvalue += character;
    queue = '';
    marker = markers[character];
    beforeTitle = subvalue;

    /* In commonmark-mode, things are pretty easy: the
     * marker cannot occur inside the title.
     *
     * Non-commonmark does, however, support nested
     * delimiters. */
    if (commonmark) {
      while (index < length) {
        character = value.charAt(index);

        if (character === marker) {
          break;
        }

        if (character === C_BACKSLASH) {
          queue += C_BACKSLASH;
          character = value.charAt(++index);
        }

        index++;
        queue += character;
      }

      character = value.charAt(index);

      if (character !== marker) {
        return;
      }

      title = queue;
      subvalue += queue + character;
      index++;

      while (index < length) {
        character = value.charAt(index);

        if (!whitespace(character)) {
          break;
        }

        subvalue += character;
        index++;
      }
    } else {
      subqueue = '';

      while (index < length) {
        character = value.charAt(index);

        if (character === marker) {
          if (hasMarker) {
            queue += marker + subqueue;
            subqueue = '';
          }

          hasMarker = true;
        } else if (!hasMarker) {
          queue += character;
        } else if (character === C_PAREN_CLOSE) {
          subvalue += queue + marker + subqueue;
          title = queue;
          break;
        } else if (whitespace(character)) {
          subqueue += character;
        } else {
          queue += marker + subqueue + character;
          subqueue = '';
          hasMarker = false;
        }

        index++;
      }
    }
  }

  if (value.charAt(index) !== C_PAREN_CLOSE) {
    return;
  }

  /* istanbul ignore if - never used (yet) */
  if (silent) {
    return true;
  }

  subvalue += C_PAREN_CLOSE;

  url = self.decode.raw(self.unescape(url), eat(beforeURL).test().end, {nonTerminated: false});

  if (title) {
    beforeTitle = eat(beforeTitle).test().end;
    title = self.decode.raw(self.unescape(title), beforeTitle);
  }

  node = {
    type: isImage ? 'image' : 'link',
    title: title || null,
    url: url
  };

  if (isImage) {
    node.alt = self.decode.raw(self.unescape(content), now) || null;
  } else {
    exit = self.enterLink();
    node.children = self.tokenizeInline(content, now);
    exit();
  }

  return eat(subvalue)(node);
}


/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint-disable max-params */

var trim = __webpack_require__(395);
var repeat = __webpack_require__(401);
var decimal = __webpack_require__(396);
var getIndent = __webpack_require__(535);
var removeIndent = __webpack_require__(601);
var interrupt = __webpack_require__(399);

module.exports = list;

var C_ASTERISK = '*';
var C_UNDERSCORE = '_';
var C_PLUS = '+';
var C_DASH = '-';
var C_DOT = '.';
var C_SPACE = ' ';
var C_NEWLINE = '\n';
var C_TAB = '\t';
var C_PAREN_CLOSE = ')';
var C_X_LOWER = 'x';

var TAB_SIZE = 4;
var EXPRESSION_LOOSE_LIST_ITEM = /\n\n(?!\s*$)/;
var EXPRESSION_TASK_ITEM = /^\[([ \t]|x|X)][ \t]/;
var EXPRESSION_BULLET = /^([ \t]*)([*+-]|\d+[.)])( {1,4}(?! )| |\t|$|(?=\n))([^\n]*)/;
var EXPRESSION_PEDANTIC_BULLET = /^([ \t]*)([*+-]|\d+[.)])([ \t]+)/;
var EXPRESSION_INITIAL_INDENT = /^( {1,4}|\t)?/gm;

/* Map of characters which can be used to mark
 * list-items. */
var LIST_UNORDERED_MARKERS = {};

LIST_UNORDERED_MARKERS[C_ASTERISK] = true;
LIST_UNORDERED_MARKERS[C_PLUS] = true;
LIST_UNORDERED_MARKERS[C_DASH] = true;

/* Map of characters which can be used to mark
 * list-items after a digit. */
var LIST_ORDERED_MARKERS = {};

LIST_ORDERED_MARKERS[C_DOT] = true;

/* Map of characters which can be used to mark
 * list-items after a digit. */
var LIST_ORDERED_COMMONMARK_MARKERS = {};

LIST_ORDERED_COMMONMARK_MARKERS[C_DOT] = true;
LIST_ORDERED_COMMONMARK_MARKERS[C_PAREN_CLOSE] = true;

function list(eat, value, silent) {
  var self = this;
  var commonmark = self.options.commonmark;
  var pedantic = self.options.pedantic;
  var tokenizers = self.blockTokenizers;
  var interuptors = self.interruptList;
  var markers;
  var index = 0;
  var length = value.length;
  var start = null;
  var size = 0;
  var queue;
  var ordered;
  var character;
  var marker;
  var nextIndex;
  var startIndex;
  var prefixed;
  var currentMarker;
  var content;
  var line;
  var prevEmpty;
  var empty;
  var items;
  var allLines;
  var emptyLines;
  var item;
  var enterTop;
  var exitBlockquote;
  var isLoose;
  var node;
  var now;
  var end;
  var indented;

  while (index < length) {
    character = value.charAt(index);

    if (character === C_TAB) {
      size += TAB_SIZE - (size % TAB_SIZE);
    } else if (character === C_SPACE) {
      size++;
    } else {
      break;
    }

    index++;
  }

  if (size >= TAB_SIZE) {
    return;
  }

  character = value.charAt(index);

  markers = commonmark ?
    LIST_ORDERED_COMMONMARK_MARKERS :
    LIST_ORDERED_MARKERS;

  if (LIST_UNORDERED_MARKERS[character] === true) {
    marker = character;
    ordered = false;
  } else {
    ordered = true;
    queue = '';

    while (index < length) {
      character = value.charAt(index);

      if (!decimal(character)) {
        break;
      }

      queue += character;
      index++;
    }

    character = value.charAt(index);

    if (!queue || markers[character] !== true) {
      return;
    }

    start = parseInt(queue, 10);
    marker = character;
  }

  character = value.charAt(++index);

  if (character !== C_SPACE && character !== C_TAB) {
    return;
  }

  if (silent) {
    return true;
  }

  index = 0;
  items = [];
  allLines = [];
  emptyLines = [];

  while (index < length) {
    nextIndex = value.indexOf(C_NEWLINE, index);
    startIndex = index;
    prefixed = false;
    indented = false;

    if (nextIndex === -1) {
      nextIndex = length;
    }

    end = index + TAB_SIZE;
    size = 0;

    while (index < length) {
      character = value.charAt(index);

      if (character === C_TAB) {
        size += TAB_SIZE - (size % TAB_SIZE);
      } else if (character === C_SPACE) {
        size++;
      } else {
        break;
      }

      index++;
    }

    if (size >= TAB_SIZE) {
      indented = true;
    }

    if (item && size >= item.indent) {
      indented = true;
    }

    character = value.charAt(index);
    currentMarker = null;

    if (!indented) {
      if (LIST_UNORDERED_MARKERS[character] === true) {
        currentMarker = character;
        index++;
        size++;
      } else {
        queue = '';

        while (index < length) {
          character = value.charAt(index);

          if (!decimal(character)) {
            break;
          }

          queue += character;
          index++;
        }

        character = value.charAt(index);
        index++;

        if (queue && markers[character] === true) {
          currentMarker = character;
          size += queue.length + 1;
        }
      }

      if (currentMarker) {
        character = value.charAt(index);

        if (character === C_TAB) {
          size += TAB_SIZE - (size % TAB_SIZE);
          index++;
        } else if (character === C_SPACE) {
          end = index + TAB_SIZE;

          while (index < end) {
            if (value.charAt(index) !== C_SPACE) {
              break;
            }

            index++;
            size++;
          }

          if (index === end && value.charAt(index) === C_SPACE) {
            index -= TAB_SIZE - 1;
            size -= TAB_SIZE - 1;
          }
        } else if (character !== C_NEWLINE && character !== '') {
          currentMarker = null;
        }
      }
    }

    if (currentMarker) {
      if (!pedantic && marker !== currentMarker) {
        break;
      }

      prefixed = true;
    } else {
      if (!commonmark && !indented && value.charAt(startIndex) === C_SPACE) {
        indented = true;
      } else if (commonmark && item) {
        indented = size >= item.indent || size > TAB_SIZE;
      }

      prefixed = false;
      index = startIndex;
    }

    line = value.slice(startIndex, nextIndex);
    content = startIndex === index ? line : value.slice(index, nextIndex);

    if (
      currentMarker === C_ASTERISK ||
      currentMarker === C_UNDERSCORE ||
      currentMarker === C_DASH
    ) {
      if (tokenizers.thematicBreak.call(self, eat, line, true)) {
        break;
      }
    }

    prevEmpty = empty;
    empty = !trim(content).length;

    if (indented && item) {
      item.value = item.value.concat(emptyLines, line);
      allLines = allLines.concat(emptyLines, line);
      emptyLines = [];
    } else if (prefixed) {
      if (emptyLines.length !== 0) {
        item.value.push('');
        item.trail = emptyLines.concat();
      }

      item = {
        value: [line],
        indent: size,
        trail: []
      };

      items.push(item);
      allLines = allLines.concat(emptyLines, line);
      emptyLines = [];
    } else if (empty) {
      if (prevEmpty) {
        break;
      }

      emptyLines.push(line);
    } else {
      if (prevEmpty) {
        break;
      }

      if (interrupt(interuptors, tokenizers, self, [eat, line, true])) {
        break;
      }

      item.value = item.value.concat(emptyLines, line);
      allLines = allLines.concat(emptyLines, line);
      emptyLines = [];
    }

    index = nextIndex + 1;
  }

  node = eat(allLines.join(C_NEWLINE)).reset({
    type: 'list',
    ordered: ordered,
    start: start,
    loose: null,
    children: []
  });

  enterTop = self.enterList();
  exitBlockquote = self.enterBlock();
  isLoose = false;
  index = -1;
  length = items.length;

  while (++index < length) {
    item = items[index].value.join(C_NEWLINE);
    now = eat.now();

    item = eat(item)(listItem(self, item, now), node);

    if (item.loose) {
      isLoose = true;
    }

    item = items[index].trail.join(C_NEWLINE);

    if (index !== length - 1) {
      item += C_NEWLINE;
    }

    eat(item);
  }

  enterTop();
  exitBlockquote();

  node.loose = isLoose;

  return node;
}

function listItem(ctx, value, position) {
  var offsets = ctx.offset;
  var fn = ctx.options.pedantic ? pedanticListItem : normalListItem;
  var checked = null;
  var task;
  var indent;

  value = fn.apply(null, arguments);

  if (ctx.options.gfm) {
    task = value.match(EXPRESSION_TASK_ITEM);

    if (task) {
      indent = task[0].length;
      checked = task[1].toLowerCase() === C_X_LOWER;
      offsets[position.line] += indent;
      value = value.slice(indent);
    }
  }

  return {
    type: 'listItem',
    loose: EXPRESSION_LOOSE_LIST_ITEM.test(value) ||
      value.charAt(value.length - 1) === C_NEWLINE,
    checked: checked,
    children: ctx.tokenizeBlock(value, position)
  };
}

/* Create a list-item using overly simple mechanics. */
function pedanticListItem(ctx, value, position) {
  var offsets = ctx.offset;
  var line = position.line;

  /* Remove the list-item’s bullet. */
  value = value.replace(EXPRESSION_PEDANTIC_BULLET, replacer);

  /* The initial line was also matched by the below, so
   * we reset the `line`. */
  line = position.line;

  return value.replace(EXPRESSION_INITIAL_INDENT, replacer);

  /* A simple replacer which removed all matches,
   * and adds their length to `offset`. */
  function replacer($0) {
    offsets[line] = (offsets[line] || 0) + $0.length;
    line++;

    return '';
  }
}

/* Create a list-item using sane mechanics. */
function normalListItem(ctx, value, position) {
  var offsets = ctx.offset;
  var line = position.line;
  var max;
  var bullet;
  var rest;
  var lines;
  var trimmedLines;
  var index;
  var length;

  /* Remove the list-item’s bullet. */
  value = value.replace(EXPRESSION_BULLET, replacer);

  lines = value.split(C_NEWLINE);

  trimmedLines = removeIndent(value, getIndent(max).indent).split(C_NEWLINE);

  /* We replaced the initial bullet with something
   * else above, which was used to trick
   * `removeIndentation` into removing some more
   * characters when possible.  However, that could
   * result in the initial line to be stripped more
   * than it should be. */
  trimmedLines[0] = rest;

  offsets[line] = (offsets[line] || 0) + bullet.length;
  line++;

  index = 0;
  length = lines.length;

  while (++index < length) {
    offsets[line] = (offsets[line] || 0) +
      lines[index].length - trimmedLines[index].length;
    line++;
  }

  return trimmedLines.join(C_NEWLINE);

  function replacer($0, $1, $2, $3, $4) {
    bullet = $1 + $2 + $3;
    rest = $4;

    /* Make sure that the first nine numbered list items
     * can indent with an extra space.  That is, when
     * the bullet did not receive an extra final space. */
    if (Number($2) < 10 && bullet.length % 2 === 1) {
      $2 = C_SPACE + $2;
    }

    max = $1 + repeat(C_SPACE, $2.length) + $3;

    return max + rest;
  }
}


/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var whitespace = __webpack_require__(393);

module.exports = newline;

/* Tokenise newline. */
function newline(eat, value, silent) {
  var character = value.charAt(0);
  var length;
  var subvalue;
  var queue;
  var index;

  if (character !== '\n') {
    return;
  }

  /* istanbul ignore if - never used (yet) */
  if (silent) {
    return true;
  }

  index = 1;
  length = value.length;
  subvalue = character;
  queue = '';

  while (index < length) {
    character = value.charAt(index);

    if (!whitespace(character)) {
      break;
    }

    queue += character;

    if (character === '\n') {
      subvalue += queue;
      queue = '';
    }

    index++;
  }

  eat(subvalue);
}


/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var trim = __webpack_require__(395);
var decimal = __webpack_require__(396);
var trimTrailingLines = __webpack_require__(402);
var interrupt = __webpack_require__(399);

module.exports = paragraph;

var C_NEWLINE = '\n';
var C_TAB = '\t';
var C_SPACE = ' ';

var TAB_SIZE = 4;

/* Tokenise paragraph. */
function paragraph(eat, value, silent) {
  var self = this;
  var settings = self.options;
  var commonmark = settings.commonmark;
  var gfm = settings.gfm;
  var tokenizers = self.blockTokenizers;
  var interruptors = self.interruptParagraph;
  var index = value.indexOf(C_NEWLINE);
  var length = value.length;
  var position;
  var subvalue;
  var character;
  var size;
  var now;

  while (index < length) {
    /* Eat everything if there’s no following newline. */
    if (index === -1) {
      index = length;
      break;
    }

    /* Stop if the next character is NEWLINE. */
    if (value.charAt(index + 1) === C_NEWLINE) {
      break;
    }

    /* In commonmark-mode, following indented lines
     * are part of the paragraph. */
    if (commonmark) {
      size = 0;
      position = index + 1;

      while (position < length) {
        character = value.charAt(position);

        if (character === C_TAB) {
          size = TAB_SIZE;
          break;
        } else if (character === C_SPACE) {
          size++;
        } else {
          break;
        }

        position++;
      }

      if (size >= TAB_SIZE) {
        index = value.indexOf(C_NEWLINE, index + 1);
        continue;
      }
    }

    subvalue = value.slice(index + 1);

    /* Check if the following code contains a possible
     * block. */
    if (interrupt(interruptors, tokenizers, self, [eat, subvalue, true])) {
      break;
    }

    /* Break if the following line starts a list, when
     * already in a list, or when in commonmark, or when
     * in gfm mode and the bullet is *not* numeric. */
    if (
      tokenizers.list.call(self, eat, subvalue, true) &&
      (
        self.inList ||
        commonmark ||
        (gfm && !decimal(trim.left(subvalue).charAt(0)))
      )
    ) {
      break;
    }

    position = index;
    index = value.indexOf(C_NEWLINE, index + 1);

    if (index !== -1 && trim(value.slice(position, index)) === '') {
      index = position;
      break;
    }
  }

  subvalue = value.slice(0, index);

  if (trim(subvalue) === '') {
    eat(subvalue);

    return null;
  }

  /* istanbul ignore if - never used (yet) */
  if (silent) {
    return true;
  }

  now = eat.now();
  subvalue = trimTrailingLines(subvalue);

  return eat(subvalue)({
    type: 'paragraph',
    children: self.tokenizeInline(subvalue, now)
  });
}


/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var whitespace = __webpack_require__(393);
var locate = __webpack_require__(533);
var normalize = __webpack_require__(400);

module.exports = reference;
reference.locator = locate;

var T_LINK = 'link';
var T_IMAGE = 'image';
var T_FOOTNOTE = 'footnote';
var REFERENCE_TYPE_SHORTCUT = 'shortcut';
var REFERENCE_TYPE_COLLAPSED = 'collapsed';
var REFERENCE_TYPE_FULL = 'full';
var C_CARET = '^';
var C_BACKSLASH = '\\';
var C_BRACKET_OPEN = '[';
var C_BRACKET_CLOSE = ']';

function reference(eat, value, silent) {
  var self = this;
  var character = value.charAt(0);
  var index = 0;
  var length = value.length;
  var subvalue = '';
  var intro = '';
  var type = T_LINK;
  var referenceType = REFERENCE_TYPE_SHORTCUT;
  var content;
  var identifier;
  var now;
  var node;
  var exit;
  var queue;
  var bracketed;
  var depth;

  /* Check whether we’re eating an image. */
  if (character === '!') {
    type = T_IMAGE;
    intro = character;
    character = value.charAt(++index);
  }

  if (character !== C_BRACKET_OPEN) {
    return;
  }

  index++;
  intro += character;
  queue = '';

  /* Check whether we’re eating a footnote. */
  if (self.options.footnotes && value.charAt(index) === C_CARET) {
    /* Exit if `![^` is found, so the `!` will be seen as text after this,
     * and we’ll enter this function again when `[^` is found. */
    if (type === T_IMAGE) {
      return;
    }

    intro += C_CARET;
    index++;
    type = T_FOOTNOTE;
  }

  /* Eat the text. */
  depth = 0;

  while (index < length) {
    character = value.charAt(index);

    if (character === C_BRACKET_OPEN) {
      bracketed = true;
      depth++;
    } else if (character === C_BRACKET_CLOSE) {
      if (!depth) {
        break;
      }

      depth--;
    }

    if (character === C_BACKSLASH) {
      queue += C_BACKSLASH;
      character = value.charAt(++index);
    }

    queue += character;
    index++;
  }

  subvalue = queue;
  content = queue;
  character = value.charAt(index);

  if (character !== C_BRACKET_CLOSE) {
    return;
  }

  index++;
  subvalue += character;
  queue = '';

  while (index < length) {
    character = value.charAt(index);

    if (!whitespace(character)) {
      break;
    }

    queue += character;
    index++;
  }

  character = value.charAt(index);

  /* Inline footnotes cannot have an identifier. */
  if (type !== T_FOOTNOTE && character === C_BRACKET_OPEN) {
    identifier = '';
    queue += character;
    index++;

    while (index < length) {
      character = value.charAt(index);

      if (character === C_BRACKET_OPEN || character === C_BRACKET_CLOSE) {
        break;
      }

      if (character === C_BACKSLASH) {
        identifier += C_BACKSLASH;
        character = value.charAt(++index);
      }

      identifier += character;
      index++;
    }

    character = value.charAt(index);

    if (character === C_BRACKET_CLOSE) {
      referenceType = identifier ? REFERENCE_TYPE_FULL : REFERENCE_TYPE_COLLAPSED;
      queue += identifier + character;
      index++;
    } else {
      identifier = '';
    }

    subvalue += queue;
    queue = '';
  } else {
    if (!content) {
      return;
    }

    identifier = content;
  }

  /* Brackets cannot be inside the identifier. */
  if (referenceType !== REFERENCE_TYPE_FULL && bracketed) {
    return;
  }

  subvalue = intro + subvalue;

  if (type === T_LINK && self.inLink) {
    return null;
  }

  /* istanbul ignore if - never used (yet) */
  if (silent) {
    return true;
  }

  if (type === T_FOOTNOTE && content.indexOf(' ') !== -1) {
    return eat(subvalue)({
      type: 'footnote',
      children: this.tokenizeInline(content, eat.now())
    });
  }

  now = eat.now();
  now.column += intro.length;
  now.offset += intro.length;
  identifier = referenceType === REFERENCE_TYPE_FULL ? identifier : content;

  node = {
    type: type + 'Reference',
    identifier: normalize(identifier)
  };

  if (type === T_LINK || type === T_IMAGE) {
    node.referenceType = referenceType;
  }

  if (type === T_LINK) {
    exit = self.enterLink();
    node.children = self.tokenizeInline(content, now);
    exit();
  } else if (type === T_IMAGE) {
    node.alt = self.decode.raw(self.unescape(content), now) || null;
  }

  return eat(subvalue)(node);
}


/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var trim = __webpack_require__(395);
var whitespace = __webpack_require__(393);
var locate = __webpack_require__(569);

module.exports = strong;
strong.locator = locate;

var C_ASTERISK = '*';
var C_UNDERSCORE = '_';

function strong(eat, value, silent) {
  var self = this;
  var index = 0;
  var character = value.charAt(index);
  var now;
  var pedantic;
  var marker;
  var queue;
  var subvalue;
  var length;
  var prev;

  if (
    (character !== C_ASTERISK && character !== C_UNDERSCORE) ||
    value.charAt(++index) !== character
  ) {
    return;
  }

  pedantic = self.options.pedantic;
  marker = character;
  subvalue = marker + marker;
  length = value.length;
  index++;
  queue = '';
  character = '';

  if (pedantic && whitespace(value.charAt(index))) {
    return;
  }

  while (index < length) {
    prev = character;
    character = value.charAt(index);

    if (
      character === marker &&
      value.charAt(index + 1) === marker &&
      (!pedantic || !whitespace(prev))
    ) {
      character = value.charAt(index + 2);

      if (character !== marker) {
        if (!trim(queue)) {
          return;
        }

        /* istanbul ignore if - never used (yet) */
        if (silent) {
          return true;
        }

        now = eat.now();
        now.column += 2;
        now.offset += 2;

        return eat(subvalue + queue + subvalue)({
          type: 'strong',
          children: self.tokenizeInline(queue, now)
        });
      }
    }

    if (!pedantic && character === '\\') {
      queue += character;
      character = value.charAt(++index);
    }

    queue += character;
    index++;
  }
}


/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var whitespace = __webpack_require__(393);

module.exports = table;

var C_BACKSLASH = '\\';
var C_TICK = '`';
var C_DASH = '-';
var C_PIPE = '|';
var C_COLON = ':';
var C_SPACE = ' ';
var C_NEWLINE = '\n';
var C_TAB = '\t';

var MIN_TABLE_COLUMNS = 1;
var MIN_TABLE_ROWS = 2;

var TABLE_ALIGN_LEFT = 'left';
var TABLE_ALIGN_CENTER = 'center';
var TABLE_ALIGN_RIGHT = 'right';
var TABLE_ALIGN_NONE = null;

function table(eat, value, silent) {
  var self = this;
  var index;
  var alignments;
  var alignment;
  var subvalue;
  var row;
  var length;
  var lines;
  var queue;
  var character;
  var hasDash;
  var align;
  var cell;
  var preamble;
  var count;
  var opening;
  var now;
  var position;
  var lineCount;
  var line;
  var rows;
  var table;
  var lineIndex;
  var pipeIndex;
  var first;

  /* Exit when not in gfm-mode. */
  if (!self.options.gfm) {
    return;
  }

  /* Get the rows.
   * Detecting tables soon is hard, so there are some
   * checks for performance here, such as the minimum
   * number of rows, and allowed characters in the
   * alignment row. */
  index = 0;
  lineCount = 0;
  length = value.length + 1;
  lines = [];

  while (index < length) {
    lineIndex = value.indexOf(C_NEWLINE, index);
    pipeIndex = value.indexOf(C_PIPE, index + 1);

    if (lineIndex === -1) {
      lineIndex = value.length;
    }

    if (pipeIndex === -1 || pipeIndex > lineIndex) {
      if (lineCount < MIN_TABLE_ROWS) {
        return;
      }

      break;
    }

    lines.push(value.slice(index, lineIndex));
    lineCount++;
    index = lineIndex + 1;
  }

  /* Parse the alignment row. */
  subvalue = lines.join(C_NEWLINE);
  alignments = lines.splice(1, 1)[0] || [];
  index = 0;
  length = alignments.length;
  lineCount--;
  alignment = false;
  align = [];

  while (index < length) {
    character = alignments.charAt(index);

    if (character === C_PIPE) {
      hasDash = null;

      if (alignment === false) {
        if (first === false) {
          return;
        }
      } else {
        align.push(alignment);
        alignment = false;
      }

      first = false;
    } else if (character === C_DASH) {
      hasDash = true;
      alignment = alignment || TABLE_ALIGN_NONE;
    } else if (character === C_COLON) {
      if (alignment === TABLE_ALIGN_LEFT) {
        alignment = TABLE_ALIGN_CENTER;
      } else if (hasDash && alignment === TABLE_ALIGN_NONE) {
        alignment = TABLE_ALIGN_RIGHT;
      } else {
        alignment = TABLE_ALIGN_LEFT;
      }
    } else if (!whitespace(character)) {
      return;
    }

    index++;
  }

  if (alignment !== false) {
    align.push(alignment);
  }

  /* Exit when without enough columns. */
  if (align.length < MIN_TABLE_COLUMNS) {
    return;
  }

  /* istanbul ignore if - never used (yet) */
  if (silent) {
    return true;
  }

  /* Parse the rows. */
  position = -1;
  rows = [];

  table = eat(subvalue).reset({
    type: 'table',
    align: align,
    children: rows
  });

  while (++position < lineCount) {
    line = lines[position];
    row = {type: 'tableRow', children: []};

    /* Eat a newline character when this is not the
     * first row. */
    if (position) {
      eat(C_NEWLINE);
    }

    /* Eat the row. */
    eat(line).reset(row, table);

    length = line.length + 1;
    index = 0;
    queue = '';
    cell = '';
    preamble = true;
    count = null;
    opening = null;

    while (index < length) {
      character = line.charAt(index);

      if (character === C_TAB || character === C_SPACE) {
        if (cell) {
          queue += character;
        } else {
          eat(character);
        }

        index++;
        continue;
      }

      if (character === '' || character === C_PIPE) {
        if (preamble) {
          eat(character);
        } else {
          if (character && opening) {
            queue += character;
            index++;
            continue;
          }

          if ((cell || character) && !preamble) {
            subvalue = cell;

            if (queue.length > 1) {
              if (character) {
                subvalue += queue.slice(0, queue.length - 1);
                queue = queue.charAt(queue.length - 1);
              } else {
                subvalue += queue;
                queue = '';
              }
            }

            now = eat.now();

            eat(subvalue)({
              type: 'tableCell',
              children: self.tokenizeInline(cell, now)
            }, row);
          }

          eat(queue + character);

          queue = '';
          cell = '';
        }
      } else {
        if (queue) {
          cell += queue;
          queue = '';
        }

        cell += character;

        if (character === C_BACKSLASH && index !== length - 2) {
          cell += line.charAt(index + 1);
          index++;
        }

        if (character === C_TICK) {
          count = 1;

          while (line.charAt(index + 1) === character) {
            cell += character;
            index++;
            count++;
          }

          if (!opening) {
            opening = count;
          } else if (count >= opening) {
            opening = 0;
          }
        }
      }

      preamble = false;
      index++;
    }

    /* Eat the alignment row. */
    if (!position) {
      eat(C_NEWLINE + alignments);
    }
  }

  return table;
}


/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = text;

function text(eat, value, silent) {
  var self = this;
  var methods;
  var tokenizers;
  var index;
  var length;
  var subvalue;
  var position;
  var tokenizer;
  var name;
  var min;
  var now;

  /* istanbul ignore if - never used (yet) */
  if (silent) {
    return true;
  }

  methods = self.inlineMethods;
  length = methods.length;
  tokenizers = self.inlineTokenizers;
  index = -1;
  min = value.length;

  while (++index < length) {
    name = methods[index];

    if (name === 'text' || !tokenizers[name]) {
      continue;
    }

    tokenizer = tokenizers[name].locator;

    if (!tokenizer) {
      eat.file.fail('Missing locator: `' + name + '`');
    }

    position = tokenizer.call(self, value, 1);

    if (position !== -1 && position < min) {
      min = position;
    }
  }

  subvalue = value.slice(0, min);
  now = eat.now();

  self.decode(subvalue, now, function (content, position, source) {
    eat(source || content)({
      type: 'text',
      value: content
    });
  });
}


/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = thematicBreak;

var C_NEWLINE = '\n';
var C_TAB = '\t';
var C_SPACE = ' ';
var C_ASTERISK = '*';
var C_UNDERSCORE = '_';
var C_DASH = '-';

var THEMATIC_BREAK_MARKER_COUNT = 3;

function thematicBreak(eat, value, silent) {
  var index = -1;
  var length = value.length + 1;
  var subvalue = '';
  var character;
  var marker;
  var markerCount;
  var queue;

  while (++index < length) {
    character = value.charAt(index);

    if (character !== C_TAB && character !== C_SPACE) {
      break;
    }

    subvalue += character;
  }

  if (
    character !== C_ASTERISK &&
    character !== C_DASH &&
    character !== C_UNDERSCORE
  ) {
    return;
  }

  marker = character;
  subvalue += character;
  markerCount = 1;
  queue = '';

  while (++index < length) {
    character = value.charAt(index);

    if (character === marker) {
      markerCount++;
      subvalue += queue + marker;
      queue = '';
    } else if (character === C_SPACE) {
      queue += character;
    } else if (
      markerCount >= THEMATIC_BREAK_MARKER_COUNT &&
      (!character || character === C_NEWLINE)
    ) {
      subvalue += queue;

      if (silent) {
        return true;
      }

      return eat(subvalue)({type: 'thematicBreak'});
    } else {
      return;
    }
  }
}


/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var decode = __webpack_require__(398);
var whitespace = __webpack_require__(393);
var locate = __webpack_require__(570);

module.exports = url;
url.locator = locate;
url.notInLink = true;

var C_BRACKET_OPEN = '[';
var C_BRACKET_CLOSE = ']';
var C_PAREN_OPEN = '(';
var C_PAREN_CLOSE = ')';
var C_LT = '<';
var C_AT_SIGN = '@';

var HTTP_PROTOCOL = 'http://';
var HTTPS_PROTOCOL = 'https://';
var MAILTO_PROTOCOL = 'mailto:';

var PROTOCOLS = [
  HTTP_PROTOCOL,
  HTTPS_PROTOCOL,
  MAILTO_PROTOCOL
];

var PROTOCOLS_LENGTH = PROTOCOLS.length;

function url(eat, value, silent) {
  var self = this;
  var subvalue;
  var content;
  var character;
  var index;
  var position;
  var protocol;
  var match;
  var length;
  var queue;
  var parenCount;
  var nextCharacter;
  var exit;

  if (!self.options.gfm) {
    return;
  }

  subvalue = '';
  index = -1;
  length = PROTOCOLS_LENGTH;

  while (++index < length) {
    protocol = PROTOCOLS[index];
    match = value.slice(0, protocol.length);

    if (match.toLowerCase() === protocol) {
      subvalue = match;
      break;
    }
  }

  if (!subvalue) {
    return;
  }

  index = subvalue.length;
  length = value.length;
  queue = '';
  parenCount = 0;

  while (index < length) {
    character = value.charAt(index);

    if (whitespace(character) || character === C_LT) {
      break;
    }

    if (
      character === '.' ||
      character === ',' ||
      character === ':' ||
      character === ';' ||
      character === '"' ||
      character === '\'' ||
      character === ')' ||
      character === ']'
    ) {
      nextCharacter = value.charAt(index + 1);

      if (!nextCharacter || whitespace(nextCharacter)) {
        break;
      }
    }

    if (character === C_PAREN_OPEN || character === C_BRACKET_OPEN) {
      parenCount++;
    }

    if (character === C_PAREN_CLOSE || character === C_BRACKET_CLOSE) {
      parenCount--;

      if (parenCount < 0) {
        break;
      }
    }

    queue += character;
    index++;
  }

  if (!queue) {
    return;
  }

  subvalue += queue;
  content = subvalue;

  if (protocol === MAILTO_PROTOCOL) {
    position = queue.indexOf(C_AT_SIGN);

    if (position === -1 || position === length - 1) {
      return;
    }

    content = content.substr(MAILTO_PROTOCOL.length);
  }

  /* istanbul ignore if - never used (yet) */
  if (silent) {
    return true;
  }

  exit = self.enterLink();
  content = self.tokenizeInline(content, eat.now());
  exit();

  return eat(subvalue)({
    type: 'link',
    title: null,
    url: decode(subvalue, {nonTerminated: false}),
    children: content
  });
}


/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = factory;

var MERGEABLE_NODES = {
  text: mergeText,
  blockquote: mergeBlockquote
};

/* Check whether a node is mergeable with adjacent nodes. */
function mergeable(node) {
  var start;
  var end;

  if (node.type !== 'text' || !node.position) {
    return true;
  }

  start = node.position.start;
  end = node.position.end;

  /* Only merge nodes which occupy the same size as their
   * `value`. */
  return start.line !== end.line ||
      end.column - start.column === node.value.length;
}

/* Merge two text nodes: `node` into `prev`. */
function mergeText(prev, node) {
  prev.value += node.value;

  return prev;
}

/* Merge two blockquotes: `node` into `prev`, unless in
 * CommonMark mode. */
function mergeBlockquote(prev, node) {
  if (this.options.commonmark) {
    return node;
  }

  prev.children = prev.children.concat(node.children);

  return prev;
}

/* Construct a tokenizer.  This creates both
 * `tokenizeInline` and `tokenizeBlock`. */
function factory(type) {
  return tokenize;

  /* Tokenizer for a bound `type`. */
  function tokenize(value, location) {
    var self = this;
    var offset = self.offset;
    var tokens = [];
    var methods = self[type + 'Methods'];
    var tokenizers = self[type + 'Tokenizers'];
    var line = location.line;
    var column = location.column;
    var index;
    var length;
    var method;
    var name;
    var matched;
    var valueLength;

    /* Trim white space only lines. */
    if (!value) {
      return tokens;
    }

    /* Expose on `eat`. */
    eat.now = now;
    eat.file = self.file;

    /* Sync initial offset. */
    updatePosition('');

    /* Iterate over `value`, and iterate over all
     * tokenizers.  When one eats something, re-iterate
     * with the remaining value.  If no tokenizer eats,
     * something failed (should not happen) and an
     * exception is thrown. */
    while (value) {
      index = -1;
      length = methods.length;
      matched = false;

      while (++index < length) {
        name = methods[index];
        method = tokenizers[name];

        if (
          method &&
          /* istanbul ignore next */ (!method.onlyAtStart || self.atStart) &&
          (!method.notInList || !self.inList) &&
          (!method.notInBlock || !self.inBlock) &&
          (!method.notInLink || !self.inLink)
        ) {
          valueLength = value.length;

          method.apply(self, [eat, value]);

          matched = valueLength !== value.length;

          if (matched) {
            break;
          }
        }
      }

      /* istanbul ignore if */
      if (!matched) {
        self.file.fail(new Error('Infinite loop'), eat.now());
      }
    }

    self.eof = now();

    return tokens;

    /* Update line, column, and offset based on
     * `value`. */
    function updatePosition(subvalue) {
      var lastIndex = -1;
      var index = subvalue.indexOf('\n');

      while (index !== -1) {
        line++;
        lastIndex = index;
        index = subvalue.indexOf('\n', index + 1);
      }

      if (lastIndex === -1) {
        column += subvalue.length;
      } else {
        column = subvalue.length - lastIndex;
      }

      if (line in offset) {
        if (lastIndex !== -1) {
          column += offset[line];
        } else if (column <= offset[line]) {
          column = offset[line] + 1;
        }
      }
    }

    /* Get offset.  Called before the first character is
     * eaten to retrieve the range's offsets. */
    function getOffset() {
      var indentation = [];
      var pos = line + 1;

      /* Done.  Called when the last character is
       * eaten to retrieve the range’s offsets. */
      return function () {
        var last = line + 1;

        while (pos < last) {
          indentation.push((offset[pos] || 0) + 1);

          pos++;
        }

        return indentation;
      };
    }

    /* Get the current position. */
    function now() {
      var pos = {line: line, column: column};

      pos.offset = self.toOffset(pos);

      return pos;
    }

    /* Store position information for a node. */
    function Position(start) {
      this.start = start;
      this.end = now();
    }

    /* Throw when a value is incorrectly eaten.
     * This shouldn’t happen but will throw on new,
     * incorrect rules. */
    function validateEat(subvalue) {
      /* istanbul ignore if */
      if (value.substring(0, subvalue.length) !== subvalue) {
        /* Capture stack-trace. */
        self.file.fail(
          new Error(
            'Incorrectly eaten value: please report this ' +
            'warning on http://git.io/vg5Ft'
          ),
          now()
        );
      }
    }

    /* Mark position and patch `node.position`. */
    function position() {
      var before = now();

      return update;

      /* Add the position to a node. */
      function update(node, indent) {
        var prev = node.position;
        var start = prev ? prev.start : before;
        var combined = [];
        var n = prev && prev.end.line;
        var l = before.line;

        node.position = new Position(start);

        /* If there was already a `position`, this
         * node was merged.  Fixing `start` wasn’t
         * hard, but the indent is different.
         * Especially because some information, the
         * indent between `n` and `l` wasn’t
         * tracked.  Luckily, that space is
         * (should be?) empty, so we can safely
         * check for it now. */
        if (prev && indent && prev.indent) {
          combined = prev.indent;

          if (n < l) {
            while (++n < l) {
              combined.push((offset[n] || 0) + 1);
            }

            combined.push(before.column);
          }

          indent = combined.concat(indent);
        }

        node.position.indent = indent || [];

        return node;
      }
    }

    /* Add `node` to `parent`s children or to `tokens`.
     * Performs merges where possible. */
    function add(node, parent) {
      var children = parent ? parent.children : tokens;
      var prev = children[children.length - 1];

      if (
        prev &&
        node.type === prev.type &&
        node.type in MERGEABLE_NODES &&
        mergeable(prev) &&
        mergeable(node)
      ) {
        node = MERGEABLE_NODES[node.type].call(self, prev, node);
      }

      if (node !== prev) {
        children.push(node);
      }

      if (self.atStart && tokens.length !== 0) {
        self.exitStart();
      }

      return node;
    }

    /* Remove `subvalue` from `value`.
     * `subvalue` must be at the start of `value`. */
    function eat(subvalue) {
      var indent = getOffset();
      var pos = position();
      var current = now();

      validateEat(subvalue);

      apply.reset = reset;
      reset.test = test;
      apply.test = test;

      value = value.substring(subvalue.length);

      updatePosition(subvalue);

      indent = indent();

      return apply;

      /* Add the given arguments, add `position` to
       * the returned node, and return the node. */
      function apply(node, parent) {
        return pos(add(pos(node), parent), indent);
      }

      /* Functions just like apply, but resets the
       * content:  the line and column are reversed,
       * and the eaten value is re-added.
       * This is useful for nodes with a single
       * type of content, such as lists and tables.
       * See `apply` above for what parameters are
       * expected. */
      function reset() {
        var node = apply.apply(null, arguments);

        line = current.line;
        column = current.column;
        value = subvalue + value;

        return node;
      }

      /* Test the position, after eating, and reverse
       * to a not-eaten state. */
      function test() {
        var result = pos({});

        line = current.line;
        column = current.column;
        value = subvalue + value;

        return result.position;
      }
    }
  }
}


/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = factory;

/* Factory to de-escape a value, based on a list at `key`
 * in `ctx`. */
function factory(ctx, key) {
  return unescape;

  /* De-escape a string using the expression at `key`
   * in `ctx`. */
  function unescape(value) {
    var prev = 0;
    var index = value.indexOf('\\');
    var escape = ctx[key];
    var queue = [];
    var character;

    while (index !== -1) {
      queue.push(value.slice(prev, index));
      prev = index + 1;
      character = value.charAt(prev);

      /* If the following character is not a valid escape,
       * add the slash. */
      if (!character || escape.indexOf(character) === -1) {
        queue.push('\\');
      }

      index = value.indexOf('\\', prev);
    }

    queue.push(value.slice(prev));

    return queue.join('');
  }
}


/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var trim = __webpack_require__(395);
var repeat = __webpack_require__(401);
var getIndent = __webpack_require__(535);

module.exports = indentation;

var C_SPACE = ' ';
var C_NEWLINE = '\n';
var C_TAB = '\t';

/* Remove the minimum indent from every line in `value`.
 * Supports both tab, spaced, and mixed indentation (as
 * well as possible). */
function indentation(value, maximum) {
  var values = value.split(C_NEWLINE);
  var position = values.length + 1;
  var minIndent = Infinity;
  var matrix = [];
  var index;
  var indentation;
  var stops;
  var padding;

  values.unshift(repeat(C_SPACE, maximum) + '!');

  while (position--) {
    indentation = getIndent(values[position]);

    matrix[position] = indentation.stops;

    if (trim(values[position]).length === 0) {
      continue;
    }

    if (indentation.indent) {
      if (indentation.indent > 0 && indentation.indent < minIndent) {
        minIndent = indentation.indent;
      }
    } else {
      minIndent = Infinity;

      break;
    }
  }

  if (minIndent !== Infinity) {
    position = values.length;

    while (position--) {
      stops = matrix[position];
      index = minIndent;

      while (index && !(index in stops)) {
        index--;
      }

      if (
        trim(values[position]).length !== 0 &&
        minIndent &&
        index !== minIndent
      ) {
        padding = C_TAB;
      } else {
        padding = '';
      }

      values[position] = padding + values[position].slice(
        index in stops ? stops[index] + 1 : 0
      );
    }
  }

  values.shift();

  return values.join(C_NEWLINE);
}


/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var path = __webpack_require__(531);

function replaceExt(npath, ext) {
  if (typeof npath !== 'string') {
    return npath;
  }

  if (npath.length === 0) {
    return npath;
  }

  var nFileName = path.basename(npath, path.extname(npath)) + ext;
  return path.join(path.dirname(npath), nFileName);
}

module.exports = replaceExt;


/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = factory

// Construct a state `toggler`: a function which inverses `property` in context
// based on its current value.
// The by `toggler` returned function restores that value.
function factory(key, state, ctx) {
  return enter

  function enter() {
    var context = ctx || this
    var current = context[key]

    context[key] = !state

    return exit

    function exit() {
      context[key] = current
    }
  }
}


/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var wrap = __webpack_require__(605)

module.exports = trough

trough.wrap = wrap

var slice = [].slice

// Create new middleware.
function trough() {
  var fns = []
  var middleware = {}

  middleware.run = run
  middleware.use = use

  return middleware

  // Run `fns`.  Last argument must be a completion handler.
  function run() {
    var index = -1
    var input = slice.call(arguments, 0, -1)
    var done = arguments[arguments.length - 1]

    if (typeof done !== 'function') {
      throw new Error('Expected function as last argument, not ' + done)
    }

    next.apply(null, [null].concat(input))

    // Run the next `fn`, if any.
    function next(err) {
      var fn = fns[++index]
      var params = slice.call(arguments, 0)
      var values = params.slice(1)
      var length = input.length
      var pos = -1

      if (err) {
        done(err)
        return
      }

      // Copy non-nully input into values.
      while (++pos < length) {
        if (values[pos] === null || values[pos] === undefined) {
          values[pos] = input[pos]
        }
      }

      input = values

      // Next or done.
      if (fn) {
        wrap(fn, next).apply(null, input)
      } else {
        done.apply(null, [null].concat(input))
      }
    }
  }

  // Add `fn` to the list.
  function use(fn) {
    if (typeof fn !== 'function') {
      throw new Error('Expected `fn` to be a function, not ' + fn)
    }

    fns.push(fn)

    return middleware
  }
}


/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var slice = [].slice

module.exports = wrap

// Wrap `fn`.
// Can be sync or async; return a promise, receive a completion handler, return
// new values and errors.
function wrap(fn, callback) {
  var invoked

  return wrapped

  function wrapped() {
    var params = slice.call(arguments, 0)
    var callback = fn.length > params.length
    var result

    if (callback) {
      params.push(done)
    }

    try {
      result = fn.apply(null, params)
    } catch (error) {
      // Well, this is quite the pickle.
      // `fn` received a callback and invoked it (thus continuing the pipeline),
      // but later also threw an error.
      // We’re not about to restart the pipeline again, so the only thing left
      // to do is to throw the thing instead.
      if (callback && invoked) {
        throw error
      }

      return done(error)
    }

    if (!callback) {
      if (result && typeof result.then === 'function') {
        result.then(then, done)
      } else if (result instanceof Error) {
        done(result)
      } else {
        then(result)
      }
    }
  }

  // Invoke `next`, only once.
  function done() {
    if (!invoked) {
      invoked = true

      callback.apply(null, arguments)
    }
  }

  // Invoke `done` with one value.
  // Tracks if an error is passed, too.
  function then(value) {
    done(null, value)
  }
}


/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var xtend = __webpack_require__(394)
var inherits = __webpack_require__(540)

module.exports = unherit

// Create a custom constructor which can be modified without affecting the
// original class.
function unherit(Super) {
  var result
  var key
  var value

  inherits(Of, Super)
  inherits(From, Of)

  // Clone values.
  result = Of.prototype

  for (key in result) {
    value = result[key]

    if (value && typeof value === 'object') {
      result[key] = 'concat' in value ? value.concat() : xtend(value)
    }
  }

  return Of

  // Constructor accepting a single argument, which itself is an `arguments`
  // object.
  function From(parameters) {
    return Super.apply(this, parameters)
  }

  // Constructor accepting variadic arguments.
  function Of() {
    if (!(this instanceof Of)) {
      return new From(arguments)
    }

    return Super.apply(this, arguments)
  }
}


/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* Dependencies. */
var extend = __webpack_require__(539)
var bail = __webpack_require__(537)
var vfile = __webpack_require__(616)
var trough = __webpack_require__(604)
var string = __webpack_require__(617)
var plain = __webpack_require__(544)

/* Expose a frozen processor. */
module.exports = unified().freeze()

var slice = [].slice
var own = {}.hasOwnProperty

/* Process pipeline. */
var pipeline = trough()
  .use(pipelineParse)
  .use(pipelineRun)
  .use(pipelineStringify)

function pipelineParse(p, ctx) {
  ctx.tree = p.parse(ctx.file)
}

function pipelineRun(p, ctx, next) {
  p.run(ctx.tree, ctx.file, done)

  function done(err, tree, file) {
    if (err) {
      next(err)
    } else {
      ctx.tree = tree
      ctx.file = file
      next()
    }
  }
}

function pipelineStringify(p, ctx) {
  ctx.file.contents = p.stringify(ctx.tree, ctx.file)
}

/* Function to create the first processor. */
function unified() {
  var attachers = []
  var transformers = trough()
  var namespace = {}
  var frozen = false
  var freezeIndex = -1

  /* Data management. */
  processor.data = data

  /* Lock. */
  processor.freeze = freeze

  /* Plug-ins. */
  processor.attachers = attachers
  processor.use = use

  /* API. */
  processor.parse = parse
  processor.stringify = stringify
  processor.run = run
  processor.runSync = runSync
  processor.process = process
  processor.processSync = processSync

  /* Expose. */
  return processor

  /* Create a new processor based on the processor
   * in the current scope. */
  function processor() {
    var destination = unified()
    var length = attachers.length
    var index = -1

    while (++index < length) {
      destination.use.apply(null, attachers[index])
    }

    destination.data(extend(true, {}, namespace))

    return destination
  }

  /* Freeze: used to signal a processor that has finished
   * configuration.
   *
   * For example, take unified itself.  It’s frozen.
   * Plug-ins should not be added to it.  Rather, it should
   * be extended, by invoking it, before modifying it.
   *
   * In essence, always invoke this when exporting a
   * processor. */
  function freeze() {
    var values
    var plugin
    var options
    var transformer

    if (frozen) {
      return processor
    }

    while (++freezeIndex < attachers.length) {
      values = attachers[freezeIndex]
      plugin = values[0]
      options = values[1]
      transformer = null

      if (options === false) {
        continue
      }

      if (options === true) {
        values[1] = undefined
      }

      transformer = plugin.apply(processor, values.slice(1))

      if (typeof transformer === 'function') {
        transformers.use(transformer)
      }
    }

    frozen = true
    freezeIndex = Infinity

    return processor
  }

  /* Data management.
   * Getter / setter for processor-specific informtion. */
  function data(key, value) {
    if (string(key)) {
      /* Set `key`. */
      if (arguments.length === 2) {
        assertUnfrozen('data', frozen)

        namespace[key] = value

        return processor
      }

      /* Get `key`. */
      return (own.call(namespace, key) && namespace[key]) || null
    }

    /* Set space. */
    if (key) {
      assertUnfrozen('data', frozen)
      namespace = key
      return processor
    }

    /* Get space. */
    return namespace
  }

  /* Plug-in management.
   *
   * Pass it:
   * *   an attacher and options,
   * *   a preset,
   * *   a list of presets, attachers, and arguments (list
   *     of attachers and options). */
  function use(value) {
    var settings

    assertUnfrozen('use', frozen)

    if (value === null || value === undefined) {
      /* Empty */
    } else if (typeof value === 'function') {
      addPlugin.apply(null, arguments)
    } else if (typeof value === 'object') {
      if ('length' in value) {
        addList(value)
      } else {
        addPreset(value)
      }
    } else {
      throw new Error('Expected usable value, not `' + value + '`')
    }

    if (settings) {
      namespace.settings = extend(namespace.settings || {}, settings)
    }

    return processor

    function addPreset(result) {
      addList(result.plugins)

      if (result.settings) {
        settings = extend(settings || {}, result.settings)
      }
    }

    function add(value) {
      if (typeof value === 'function') {
        addPlugin(value)
      } else if (typeof value === 'object') {
        if ('length' in value) {
          addPlugin.apply(null, value)
        } else {
          addPreset(value)
        }
      } else {
        throw new Error('Expected usable value, not `' + value + '`')
      }
    }

    function addList(plugins) {
      var length
      var index

      if (plugins === null || plugins === undefined) {
        /* Empty */
      } else if (typeof plugins === 'object' && 'length' in plugins) {
        length = plugins.length
        index = -1

        while (++index < length) {
          add(plugins[index])
        }
      } else {
        throw new Error('Expected a list of plugins, not `' + plugins + '`')
      }
    }

    function addPlugin(plugin, value) {
      var entry = find(plugin)

      if (entry) {
        if (plain(entry[1]) && plain(value)) {
          value = extend(entry[1], value)
        }

        entry[1] = value
      } else {
        attachers.push(slice.call(arguments))
      }
    }
  }

  function find(plugin) {
    var length = attachers.length
    var index = -1
    var entry

    while (++index < length) {
      entry = attachers[index]

      if (entry[0] === plugin) {
        return entry
      }
    }
  }

  /* Parse a file (in string or VFile representation)
   * into a Unist node using the `Parser` on the
   * processor. */
  function parse(doc) {
    var file = vfile(doc)
    var Parser

    freeze()
    Parser = processor.Parser
    assertParser('parse', Parser)

    if (newable(Parser)) {
      return new Parser(String(file), file).parse()
    }

    return Parser(String(file), file) // eslint-disable-line new-cap
  }

  /* Run transforms on a Unist node representation of a file
   * (in string or VFile representation), async. */
  function run(node, file, cb) {
    assertNode(node)
    freeze()

    if (!cb && typeof file === 'function') {
      cb = file
      file = null
    }

    if (!cb) {
      return new Promise(executor)
    }

    executor(null, cb)

    function executor(resolve, reject) {
      transformers.run(node, vfile(file), done)

      function done(err, tree, file) {
        tree = tree || node
        if (err) {
          reject(err)
        } else if (resolve) {
          resolve(tree)
        } else {
          cb(null, tree, file)
        }
      }
    }
  }

  /* Run transforms on a Unist node representation of a file
   * (in string or VFile representation), sync. */
  function runSync(node, file) {
    var complete = false
    var result

    run(node, file, done)

    assertDone('runSync', 'run', complete)

    return result

    function done(err, tree) {
      complete = true
      bail(err)
      result = tree
    }
  }

  /* Stringify a Unist node representation of a file
   * (in string or VFile representation) into a string
   * using the `Compiler` on the processor. */
  function stringify(node, doc) {
    var file = vfile(doc)
    var Compiler

    freeze()
    Compiler = processor.Compiler
    assertCompiler('stringify', Compiler)
    assertNode(node)

    if (newable(Compiler)) {
      return new Compiler(node, file).compile()
    }

    return Compiler(node, file) // eslint-disable-line new-cap
  }

  /* Parse a file (in string or VFile representation)
   * into a Unist node using the `Parser` on the processor,
   * then run transforms on that node, and compile the
   * resulting node using the `Compiler` on the processor,
   * and store that result on the VFile. */
  function process(doc, cb) {
    freeze()
    assertParser('process', processor.Parser)
    assertCompiler('process', processor.Compiler)

    if (!cb) {
      return new Promise(executor)
    }

    executor(null, cb)

    function executor(resolve, reject) {
      var file = vfile(doc)

      pipeline.run(processor, {file: file}, done)

      function done(err) {
        if (err) {
          reject(err)
        } else if (resolve) {
          resolve(file)
        } else {
          cb(null, file)
        }
      }
    }
  }

  /* Process the given document (in string or VFile
   * representation), sync. */
  function processSync(doc) {
    var complete = false
    var file

    freeze()
    assertParser('processSync', processor.Parser)
    assertCompiler('processSync', processor.Compiler)
    file = vfile(doc)

    process(file, done)

    assertDone('processSync', 'process', complete)

    return file

    function done(err) {
      complete = true
      bail(err)
    }
  }
}

/* Check if `func` is a constructor. */
function newable(value) {
  return typeof value === 'function' && keys(value.prototype)
}

/* Check if `value` is an object with keys. */
function keys(value) {
  var key
  for (key in value) {
    return true
  }
  return false
}

/* Assert a parser is available. */
function assertParser(name, Parser) {
  if (typeof Parser !== 'function') {
    throw new Error('Cannot `' + name + '` without `Parser`')
  }
}

/* Assert a compiler is available. */
function assertCompiler(name, Compiler) {
  if (typeof Compiler !== 'function') {
    throw new Error('Cannot `' + name + '` without `Compiler`')
  }
}

/* Assert the processor is not frozen. */
function assertUnfrozen(name, frozen) {
  if (frozen) {
    throw new Error(
      [
        'Cannot invoke `' + name + '` on a frozen processor.\nCreate a new ',
        'processor first, by invoking it: use `processor()` instead of ',
        '`processor`.'
      ].join('')
    )
  }
}

/* Assert `node` is a Unist node. */
function assertNode(node) {
  if (!node || !string(node.type)) {
    throw new Error('Expected node, got `' + node + '`')
  }
}

/* Assert that `complete` is `true`. */
function assertDone(name, asyncName, complete) {
  if (!complete) {
    throw new Error(
      '`' + name + '` finished async. Use `' + asyncName + '` instead'
    )
  }
}


/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = convert

function convert(test) {
  if (typeof test === 'string') {
    return typeFactory(test)
  }

  if (test === null || test === undefined) {
    return ok
  }

  if (typeof test === 'object') {
    return ('length' in test ? anyFactory : matchesFactory)(test)
  }

  if (typeof test === 'function') {
    return test
  }

  throw new Error('Expected function, string, or object as test')
}

function convertAll(tests) {
  var results = []
  var length = tests.length
  var index = -1

  while (++index < length) {
    results[index] = convert(tests[index])
  }

  return results
}

// Utility assert each property in `test` is represented in `node`, and each
// values are strictly equal.
function matchesFactory(test) {
  return matches

  function matches(node) {
    var key

    for (key in test) {
      if (node[key] !== test[key]) {
        return false
      }
    }

    return true
  }
}

function anyFactory(tests) {
  var checks = convertAll(tests)
  var length = checks.length

  return matches

  function matches() {
    var index = -1

    while (++index < length) {
      if (checks[index].apply(this, arguments)) {
        return true
      }
    }

    return false
  }
}

// Utility to convert a string into a function which checks a given node’s type
// for said string.
function typeFactory(test) {
  return type

  function type(node) {
    return Boolean(node && node.type === test)
  }
}

// Utility to return true.
function ok() {
  return true
}


/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var visit = __webpack_require__(397)

module.exports = removePosition

function removePosition(node, force) {
  visit(node, force ? hard : soft)
  return node
}

function hard(node) {
  delete node.position
}

function soft(node) {
  node.position = undefined
}


/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var own = {}.hasOwnProperty

module.exports = stringify

function stringify(value) {
  /* Nothing. */
  if (!value || typeof value !== 'object') {
    return null
  }

  /* Node. */
  if (own.call(value, 'position') || own.call(value, 'type')) {
    return position(value.position)
  }

  /* Position. */
  if (own.call(value, 'start') || own.call(value, 'end')) {
    return position(value)
  }

  /* Point. */
  if (own.call(value, 'line') || own.call(value, 'column')) {
    return point(value)
  }

  /* ? */
  return null
}

function point(point) {
  if (!point || typeof point !== 'object') {
    point = {}
  }

  return index(point.line) + ':' + index(point.column)
}

function position(pos) {
  if (!pos || typeof pos !== 'object') {
    pos = {}
  }

  return point(pos.start) + '-' + point(pos.end)
}

function index(value) {
  return value && typeof value === 'number' ? value : 1
}


/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* Expose. */
module.exports = visitParents

/* Visit. */
function visitParents(tree, type, visitor) {
  var stack = []

  if (typeof type === 'function') {
    visitor = type
    type = null
  }

  one(tree)

  /* Visit a single node. */
  function one(node) {
    var result

    if (!type || node.type === type) {
      result = visitor(node, stack.concat())
    }

    if (node.children && result !== false) {
      return all(node.children, node)
    }

    return result
  }

  /* Visit children in `parent`. */
  function all(children, parent) {
    var length = children.length
    var index = -1
    var child

    stack.push(parent)

    while (++index < length) {
      child = children[index]

      if (child && one(child) === false) {
        return false
      }
    }

    stack.pop()

    return true
  }
}


/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = visitParents

var convert = __webpack_require__(608)

var CONTINUE = true
var SKIP = 'skip'
var EXIT = false

visitParents.CONTINUE = CONTINUE
visitParents.SKIP = SKIP
visitParents.EXIT = EXIT

function visitParents(tree, test, visitor, reverse) {
  var is

  if (typeof test === 'function' && typeof visitor !== 'function') {
    reverse = visitor
    visitor = test
    test = null
  }

  is = convert(test)

  one(tree, null, [])

  // Visit a single node.
  function one(node, index, parents) {
    var result = []
    var subresult

    if (!test || is(node, index, parents[parents.length - 1] || null)) {
      result = toResult(visitor(node, parents))

      if (result[0] === EXIT) {
        return result
      }
    }

    if (node.children && result[0] !== SKIP) {
      subresult = toResult(all(node.children, parents.concat(node)))
      return subresult[0] === EXIT ? subresult : result
    }

    return result
  }

  // Visit children in `parent`.
  function all(children, parents) {
    var min = -1
    var step = reverse ? -1 : 1
    var index = (reverse ? children.length : min) + step
    var result

    while (index > min && index < children.length) {
      result = one(children[index], index, parents)

      if (result[0] === EXIT) {
        return result
      }

      index = typeof result[1] === 'number' ? result[1] : index + step
    }
  }
}

function toResult(value) {
  if (value !== null && typeof value === 'object' && 'length' in value) {
    return value
  }

  if (typeof value === 'number') {
    return [CONTINUE, value]
  }

  return [value]
}


/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = factory

function factory(file) {
  var contents = indices(String(file))

  return {
    toPosition: offsetToPositionFactory(contents),
    toOffset: positionToOffsetFactory(contents)
  }
}

// Factory to get the line and column-based `position` for `offset` in the bound
// indices.
function offsetToPositionFactory(indices) {
  return offsetToPosition

  // Get the line and column-based `position` for `offset` in the bound indices.
  function offsetToPosition(offset) {
    var index = -1
    var length = indices.length

    if (offset < 0) {
      return {}
    }

    while (++index < length) {
      if (indices[index] > offset) {
        return {
          line: index + 1,
          column: offset - (indices[index - 1] || 0) + 1,
          offset: offset
        }
      }
    }

    return {}
  }
}

// Factory to get the `offset` for a line and column-based `position` in the
// bound indices.
function positionToOffsetFactory(indices) {
  return positionToOffset

  // Get the `offset` for a line and column-based `position` in the bound
  // indices.
  function positionToOffset(position) {
    var line = position && position.line
    var column = position && position.column

    if (!isNaN(line) && !isNaN(column) && line - 1 in indices) {
      return (indices[line - 2] || 0) + column - 1 || 0
    }

    return -1
  }
}

// Get indices of line-breaks in `value`.
function indices(value) {
  var result = []
  var index = value.indexOf('\n')

  while (index !== -1) {
    result.push(index + 1)
    index = value.indexOf('\n', index + 1)
  }

  result.push(value.length + 1)

  return result
}


/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var stringify = __webpack_require__(610)

module.exports = VMessage

// Inherit from `Error#`.
function VMessagePrototype() {}
VMessagePrototype.prototype = Error.prototype
VMessage.prototype = new VMessagePrototype()

// Message properties.
var proto = VMessage.prototype

proto.file = ''
proto.name = ''
proto.reason = ''
proto.message = ''
proto.stack = ''
proto.fatal = null
proto.column = null
proto.line = null

// Construct a new VMessage.
//
// Note: We cannot invoke `Error` on the created context, as that adds readonly
// `line` and `column` attributes on Safari 9, thus throwing and failing the
// data.
function VMessage(reason, position, origin) {
  var parts
  var range
  var location

  if (typeof position === 'string') {
    origin = position
    position = null
  }

  parts = parseOrigin(origin)
  range = stringify(position) || '1:1'

  location = {
    start: {line: null, column: null},
    end: {line: null, column: null}
  }

  // Node.
  if (position && position.position) {
    position = position.position
  }

  if (position) {
    // Position.
    if (position.start) {
      location = position
      position = position.start
    } else {
      // Point.
      location.start = position
    }
  }

  if (reason.stack) {
    this.stack = reason.stack
    reason = reason.message
  }

  this.message = reason
  this.name = range
  this.reason = reason
  this.line = position ? position.line : null
  this.column = position ? position.column : null
  this.location = location
  this.source = parts[0]
  this.ruleId = parts[1]
}

function parseOrigin(origin) {
  var result = [null, null]
  var index

  if (typeof origin === 'string') {
    index = origin.indexOf(':')

    if (index === -1) {
      result[1] = origin
    } else {
      result[0] = origin.slice(0, index)
      result[1] = origin.slice(index + 1)
    }
  }

  return result
}


/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var path = __webpack_require__(531);
var replace = __webpack_require__(602);
var buffer = __webpack_require__(542);

module.exports = VFile;

var own = {}.hasOwnProperty;
var proto = VFile.prototype;

proto.toString = toString;

/* Order of setting (least specific to most), we need this because
 * otherwise `{stem: 'a', path: '~/b.js'}` would throw, as a path
 * is needed before a stem can be set. */
var order = [
  'history',
  'path',
  'basename',
  'stem',
  'extname',
  'dirname'
];

/* Construct a new file. */
function VFile(options) {
  var prop;
  var index;
  var length;

  if (!options) {
    options = {};
  } else if (typeof options === 'string' || buffer(options)) {
    options = {contents: options};
  } else if ('message' in options && 'messages' in options) {
    return options;
  }

  if (!(this instanceof VFile)) {
    return new VFile(options);
  }

  this.data = {};
  this.messages = [];
  this.history = [];
  this.cwd = process.cwd();

  /* Set path related properties in the correct order. */
  index = -1;
  length = order.length;

  while (++index < length) {
    prop = order[index];

    if (own.call(options, prop)) {
      this[prop] = options[prop];
    }
  }

  /* Set non-path related properties. */
  for (prop in options) {
    if (order.indexOf(prop) === -1) {
      this[prop] = options[prop];
    }
  }
}

/* Access full path (`~/index.min.js`). */
Object.defineProperty(proto, 'path', {
  get: function () {
    return this.history[this.history.length - 1];
  },
  set: function (path) {
    assertNonEmpty(path, 'path');

    if (path !== this.path) {
      this.history.push(path);
    }
  }
});

/* Access parent path (`~`). */
Object.defineProperty(proto, 'dirname', {
  get: function () {
    return typeof this.path === 'string' ? path.dirname(this.path) : undefined;
  },
  set: function (dirname) {
    assertPath(this.path, 'dirname');
    this.path = path.join(dirname || '', this.basename);
  }
});

/* Access basename (`index.min.js`). */
Object.defineProperty(proto, 'basename', {
  get: function () {
    return typeof this.path === 'string' ? path.basename(this.path) : undefined;
  },
  set: function (basename) {
    assertNonEmpty(basename, 'basename');
    assertPart(basename, 'basename');
    this.path = path.join(this.dirname || '', basename);
  }
});

/* Access extname (`.js`). */
Object.defineProperty(proto, 'extname', {
  get: function () {
    return typeof this.path === 'string' ? path.extname(this.path) : undefined;
  },
  set: function (extname) {
    var ext = extname || '';

    assertPart(ext, 'extname');
    assertPath(this.path, 'extname');

    if (ext) {
      if (ext.charAt(0) !== '.') {
        throw new Error('`extname` must start with `.`');
      }

      if (ext.indexOf('.', 1) !== -1) {
        throw new Error('`extname` cannot contain multiple dots');
      }
    }

    this.path = replace(this.path, ext);
  }
});

/* Access stem (`index.min`). */
Object.defineProperty(proto, 'stem', {
  get: function () {
    return typeof this.path === 'string' ? path.basename(this.path, this.extname) : undefined;
  },
  set: function (stem) {
    assertNonEmpty(stem, 'stem');
    assertPart(stem, 'stem');
    this.path = path.join(this.dirname || '', stem + (this.extname || ''));
  }
});

/* Get the value of the file. */
function toString(encoding) {
  var value = this.contents || '';
  return buffer(value) ? value.toString(encoding) : String(value);
}

/* Assert that `part` is not a path (i.e., does
 * not contain `path.sep`). */
function assertPart(part, name) {
  if (part.indexOf(path.sep) !== -1) {
    throw new Error('`' + name + '` cannot be a path: did not expect `' + path.sep + '`');
  }
}

/* Assert that `part` is not empty. */
function assertNonEmpty(part, name) {
  if (!part) {
    throw new Error('`' + name + '` cannot be empty');
  }
}

/* Assert `path` exists. */
function assertPath(path, name) {
  if (!path) {
    throw new Error('Setting `' + name + '` requires `path` to be set too');
  }
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var VMessage = __webpack_require__(614);
var VFile = __webpack_require__(615);

module.exports = VFile;

var proto = VFile.prototype;

proto.message = message;
proto.info = info;
proto.fail = fail;

/* Slight backwards compatibility.  Remove in the future. */
proto.warn = message;

/* Create a message with `reason` at `position`.
 * When an error is passed in as `reason`, copies the stack. */
function message(reason, position, origin) {
  var filePath = this.path;
  var message = new VMessage(reason, position, origin);

  if (filePath) {
    message.name = filePath + ':' + message.name;
    message.file = filePath;
  }

  message.fatal = false;

  this.messages.push(message);

  return message;
}

/* Fail. Creates a vmessage, associates it with the file,
 * and throws it. */
function fail() {
  var message = this.message.apply(this, arguments);

  message.fatal = true;

  throw message;
}

/* Info. Creates a vmessage, associates it with the file,
 * and marks the fatality as null. */
function info() {
  var message = this.message.apply(this, arguments);

  message.fatal = null;

  return message;
}


/***/ }),
/* 617 */
/***/ (function(module, exports) {

var toString = Object.prototype.toString

module.exports = isString

function isString(obj) {
    return toString.call(obj) === "[object String]"
}


/***/ })
/******/ ]);
//# sourceMappingURL=bundle.js.map